Compiling 1 file (.ex)
Generated elixir_macros app
Excluding tags: [:skip]

warning: unused import Prototypal
  test/examples/prototypal_test.exs:3

11:28:03.516 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
11:28:03.516 [debug] Defining type {:__aliases__, [line: 6], [:LinkedList]} with block: {:__block__, [], [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]}
11:28:03.516 [debug] Defining type {:__aliases__, [line: 6], [:LinkedList]} with block: {:__block__, [], [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]}
11:28:03.534 [debug] Extracted variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
11:28:03.534 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
11:28:03.534 [debug] Extracted variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
11:28:03.534 [debug] Generating constructors for variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
11:28:03.534 [debug] Generating constructors for variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
11:28:03.534 [debug] Processing variant: {:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}
11:28:03.534 [debug] Processing variant: {:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}
11:28:03.534 [debug] Constructor: :cons, meta: [line: 7], args: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
11:28:03.534 [debug] Constructor: :cons, meta: [line: 7], args: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
11:28:03.534 [debug] Extracting constructor args from: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
11:28:03.534 [debug] Found value arg: :head
11:28:03.534 [debug] Extracting constructor args from: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
11:28:03.534 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
11:28:03.534 [debug] Found recursive arg: :tail
11:28:03.534 [debug] Found value arg: :head
11:28:03.534 [debug] Extracted arg_names: [:head, :tail]
11:28:03.534 [debug] Found recursive arg: :tail
11:28:03.534 [debug] Generated arg vars: [{:head, [], nil}, {:tail, [], nil}]
11:28:03.534 [debug] Extracted arg_names: [:head, :tail]
11:28:03.534 [debug] Field pairs: [head: {:head, [], nil}, tail: {:tail, [], nil}]
11:28:03.534 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
11:28:03.534 [debug] Generated arg vars: [{:head, [], nil}, {:tail, [], nil}]
11:28:03.534 [debug] Processing variant: {:null, [line: 8], []}
11:28:03.534 [debug] Constructor: :null, meta: [line: 8], args: []
11:28:03.534 [debug] Field pairs: [head: {:head, [], nil}, tail: {:tail, [], nil}]
11:28:03.534 [debug] Extracting constructor args from: []
11:28:03.534 [debug] Processing variant: {:null, [line: 8], []}
11:28:03.534 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
11:28:03.534 [debug] Extracted arg_names: []
11:28:03.534 [debug] Constructor: :null, meta: [line: 8], args: []
11:28:03.534 [debug] Generated arg vars: []
11:28:03.534 [debug] Extracting constructor args from: []
11:28:03.534 [debug] Field pairs: []
11:28:03.534 [debug] Extracted arg_names: []
11:28:03.534 [debug] Generated arg vars: []
11:28:03.534 [debug] Field pairs: []
11:28:03.534 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
11:28:03.534 [debug] Found value arg: :val
11:28:03.534 [debug] Found recursive arg: :left
11:28:03.534 [debug] Found recursive arg: :right
11:28:03.534 [debug] Extracted arg_names: [:val, :left, :right]
11:28:03.534 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
11:28:03.534 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
11:28:03.534 [debug] Processing variant: {:leaf, [line: 8], []}
11:28:03.534 [debug] Constructor: :leaf, meta: [line: 8], args: []
11:28:03.534 [debug] Extracting constructor args from: []
11:28:03.534 [debug] Extracted arg_names: []
11:28:03.534 [debug] Generated arg vars: []
11:28:03.534 [debug] Field pairs: []
11:28:03.518 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
11:28:03.518 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
11:28:03.535 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
11:28:03.535 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
11:28:03.535 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
11:28:03.535 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
11:28:03.535 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
11:28:03.535 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
11:28:03.535 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
11:28:03.535 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
11:28:03.535 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
11:28:03.535 [debug] Found value arg: :val
11:28:03.535 [debug] Found recursive arg: :left
11:28:03.535 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
11:28:03.535 [debug] Found recursive arg: :right
11:28:03.535 [debug] Found value arg: :val
11:28:03.535 [debug] Found recursive arg: :left
11:28:03.535 [debug] Extracted arg_names: [:val, :left, :right]
11:28:03.535 [debug] Found recursive arg: :right
11:28:03.535 [debug] Extracted arg_names: [:val, :left, :right]
11:28:03.535 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
11:28:03.535 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
11:28:03.535 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
11:28:03.535 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
11:28:03.535 [debug] Processing variant: {:leaf, [line: 8], []}
11:28:03.535 [debug] Processing variant: {:leaf, [line: 8], []}
11:28:03.535 [debug] Constructor: :leaf, meta: [line: 8], args: []
11:28:03.535 [debug] Constructor: :leaf, meta: [line: 8], args: []
11:28:03.535 [debug] Extracting constructor args from: []
11:28:03.535 [debug] Extracted arg_names: []
11:28:03.535 [debug] Extracting constructor args from: []
11:28:03.535 [debug] Generated arg vars: []
11:28:03.535 [debug] Extracted arg_names: []
11:28:03.535 [debug] Field pairs: []
11:28:03.535 [debug] Generated arg vars: []
11:28:03.535 [debug] Field pairs: []
warning: function join_and_verify/4 is unused
  test/dist_gdb/dist_graph_database_test.exs:107

warning: default values for the optional arguments in join_cluster_with_retry/4 are never used
  test/dist_gdb/dist_graph_database_test.exs:174

warning: function wait_for_cluster_size/4 is unused
  test/dist_gdb/dist_graph_database_test.exs:80

warning: variable "node1" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:10: SpaceshipQueriesTest.__ex_unit_setup_0/1

warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  test/examples/graph_trx_test.exs:45: GraphTrxTest."test GraphTrx successful transaction"/1

warning: variable "node2" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:11: SpaceshipQueriesTest.__ex_unit_setup_0/1

warning: variable "node3" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:12: SpaceshipQueriesTest.__ex_unit_setup_0/1

warning: variable "reason" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/examples/graph_trx_test.exs:68: GraphTrxTest."test GraphTrx transaction rollback"/1

warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  test/examples/graph_trx_test.exs:78: GraphTrxTest."test GraphTrx schema validation"/1

warning: variable "created_ships" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:47: SpaceshipQueriesTest."test SpaceshipQueries creates and retrieves spaceships"/1

warning: variable "ship_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:75: SpaceshipQueriesTest."test SpaceshipQueries creates spaceship with properties"/1

.........11:28:03.591 [debug] Bend operation with var: :val, initial: 1
11:28:03.591 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
11:28:03.598 [debug] Bend operation with var: :val, initial: 0
11:28:03.598 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
11:28:03.598 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
11:28:03.598 [debug] Fold expression: {:list, [line: 17], nil}, opts: [with: 0], cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
11:28:03.599 [debug] Extracting cases from list: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
11:28:03.599 [debug] Extracted fold cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
11:28:03.599 [debug] Generating fold cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
11:28:03.599 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons
11:28:03.599 [debug] Transforming recursive refs:
Body: {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}
Bindings: [head: true, tail: true]
State: 0

11:28:03.599 [debug] Processing recursive reference: {:recu, [line: 19], [{:tail, [line: 19], nil}]}
11:28:03.599 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}
11:28:03.599 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null
11:28:03.599 [debug] Transforming recursive refs:
Body: {0, {:state, [line: 24], nil}}
Bindings: []
State: 0

11:28:03.600 [debug] Generated fold cases after transformation: [{:->, [line: 18], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :null]}], {0, {:state, [line: 24], nil}}]}]
11:28:03.600 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 17], nil}, 0, {:fn, [], [{:->, [], [[{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}], {:case, [], [{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, [do: [{:->, [line: 18], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :null]}], {0, {:state, [line: 24], nil}}]}]]]}]}]}]}
warning: variable "new_state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/ben_ben/fold_with_state_test.exs:19: FoldWithStateTest."test fold operations fold with state"/1

11:28:03.601 [debug] Fold expression: {:tree, [line: 21], nil}, opts: [], cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
11:28:03.601 [debug] Extracting cases from list: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
11:28:03.602 [debug] Extracted fold cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
11:28:03.602 [debug] Generating fold cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
11:28:03.602 [debug] Generated pattern: {:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]} for variant: :node
11:28:03.602 [debug] Transforming recursive refs:
Body: {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}
Bindings: [val: true, left: true, right: true]
State: nil

11:28:03.602 [debug] Processing recursive reference: {:recu, [line: 22], [{:left, [line: 22], nil}]}
11:28:03.602 [debug] Transformed recursive reference to: {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}
11:28:03.602 [debug] Processing recursive reference: {:recu, [line: 22], [{:right, [line: 22], nil}]}
11:28:03.602 [debug] Transformed recursive reference to: {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}
11:28:03.602 [debug] Generated pattern: {:%{}, [], [variant: :leaf]} for variant: :leaf
11:28:03.602 [debug] Transforming recursive refs:
Body: 0
Bindings: []
State: nil

11:28:03.602 [debug] Generated fold cases after transformation: [{:->, [line: 22], [[{:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :leaf]}], 0]}]
11:28:03.602 [debug] Final quoted expression: {:do_fold, [], [{:tree, [line: 21], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}], {:case, [], [{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, [do: [{:->, [line: 22], [[{:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :leaf]}], 0]}]]]}]}]}]}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/ben_ben/sum_of_tree_test.exs:21: SumOfTreeTest."test fold operations basic sum of tree"/1

.11:28:08.592 [debug] Bend initial value: 0
11:28:08.592 [debug] Executing bend with initial: 0
11:28:08.592 [debug] Executing fun with value: 0
11:28:08.592 [debug] Evaluating bend block with value: 0
11:28:08.593 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
11:28:08.593 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
11:28:08.593 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
11:28:08.593 [debug] Executing bend with initial: 1
11:28:08.593 [debug] Executing fun with value: 1
11:28:08.593 [debug] Evaluating bend block with value: 1
11:28:08.593 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.593 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.594 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 2
11:28:08.594 [debug] Executing fun with value: 2
11:28:08.594 [debug] Evaluating bend block with value: 2
11:28:08.594 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 2
11:28:08.594 [debug] Executing fun with value: 2
11:28:08.594 [debug] Evaluating bend block with value: 2
11:28:08.594 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
11:28:08.594 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 1
11:28:08.594 [debug] Executing fun with value: 1
11:28:08.594 [debug] Evaluating bend block with value: 1
11:28:08.594 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.594 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.594 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 2
11:28:08.594 [debug] Executing fun with value: 2
11:28:08.594 [debug] Evaluating bend block with value: 2
11:28:08.594 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 2
11:28:08.594 [debug] Executing fun with value: 2
11:28:08.594 [debug] Evaluating bend block with value: 2
11:28:08.594 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] Executing bend with initial: 3
11:28:08.594 [debug] Executing fun with value: 3
11:28:08.594 [debug] Evaluating bend block with value: 3
11:28:08.594 [debug] Block returned: %{variant: :leaf}
11:28:08.594 [debug] Fun returned result: %{variant: :leaf}
11:28:08.594 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{variant: :leaf}
11:28:08.594 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
11:28:08.594 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}
11:28:08.595 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, val: 0, variant: :node}
11:28:08.595 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, val: 0, variant: :node}
.11:28:08.595 [debug] Bend initial value: 1
11:28:08.595 [debug] Executing bend with initial: 1
11:28:08.595 [debug] Executing fun with value: 1
11:28:08.595 [debug] Evaluating bend block with value: 1
11:28:08.595 [debug] Block returned: %{head: 1, tail: {:fork, 2}, variant: :cons}
11:28:08.595 [debug] Fun returned result: %{head: 1, tail: {:fork, 2}, variant: :cons}
11:28:08.595 [debug] Processing constructed value: %{head: 1, tail: {:fork, 2}, variant: :cons}
11:28:08.595 [debug] Executing bend with initial: 2
11:28:08.595 [debug] Executing fun with value: 2
11:28:08.595 [debug] Evaluating bend block with value: 2
11:28:08.595 [debug] Block returned: %{head: 2, tail: {:fork, 3}, variant: :cons}
11:28:08.595 [debug] Fun returned result: %{head: 2, tail: {:fork, 3}, variant: :cons}
11:28:08.595 [debug] Processing constructed value: %{head: 2, tail: {:fork, 3}, variant: :cons}
11:28:08.595 [debug] Executing bend with initial: 3
11:28:08.595 [debug] Executing fun with value: 3
11:28:08.595 [debug] Evaluating bend block with value: 3
11:28:08.595 [debug] Block returned: %{head: 3, tail: {:fork, 4}, variant: :cons}
11:28:08.595 [debug] Fun returned result: %{head: 3, tail: {:fork, 4}, variant: :cons}
11:28:08.595 [debug] Processing constructed value: %{head: 3, tail: {:fork, 4}, variant: :cons}
11:28:08.595 [debug] Executing bend with initial: 4
11:28:08.595 [debug] Executing fun with value: 4
11:28:08.595 [debug] Evaluating bend block with value: 4
11:28:08.595 [debug] Block returned: %{variant: :null}
11:28:08.595 [debug] Fun returned result: %{variant: :null}
11:28:08.595 [debug] Processing constructed value: %{variant: :null}
11:28:08.595 [debug] do_bend final result: %{variant: :null}
11:28:08.595 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
11:28:08.595 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
11:28:08.595 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
11:28:08.595 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
.11:28:08.595 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, val: 1, variant: :node}, variant_type: :node, state: nil
11:28:08.595 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, val: 1, variant: :node}
11:28:08.595 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, variant_type: :node, state: nil
11:28:08.595 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
11:28:08.595 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.595 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.595 [debug] Recursive field result for left: 0
11:28:08.595 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.595 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.595 [debug] Recursive field result for right: 0
11:28:08.595 [debug] do_fold called with non-variant data: 0
11:28:08.595 [debug] do_fold called with non-variant data: 0
11:28:08.595 [debug] Recursive field result for left: 2
11:28:08.595 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:08.595 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}
11:28:08.595 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.595 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.596 [debug] Recursive field result for left: 0
11:28:08.596 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.596 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.596 [debug] Recursive field result for right: 0
11:28:08.596 [debug] do_fold called with non-variant data: 0
11:28:08.596 [debug] do_fold called with non-variant data: 0
11:28:08.596 [debug] Recursive field result for right: 3
11:28:08.596 [debug] do_fold called with non-variant data: 2
11:28:08.596 [debug] do_fold called with non-variant data: 3
.11:28:08.596 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
11:28:08.596 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
11:28:08.596 [debug] do_fold called with data: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: 0
11:28:08.596 [debug] Processing recursive fields of: %{head: 2, tail: %{variant: :null}, variant: :cons}
11:28:08.596 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: 0
11:28:08.596 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.596 [debug] Recursive field result for tail: {0, 0}
11:28:08.596 [debug] do_fold called with non-variant data: 0
11:28:08.596 [debug] Recursive field result for tail: {2, 2}
11:28:08.596 [debug] do_fold called with non-variant data: 2
..11:28:08.597 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, value: 2, variant: :node}, variant_type: :node, state: nil
11:28:08.597 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, value: 2, variant: :node}
11:28:08.597 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
11:28:08.597 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
11:28:08.597 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.597 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.597 [debug] Recursive field result for left: []
11:28:08.597 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.597 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.597 [debug] Recursive field result for right: []
11:28:08.597 [debug] do_fold called with non-variant data: []
11:28:08.597 [debug] do_fold called with non-variant data: []
11:28:08.597 [debug] Recursive field result for left: [1]
11:28:08.597 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, variant_type: :node, state: nil
11:28:08.597 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
11:28:08.597 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.597 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.597 [debug] Recursive field result for left: []
11:28:08.597 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.597 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.597 [debug] Recursive field result for right: []
11:28:08.597 [debug] do_fold called with non-variant data: []
11:28:08.597 [debug] do_fold called with non-variant data: []
11:28:08.597 [debug] Recursive field result for right: [3]
11:28:08.597 [debug] do_fold called with non-variant data: [1]
11:28:08.597 [debug] do_fold called with non-variant data: [3]
.11:28:08.597 [debug] Bend initial value: 0
11:28:08.597 [debug] Executing bend with initial: 0
11:28:08.597 [debug] Executing fun with value: 0
11:28:08.597 [debug] Evaluating bend block with value: 0
11:28:08.597 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.597 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.597 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.597 [debug] Executing bend with initial: 1
11:28:08.597 [debug] Executing fun with value: 1
11:28:08.597 [debug] Evaluating bend block with value: 1
11:28:08.598 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.598 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.598 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.598 [debug] Executing bend with initial: 2
11:28:08.598 [debug] Executing fun with value: 2
11:28:08.598 [debug] Evaluating bend block with value: 2
11:28:08.598 [debug] Block returned: %{variant: :leaf}
11:28:08.598 [debug] Fun returned result: %{variant: :leaf}
11:28:08.598 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.598 [debug] do_bend final result: %{variant: :leaf}
11:28:08.598 [debug] Executing bend with initial: 2
11:28:08.598 [debug] Executing fun with value: 2
11:28:08.598 [debug] Evaluating bend block with value: 2
11:28:08.598 [debug] Block returned: %{variant: :leaf}
11:28:08.598 [debug] Fun returned result: %{variant: :leaf}
11:28:08.598 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.598 [debug] do_bend final result: %{variant: :leaf}
11:28:08.598 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
11:28:08.598 [debug] Executing bend with initial: 1
11:28:08.598 [debug] Executing fun with value: 1
11:28:08.598 [debug] Evaluating bend block with value: 1
11:28:08.598 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.598 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.598 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.598 [debug] Executing bend with initial: 2
11:28:08.598 [debug] Executing fun with value: 2
11:28:08.598 [debug] Evaluating bend block with value: 2
11:28:08.598 [debug] Block returned: %{variant: :leaf}
11:28:08.598 [debug] Fun returned result: %{variant: :leaf}
11:28:08.598 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.598 [debug] do_bend final result: %{variant: :leaf}
11:28:08.598 [debug] Executing bend with initial: 2
11:28:08.598 [debug] Executing fun with value: 2
11:28:08.598 [debug] Evaluating bend block with value: 2
11:28:08.598 [debug] Block returned: %{variant: :leaf}
11:28:08.598 [debug] Fun returned result: %{variant: :leaf}
11:28:08.598 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.598 [debug] do_bend final result: %{variant: :leaf}
11:28:08.598 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
11:28:08.598 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.598 [debug] Final bend result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.598 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: nil
11:28:08.598 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.598 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
11:28:08.598 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
11:28:08.598 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.598 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.598 [debug] Recursive field result for left: %{variant: :leaf}
11:28:08.598 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.598 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.598 [debug] Recursive field result for right: %{variant: :leaf}
11:28:08.598 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
11:28:08.598 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
11:28:08.598 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
11:28:08.598 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.598 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.598 [debug] Recursive field result for left: %{variant: :leaf}
11:28:08.598 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.598 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.598 [debug] Recursive field result for right: %{variant: :leaf}
.11:28:08.598 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
11:28:08.598 [debug] Bend initial value: 0
11:28:08.598 [debug] Executing bend with initial: 0
11:28:08.598 [debug] Executing fun with value: 0
11:28:08.598 [debug] Evaluating bend block with value: 0
11:28:08.598 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.598 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.598 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.598 [debug] Executing bend with initial: 1
11:28:08.598 [debug] Executing fun with value: 1
11:28:08.598 [debug] Evaluating bend block with value: 1
11:28:08.598 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
11:28:08.598 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
11:28:08.598 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
11:28:08.598 [debug] Executing bend with initial: 2
11:28:08.598 [debug] Executing fun with value: 2
11:28:08.598 [debug] Evaluating bend block with value: 2
11:28:08.598 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.598 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.599 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.599 [debug] Executing bend with initial: 3
11:28:08.599 [debug] Executing fun with value: 3
11:28:08.599 [debug] Evaluating bend block with value: 3
11:28:08.599 [debug] Block returned: %{variant: :leaf}
11:28:08.599 [debug] Fun returned result: %{variant: :leaf}
11:28:08.599 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.599 [debug] do_bend final result: %{variant: :leaf}
11:28:08.599 [debug] Executing bend with initial: 3
11:28:08.599 [debug] Executing fun with value: 3
11:28:08.599 [debug] Evaluating bend block with value: 3
11:28:08.599 [debug] Block returned: %{variant: :leaf}
11:28:08.599 [debug] Fun returned result: %{variant: :leaf}
11:28:08.599 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.599 [debug] do_bend final result: %{variant: :leaf}
11:28:08.599 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
11:28:08.599 [debug] Executing bend with initial: 2
11:28:08.599 [debug] Executing fun with value: 2
11:28:08.599 [debug] Evaluating bend block with value: 2
11:28:08.599 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.599 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.599 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.599 [debug] Executing bend with initial: 3
11:28:08.599 [debug] Executing fun with value: 3
11:28:08.599 [debug] Evaluating bend block with value: 3
11:28:08.599 [debug] Block returned: %{variant: :leaf}
11:28:08.599 [debug] Fun returned result: %{variant: :leaf}
11:28:08.599 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.599 [debug] do_bend final result: %{variant: :leaf}
11:28:08.599 [debug] Executing bend with initial: 3
11:28:08.599 [debug] Executing fun with value: 3
11:28:08.599 [debug] Evaluating bend block with value: 3
11:28:08.599 [debug] Block returned: %{variant: :leaf}
11:28:08.599 [debug] Fun returned result: %{variant: :leaf}
11:28:08.599 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.599 [debug] do_bend final result: %{variant: :leaf}
11:28:08.599 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
11:28:08.599 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}
11:28:08.599 [debug] Executing bend with initial: 1
11:28:08.599 [debug] Executing fun with value: 1
11:28:08.599 [debug] Evaluating bend block with value: 1
11:28:08.599 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
11:28:08.599 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
11:28:08.599 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
11:28:08.600 [debug] Executing bend with initial: 2
11:28:08.600 [debug] Executing fun with value: 2
11:28:08.600 [debug] Evaluating bend block with value: 2
11:28:08.600 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.600 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.600 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.600 [debug] Executing bend with initial: 3
11:28:08.600 [debug] Executing fun with value: 3
11:28:08.600 [debug] Evaluating bend block with value: 3
11:28:08.600 [debug] Block returned: %{variant: :leaf}
11:28:08.600 [debug] Fun returned result: %{variant: :leaf}
11:28:08.600 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.600 [debug] do_bend final result: %{variant: :leaf}
11:28:08.600 [debug] Executing bend with initial: 3
11:28:08.600 [debug] Executing fun with value: 3
11:28:08.600 [debug] Evaluating bend block with value: 3
11:28:08.600 [debug] Block returned: %{variant: :leaf}
11:28:08.600 [debug] Fun returned result: %{variant: :leaf}
11:28:08.600 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.600 [debug] do_bend final result: %{variant: :leaf}
11:28:08.600 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
11:28:08.600 [debug] Executing bend with initial: 2
11:28:08.600 [debug] Executing fun with value: 2
11:28:08.600 [debug] Evaluating bend block with value: 2
11:28:08.600 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.600 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.600 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
11:28:08.600 [debug] Executing bend with initial: 3
11:28:08.600 [debug] Executing fun with value: 3
11:28:08.600 [debug] Evaluating bend block with value: 3
11:28:08.600 [debug] Block returned: %{variant: :leaf}
11:28:08.600 [debug] Fun returned result: %{variant: :leaf}
11:28:08.600 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.600 [debug] do_bend final result: %{variant: :leaf}
11:28:08.600 [debug] Executing bend with initial: 3
11:28:08.600 [debug] Executing fun with value: 3
11:28:08.600 [debug] Evaluating bend block with value: 3
11:28:08.600 [debug] Block returned: %{variant: :leaf}
11:28:08.600 [debug] Fun returned result: %{variant: :leaf}
11:28:08.600 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.600 [debug] do_bend final result: %{variant: :leaf}
11:28:08.600 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
11:28:08.600 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}
11:28:08.600 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, value: 0, variant: :node}
11:28:08.600 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, value: 0, variant: :node}
.11:28:08.601 [debug] Bend initial value: 0
11:28:08.601 [debug] Executing bend with initial: 0
11:28:08.601 [debug] Executing fun with value: 0
11:28:08.601 [debug] Evaluating bend block with value: 0
11:28:08.601 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.601 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.601 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 1
11:28:08.601 [debug] Executing fun with value: 1
11:28:08.601 [debug] Evaluating bend block with value: 1
11:28:08.601 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.601 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.601 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 2
11:28:08.601 [debug] Executing fun with value: 2
11:28:08.601 [debug] Evaluating bend block with value: 2
11:28:08.601 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.601 [debug] Fun returned result: %{variant: :leaf}
11:28:08.601 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{variant: :leaf}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.601 [debug] Fun returned result: %{variant: :leaf}
11:28:08.601 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 2
11:28:08.601 [debug] Executing fun with value: 2
11:28:08.601 [debug] Evaluating bend block with value: 2
11:28:08.601 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.601 [debug] Fun returned result: %{variant: :leaf}
11:28:08.601 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{variant: :leaf}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.601 [debug] Fun returned result: %{variant: :leaf}
11:28:08.601 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.601 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 1
11:28:08.601 [debug] Executing fun with value: 1
11:28:08.601 [debug] Evaluating bend block with value: 1
11:28:08.601 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.601 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.601 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 2
11:28:08.601 [debug] Executing fun with value: 2
11:28:08.601 [debug] Evaluating bend block with value: 2
11:28:08.601 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.601 [debug] Fun returned result: %{variant: :leaf}
11:28:08.601 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{variant: :leaf}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.601 [debug] Fun returned result: %{variant: :leaf}
11:28:08.601 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 2
11:28:08.601 [debug] Executing fun with value: 2
11:28:08.601 [debug] Evaluating bend block with value: 2
11:28:08.601 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.601 [debug] Fun returned result: %{variant: :leaf}
11:28:08.601 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.601 [debug] do_bend final result: %{variant: :leaf}
11:28:08.601 [debug] Executing bend with initial: 3
11:28:08.601 [debug] Executing fun with value: 3
11:28:08.601 [debug] Evaluating bend block with value: 3
11:28:08.601 [debug] Block returned: %{variant: :leaf}
11:28:08.602 [debug] Fun returned result: %{variant: :leaf}
11:28:08.602 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.602 [debug] do_bend final result: %{variant: :leaf}
11:28:08.602 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.602 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.602 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.602 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: %{0 => 1}
11:28:08.602 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: %{0 => 1}
11:28:08.602 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1}
11:28:08.602 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for left: {0, %{0 => 1}}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for right: {0, %{0 => 1}}
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] Recursive field result for left: {2, %{0 => 1, 1 => 2}}
11:28:08.602 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2}
11:28:08.602 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2}}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2}}
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] Recursive field result for right: {2, %{0 => 1, 1 => 2, 2 => 4}}
11:28:08.602 [debug] do_fold called with non-variant data: 2
11:28:08.602 [debug] do_fold called with non-variant data: 2
11:28:08.602 [debug] Recursive field result for left: {1, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
11:28:08.602 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
11:28:08.602 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
11:28:08.602 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] Recursive field result for left: {2, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
11:28:08.602 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
11:28:08.602 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
11:28:08.602 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
11:28:08.602 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.602 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] do_fold called with non-variant data: 0
11:28:08.602 [debug] Recursive field result for right: {2, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16, 5 => 32}}
.11:28:08.602 [debug] do_fold called with non-variant data: 2
11:28:08.602 [debug] do_fold called with non-variant data: 2
11:28:08.602 [debug] Recursive field result for right: {1, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16, 5 => 32, 6 => 64}}
11:28:08.602 [debug] do_fold called with non-variant data: 1
11:28:08.602 [debug] do_fold called with non-variant data: 1
11:28:08.603 [debug] Bend initial value: 0
11:28:08.603 [debug] Executing bend with initial: 0
11:28:08.603 [debug] Executing fun with value: 0
11:28:08.603 [debug] Evaluating bend block with value: 0
11:28:08.603 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.603 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.603 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 1
11:28:08.603 [debug] Executing fun with value: 1
11:28:08.603 [debug] Evaluating bend block with value: 1
11:28:08.603 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.603 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.603 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 2
11:28:08.603 [debug] Executing fun with value: 2
11:28:08.603 [debug] Evaluating bend block with value: 2
11:28:08.603 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 2
11:28:08.603 [debug] Executing fun with value: 2
11:28:08.603 [debug] Evaluating bend block with value: 2
11:28:08.603 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.603 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 1
11:28:08.603 [debug] Executing fun with value: 1
11:28:08.603 [debug] Evaluating bend block with value: 1
11:28:08.603 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.603 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.603 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 2
11:28:08.603 [debug] Executing fun with value: 2
11:28:08.603 [debug] Evaluating bend block with value: 2
11:28:08.603 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 2
11:28:08.603 [debug] Executing fun with value: 2
11:28:08.603 [debug] Evaluating bend block with value: 2
11:28:08.603 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] Executing bend with initial: 3
11:28:08.603 [debug] Executing fun with value: 3
11:28:08.603 [debug] Evaluating bend block with value: 3
11:28:08.603 [debug] Block returned: %{variant: :leaf}
11:28:08.603 [debug] Fun returned result: %{variant: :leaf}
11:28:08.603 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{variant: :leaf}
11:28:08.603 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.603 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.603 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.603 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for left: %{variant: :leaf}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for right: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for left: %{variant: :leaf}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for right: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] Recursive field result for left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 0, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for left: %{variant: :leaf}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for right: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for left: %{variant: :leaf}
11:28:08.604 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.604 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for right: %{variant: :leaf}
11:28:08.604 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
11:28:08.604 [debug] Recursive field result for right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 0, variant: :node}
..11:28:08.608 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
11:28:08.608 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.608 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.608 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.609 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.609 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
11:28:08.609 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.609 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
11:28:08.609 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
..11:28:08.610 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
.11:28:08.610 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.610 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.610 [debug] Recursive field result for edge_list: 0
11:28:08.610 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.610 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.610 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.610 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.610 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.610 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.610 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.610 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.610 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.610 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.610 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.610 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.610 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.610 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.610 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.610 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.611 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.611 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.611 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.611 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.611 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.611 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.611 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.611 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
11:28:08.611 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
.11:28:08.612 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.612 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.612 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
11:28:08.612 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
11:28:08.612 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
11:28:08.612 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.612 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
11:28:08.612 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
11:28:08.612 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
11:28:08.612 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.612 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
11:28:08.613 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.613 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
11:28:08.613 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.613 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.613 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.613 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.613 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.613 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.613 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.613 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.613 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.613 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.613 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.614 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
11:28:08.614 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
.11:28:08.614 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.614 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.614 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.614 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.614 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.614 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.614 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.614 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.614 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.615 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.615 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.615 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.615 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.615 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.615 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.615 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.615 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.615 [debug] Recursive field result for edge_list: true
11:28:08.615 [debug] Recursive field result for edge_list: true
11:28:08.615 [debug] Recursive field result for edge_list: false
.11:28:08.616 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.616 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.616 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.616 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.616 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
11:28:08.616 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.616 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.616 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.616 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.616 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.616 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.616 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{variant: :empty}
11:28:08.616 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
11:28:08.616 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.616 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
11:28:08.616 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
11:28:08.616 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
.11:28:08.617 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.617 [debug] Recursive field result for proto: nil
11:28:08.617 [debug] Recursive field result for proto: 1
11:28:08.617 [debug] do_fold called with non-variant data: 1
11:28:08.617 [debug] Recursive field result for proto: 1
11:28:08.617 [debug] do_fold called with non-variant data: 1
11:28:08.617 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.617 [debug] Recursive field result for proto: nil
11:28:08.617 [debug] do_fold called with non-variant data: nil
11:28:08.617 [debug] Recursive field result for proto: nil
11:28:08.617 [debug] Recursive field result for proto: 2
11:28:08.617 [debug] do_fold called with non-variant data: 2
11:28:08.617 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.617 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
11:28:08.617 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.618 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.618 [debug] Recursive field result for proto: nil
11:28:08.618 [debug] do_fold called with non-variant data: nil
11:28:08.618 [debug] Recursive field result for proto: nil
11:28:08.618 [debug] do_fold called with non-variant data: nil
11:28:08.618 [debug] Recursive field result for proto: nil
11:28:08.618 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.618 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.618 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.618 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.618 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.618 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
11:28:08.618 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.618 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.618 [debug] Recursive field result for proto: nil
11:28:08.618 [debug] do_fold called with non-variant data: nil
11:28:08.618 [debug] Recursive field result for proto: nil
11:28:08.618 [debug] do_fold called with non-variant data: nil
11:28:08.618 [debug] Recursive field result for proto: nil
11:28:08.618 [debug] do_fold called with non-variant data: nil
.11:28:08.619 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.619 [debug] Recursive field result for proto: nil
11:28:08.619 [debug] do_fold called with non-variant data: nil
11:28:08.619 [debug] Recursive field result for proto: nil
11:28:08.619 [debug] do_fold called with non-variant data: nil
11:28:08.619 [debug] Recursive field result for proto: nil
11:28:08.619 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.619 [debug] Recursive field result for proto: nil
11:28:08.619 [debug] Recursive field result for proto: "human"
11:28:08.619 [debug] do_fold called with non-variant data: "human"
11:28:08.619 [debug] Recursive field result for proto: "human"
11:28:08.619 [debug] do_fold called with non-variant data: "human"
11:28:08.619 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.619 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.619 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.619 [debug] Recursive field result for proto: nil
11:28:08.619 [debug] do_fold called with non-variant data: nil
11:28:08.619 [debug] Recursive field result for proto: nil
11:28:08.619 [debug] Recursive field result for proto: "employee"
11:28:08.620 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] Recursive field result for proto: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
11:28:08.620 [debug] do_fold called with non-variant data: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
11:28:08.620 [debug] Recursive field result for proto: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
11:28:08.620 [debug] do_fold called with non-variant data: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
11:28:08.620 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] do_fold called with non-variant data: nil
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] Recursive field result for proto: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>
11:28:08.620 [debug] do_fold called with non-variant data: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>
11:28:08.620 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer", skill: "Elixir"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer", skill: "Elixir"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] do_fold called with non-variant data: nil
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] do_fold called with non-variant data: nil
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] do_fold called with non-variant data: nil
11:28:08.620 [debug] Recursive field result for proto: nil
11:28:08.620 [debug] do_fold called with non-variant data: nil
11:28:08.620 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
11:28:08.620 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
11:28:08.620 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
11:28:08.621 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
11:28:08.621 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
11:28:08.621 [debug] Processing recursive fields of: %{variant: :null}
11:28:08.621 [debug] Recursive field result for proto: nil
11:28:08.621 [debug] do_fold called with non-variant data: nil
11:28:08.621 [debug] Recursive field result for proto: nil
11:28:08.621 [debug] do_fold called with non-variant data: nil
11:28:08.621 [debug] Recursive field result for proto: nil
11:28:08.621 [debug] do_fold called with non-variant data: nil
.11:28:08.622 [debug] Bend initial value: 0
11:28:08.622 [debug] Executing bend with initial: 0
11:28:08.622 [debug] Executing fun with value: 0
11:28:08.622 [debug] Evaluating bend block with value: 0
11:28:08.622 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
11:28:08.622 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
11:28:08.622 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
11:28:08.622 [debug] Executing bend with initial: 1
11:28:08.622 [debug] Executing fun with value: 1
11:28:08.622 [debug] Evaluating bend block with value: 1
11:28:08.622 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.622 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.622 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.622 [debug] Executing bend with initial: 2
11:28:08.622 [debug] Executing fun with value: 2
11:28:08.622 [debug] Evaluating bend block with value: 2
11:28:08.623 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 3
11:28:08.623 [debug] Executing fun with value: 3
11:28:08.623 [debug] Evaluating bend block with value: 3
11:28:08.623 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 4
11:28:08.623 [debug] Executing fun with value: 4
11:28:08.623 [debug] Evaluating bend block with value: 4
11:28:08.623 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 5
11:28:08.623 [debug] Executing fun with value: 5
11:28:08.623 [debug] Evaluating bend block with value: 5
11:28:08.623 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 6
11:28:08.623 [debug] Executing fun with value: 6
11:28:08.623 [debug] Evaluating bend block with value: 6
11:28:08.623 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 7
11:28:08.623 [debug] Executing fun with value: 7
11:28:08.623 [debug] Evaluating bend block with value: 7
11:28:08.623 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 8
11:28:08.623 [debug] Executing fun with value: 8
11:28:08.623 [debug] Evaluating bend block with value: 8
11:28:08.623 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 9
11:28:08.623 [debug] Executing fun with value: 9
11:28:08.623 [debug] Evaluating bend block with value: 9
11:28:08.623 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 10
11:28:08.623 [debug] Executing fun with value: 10
11:28:08.623 [debug] Evaluating bend block with value: 10
11:28:08.623 [debug] Block returned: %{variant: :leaf}
11:28:08.623 [debug] Fun returned result: %{variant: :leaf}
11:28:08.623 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.623 [debug] do_bend final result: %{variant: :leaf}
11:28:08.623 [debug] Executing bend with initial: 10
11:28:08.623 [debug] Executing fun with value: 10
11:28:08.623 [debug] Evaluating bend block with value: 10
11:28:08.623 [debug] Block returned: %{variant: :leaf}
11:28:08.623 [debug] Fun returned result: %{variant: :leaf}
11:28:08.623 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.623 [debug] do_bend final result: %{variant: :leaf}
11:28:08.623 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 9
11:28:08.623 [debug] Executing fun with value: 9
11:28:08.623 [debug] Evaluating bend block with value: 9
11:28:08.623 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.623 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.623 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.623 [debug] Executing bend with initial: 10
11:28:08.623 [debug] Executing fun with value: 10
11:28:08.623 [debug] Evaluating bend block with value: 10
11:28:08.623 [debug] Block returned: %{variant: :leaf}
11:28:08.623 [debug] Fun returned result: %{variant: :leaf}
11:28:08.623 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.623 [debug] do_bend final result: %{variant: :leaf}
11:28:08.623 [debug] Executing bend with initial: 10
11:28:08.623 [debug] Executing fun with value: 10
11:28:08.623 [debug] Evaluating bend block with value: 10
11:28:08.623 [debug] Block returned: %{variant: :leaf}
11:28:08.623 [debug] Fun returned result: %{variant: :leaf}
11:28:08.624 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.624 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 8
11:28:08.624 [debug] Executing fun with value: 8
11:28:08.624 [debug] Evaluating bend block with value: 8
11:28:08.624 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.624 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.624 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 9
11:28:08.624 [debug] Executing fun with value: 9
11:28:08.624 [debug] Evaluating bend block with value: 9
11:28:08.624 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.624 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.624 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 10
11:28:08.624 [debug] Executing fun with value: 10
11:28:08.624 [debug] Evaluating bend block with value: 10
11:28:08.624 [debug] Block returned: %{variant: :leaf}
11:28:08.624 [debug] Fun returned result: %{variant: :leaf}
11:28:08.624 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{variant: :leaf}
11:28:08.624 [debug] Executing bend with initial: 10
11:28:08.624 [debug] Executing fun with value: 10
11:28:08.624 [debug] Evaluating bend block with value: 10
11:28:08.624 [debug] Block returned: %{variant: :leaf}
11:28:08.624 [debug] Fun returned result: %{variant: :leaf}
11:28:08.624 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 9
11:28:08.624 [debug] Executing fun with value: 9
11:28:08.624 [debug] Evaluating bend block with value: 9
11:28:08.624 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.624 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.624 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 10
11:28:08.624 [debug] Executing fun with value: 10
11:28:08.624 [debug] Evaluating bend block with value: 10
11:28:08.624 [debug] Block returned: %{variant: :leaf}
11:28:08.624 [debug] Fun returned result: %{variant: :leaf}
11:28:08.624 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{variant: :leaf}
11:28:08.624 [debug] Executing bend with initial: 10
11:28:08.624 [debug] Executing fun with value: 10
11:28:08.624 [debug] Evaluating bend block with value: 10
11:28:08.624 [debug] Block returned: %{variant: :leaf}
11:28:08.624 [debug] Fun returned result: %{variant: :leaf}
11:28:08.624 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{variant: :leaf}
11:28:08.624 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.624 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.624 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 7
11:28:08.624 [debug] Executing fun with value: 7
11:28:08.624 [debug] Evaluating bend block with value: 7
11:28:08.624 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.624 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.624 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 8
11:28:08.624 [debug] Executing fun with value: 8
11:28:08.624 [debug] Evaluating bend block with value: 8
11:28:08.624 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.624 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.624 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.624 [debug] Executing bend with initial: 9
11:28:08.624 [debug] Executing fun with value: 9
11:28:08.624 [debug] Evaluating bend block with value: 9
11:28:08.624 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.624 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 9
11:28:08.625 [debug] Executing fun with value: 9
11:28:08.625 [debug] Evaluating bend block with value: 9
11:28:08.625 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.625 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 8
11:28:08.625 [debug] Executing fun with value: 8
11:28:08.625 [debug] Evaluating bend block with value: 8
11:28:08.625 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.625 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.625 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 9
11:28:08.625 [debug] Executing fun with value: 9
11:28:08.625 [debug] Evaluating bend block with value: 9
11:28:08.625 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 9
11:28:08.625 [debug] Executing fun with value: 9
11:28:08.625 [debug] Evaluating bend block with value: 9
11:28:08.625 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] Executing bend with initial: 10
11:28:08.625 [debug] Executing fun with value: 10
11:28:08.625 [debug] Evaluating bend block with value: 10
11:28:08.625 [debug] Block returned: %{variant: :leaf}
11:28:08.625 [debug] Fun returned result: %{variant: :leaf}
11:28:08.625 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{variant: :leaf}
11:28:08.625 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.625 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.625 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.625 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 6
11:28:08.625 [debug] Executing fun with value: 6
11:28:08.625 [debug] Evaluating bend block with value: 6
11:28:08.625 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.625 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.625 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 7
11:28:08.625 [debug] Executing fun with value: 7
11:28:08.625 [debug] Evaluating bend block with value: 7
11:28:08.625 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.625 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.625 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.625 [debug] Executing bend with initial: 8
11:28:08.625 [debug] Executing fun with value: 8
11:28:08.625 [debug] Evaluating bend block with value: 8
11:28:08.625 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.626 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.626 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 9
11:28:08.626 [debug] Executing fun with value: 9
11:28:08.626 [debug] Evaluating bend block with value: 9
11:28:08.626 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 9
11:28:08.626 [debug] Executing fun with value: 9
11:28:08.626 [debug] Evaluating bend block with value: 9
11:28:08.626 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.626 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 8
11:28:08.626 [debug] Executing fun with value: 8
11:28:08.626 [debug] Evaluating bend block with value: 8
11:28:08.626 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.626 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.626 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 9
11:28:08.626 [debug] Executing fun with value: 9
11:28:08.626 [debug] Evaluating bend block with value: 9
11:28:08.626 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 9
11:28:08.626 [debug] Executing fun with value: 9
11:28:08.626 [debug] Evaluating bend block with value: 9
11:28:08.626 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] Executing bend with initial: 10
11:28:08.626 [debug] Executing fun with value: 10
11:28:08.626 [debug] Evaluating bend block with value: 10
11:28:08.626 [debug] Block returned: %{variant: :leaf}
11:28:08.626 [debug] Fun returned result: %{variant: :leaf}
11:28:08.626 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{variant: :leaf}
11:28:08.626 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.626 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.627 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 7
11:28:08.627 [debug] Executing fun with value: 7
11:28:08.627 [debug] Evaluating bend block with value: 7
11:28:08.627 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.627 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.627 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 8
11:28:08.627 [debug] Executing fun with value: 8
11:28:08.627 [debug] Evaluating bend block with value: 8
11:28:08.627 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.627 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.627 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 9
11:28:08.627 [debug] Executing fun with value: 9
11:28:08.627 [debug] Evaluating bend block with value: 9
11:28:08.627 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 9
11:28:08.627 [debug] Executing fun with value: 9
11:28:08.627 [debug] Evaluating bend block with value: 9
11:28:08.627 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.627 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 8
11:28:08.627 [debug] Executing fun with value: 8
11:28:08.627 [debug] Evaluating bend block with value: 8
11:28:08.627 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.627 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.627 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 9
11:28:08.627 [debug] Executing fun with value: 9
11:28:08.627 [debug] Evaluating bend block with value: 9
11:28:08.627 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 9
11:28:08.627 [debug] Executing fun with value: 9
11:28:08.627 [debug] Evaluating bend block with value: 9
11:28:08.627 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.627 [debug] Executing bend with initial: 10
11:28:08.627 [debug] Executing fun with value: 10
11:28:08.627 [debug] Evaluating bend block with value: 10
11:28:08.627 [debug] Block returned: %{variant: :leaf}
11:28:08.627 [debug] Fun returned result: %{variant: :leaf}
11:28:08.627 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.627 [debug] do_bend final result: %{variant: :leaf}
11:28:08.628 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.628 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.628 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.628 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.628 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 5
11:28:08.628 [debug] Executing fun with value: 5
11:28:08.628 [debug] Evaluating bend block with value: 5
11:28:08.628 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.628 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.628 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 6
11:28:08.628 [debug] Executing fun with value: 6
11:28:08.628 [debug] Evaluating bend block with value: 6
11:28:08.628 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.628 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.628 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 7
11:28:08.628 [debug] Executing fun with value: 7
11:28:08.628 [debug] Evaluating bend block with value: 7
11:28:08.628 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.628 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.628 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 8
11:28:08.628 [debug] Executing fun with value: 8
11:28:08.628 [debug] Evaluating bend block with value: 8
11:28:08.628 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.628 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.628 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 9
11:28:08.628 [debug] Executing fun with value: 9
11:28:08.628 [debug] Evaluating bend block with value: 9
11:28:08.628 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.628 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.628 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 10
11:28:08.628 [debug] Executing fun with value: 10
11:28:08.628 [debug] Evaluating bend block with value: 10
11:28:08.628 [debug] Block returned: %{variant: :leaf}
11:28:08.628 [debug] Fun returned result: %{variant: :leaf}
11:28:08.628 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.628 [debug] do_bend final result: %{variant: :leaf}
11:28:08.628 [debug] Executing bend with initial: 10
11:28:08.628 [debug] Executing fun with value: 10
11:28:08.628 [debug] Evaluating bend block with value: 10
11:28:08.628 [debug] Block returned: %{variant: :leaf}
11:28:08.628 [debug] Fun returned result: %{variant: :leaf}
11:28:08.628 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.628 [debug] do_bend final result: %{variant: :leaf}
11:28:08.628 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 9
11:28:08.628 [debug] Executing fun with value: 9
11:28:08.628 [debug] Evaluating bend block with value: 9
11:28:08.628 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.628 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.628 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.628 [debug] Executing bend with initial: 10
11:28:08.628 [debug] Executing fun with value: 10
11:28:08.628 [debug] Evaluating bend block with value: 10
11:28:08.628 [debug] Block returned: %{variant: :leaf}
11:28:08.628 [debug] Fun returned result: %{variant: :leaf}
11:28:08.628 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.628 [debug] do_bend final result: %{variant: :leaf}
11:28:08.628 [debug] Executing bend with initial: 10
11:28:08.628 [debug] Executing fun with value: 10
11:28:08.628 [debug] Evaluating bend block with value: 10
11:28:08.628 [debug] Block returned: %{variant: :leaf}
11:28:08.628 [debug] Fun returned result: %{variant: :leaf}
11:28:08.628 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.628 [debug] do_bend final result: %{variant: :leaf}
11:28:08.628 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.629 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 8
11:28:08.629 [debug] Executing fun with value: 8
11:28:08.629 [debug] Evaluating bend block with value: 8
11:28:08.629 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 9
11:28:08.629 [debug] Executing fun with value: 9
11:28:08.629 [debug] Evaluating bend block with value: 9
11:28:08.629 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 9
11:28:08.629 [debug] Executing fun with value: 9
11:28:08.629 [debug] Evaluating bend block with value: 9
11:28:08.629 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.629 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.629 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 7
11:28:08.629 [debug] Executing fun with value: 7
11:28:08.629 [debug] Evaluating bend block with value: 7
11:28:08.629 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 8
11:28:08.629 [debug] Executing fun with value: 8
11:28:08.629 [debug] Evaluating bend block with value: 8
11:28:08.629 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 9
11:28:08.629 [debug] Executing fun with value: 9
11:28:08.629 [debug] Evaluating bend block with value: 9
11:28:08.629 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 9
11:28:08.629 [debug] Executing fun with value: 9
11:28:08.629 [debug] Evaluating bend block with value: 9
11:28:08.629 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] Executing bend with initial: 10
11:28:08.629 [debug] Executing fun with value: 10
11:28:08.629 [debug] Evaluating bend block with value: 10
11:28:08.629 [debug] Block returned: %{variant: :leaf}
11:28:08.629 [debug] Fun returned result: %{variant: :leaf}
11:28:08.629 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{variant: :leaf}
11:28:08.629 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.629 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 8
11:28:08.629 [debug] Executing fun with value: 8
11:28:08.629 [debug] Evaluating bend block with value: 8
11:28:08.629 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.629 [debug] Executing bend with initial: 9
11:28:08.629 [debug] Executing fun with value: 9
11:28:08.629 [debug] Evaluating bend block with value: 9
11:28:08.629 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.630 [debug] Executing fun with value: 10
11:28:08.630 [debug] Evaluating bend block with value: 10
11:28:08.630 [debug] Block returned: %{variant: :leaf}
11:28:08.630 [debug] Fun returned result: %{variant: :leaf}
11:28:08.630 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{variant: :leaf}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.630 [debug] Executing fun with value: 10
11:28:08.630 [debug] Evaluating bend block with value: 10
11:28:08.630 [debug] Block returned: %{variant: :leaf}
11:28:08.630 [debug] Fun returned result: %{variant: :leaf}
11:28:08.630 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 9
11:28:08.630 [debug] Executing fun with value: 9
11:28:08.630 [debug] Evaluating bend block with value: 9
11:28:08.630 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.630 [debug] Executing fun with value: 10
11:28:08.630 [debug] Evaluating bend block with value: 10
11:28:08.630 [debug] Block returned: %{variant: :leaf}
11:28:08.630 [debug] Fun returned result: %{variant: :leaf}
11:28:08.630 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{variant: :leaf}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.630 [debug] Executing fun with value: 10
11:28:08.630 [debug] Evaluating bend block with value: 10
11:28:08.630 [debug] Block returned: %{variant: :leaf}
11:28:08.630 [debug] Fun returned result: %{variant: :leaf}
11:28:08.630 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.630 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.630 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.630 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 6
11:28:08.630 [debug] Executing fun with value: 6
11:28:08.630 [debug] Evaluating bend block with value: 6
11:28:08.630 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.630 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.630 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 7
11:28:08.630 [debug] Executing fun with value: 7
11:28:08.630 [debug] Evaluating bend block with value: 7
11:28:08.630 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.630 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.630 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 8
11:28:08.630 [debug] Executing fun with value: 8
11:28:08.630 [debug] Evaluating bend block with value: 8
11:28:08.630 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.630 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.630 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 9
11:28:08.630 [debug] Executing fun with value: 9
11:28:08.630 [debug] Evaluating bend block with value: 9
11:28:08.630 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.630 [debug] Executing fun with value: 10
11:28:08.630 [debug] Evaluating bend block with value: 10
11:28:08.630 [debug] Block returned: %{variant: :leaf}
11:28:08.630 [debug] Fun returned result: %{variant: :leaf}
11:28:08.630 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{variant: :leaf}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.630 [debug] Executing fun with value: 10
11:28:08.630 [debug] Evaluating bend block with value: 10
11:28:08.630 [debug] Block returned: %{variant: :leaf}
11:28:08.630 [debug] Fun returned result: %{variant: :leaf}
11:28:08.630 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 9
11:28:08.630 [debug] Executing fun with value: 9
11:28:08.630 [debug] Evaluating bend block with value: 9
11:28:08.630 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.630 [debug] Executing fun with value: 10
11:28:08.630 [debug] Evaluating bend block with value: 10
11:28:08.630 [debug] Block returned: %{variant: :leaf}
11:28:08.630 [debug] Fun returned result: %{variant: :leaf}
11:28:08.630 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.630 [debug] do_bend final result: %{variant: :leaf}
11:28:08.630 [debug] Executing bend with initial: 10
11:28:08.631 [debug] Executing fun with value: 10
11:28:08.631 [debug] Evaluating bend block with value: 10
11:28:08.631 [debug] Block returned: %{variant: :leaf}
11:28:08.631 [debug] Fun returned result: %{variant: :leaf}
11:28:08.631 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.631 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.631 [debug] Executing bend with initial: 8
11:28:08.631 [debug] Executing fun with value: 8
11:28:08.631 [debug] Evaluating bend block with value: 8
11:28:08.631 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.631 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.631 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.631 [debug] Executing bend with initial: 9
11:28:08.631 [debug] Executing fun with value: 9
11:28:08.631 [debug] Evaluating bend block with value: 9
11:28:08.631 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.631 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.631 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.631 [debug] Executing bend with initial: 10
11:28:08.631 [debug] Executing fun with value: 10
11:28:08.631 [debug] Evaluating bend block with value: 10
11:28:08.631 [debug] Block returned: %{variant: :leaf}
11:28:08.631 [debug] Fun returned result: %{variant: :leaf}
11:28:08.631 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{variant: :leaf}
11:28:08.631 [debug] Executing bend with initial: 10
11:28:08.631 [debug] Executing fun with value: 10
11:28:08.631 [debug] Evaluating bend block with value: 10
11:28:08.631 [debug] Block returned: %{variant: :leaf}
11:28:08.631 [debug] Fun returned result: %{variant: :leaf}
11:28:08.631 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.631 [debug] Executing bend with initial: 9
11:28:08.631 [debug] Executing fun with value: 9
11:28:08.631 [debug] Evaluating bend block with value: 9
11:28:08.631 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.631 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.631 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.631 [debug] Executing bend with initial: 10
11:28:08.631 [debug] Executing fun with value: 10
11:28:08.631 [debug] Evaluating bend block with value: 10
11:28:08.631 [debug] Block returned: %{variant: :leaf}
11:28:08.631 [debug] Fun returned result: %{variant: :leaf}
11:28:08.631 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{variant: :leaf}
11:28:08.631 [debug] Executing bend with initial: 10
11:28:08.631 [debug] Executing fun with value: 10
11:28:08.631 [debug] Evaluating bend block with value: 10
11:28:08.631 [debug] Block returned: %{variant: :leaf}
11:28:08.631 [debug] Fun returned result: %{variant: :leaf}
11:28:08.631 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{variant: :leaf}
11:28:08.631 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.631 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.631 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.631 [debug] Executing bend with initial: 7
11:28:08.631 [debug] Executing fun with value: 7
11:28:08.631 [debug] Evaluating bend block with value: 7
11:28:08.631 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.631 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.631 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.631 [debug] Executing bend with initial: 8
11:28:08.631 [debug] Executing fun with value: 8
11:28:08.631 [debug] Evaluating bend block with value: 8
11:28:08.631 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.631 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.632 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 9
11:28:08.632 [debug] Executing fun with value: 9
11:28:08.632 [debug] Evaluating bend block with value: 9
11:28:08.632 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 10
11:28:08.632 [debug] Executing fun with value: 10
11:28:08.632 [debug] Evaluating bend block with value: 10
11:28:08.632 [debug] Block returned: %{variant: :leaf}
11:28:08.632 [debug] Fun returned result: %{variant: :leaf}
11:28:08.632 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{variant: :leaf}
11:28:08.632 [debug] Executing bend with initial: 10
11:28:08.632 [debug] Executing fun with value: 10
11:28:08.632 [debug] Evaluating bend block with value: 10
11:28:08.632 [debug] Block returned: %{variant: :leaf}
11:28:08.632 [debug] Fun returned result: %{variant: :leaf}
11:28:08.632 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 9
11:28:08.632 [debug] Executing fun with value: 9
11:28:08.632 [debug] Evaluating bend block with value: 9
11:28:08.632 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 10
11:28:08.632 [debug] Executing fun with value: 10
11:28:08.632 [debug] Evaluating bend block with value: 10
11:28:08.632 [debug] Block returned: %{variant: :leaf}
11:28:08.632 [debug] Fun returned result: %{variant: :leaf}
11:28:08.632 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{variant: :leaf}
11:28:08.632 [debug] Executing bend with initial: 10
11:28:08.632 [debug] Executing fun with value: 10
11:28:08.632 [debug] Evaluating bend block with value: 10
11:28:08.632 [debug] Block returned: %{variant: :leaf}
11:28:08.632 [debug] Fun returned result: %{variant: :leaf}
11:28:08.632 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.632 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 8
11:28:08.632 [debug] Executing fun with value: 8
11:28:08.632 [debug] Evaluating bend block with value: 8
11:28:08.632 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.632 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.632 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 9
11:28:08.632 [debug] Executing fun with value: 9
11:28:08.632 [debug] Evaluating bend block with value: 9
11:28:08.632 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 10
11:28:08.632 [debug] Executing fun with value: 10
11:28:08.632 [debug] Evaluating bend block with value: 10
11:28:08.632 [debug] Block returned: %{variant: :leaf}
11:28:08.632 [debug] Fun returned result: %{variant: :leaf}
11:28:08.632 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{variant: :leaf}
11:28:08.632 [debug] Executing bend with initial: 10
11:28:08.632 [debug] Executing fun with value: 10
11:28:08.632 [debug] Evaluating bend block with value: 10
11:28:08.632 [debug] Block returned: %{variant: :leaf}
11:28:08.632 [debug] Fun returned result: %{variant: :leaf}
11:28:08.632 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 9
11:28:08.632 [debug] Executing fun with value: 9
11:28:08.632 [debug] Evaluating bend block with value: 9
11:28:08.632 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.632 [debug] Executing bend with initial: 10
11:28:08.632 [debug] Executing fun with value: 10
11:28:08.632 [debug] Evaluating bend block with value: 10
11:28:08.632 [debug] Block returned: %{variant: :leaf}
11:28:08.632 [debug] Fun returned result: %{variant: :leaf}
11:28:08.632 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.632 [debug] do_bend final result: %{variant: :leaf}
11:28:08.633 [debug] Executing bend with initial: 10
11:28:08.633 [debug] Executing fun with value: 10
11:28:08.633 [debug] Evaluating bend block with value: 10
11:28:08.633 [debug] Block returned: %{variant: :leaf}
11:28:08.633 [debug] Fun returned result: %{variant: :leaf}
11:28:08.633 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.633 [debug] do_bend final result: %{variant: :leaf}
11:28:08.633 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.633 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.633 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.633 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.633 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.633 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.633 [debug] Executing bend with initial: 4
11:28:08.633 [debug] Executing fun with value: 4
11:28:08.633 [debug] Evaluating bend block with value: 4
11:28:08.633 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.633 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.633 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.633 [debug] Executing bend with initial: 5
11:28:08.633 [debug] Executing fun with value: 5
11:28:08.633 [debug] Evaluating bend block with value: 5
11:28:08.633 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.633 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.633 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.633 [debug] Executing bend with initial: 6
11:28:08.633 [debug] Executing fun with value: 6
11:28:08.633 [debug] Evaluating bend block with value: 6
11:28:08.633 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.633 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.633 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 7
11:28:08.634 [debug] Executing fun with value: 7
11:28:08.634 [debug] Evaluating bend block with value: 7
11:28:08.634 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.634 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.634 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 8
11:28:08.634 [debug] Executing fun with value: 8
11:28:08.634 [debug] Evaluating bend block with value: 8
11:28:08.634 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.634 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.634 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 9
11:28:08.634 [debug] Executing fun with value: 9
11:28:08.634 [debug] Evaluating bend block with value: 9
11:28:08.634 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 10
11:28:08.634 [debug] Executing fun with value: 10
11:28:08.634 [debug] Evaluating bend block with value: 10
11:28:08.634 [debug] Block returned: %{variant: :leaf}
11:28:08.634 [debug] Fun returned result: %{variant: :leaf}
11:28:08.634 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{variant: :leaf}
11:28:08.634 [debug] Executing bend with initial: 10
11:28:08.634 [debug] Executing fun with value: 10
11:28:08.634 [debug] Evaluating bend block with value: 10
11:28:08.634 [debug] Block returned: %{variant: :leaf}
11:28:08.634 [debug] Fun returned result: %{variant: :leaf}
11:28:08.634 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 9
11:28:08.634 [debug] Executing fun with value: 9
11:28:08.634 [debug] Evaluating bend block with value: 9
11:28:08.634 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 10
11:28:08.634 [debug] Executing fun with value: 10
11:28:08.634 [debug] Evaluating bend block with value: 10
11:28:08.634 [debug] Block returned: %{variant: :leaf}
11:28:08.634 [debug] Fun returned result: %{variant: :leaf}
11:28:08.634 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{variant: :leaf}
11:28:08.634 [debug] Executing bend with initial: 10
11:28:08.634 [debug] Executing fun with value: 10
11:28:08.634 [debug] Evaluating bend block with value: 10
11:28:08.634 [debug] Block returned: %{variant: :leaf}
11:28:08.634 [debug] Fun returned result: %{variant: :leaf}
11:28:08.634 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.634 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 8
11:28:08.634 [debug] Executing fun with value: 8
11:28:08.634 [debug] Evaluating bend block with value: 8
11:28:08.634 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.634 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.634 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 9
11:28:08.634 [debug] Executing fun with value: 9
11:28:08.634 [debug] Evaluating bend block with value: 9
11:28:08.634 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 10
11:28:08.634 [debug] Executing fun with value: 10
11:28:08.634 [debug] Evaluating bend block with value: 10
11:28:08.634 [debug] Block returned: %{variant: :leaf}
11:28:08.634 [debug] Fun returned result: %{variant: :leaf}
11:28:08.634 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{variant: :leaf}
11:28:08.634 [debug] Executing bend with initial: 10
11:28:08.634 [debug] Executing fun with value: 10
11:28:08.634 [debug] Evaluating bend block with value: 10
11:28:08.634 [debug] Block returned: %{variant: :leaf}
11:28:08.634 [debug] Fun returned result: %{variant: :leaf}
11:28:08.634 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{variant: :leaf}
11:28:08.634 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.634 [debug] Executing bend with initial: 9
11:28:08.634 [debug] Executing fun with value: 9
11:28:08.634 [debug] Evaluating bend block with value: 9
11:28:08.635 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Executing bend with initial: 10
11:28:08.635 [debug] Executing fun with value: 10
11:28:08.635 [debug] Evaluating bend block with value: 10
11:28:08.635 [debug] Block returned: %{variant: :leaf}
11:28:08.635 [debug] Fun returned result: %{variant: :leaf}
11:28:08.635 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.635 [debug] do_bend final result: %{variant: :leaf}
11:28:08.635 [debug] Executing bend with initial: 10
11:28:08.635 [debug] Executing fun with value: 10
11:28:08.635 [debug] Evaluating bend block with value: 10
11:28:08.635 [debug] Block returned: %{variant: :leaf}
11:28:08.635 [debug] Fun returned result: %{variant: :leaf}
11:28:08.635 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.635 [debug] do_bend final result: %{variant: :leaf}
11:28:08.635 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.635 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.635 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.635 [debug] Executing bend with initial: 7
11:28:08.635 [debug] Executing fun with value: 7
11:28:08.635 [debug] Evaluating bend block with value: 7
11:28:08.635 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.635 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.635 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.635 [debug] Executing bend with initial: 8
11:28:08.635 [debug] Executing fun with value: 8
11:28:08.635 [debug] Evaluating bend block with value: 8
11:28:08.635 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.635 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.635 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.635 [debug] Executing bend with initial: 9
11:28:08.635 [debug] Executing fun with value: 9
11:28:08.635 [debug] Evaluating bend block with value: 9
11:28:08.635 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Executing bend with initial: 10
11:28:08.635 [debug] Executing fun with value: 10
11:28:08.635 [debug] Evaluating bend block with value: 10
11:28:08.635 [debug] Block returned: %{variant: :leaf}
11:28:08.635 [debug] Fun returned result: %{variant: :leaf}
11:28:08.635 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.635 [debug] do_bend final result: %{variant: :leaf}
11:28:08.635 [debug] Executing bend with initial: 10
11:28:08.635 [debug] Executing fun with value: 10
11:28:08.635 [debug] Evaluating bend block with value: 10
11:28:08.635 [debug] Block returned: %{variant: :leaf}
11:28:08.635 [debug] Fun returned result: %{variant: :leaf}
11:28:08.635 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.635 [debug] do_bend final result: %{variant: :leaf}
11:28:08.635 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.635 [debug] Executing bend with initial: 9
11:28:08.635 [debug] Executing fun with value: 9
11:28:08.635 [debug] Evaluating bend block with value: 9
11:28:08.635 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.635 [debug] Executing bend with initial: 10
11:28:08.635 [debug] Executing fun with value: 10
11:28:08.635 [debug] Evaluating bend block with value: 10
11:28:08.635 [debug] Block returned: %{variant: :leaf}
11:28:08.635 [debug] Fun returned result: %{variant: :leaf}
11:28:08.636 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{variant: :leaf}
11:28:08.636 [debug] Executing bend with initial: 10
11:28:08.636 [debug] Executing fun with value: 10
11:28:08.636 [debug] Evaluating bend block with value: 10
11:28:08.636 [debug] Block returned: %{variant: :leaf}
11:28:08.636 [debug] Fun returned result: %{variant: :leaf}
11:28:08.636 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.636 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.636 [debug] Executing bend with initial: 8
11:28:08.636 [debug] Executing fun with value: 8
11:28:08.636 [debug] Evaluating bend block with value: 8
11:28:08.636 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.636 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.636 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.636 [debug] Executing bend with initial: 9
11:28:08.636 [debug] Executing fun with value: 9
11:28:08.636 [debug] Evaluating bend block with value: 9
11:28:08.636 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.636 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.636 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.636 [debug] Executing bend with initial: 10
11:28:08.636 [debug] Executing fun with value: 10
11:28:08.636 [debug] Evaluating bend block with value: 10
11:28:08.636 [debug] Block returned: %{variant: :leaf}
11:28:08.636 [debug] Fun returned result: %{variant: :leaf}
11:28:08.636 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{variant: :leaf}
11:28:08.636 [debug] Executing bend with initial: 10
11:28:08.636 [debug] Executing fun with value: 10
11:28:08.636 [debug] Evaluating bend block with value: 10
11:28:08.636 [debug] Block returned: %{variant: :leaf}
11:28:08.636 [debug] Fun returned result: %{variant: :leaf}
11:28:08.636 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.636 [debug] Executing bend with initial: 9
11:28:08.636 [debug] Executing fun with value: 9
11:28:08.636 [debug] Evaluating bend block with value: 9
11:28:08.636 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.636 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.636 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.636 [debug] Executing bend with initial: 10
11:28:08.636 [debug] Executing fun with value: 10
11:28:08.636 [debug] Evaluating bend block with value: 10
11:28:08.636 [debug] Block returned: %{variant: :leaf}
11:28:08.636 [debug] Fun returned result: %{variant: :leaf}
11:28:08.636 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{variant: :leaf}
11:28:08.636 [debug] Executing bend with initial: 10
11:28:08.636 [debug] Executing fun with value: 10
11:28:08.636 [debug] Evaluating bend block with value: 10
11:28:08.636 [debug] Block returned: %{variant: :leaf}
11:28:08.636 [debug] Fun returned result: %{variant: :leaf}
11:28:08.636 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{variant: :leaf}
11:28:08.636 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.636 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.636 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.637 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 6
11:28:08.637 [debug] Executing fun with value: 6
11:28:08.637 [debug] Evaluating bend block with value: 6
11:28:08.637 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 7
11:28:08.637 [debug] Executing fun with value: 7
11:28:08.637 [debug] Evaluating bend block with value: 7
11:28:08.637 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 8
11:28:08.637 [debug] Executing fun with value: 8
11:28:08.637 [debug] Evaluating bend block with value: 8
11:28:08.637 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 9
11:28:08.637 [debug] Executing fun with value: 9
11:28:08.637 [debug] Evaluating bend block with value: 9
11:28:08.637 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 9
11:28:08.637 [debug] Executing fun with value: 9
11:28:08.637 [debug] Evaluating bend block with value: 9
11:28:08.637 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.637 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 8
11:28:08.637 [debug] Executing fun with value: 8
11:28:08.637 [debug] Evaluating bend block with value: 8
11:28:08.637 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 9
11:28:08.637 [debug] Executing fun with value: 9
11:28:08.637 [debug] Evaluating bend block with value: 9
11:28:08.637 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 9
11:28:08.637 [debug] Executing fun with value: 9
11:28:08.637 [debug] Evaluating bend block with value: 9
11:28:08.637 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.637 [debug] Block returned: %{variant: :leaf}
11:28:08.637 [debug] Fun returned result: %{variant: :leaf}
11:28:08.637 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{variant: :leaf}
11:28:08.637 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.637 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.637 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 7
11:28:08.637 [debug] Executing fun with value: 7
11:28:08.637 [debug] Evaluating bend block with value: 7
11:28:08.637 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 8
11:28:08.637 [debug] Executing fun with value: 8
11:28:08.637 [debug] Evaluating bend block with value: 8
11:28:08.637 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 9
11:28:08.637 [debug] Executing fun with value: 9
11:28:08.637 [debug] Evaluating bend block with value: 9
11:28:08.637 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.637 [debug] Executing bend with initial: 10
11:28:08.637 [debug] Executing fun with value: 10
11:28:08.637 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] Executing bend with initial: 10
11:28:08.638 [debug] Executing fun with value: 10
11:28:08.638 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 9
11:28:08.638 [debug] Executing fun with value: 9
11:28:08.638 [debug] Evaluating bend block with value: 9
11:28:08.638 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 10
11:28:08.638 [debug] Executing fun with value: 10
11:28:08.638 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] Executing bend with initial: 10
11:28:08.638 [debug] Executing fun with value: 10
11:28:08.638 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.638 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 8
11:28:08.638 [debug] Executing fun with value: 8
11:28:08.638 [debug] Evaluating bend block with value: 8
11:28:08.638 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.638 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.638 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 9
11:28:08.638 [debug] Executing fun with value: 9
11:28:08.638 [debug] Evaluating bend block with value: 9
11:28:08.638 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 10
11:28:08.638 [debug] Executing fun with value: 10
11:28:08.638 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] Executing bend with initial: 10
11:28:08.638 [debug] Executing fun with value: 10
11:28:08.638 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 9
11:28:08.638 [debug] Executing fun with value: 9
11:28:08.638 [debug] Evaluating bend block with value: 9
11:28:08.638 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 10
11:28:08.638 [debug] Executing fun with value: 10
11:28:08.638 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] Executing bend with initial: 10
11:28:08.638 [debug] Executing fun with value: 10
11:28:08.638 [debug] Evaluating bend block with value: 10
11:28:08.638 [debug] Block returned: %{variant: :leaf}
11:28:08.638 [debug] Fun returned result: %{variant: :leaf}
11:28:08.638 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{variant: :leaf}
11:28:08.638 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.638 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.638 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.638 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.638 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.638 [debug] Executing bend with initial: 5
11:28:08.639 [debug] Executing fun with value: 5
11:28:08.639 [debug] Evaluating bend block with value: 5
11:28:08.639 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.639 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.639 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.639 [debug] Executing bend with initial: 6
11:28:08.640 [debug] Executing fun with value: 6
11:28:08.640 [debug] Evaluating bend block with value: 6
11:28:08.640 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.640 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.640 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 7
11:28:08.640 [debug] Executing fun with value: 7
11:28:08.640 [debug] Evaluating bend block with value: 7
11:28:08.640 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.640 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.640 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 8
11:28:08.640 [debug] Executing fun with value: 8
11:28:08.640 [debug] Evaluating bend block with value: 8
11:28:08.640 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.640 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.640 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 9
11:28:08.640 [debug] Executing fun with value: 9
11:28:08.640 [debug] Evaluating bend block with value: 9
11:28:08.640 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.640 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.640 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 10
11:28:08.640 [debug] Executing fun with value: 10
11:28:08.640 [debug] Evaluating bend block with value: 10
11:28:08.640 [debug] Block returned: %{variant: :leaf}
11:28:08.640 [debug] Fun returned result: %{variant: :leaf}
11:28:08.640 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.640 [debug] do_bend final result: %{variant: :leaf}
11:28:08.640 [debug] Executing bend with initial: 10
11:28:08.640 [debug] Executing fun with value: 10
11:28:08.640 [debug] Evaluating bend block with value: 10
11:28:08.640 [debug] Block returned: %{variant: :leaf}
11:28:08.640 [debug] Fun returned result: %{variant: :leaf}
11:28:08.640 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.640 [debug] do_bend final result: %{variant: :leaf}
11:28:08.640 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 9
11:28:08.640 [debug] Executing fun with value: 9
11:28:08.640 [debug] Evaluating bend block with value: 9
11:28:08.640 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.640 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.640 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 10
11:28:08.640 [debug] Executing fun with value: 10
11:28:08.640 [debug] Evaluating bend block with value: 10
11:28:08.640 [debug] Block returned: %{variant: :leaf}
11:28:08.640 [debug] Fun returned result: %{variant: :leaf}
11:28:08.640 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.640 [debug] do_bend final result: %{variant: :leaf}
11:28:08.640 [debug] Executing bend with initial: 10
11:28:08.640 [debug] Executing fun with value: 10
11:28:08.640 [debug] Evaluating bend block with value: 10
11:28:08.640 [debug] Block returned: %{variant: :leaf}
11:28:08.640 [debug] Fun returned result: %{variant: :leaf}
11:28:08.640 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.640 [debug] do_bend final result: %{variant: :leaf}
11:28:08.640 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.640 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 8
11:28:08.640 [debug] Executing fun with value: 8
11:28:08.640 [debug] Evaluating bend block with value: 8
11:28:08.640 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.640 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.640 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.640 [debug] Executing bend with initial: 9
11:28:08.640 [debug] Executing fun with value: 9
11:28:08.640 [debug] Evaluating bend block with value: 9
11:28:08.641 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.641 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.641 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.641 [debug] Executing bend with initial: 10
11:28:08.641 [debug] Executing fun with value: 10
11:28:08.641 [debug] Evaluating bend block with value: 10
11:28:08.641 [debug] Block returned: %{variant: :leaf}
11:28:08.641 [debug] Fun returned result: %{variant: :leaf}
11:28:08.641 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.641 [debug] do_bend final result: %{variant: :leaf}
11:28:08.641 [debug] Executing bend with initial: 10
11:28:08.641 [debug] Executing fun with value: 10
11:28:08.641 [debug] Evaluating bend block with value: 10
11:28:08.641 [debug] Block returned: %{variant: :leaf}
11:28:08.641 [debug] Fun returned result: %{variant: :leaf}
11:28:08.641 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.641 [debug] do_bend final result: %{variant: :leaf}
11:28:08.641 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.641 [debug] Executing bend with initial: 9
11:28:08.641 [debug] Executing fun with value: 9
11:28:08.641 [debug] Evaluating bend block with value: 9
11:28:08.641 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.641 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.641 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.641 [debug] Executing bend with initial: 10
11:28:08.641 [debug] Executing fun with value: 10
11:28:08.641 [debug] Evaluating bend block with value: 10
11:28:08.641 [debug] Block returned: %{variant: :leaf}
11:28:08.641 [debug] Fun returned result: %{variant: :leaf}
11:28:08.641 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.641 [debug] do_bend final result: %{variant: :leaf}
11:28:08.641 [debug] Executing bend with initial: 10
11:28:08.641 [debug] Executing fun with value: 10
11:28:08.641 [debug] Evaluating bend block with value: 10
11:28:08.641 [debug] Block returned: %{variant: :leaf}
11:28:08.641 [debug] Fun returned result: %{variant: :leaf}
11:28:08.641 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.641 [debug] do_bend final result: %{variant: :leaf}
11:28:08.641 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.641 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.641 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.641 [debug] Executing bend with initial: 7
11:28:08.641 [debug] Executing fun with value: 7
11:28:08.641 [debug] Evaluating bend block with value: 7
11:28:08.641 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.641 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.641 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.641 [debug] Executing bend with initial: 8
11:28:08.641 [debug] Executing fun with value: 8
11:28:08.641 [debug] Evaluating bend block with value: 8
11:28:08.641 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.641 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.641 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.641 [debug] Executing bend with initial: 9
11:28:08.641 [debug] Executing fun with value: 9
11:28:08.641 [debug] Evaluating bend block with value: 9
11:28:08.641 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.642 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.642 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.642 [debug] Executing bend with initial: 10
11:28:08.642 [debug] Executing fun with value: 10
11:28:08.642 [debug] Evaluating bend block with value: 10
11:28:08.642 [debug] Block returned: %{variant: :leaf}
11:28:08.642 [debug] Fun returned result: %{variant: :leaf}
11:28:08.642 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.642 [debug] do_bend final result: %{variant: :leaf}
11:28:08.642 [debug] Executing bend with initial: 10
11:28:08.642 [debug] Executing fun with value: 10
11:28:08.642 [debug] Evaluating bend block with value: 10
11:28:08.642 [debug] Block returned: %{variant: :leaf}
11:28:08.642 [debug] Fun returned result: %{variant: :leaf}
11:28:08.642 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.642 [debug] do_bend final result: %{variant: :leaf}
11:28:08.642 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.642 [debug] Executing bend with initial: 9
11:28:08.642 [debug] Executing fun with value: 9
11:28:08.642 [debug] Evaluating bend block with value: 9
11:28:08.642 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.642 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.642 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.642 [debug] Executing bend with initial: 10
11:28:08.642 [debug] Executing fun with value: 10
11:28:08.642 [debug] Evaluating bend block with value: 10
11:28:08.642 [debug] Block returned: %{variant: :leaf}
11:28:08.642 [debug] Fun returned result: %{variant: :leaf}
11:28:08.642 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.642 [debug] do_bend final result: %{variant: :leaf}
11:28:08.642 [debug] Executing bend with initial: 10
11:28:08.642 [debug] Executing fun with value: 10
11:28:08.642 [debug] Evaluating bend block with value: 10
11:28:08.642 [debug] Block returned: %{variant: :leaf}
11:28:08.642 [debug] Fun returned result: %{variant: :leaf}
11:28:08.642 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.642 [debug] do_bend final result: %{variant: :leaf}
11:28:08.642 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.642 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.642 [debug] Executing bend with initial: 8
11:28:08.642 [debug] Executing fun with value: 8
11:28:08.642 [debug] Evaluating bend block with value: 8
11:28:08.642 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.642 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.642 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.643 [debug] Executing bend with initial: 9
11:28:08.643 [debug] Executing fun with value: 9
11:28:08.643 [debug] Evaluating bend block with value: 9
11:28:08.643 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.643 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.643 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.643 [debug] Executing bend with initial: 10
11:28:08.643 [debug] Executing fun with value: 10
11:28:08.643 [debug] Evaluating bend block with value: 10
11:28:08.643 [debug] Block returned: %{variant: :leaf}
11:28:08.643 [debug] Fun returned result: %{variant: :leaf}
11:28:08.643 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.643 [debug] do_bend final result: %{variant: :leaf}
11:28:08.643 [debug] Executing bend with initial: 10
11:28:08.643 [debug] Executing fun with value: 10
11:28:08.643 [debug] Evaluating bend block with value: 10
11:28:08.643 [debug] Block returned: %{variant: :leaf}
11:28:08.643 [debug] Fun returned result: %{variant: :leaf}
11:28:08.643 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.643 [debug] do_bend final result: %{variant: :leaf}
11:28:08.643 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.643 [debug] Executing bend with initial: 9
11:28:08.643 [debug] Executing fun with value: 9
11:28:08.643 [debug] Evaluating bend block with value: 9
11:28:08.643 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.643 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.643 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.643 [debug] Executing bend with initial: 10
11:28:08.643 [debug] Executing fun with value: 10
11:28:08.643 [debug] Evaluating bend block with value: 10
11:28:08.643 [debug] Block returned: %{variant: :leaf}
11:28:08.643 [debug] Fun returned result: %{variant: :leaf}
11:28:08.643 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.643 [debug] do_bend final result: %{variant: :leaf}
11:28:08.643 [debug] Executing bend with initial: 10
11:28:08.643 [debug] Executing fun with value: 10
11:28:08.643 [debug] Evaluating bend block with value: 10
11:28:08.643 [debug] Block returned: %{variant: :leaf}
11:28:08.643 [debug] Fun returned result: %{variant: :leaf}
11:28:08.643 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.643 [debug] do_bend final result: %{variant: :leaf}
11:28:08.643 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.644 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.644 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.644 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 6
11:28:08.644 [debug] Executing fun with value: 6
11:28:08.644 [debug] Evaluating bend block with value: 6
11:28:08.644 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.644 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.644 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 7
11:28:08.644 [debug] Executing fun with value: 7
11:28:08.644 [debug] Evaluating bend block with value: 7
11:28:08.644 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.644 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.644 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 8
11:28:08.644 [debug] Executing fun with value: 8
11:28:08.644 [debug] Evaluating bend block with value: 8
11:28:08.644 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.644 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.644 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 9
11:28:08.644 [debug] Executing fun with value: 9
11:28:08.644 [debug] Evaluating bend block with value: 9
11:28:08.644 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 10
11:28:08.644 [debug] Executing fun with value: 10
11:28:08.644 [debug] Evaluating bend block with value: 10
11:28:08.644 [debug] Block returned: %{variant: :leaf}
11:28:08.644 [debug] Fun returned result: %{variant: :leaf}
11:28:08.644 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.644 [debug] do_bend final result: %{variant: :leaf}
11:28:08.644 [debug] Executing bend with initial: 10
11:28:08.644 [debug] Executing fun with value: 10
11:28:08.644 [debug] Evaluating bend block with value: 10
11:28:08.644 [debug] Block returned: %{variant: :leaf}
11:28:08.644 [debug] Fun returned result: %{variant: :leaf}
11:28:08.644 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.644 [debug] do_bend final result: %{variant: :leaf}
11:28:08.644 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 9
11:28:08.644 [debug] Executing fun with value: 9
11:28:08.644 [debug] Evaluating bend block with value: 9
11:28:08.644 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 10
11:28:08.644 [debug] Executing fun with value: 10
11:28:08.644 [debug] Evaluating bend block with value: 10
11:28:08.644 [debug] Block returned: %{variant: :leaf}
11:28:08.644 [debug] Fun returned result: %{variant: :leaf}
11:28:08.644 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.644 [debug] do_bend final result: %{variant: :leaf}
11:28:08.644 [debug] Executing bend with initial: 10
11:28:08.644 [debug] Executing fun with value: 10
11:28:08.644 [debug] Evaluating bend block with value: 10
11:28:08.644 [debug] Block returned: %{variant: :leaf}
11:28:08.644 [debug] Fun returned result: %{variant: :leaf}
11:28:08.644 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.644 [debug] do_bend final result: %{variant: :leaf}
11:28:08.644 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.644 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 8
11:28:08.644 [debug] Executing fun with value: 8
11:28:08.644 [debug] Evaluating bend block with value: 8
11:28:08.644 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.644 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.644 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 9
11:28:08.644 [debug] Executing fun with value: 9
11:28:08.644 [debug] Evaluating bend block with value: 9
11:28:08.644 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.644 [debug] Executing bend with initial: 10
11:28:08.644 [debug] Executing fun with value: 10
11:28:08.644 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 9
11:28:08.645 [debug] Executing fun with value: 9
11:28:08.645 [debug] Evaluating bend block with value: 9
11:28:08.645 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.645 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.645 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 7
11:28:08.645 [debug] Executing fun with value: 7
11:28:08.645 [debug] Evaluating bend block with value: 7
11:28:08.645 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.645 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.645 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 8
11:28:08.645 [debug] Executing fun with value: 8
11:28:08.645 [debug] Evaluating bend block with value: 8
11:28:08.645 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.645 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.645 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 9
11:28:08.645 [debug] Executing fun with value: 9
11:28:08.645 [debug] Evaluating bend block with value: 9
11:28:08.645 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 9
11:28:08.645 [debug] Executing fun with value: 9
11:28:08.645 [debug] Evaluating bend block with value: 9
11:28:08.645 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.645 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 8
11:28:08.645 [debug] Executing fun with value: 8
11:28:08.645 [debug] Evaluating bend block with value: 8
11:28:08.645 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.645 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.645 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 9
11:28:08.645 [debug] Executing fun with value: 9
11:28:08.645 [debug] Evaluating bend block with value: 9
11:28:08.645 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.645 [debug] do_bend final result: %{variant: :leaf}
11:28:08.645 [debug] Executing bend with initial: 10
11:28:08.645 [debug] Executing fun with value: 10
11:28:08.645 [debug] Evaluating bend block with value: 10
11:28:08.645 [debug] Block returned: %{variant: :leaf}
11:28:08.645 [debug] Fun returned result: %{variant: :leaf}
11:28:08.645 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.646 [debug] do_bend final result: %{variant: :leaf}
11:28:08.646 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.646 [debug] Executing bend with initial: 9
11:28:08.646 [debug] Executing fun with value: 9
11:28:08.646 [debug] Evaluating bend block with value: 9
11:28:08.646 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.646 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.646 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.646 [debug] Executing bend with initial: 10
11:28:08.646 [debug] Executing fun with value: 10
11:28:08.646 [debug] Evaluating bend block with value: 10
11:28:08.646 [debug] Block returned: %{variant: :leaf}
11:28:08.646 [debug] Fun returned result: %{variant: :leaf}
11:28:08.646 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.646 [debug] do_bend final result: %{variant: :leaf}
11:28:08.646 [debug] Executing bend with initial: 10
11:28:08.646 [debug] Executing fun with value: 10
11:28:08.646 [debug] Evaluating bend block with value: 10
11:28:08.646 [debug] Block returned: %{variant: :leaf}
11:28:08.646 [debug] Fun returned result: %{variant: :leaf}
11:28:08.646 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.646 [debug] do_bend final result: %{variant: :leaf}
11:28:08.646 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.646 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.646 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.648 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.648 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.649 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.649 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.649 [debug] Executing bend with initial: 3
11:28:08.649 [debug] Executing fun with value: 3
11:28:08.650 [debug] Evaluating bend block with value: 3
11:28:08.650 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 4
11:28:08.650 [debug] Executing fun with value: 4
11:28:08.650 [debug] Evaluating bend block with value: 4
11:28:08.650 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 5
11:28:08.650 [debug] Executing fun with value: 5
11:28:08.650 [debug] Evaluating bend block with value: 5
11:28:08.650 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 6
11:28:08.650 [debug] Executing fun with value: 6
11:28:08.650 [debug] Evaluating bend block with value: 6
11:28:08.650 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 7
11:28:08.650 [debug] Executing fun with value: 7
11:28:08.650 [debug] Evaluating bend block with value: 7
11:28:08.650 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 8
11:28:08.650 [debug] Executing fun with value: 8
11:28:08.650 [debug] Evaluating bend block with value: 8
11:28:08.650 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 9
11:28:08.650 [debug] Executing fun with value: 9
11:28:08.650 [debug] Evaluating bend block with value: 9
11:28:08.650 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 10
11:28:08.650 [debug] Executing fun with value: 10
11:28:08.650 [debug] Evaluating bend block with value: 10
11:28:08.650 [debug] Block returned: %{variant: :leaf}
11:28:08.650 [debug] Fun returned result: %{variant: :leaf}
11:28:08.650 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.650 [debug] do_bend final result: %{variant: :leaf}
11:28:08.650 [debug] Executing bend with initial: 10
11:28:08.650 [debug] Executing fun with value: 10
11:28:08.650 [debug] Evaluating bend block with value: 10
11:28:08.650 [debug] Block returned: %{variant: :leaf}
11:28:08.650 [debug] Fun returned result: %{variant: :leaf}
11:28:08.650 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.650 [debug] do_bend final result: %{variant: :leaf}
11:28:08.650 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 9
11:28:08.650 [debug] Executing fun with value: 9
11:28:08.650 [debug] Evaluating bend block with value: 9
11:28:08.650 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.650 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.650 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 10
11:28:08.650 [debug] Executing fun with value: 10
11:28:08.650 [debug] Evaluating bend block with value: 10
11:28:08.650 [debug] Block returned: %{variant: :leaf}
11:28:08.650 [debug] Fun returned result: %{variant: :leaf}
11:28:08.650 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.650 [debug] do_bend final result: %{variant: :leaf}
11:28:08.650 [debug] Executing bend with initial: 10
11:28:08.650 [debug] Executing fun with value: 10
11:28:08.650 [debug] Evaluating bend block with value: 10
11:28:08.650 [debug] Block returned: %{variant: :leaf}
11:28:08.650 [debug] Fun returned result: %{variant: :leaf}
11:28:08.650 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.650 [debug] do_bend final result: %{variant: :leaf}
11:28:08.650 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.650 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.650 [debug] Executing bend with initial: 8
11:28:08.651 [debug] Executing fun with value: 8
11:28:08.651 [debug] Evaluating bend block with value: 8
11:28:08.651 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.651 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.651 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 9
11:28:08.651 [debug] Executing fun with value: 9
11:28:08.651 [debug] Evaluating bend block with value: 9
11:28:08.651 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 10
11:28:08.651 [debug] Executing fun with value: 10
11:28:08.651 [debug] Evaluating bend block with value: 10
11:28:08.651 [debug] Block returned: %{variant: :leaf}
11:28:08.651 [debug] Fun returned result: %{variant: :leaf}
11:28:08.651 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{variant: :leaf}
11:28:08.651 [debug] Executing bend with initial: 10
11:28:08.651 [debug] Executing fun with value: 10
11:28:08.651 [debug] Evaluating bend block with value: 10
11:28:08.651 [debug] Block returned: %{variant: :leaf}
11:28:08.651 [debug] Fun returned result: %{variant: :leaf}
11:28:08.651 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 9
11:28:08.651 [debug] Executing fun with value: 9
11:28:08.651 [debug] Evaluating bend block with value: 9
11:28:08.651 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 10
11:28:08.651 [debug] Executing fun with value: 10
11:28:08.651 [debug] Evaluating bend block with value: 10
11:28:08.651 [debug] Block returned: %{variant: :leaf}
11:28:08.651 [debug] Fun returned result: %{variant: :leaf}
11:28:08.651 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{variant: :leaf}
11:28:08.651 [debug] Executing bend with initial: 10
11:28:08.651 [debug] Executing fun with value: 10
11:28:08.651 [debug] Evaluating bend block with value: 10
11:28:08.651 [debug] Block returned: %{variant: :leaf}
11:28:08.651 [debug] Fun returned result: %{variant: :leaf}
11:28:08.651 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.651 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.651 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 7
11:28:08.651 [debug] Executing fun with value: 7
11:28:08.651 [debug] Evaluating bend block with value: 7
11:28:08.651 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.651 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.651 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 8
11:28:08.651 [debug] Executing fun with value: 8
11:28:08.651 [debug] Evaluating bend block with value: 8
11:28:08.651 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.651 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.651 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 9
11:28:08.651 [debug] Executing fun with value: 9
11:28:08.651 [debug] Evaluating bend block with value: 9
11:28:08.651 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 10
11:28:08.651 [debug] Executing fun with value: 10
11:28:08.651 [debug] Evaluating bend block with value: 10
11:28:08.651 [debug] Block returned: %{variant: :leaf}
11:28:08.651 [debug] Fun returned result: %{variant: :leaf}
11:28:08.651 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{variant: :leaf}
11:28:08.651 [debug] Executing bend with initial: 10
11:28:08.651 [debug] Executing fun with value: 10
11:28:08.651 [debug] Evaluating bend block with value: 10
11:28:08.651 [debug] Block returned: %{variant: :leaf}
11:28:08.651 [debug] Fun returned result: %{variant: :leaf}
11:28:08.651 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{variant: :leaf}
11:28:08.651 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.651 [debug] Executing bend with initial: 9
11:28:08.651 [debug] Executing fun with value: 9
11:28:08.651 [debug] Evaluating bend block with value: 9
11:28:08.652 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Executing bend with initial: 10
11:28:08.652 [debug] Executing fun with value: 10
11:28:08.652 [debug] Evaluating bend block with value: 10
11:28:08.652 [debug] Block returned: %{variant: :leaf}
11:28:08.652 [debug] Fun returned result: %{variant: :leaf}
11:28:08.652 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{variant: :leaf}
11:28:08.652 [debug] Executing bend with initial: 10
11:28:08.652 [debug] Executing fun with value: 10
11:28:08.652 [debug] Evaluating bend block with value: 10
11:28:08.652 [debug] Block returned: %{variant: :leaf}
11:28:08.652 [debug] Fun returned result: %{variant: :leaf}
11:28:08.652 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.652 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.652 [debug] Executing bend with initial: 8
11:28:08.652 [debug] Executing fun with value: 8
11:28:08.652 [debug] Evaluating bend block with value: 8
11:28:08.652 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.652 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.652 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.652 [debug] Executing bend with initial: 9
11:28:08.652 [debug] Executing fun with value: 9
11:28:08.652 [debug] Evaluating bend block with value: 9
11:28:08.652 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Executing bend with initial: 10
11:28:08.652 [debug] Executing fun with value: 10
11:28:08.652 [debug] Evaluating bend block with value: 10
11:28:08.652 [debug] Block returned: %{variant: :leaf}
11:28:08.652 [debug] Fun returned result: %{variant: :leaf}
11:28:08.652 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{variant: :leaf}
11:28:08.652 [debug] Executing bend with initial: 10
11:28:08.652 [debug] Executing fun with value: 10
11:28:08.652 [debug] Evaluating bend block with value: 10
11:28:08.652 [debug] Block returned: %{variant: :leaf}
11:28:08.652 [debug] Fun returned result: %{variant: :leaf}
11:28:08.652 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.652 [debug] Executing bend with initial: 9
11:28:08.652 [debug] Executing fun with value: 9
11:28:08.652 [debug] Evaluating bend block with value: 9
11:28:08.652 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.652 [debug] Executing bend with initial: 10
11:28:08.652 [debug] Executing fun with value: 10
11:28:08.652 [debug] Evaluating bend block with value: 10
11:28:08.652 [debug] Block returned: %{variant: :leaf}
11:28:08.652 [debug] Fun returned result: %{variant: :leaf}
11:28:08.652 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{variant: :leaf}
11:28:08.652 [debug] Executing bend with initial: 10
11:28:08.652 [debug] Executing fun with value: 10
11:28:08.652 [debug] Evaluating bend block with value: 10
11:28:08.652 [debug] Block returned: %{variant: :leaf}
11:28:08.652 [debug] Fun returned result: %{variant: :leaf}
11:28:08.652 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{variant: :leaf}
11:28:08.652 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.652 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.653 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.653 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.653 [debug] Executing bend with initial: 6
11:28:08.653 [debug] Executing fun with value: 6
11:28:08.653 [debug] Evaluating bend block with value: 6
11:28:08.653 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.653 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.653 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.653 [debug] Executing bend with initial: 7
11:28:08.653 [debug] Executing fun with value: 7
11:28:08.653 [debug] Evaluating bend block with value: 7
11:28:08.653 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.653 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.653 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.653 [debug] Executing bend with initial: 8
11:28:08.653 [debug] Executing fun with value: 8
11:28:08.653 [debug] Evaluating bend block with value: 8
11:28:08.653 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.653 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.653 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.653 [debug] Executing bend with initial: 9
11:28:08.653 [debug] Executing fun with value: 9
11:28:08.653 [debug] Evaluating bend block with value: 9
11:28:08.653 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.653 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.653 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.653 [debug] Executing bend with initial: 10
11:28:08.653 [debug] Executing fun with value: 10
11:28:08.653 [debug] Evaluating bend block with value: 10
11:28:08.653 [debug] Block returned: %{variant: :leaf}
11:28:08.653 [debug] Fun returned result: %{variant: :leaf}
11:28:08.653 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.653 [debug] do_bend final result: %{variant: :leaf}
11:28:08.653 [debug] Executing bend with initial: 10
11:28:08.653 [debug] Executing fun with value: 10
11:28:08.653 [debug] Evaluating bend block with value: 10
11:28:08.653 [debug] Block returned: %{variant: :leaf}
11:28:08.653 [debug] Fun returned result: %{variant: :leaf}
11:28:08.653 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.653 [debug] do_bend final result: %{variant: :leaf}
11:28:08.653 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.653 [debug] Executing bend with initial: 9
11:28:08.655 [debug] Executing fun with value: 9
11:28:08.655 [debug] Evaluating bend block with value: 9
11:28:08.655 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Executing bend with initial: 10
11:28:08.655 [debug] Executing fun with value: 10
11:28:08.655 [debug] Evaluating bend block with value: 10
11:28:08.655 [debug] Block returned: %{variant: :leaf}
11:28:08.655 [debug] Fun returned result: %{variant: :leaf}
11:28:08.655 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.655 [debug] do_bend final result: %{variant: :leaf}
11:28:08.655 [debug] Executing bend with initial: 10
11:28:08.655 [debug] Executing fun with value: 10
11:28:08.655 [debug] Evaluating bend block with value: 10
11:28:08.655 [debug] Block returned: %{variant: :leaf}
11:28:08.655 [debug] Fun returned result: %{variant: :leaf}
11:28:08.655 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.655 [debug] do_bend final result: %{variant: :leaf}
11:28:08.655 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.655 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.655 [debug] Executing bend with initial: 8
11:28:08.655 [debug] Executing fun with value: 8
11:28:08.655 [debug] Evaluating bend block with value: 8
11:28:08.655 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.655 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.655 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.655 [debug] Executing bend with initial: 9
11:28:08.655 [debug] Executing fun with value: 9
11:28:08.655 [debug] Evaluating bend block with value: 9
11:28:08.655 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Executing bend with initial: 10
11:28:08.655 [debug] Executing fun with value: 10
11:28:08.655 [debug] Evaluating bend block with value: 10
11:28:08.655 [debug] Block returned: %{variant: :leaf}
11:28:08.655 [debug] Fun returned result: %{variant: :leaf}
11:28:08.655 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.655 [debug] do_bend final result: %{variant: :leaf}
11:28:08.655 [debug] Executing bend with initial: 10
11:28:08.655 [debug] Executing fun with value: 10
11:28:08.655 [debug] Evaluating bend block with value: 10
11:28:08.655 [debug] Block returned: %{variant: :leaf}
11:28:08.655 [debug] Fun returned result: %{variant: :leaf}
11:28:08.655 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.655 [debug] do_bend final result: %{variant: :leaf}
11:28:08.655 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.655 [debug] Executing bend with initial: 9
11:28:08.655 [debug] Executing fun with value: 9
11:28:08.655 [debug] Evaluating bend block with value: 9
11:28:08.655 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.655 [debug] Executing bend with initial: 10
11:28:08.655 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.656 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.656 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 7
11:28:08.656 [debug] Executing fun with value: 7
11:28:08.656 [debug] Evaluating bend block with value: 7
11:28:08.656 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.656 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.656 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 8
11:28:08.656 [debug] Executing fun with value: 8
11:28:08.656 [debug] Evaluating bend block with value: 8
11:28:08.656 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.656 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.656 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 9
11:28:08.656 [debug] Executing fun with value: 9
11:28:08.656 [debug] Evaluating bend block with value: 9
11:28:08.656 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 9
11:28:08.656 [debug] Executing fun with value: 9
11:28:08.656 [debug] Evaluating bend block with value: 9
11:28:08.656 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.656 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 8
11:28:08.656 [debug] Executing fun with value: 8
11:28:08.656 [debug] Evaluating bend block with value: 8
11:28:08.656 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.656 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.656 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 9
11:28:08.656 [debug] Executing fun with value: 9
11:28:08.656 [debug] Evaluating bend block with value: 9
11:28:08.656 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 9
11:28:08.656 [debug] Executing fun with value: 9
11:28:08.656 [debug] Evaluating bend block with value: 9
11:28:08.656 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.656 [debug] Executing bend with initial: 10
11:28:08.656 [debug] Executing fun with value: 10
11:28:08.656 [debug] Evaluating bend block with value: 10
11:28:08.656 [debug] Block returned: %{variant: :leaf}
11:28:08.656 [debug] Fun returned result: %{variant: :leaf}
11:28:08.656 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.656 [debug] do_bend final result: %{variant: :leaf}
11:28:08.657 [debug] Executing bend with initial: 10
11:28:08.657 [debug] Executing fun with value: 10
11:28:08.657 [debug] Evaluating bend block with value: 10
11:28:08.657 [debug] Block returned: %{variant: :leaf}
11:28:08.657 [debug] Fun returned result: %{variant: :leaf}
11:28:08.657 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.657 [debug] do_bend final result: %{variant: :leaf}
11:28:08.657 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.657 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.657 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.657 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.657 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.657 [debug] Executing bend with initial: 5
11:28:08.657 [debug] Executing fun with value: 5
11:28:08.657 [debug] Evaluating bend block with value: 5
11:28:08.657 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.657 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.657 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.657 [debug] Executing bend with initial: 6
11:28:08.657 [debug] Executing fun with value: 6
11:28:08.657 [debug] Evaluating bend block with value: 6
11:28:08.657 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.657 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.657 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.657 [debug] Executing bend with initial: 7
11:28:08.657 [debug] Executing fun with value: 7
11:28:08.657 [debug] Evaluating bend block with value: 7
11:28:08.657 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.657 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.657 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.657 [debug] Executing bend with initial: 8
11:28:08.657 [debug] Executing fun with value: 8
11:28:08.657 [debug] Evaluating bend block with value: 8
11:28:08.657 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.657 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.657 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.657 [debug] Executing bend with initial: 9
11:28:08.657 [debug] Executing fun with value: 9
11:28:08.657 [debug] Evaluating bend block with value: 9
11:28:08.657 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.657 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 9
11:28:08.658 [debug] Executing fun with value: 9
11:28:08.658 [debug] Evaluating bend block with value: 9
11:28:08.658 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.658 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 8
11:28:08.658 [debug] Executing fun with value: 8
11:28:08.658 [debug] Evaluating bend block with value: 8
11:28:08.658 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.658 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 9
11:28:08.658 [debug] Executing fun with value: 9
11:28:08.658 [debug] Evaluating bend block with value: 9
11:28:08.658 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 9
11:28:08.658 [debug] Executing fun with value: 9
11:28:08.658 [debug] Evaluating bend block with value: 9
11:28:08.658 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.658 [debug] Executing fun with value: 10
11:28:08.658 [debug] Evaluating bend block with value: 10
11:28:08.658 [debug] Block returned: %{variant: :leaf}
11:28:08.658 [debug] Fun returned result: %{variant: :leaf}
11:28:08.658 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{variant: :leaf}
11:28:08.658 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.658 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.658 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 7
11:28:08.658 [debug] Executing fun with value: 7
11:28:08.658 [debug] Evaluating bend block with value: 7
11:28:08.658 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.658 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 8
11:28:08.658 [debug] Executing fun with value: 8
11:28:08.658 [debug] Evaluating bend block with value: 8
11:28:08.658 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.658 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 9
11:28:08.658 [debug] Executing fun with value: 9
11:28:08.658 [debug] Evaluating bend block with value: 9
11:28:08.658 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.658 [debug] Executing bend with initial: 10
11:28:08.659 [debug] Executing fun with value: 10
11:28:08.659 [debug] Evaluating bend block with value: 10
11:28:08.659 [debug] Block returned: %{variant: :leaf}
11:28:08.659 [debug] Fun returned result: %{variant: :leaf}
11:28:08.659 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{variant: :leaf}
11:28:08.659 [debug] Executing bend with initial: 10
11:28:08.659 [debug] Executing fun with value: 10
11:28:08.659 [debug] Evaluating bend block with value: 10
11:28:08.659 [debug] Block returned: %{variant: :leaf}
11:28:08.659 [debug] Fun returned result: %{variant: :leaf}
11:28:08.659 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.659 [debug] Executing bend with initial: 9
11:28:08.659 [debug] Executing fun with value: 9
11:28:08.659 [debug] Evaluating bend block with value: 9
11:28:08.659 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Executing bend with initial: 10
11:28:08.659 [debug] Executing fun with value: 10
11:28:08.659 [debug] Evaluating bend block with value: 10
11:28:08.659 [debug] Block returned: %{variant: :leaf}
11:28:08.659 [debug] Fun returned result: %{variant: :leaf}
11:28:08.659 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{variant: :leaf}
11:28:08.659 [debug] Executing bend with initial: 10
11:28:08.659 [debug] Executing fun with value: 10
11:28:08.659 [debug] Evaluating bend block with value: 10
11:28:08.659 [debug] Block returned: %{variant: :leaf}
11:28:08.659 [debug] Fun returned result: %{variant: :leaf}
11:28:08.659 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.659 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.659 [debug] Executing bend with initial: 8
11:28:08.659 [debug] Executing fun with value: 8
11:28:08.659 [debug] Evaluating bend block with value: 8
11:28:08.659 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.659 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.659 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.659 [debug] Executing bend with initial: 9
11:28:08.659 [debug] Executing fun with value: 9
11:28:08.659 [debug] Evaluating bend block with value: 9
11:28:08.659 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Executing bend with initial: 10
11:28:08.659 [debug] Executing fun with value: 10
11:28:08.659 [debug] Evaluating bend block with value: 10
11:28:08.659 [debug] Block returned: %{variant: :leaf}
11:28:08.659 [debug] Fun returned result: %{variant: :leaf}
11:28:08.659 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{variant: :leaf}
11:28:08.659 [debug] Executing bend with initial: 10
11:28:08.659 [debug] Executing fun with value: 10
11:28:08.659 [debug] Evaluating bend block with value: 10
11:28:08.659 [debug] Block returned: %{variant: :leaf}
11:28:08.659 [debug] Fun returned result: %{variant: :leaf}
11:28:08.659 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{variant: :leaf}
11:28:08.659 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.659 [debug] Executing bend with initial: 9
11:28:08.659 [debug] Executing fun with value: 9
11:28:08.659 [debug] Evaluating bend block with value: 9
11:28:08.659 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.659 [debug] Executing bend with initial: 10
11:28:08.659 [debug] Executing fun with value: 10
11:28:08.659 [debug] Evaluating bend block with value: 10
11:28:08.660 [debug] Block returned: %{variant: :leaf}
11:28:08.660 [debug] Fun returned result: %{variant: :leaf}
11:28:08.660 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.660 [debug] do_bend final result: %{variant: :leaf}
11:28:08.660 [debug] Executing bend with initial: 10
11:28:08.660 [debug] Executing fun with value: 10
11:28:08.660 [debug] Evaluating bend block with value: 10
11:28:08.660 [debug] Block returned: %{variant: :leaf}
11:28:08.660 [debug] Fun returned result: %{variant: :leaf}
11:28:08.660 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.660 [debug] do_bend final result: %{variant: :leaf}
11:28:08.660 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.660 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.660 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.660 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.660 [debug] Executing bend with initial: 6
11:28:08.660 [debug] Executing fun with value: 6
11:28:08.660 [debug] Evaluating bend block with value: 6
11:28:08.660 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.660 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.660 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.660 [debug] Executing bend with initial: 7
11:28:08.660 [debug] Executing fun with value: 7
11:28:08.660 [debug] Evaluating bend block with value: 7
11:28:08.660 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.660 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.660 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.660 [debug] Executing bend with initial: 8
11:28:08.660 [debug] Executing fun with value: 8
11:28:08.660 [debug] Evaluating bend block with value: 8
11:28:08.660 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.660 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.660 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.660 [debug] Executing bend with initial: 9
11:28:08.660 [debug] Executing fun with value: 9
11:28:08.660 [debug] Evaluating bend block with value: 9
11:28:08.660 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.660 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.660 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.660 [debug] Executing bend with initial: 10
11:28:08.660 [debug] Executing fun with value: 10
11:28:08.660 [debug] Evaluating bend block with value: 10
11:28:08.660 [debug] Block returned: %{variant: :leaf}
11:28:08.660 [debug] Fun returned result: %{variant: :leaf}
11:28:08.660 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.660 [debug] do_bend final result: %{variant: :leaf}
11:28:08.660 [debug] Executing bend with initial: 10
11:28:08.660 [debug] Executing fun with value: 10
11:28:08.660 [debug] Evaluating bend block with value: 10
11:28:08.660 [debug] Block returned: %{variant: :leaf}
11:28:08.661 [debug] Fun returned result: %{variant: :leaf}
11:28:08.661 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 9
11:28:08.661 [debug] Executing fun with value: 9
11:28:08.661 [debug] Evaluating bend block with value: 9
11:28:08.661 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 10
11:28:08.661 [debug] Executing fun with value: 10
11:28:08.661 [debug] Evaluating bend block with value: 10
11:28:08.661 [debug] Block returned: %{variant: :leaf}
11:28:08.661 [debug] Fun returned result: %{variant: :leaf}
11:28:08.661 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{variant: :leaf}
11:28:08.661 [debug] Executing bend with initial: 10
11:28:08.661 [debug] Executing fun with value: 10
11:28:08.661 [debug] Evaluating bend block with value: 10
11:28:08.661 [debug] Block returned: %{variant: :leaf}
11:28:08.661 [debug] Fun returned result: %{variant: :leaf}
11:28:08.661 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.661 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 8
11:28:08.661 [debug] Executing fun with value: 8
11:28:08.661 [debug] Evaluating bend block with value: 8
11:28:08.661 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.661 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.661 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 9
11:28:08.661 [debug] Executing fun with value: 9
11:28:08.661 [debug] Evaluating bend block with value: 9
11:28:08.661 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 10
11:28:08.661 [debug] Executing fun with value: 10
11:28:08.661 [debug] Evaluating bend block with value: 10
11:28:08.661 [debug] Block returned: %{variant: :leaf}
11:28:08.661 [debug] Fun returned result: %{variant: :leaf}
11:28:08.661 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{variant: :leaf}
11:28:08.661 [debug] Executing bend with initial: 10
11:28:08.661 [debug] Executing fun with value: 10
11:28:08.661 [debug] Evaluating bend block with value: 10
11:28:08.661 [debug] Block returned: %{variant: :leaf}
11:28:08.661 [debug] Fun returned result: %{variant: :leaf}
11:28:08.661 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 9
11:28:08.661 [debug] Executing fun with value: 9
11:28:08.661 [debug] Evaluating bend block with value: 9
11:28:08.661 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 10
11:28:08.661 [debug] Executing fun with value: 10
11:28:08.661 [debug] Evaluating bend block with value: 10
11:28:08.661 [debug] Block returned: %{variant: :leaf}
11:28:08.661 [debug] Fun returned result: %{variant: :leaf}
11:28:08.661 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{variant: :leaf}
11:28:08.661 [debug] Executing bend with initial: 10
11:28:08.661 [debug] Executing fun with value: 10
11:28:08.661 [debug] Evaluating bend block with value: 10
11:28:08.661 [debug] Block returned: %{variant: :leaf}
11:28:08.661 [debug] Fun returned result: %{variant: :leaf}
11:28:08.661 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{variant: :leaf}
11:28:08.661 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.661 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.661 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.661 [debug] Executing bend with initial: 7
11:28:08.661 [debug] Executing fun with value: 7
11:28:08.661 [debug] Evaluating bend block with value: 7
11:28:08.662 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.662 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.662 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 8
11:28:08.662 [debug] Executing fun with value: 8
11:28:08.662 [debug] Evaluating bend block with value: 8
11:28:08.662 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.662 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.662 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 9
11:28:08.662 [debug] Executing fun with value: 9
11:28:08.662 [debug] Evaluating bend block with value: 9
11:28:08.662 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 10
11:28:08.662 [debug] Executing fun with value: 10
11:28:08.662 [debug] Evaluating bend block with value: 10
11:28:08.662 [debug] Block returned: %{variant: :leaf}
11:28:08.662 [debug] Fun returned result: %{variant: :leaf}
11:28:08.662 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{variant: :leaf}
11:28:08.662 [debug] Executing bend with initial: 10
11:28:08.662 [debug] Executing fun with value: 10
11:28:08.662 [debug] Evaluating bend block with value: 10
11:28:08.662 [debug] Block returned: %{variant: :leaf}
11:28:08.662 [debug] Fun returned result: %{variant: :leaf}
11:28:08.662 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 9
11:28:08.662 [debug] Executing fun with value: 9
11:28:08.662 [debug] Evaluating bend block with value: 9
11:28:08.662 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 10
11:28:08.662 [debug] Executing fun with value: 10
11:28:08.662 [debug] Evaluating bend block with value: 10
11:28:08.662 [debug] Block returned: %{variant: :leaf}
11:28:08.662 [debug] Fun returned result: %{variant: :leaf}
11:28:08.662 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{variant: :leaf}
11:28:08.662 [debug] Executing bend with initial: 10
11:28:08.662 [debug] Executing fun with value: 10
11:28:08.662 [debug] Evaluating bend block with value: 10
11:28:08.662 [debug] Block returned: %{variant: :leaf}
11:28:08.662 [debug] Fun returned result: %{variant: :leaf}
11:28:08.662 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.662 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 8
11:28:08.662 [debug] Executing fun with value: 8
11:28:08.662 [debug] Evaluating bend block with value: 8
11:28:08.662 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.662 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.662 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 9
11:28:08.662 [debug] Executing fun with value: 9
11:28:08.662 [debug] Evaluating bend block with value: 9
11:28:08.662 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 10
11:28:08.662 [debug] Executing fun with value: 10
11:28:08.662 [debug] Evaluating bend block with value: 10
11:28:08.662 [debug] Block returned: %{variant: :leaf}
11:28:08.662 [debug] Fun returned result: %{variant: :leaf}
11:28:08.662 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{variant: :leaf}
11:28:08.662 [debug] Executing bend with initial: 10
11:28:08.662 [debug] Executing fun with value: 10
11:28:08.662 [debug] Evaluating bend block with value: 10
11:28:08.662 [debug] Block returned: %{variant: :leaf}
11:28:08.662 [debug] Fun returned result: %{variant: :leaf}
11:28:08.662 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{variant: :leaf}
11:28:08.662 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.662 [debug] Executing bend with initial: 9
11:28:08.662 [debug] Executing fun with value: 9
11:28:08.662 [debug] Evaluating bend block with value: 9
11:28:08.662 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.662 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.663 [debug] Executing bend with initial: 10
11:28:08.663 [debug] Executing fun with value: 10
11:28:08.663 [debug] Evaluating bend block with value: 10
11:28:08.663 [debug] Block returned: %{variant: :leaf}
11:28:08.663 [debug] Fun returned result: %{variant: :leaf}
11:28:08.663 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.663 [debug] do_bend final result: %{variant: :leaf}
11:28:08.663 [debug] Executing bend with initial: 10
11:28:08.663 [debug] Executing fun with value: 10
11:28:08.663 [debug] Evaluating bend block with value: 10
11:28:08.663 [debug] Block returned: %{variant: :leaf}
11:28:08.663 [debug] Fun returned result: %{variant: :leaf}
11:28:08.663 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.663 [debug] do_bend final result: %{variant: :leaf}
11:28:08.663 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.663 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.663 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.663 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.664 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.664 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.664 [debug] Executing bend with initial: 4
11:28:08.664 [debug] Executing fun with value: 4
11:28:08.664 [debug] Evaluating bend block with value: 4
11:28:08.664 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.664 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.664 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.664 [debug] Executing bend with initial: 5
11:28:08.664 [debug] Executing fun with value: 5
11:28:08.664 [debug] Evaluating bend block with value: 5
11:28:08.664 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.664 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.664 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.664 [debug] Executing bend with initial: 6
11:28:08.664 [debug] Executing fun with value: 6
11:28:08.664 [debug] Evaluating bend block with value: 6
11:28:08.664 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.664 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.664 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.664 [debug] Executing bend with initial: 7
11:28:08.664 [debug] Executing fun with value: 7
11:28:08.664 [debug] Evaluating bend block with value: 7
11:28:08.664 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.664 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.664 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.664 [debug] Executing bend with initial: 8
11:28:08.664 [debug] Executing fun with value: 8
11:28:08.664 [debug] Evaluating bend block with value: 8
11:28:08.664 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.664 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.664 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.664 [debug] Executing bend with initial: 9
11:28:08.664 [debug] Executing fun with value: 9
11:28:08.664 [debug] Evaluating bend block with value: 9
11:28:08.664 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.664 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.664 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.664 [debug] Executing bend with initial: 10
11:28:08.664 [debug] Executing fun with value: 10
11:28:08.664 [debug] Evaluating bend block with value: 10
11:28:08.665 [debug] Block returned: %{variant: :leaf}
11:28:08.665 [debug] Fun returned result: %{variant: :leaf}
11:28:08.665 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{variant: :leaf}
11:28:08.665 [debug] Executing bend with initial: 10
11:28:08.665 [debug] Executing fun with value: 10
11:28:08.665 [debug] Evaluating bend block with value: 10
11:28:08.665 [debug] Block returned: %{variant: :leaf}
11:28:08.665 [debug] Fun returned result: %{variant: :leaf}
11:28:08.665 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.665 [debug] Executing bend with initial: 9
11:28:08.665 [debug] Executing fun with value: 9
11:28:08.665 [debug] Evaluating bend block with value: 9
11:28:08.665 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Executing bend with initial: 10
11:28:08.665 [debug] Executing fun with value: 10
11:28:08.665 [debug] Evaluating bend block with value: 10
11:28:08.665 [debug] Block returned: %{variant: :leaf}
11:28:08.665 [debug] Fun returned result: %{variant: :leaf}
11:28:08.665 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{variant: :leaf}
11:28:08.665 [debug] Executing bend with initial: 10
11:28:08.665 [debug] Executing fun with value: 10
11:28:08.665 [debug] Evaluating bend block with value: 10
11:28:08.665 [debug] Block returned: %{variant: :leaf}
11:28:08.665 [debug] Fun returned result: %{variant: :leaf}
11:28:08.665 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.665 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.665 [debug] Executing bend with initial: 8
11:28:08.665 [debug] Executing fun with value: 8
11:28:08.665 [debug] Evaluating bend block with value: 8
11:28:08.665 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.665 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.665 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.665 [debug] Executing bend with initial: 9
11:28:08.665 [debug] Executing fun with value: 9
11:28:08.665 [debug] Evaluating bend block with value: 9
11:28:08.665 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Executing bend with initial: 10
11:28:08.665 [debug] Executing fun with value: 10
11:28:08.665 [debug] Evaluating bend block with value: 10
11:28:08.665 [debug] Block returned: %{variant: :leaf}
11:28:08.665 [debug] Fun returned result: %{variant: :leaf}
11:28:08.665 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{variant: :leaf}
11:28:08.665 [debug] Executing bend with initial: 10
11:28:08.665 [debug] Executing fun with value: 10
11:28:08.665 [debug] Evaluating bend block with value: 10
11:28:08.665 [debug] Block returned: %{variant: :leaf}
11:28:08.665 [debug] Fun returned result: %{variant: :leaf}
11:28:08.665 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{variant: :leaf}
11:28:08.665 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.665 [debug] Executing bend with initial: 9
11:28:08.665 [debug] Executing fun with value: 9
11:28:08.665 [debug] Evaluating bend block with value: 9
11:28:08.665 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.665 [debug] Executing bend with initial: 10
11:28:08.665 [debug] Executing fun with value: 10
11:28:08.666 [debug] Evaluating bend block with value: 10
11:28:08.666 [debug] Block returned: %{variant: :leaf}
11:28:08.666 [debug] Fun returned result: %{variant: :leaf}
11:28:08.666 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{variant: :leaf}
11:28:08.666 [debug] Executing bend with initial: 10
11:28:08.666 [debug] Executing fun with value: 10
11:28:08.666 [debug] Evaluating bend block with value: 10
11:28:08.666 [debug] Block returned: %{variant: :leaf}
11:28:08.666 [debug] Fun returned result: %{variant: :leaf}
11:28:08.666 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.666 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.666 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.666 [debug] Executing bend with initial: 7
11:28:08.666 [debug] Executing fun with value: 7
11:28:08.666 [debug] Evaluating bend block with value: 7
11:28:08.666 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.666 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.666 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.666 [debug] Executing bend with initial: 8
11:28:08.666 [debug] Executing fun with value: 8
11:28:08.666 [debug] Evaluating bend block with value: 8
11:28:08.666 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.666 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.666 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.666 [debug] Executing bend with initial: 9
11:28:08.666 [debug] Executing fun with value: 9
11:28:08.666 [debug] Evaluating bend block with value: 9
11:28:08.666 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.666 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.666 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.666 [debug] Executing bend with initial: 10
11:28:08.666 [debug] Executing fun with value: 10
11:28:08.666 [debug] Evaluating bend block with value: 10
11:28:08.666 [debug] Block returned: %{variant: :leaf}
11:28:08.666 [debug] Fun returned result: %{variant: :leaf}
11:28:08.666 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{variant: :leaf}
11:28:08.666 [debug] Executing bend with initial: 10
11:28:08.666 [debug] Executing fun with value: 10
11:28:08.666 [debug] Evaluating bend block with value: 10
11:28:08.666 [debug] Block returned: %{variant: :leaf}
11:28:08.666 [debug] Fun returned result: %{variant: :leaf}
11:28:08.666 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.666 [debug] Executing bend with initial: 9
11:28:08.666 [debug] Executing fun with value: 9
11:28:08.666 [debug] Evaluating bend block with value: 9
11:28:08.666 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.666 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.666 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.666 [debug] Executing bend with initial: 10
11:28:08.666 [debug] Executing fun with value: 10
11:28:08.666 [debug] Evaluating bend block with value: 10
11:28:08.666 [debug] Block returned: %{variant: :leaf}
11:28:08.666 [debug] Fun returned result: %{variant: :leaf}
11:28:08.666 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{variant: :leaf}
11:28:08.666 [debug] Executing bend with initial: 10
11:28:08.666 [debug] Executing fun with value: 10
11:28:08.666 [debug] Evaluating bend block with value: 10
11:28:08.666 [debug] Block returned: %{variant: :leaf}
11:28:08.666 [debug] Fun returned result: %{variant: :leaf}
11:28:08.666 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{variant: :leaf}
11:28:08.666 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.666 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.666 [debug] Executing bend with initial: 8
11:28:08.667 [debug] Executing fun with value: 8
11:28:08.667 [debug] Evaluating bend block with value: 8
11:28:08.667 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.667 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.667 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.667 [debug] Executing bend with initial: 9
11:28:08.667 [debug] Executing fun with value: 9
11:28:08.667 [debug] Evaluating bend block with value: 9
11:28:08.667 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.667 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.667 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.667 [debug] Executing bend with initial: 10
11:28:08.667 [debug] Executing fun with value: 10
11:28:08.667 [debug] Evaluating bend block with value: 10
11:28:08.667 [debug] Block returned: %{variant: :leaf}
11:28:08.667 [debug] Fun returned result: %{variant: :leaf}
11:28:08.667 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.667 [debug] do_bend final result: %{variant: :leaf}
11:28:08.667 [debug] Executing bend with initial: 10
11:28:08.667 [debug] Executing fun with value: 10
11:28:08.667 [debug] Evaluating bend block with value: 10
11:28:08.667 [debug] Block returned: %{variant: :leaf}
11:28:08.667 [debug] Fun returned result: %{variant: :leaf}
11:28:08.667 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.667 [debug] do_bend final result: %{variant: :leaf}
11:28:08.667 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.667 [debug] Executing bend with initial: 9
11:28:08.667 [debug] Executing fun with value: 9
11:28:08.667 [debug] Evaluating bend block with value: 9
11:28:08.667 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.667 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.667 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.667 [debug] Executing bend with initial: 10
11:28:08.667 [debug] Executing fun with value: 10
11:28:08.667 [debug] Evaluating bend block with value: 10
11:28:08.667 [debug] Block returned: %{variant: :leaf}
11:28:08.667 [debug] Fun returned result: %{variant: :leaf}
11:28:08.667 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.667 [debug] do_bend final result: %{variant: :leaf}
11:28:08.667 [debug] Executing bend with initial: 10
11:28:08.667 [debug] Executing fun with value: 10
11:28:08.667 [debug] Evaluating bend block with value: 10
11:28:08.667 [debug] Block returned: %{variant: :leaf}
11:28:08.667 [debug] Fun returned result: %{variant: :leaf}
11:28:08.667 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.667 [debug] do_bend final result: %{variant: :leaf}
11:28:08.667 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.667 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.667 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.667 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.667 [debug] Executing bend with initial: 6
11:28:08.667 [debug] Executing fun with value: 6
11:28:08.667 [debug] Evaluating bend block with value: 6
11:28:08.667 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.667 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.667 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.667 [debug] Executing bend with initial: 7
11:28:08.667 [debug] Executing fun with value: 7
11:28:08.667 [debug] Evaluating bend block with value: 7
11:28:08.667 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.667 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.667 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.667 [debug] Executing bend with initial: 8
11:28:08.667 [debug] Executing fun with value: 8
11:28:08.667 [debug] Evaluating bend block with value: 8
11:28:08.667 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.667 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.667 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 9
11:28:08.668 [debug] Executing fun with value: 9
11:28:08.668 [debug] Evaluating bend block with value: 9
11:28:08.668 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 10
11:28:08.668 [debug] Executing fun with value: 10
11:28:08.668 [debug] Evaluating bend block with value: 10
11:28:08.668 [debug] Block returned: %{variant: :leaf}
11:28:08.668 [debug] Fun returned result: %{variant: :leaf}
11:28:08.668 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{variant: :leaf}
11:28:08.668 [debug] Executing bend with initial: 10
11:28:08.668 [debug] Executing fun with value: 10
11:28:08.668 [debug] Evaluating bend block with value: 10
11:28:08.668 [debug] Block returned: %{variant: :leaf}
11:28:08.668 [debug] Fun returned result: %{variant: :leaf}
11:28:08.668 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 9
11:28:08.668 [debug] Executing fun with value: 9
11:28:08.668 [debug] Evaluating bend block with value: 9
11:28:08.668 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 10
11:28:08.668 [debug] Executing fun with value: 10
11:28:08.668 [debug] Evaluating bend block with value: 10
11:28:08.668 [debug] Block returned: %{variant: :leaf}
11:28:08.668 [debug] Fun returned result: %{variant: :leaf}
11:28:08.668 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{variant: :leaf}
11:28:08.668 [debug] Executing bend with initial: 10
11:28:08.668 [debug] Executing fun with value: 10
11:28:08.668 [debug] Evaluating bend block with value: 10
11:28:08.668 [debug] Block returned: %{variant: :leaf}
11:28:08.668 [debug] Fun returned result: %{variant: :leaf}
11:28:08.668 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.668 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 8
11:28:08.668 [debug] Executing fun with value: 8
11:28:08.668 [debug] Evaluating bend block with value: 8
11:28:08.668 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.668 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.668 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 9
11:28:08.668 [debug] Executing fun with value: 9
11:28:08.668 [debug] Evaluating bend block with value: 9
11:28:08.668 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 10
11:28:08.668 [debug] Executing fun with value: 10
11:28:08.668 [debug] Evaluating bend block with value: 10
11:28:08.668 [debug] Block returned: %{variant: :leaf}
11:28:08.668 [debug] Fun returned result: %{variant: :leaf}
11:28:08.668 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{variant: :leaf}
11:28:08.668 [debug] Executing bend with initial: 10
11:28:08.668 [debug] Executing fun with value: 10
11:28:08.668 [debug] Evaluating bend block with value: 10
11:28:08.668 [debug] Block returned: %{variant: :leaf}
11:28:08.668 [debug] Fun returned result: %{variant: :leaf}
11:28:08.668 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{variant: :leaf}
11:28:08.668 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 9
11:28:08.668 [debug] Executing fun with value: 9
11:28:08.668 [debug] Evaluating bend block with value: 9
11:28:08.668 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.668 [debug] Executing bend with initial: 10
11:28:08.668 [debug] Executing fun with value: 10
11:28:08.668 [debug] Evaluating bend block with value: 10
11:28:08.668 [debug] Block returned: %{variant: :leaf}
11:28:08.669 [debug] Fun returned result: %{variant: :leaf}
11:28:08.669 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{variant: :leaf}
11:28:08.669 [debug] Executing bend with initial: 10
11:28:08.669 [debug] Executing fun with value: 10
11:28:08.669 [debug] Evaluating bend block with value: 10
11:28:08.669 [debug] Block returned: %{variant: :leaf}
11:28:08.669 [debug] Fun returned result: %{variant: :leaf}
11:28:08.669 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.669 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.669 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 7
11:28:08.669 [debug] Executing fun with value: 7
11:28:08.669 [debug] Evaluating bend block with value: 7
11:28:08.669 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.669 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.669 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 8
11:28:08.669 [debug] Executing fun with value: 8
11:28:08.669 [debug] Evaluating bend block with value: 8
11:28:08.669 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.669 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.669 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 9
11:28:08.669 [debug] Executing fun with value: 9
11:28:08.669 [debug] Evaluating bend block with value: 9
11:28:08.669 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 10
11:28:08.669 [debug] Executing fun with value: 10
11:28:08.669 [debug] Evaluating bend block with value: 10
11:28:08.669 [debug] Block returned: %{variant: :leaf}
11:28:08.669 [debug] Fun returned result: %{variant: :leaf}
11:28:08.669 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{variant: :leaf}
11:28:08.669 [debug] Executing bend with initial: 10
11:28:08.669 [debug] Executing fun with value: 10
11:28:08.669 [debug] Evaluating bend block with value: 10
11:28:08.669 [debug] Block returned: %{variant: :leaf}
11:28:08.669 [debug] Fun returned result: %{variant: :leaf}
11:28:08.669 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 9
11:28:08.669 [debug] Executing fun with value: 9
11:28:08.669 [debug] Evaluating bend block with value: 9
11:28:08.669 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 10
11:28:08.669 [debug] Executing fun with value: 10
11:28:08.669 [debug] Evaluating bend block with value: 10
11:28:08.669 [debug] Block returned: %{variant: :leaf}
11:28:08.669 [debug] Fun returned result: %{variant: :leaf}
11:28:08.669 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{variant: :leaf}
11:28:08.669 [debug] Executing bend with initial: 10
11:28:08.669 [debug] Executing fun with value: 10
11:28:08.669 [debug] Evaluating bend block with value: 10
11:28:08.669 [debug] Block returned: %{variant: :leaf}
11:28:08.669 [debug] Fun returned result: %{variant: :leaf}
11:28:08.669 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{variant: :leaf}
11:28:08.669 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.669 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 8
11:28:08.669 [debug] Executing fun with value: 8
11:28:08.669 [debug] Evaluating bend block with value: 8
11:28:08.669 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.669 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.669 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 9
11:28:08.669 [debug] Executing fun with value: 9
11:28:08.669 [debug] Evaluating bend block with value: 9
11:28:08.669 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.669 [debug] Executing bend with initial: 10
11:28:08.669 [debug] Executing fun with value: 10
11:28:08.669 [debug] Evaluating bend block with value: 10
11:28:08.669 [debug] Block returned: %{variant: :leaf}
11:28:08.669 [debug] Fun returned result: %{variant: :leaf}
11:28:08.669 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.670 [debug] do_bend final result: %{variant: :leaf}
11:28:08.670 [debug] Executing bend with initial: 10
11:28:08.670 [debug] Executing fun with value: 10
11:28:08.670 [debug] Evaluating bend block with value: 10
11:28:08.670 [debug] Block returned: %{variant: :leaf}
11:28:08.670 [debug] Fun returned result: %{variant: :leaf}
11:28:08.670 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.670 [debug] do_bend final result: %{variant: :leaf}
11:28:08.670 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.670 [debug] Executing bend with initial: 9
11:28:08.670 [debug] Executing fun with value: 9
11:28:08.670 [debug] Evaluating bend block with value: 9
11:28:08.670 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.670 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.670 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.670 [debug] Executing bend with initial: 10
11:28:08.670 [debug] Executing fun with value: 10
11:28:08.670 [debug] Evaluating bend block with value: 10
11:28:08.670 [debug] Block returned: %{variant: :leaf}
11:28:08.670 [debug] Fun returned result: %{variant: :leaf}
11:28:08.670 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.670 [debug] do_bend final result: %{variant: :leaf}
11:28:08.670 [debug] Executing bend with initial: 10
11:28:08.670 [debug] Executing fun with value: 10
11:28:08.670 [debug] Evaluating bend block with value: 10
11:28:08.670 [debug] Block returned: %{variant: :leaf}
11:28:08.670 [debug] Fun returned result: %{variant: :leaf}
11:28:08.670 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.670 [debug] do_bend final result: %{variant: :leaf}
11:28:08.670 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.670 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.670 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.670 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.670 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.670 [debug] Executing bend with initial: 5
11:28:08.670 [debug] Executing fun with value: 5
11:28:08.670 [debug] Evaluating bend block with value: 5
11:28:08.670 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.670 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.670 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.670 [debug] Executing bend with initial: 6
11:28:08.670 [debug] Executing fun with value: 6
11:28:08.670 [debug] Evaluating bend block with value: 6
11:28:08.670 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.670 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.670 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.670 [debug] Executing bend with initial: 7
11:28:08.670 [debug] Executing fun with value: 7
11:28:08.670 [debug] Evaluating bend block with value: 7
11:28:08.670 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.670 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.670 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.670 [debug] Executing bend with initial: 8
11:28:08.671 [debug] Executing fun with value: 8
11:28:08.671 [debug] Evaluating bend block with value: 8
11:28:08.671 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.671 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.671 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 9
11:28:08.671 [debug] Executing fun with value: 9
11:28:08.671 [debug] Evaluating bend block with value: 9
11:28:08.671 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 10
11:28:08.671 [debug] Executing fun with value: 10
11:28:08.671 [debug] Evaluating bend block with value: 10
11:28:08.671 [debug] Block returned: %{variant: :leaf}
11:28:08.671 [debug] Fun returned result: %{variant: :leaf}
11:28:08.671 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{variant: :leaf}
11:28:08.671 [debug] Executing bend with initial: 10
11:28:08.671 [debug] Executing fun with value: 10
11:28:08.671 [debug] Evaluating bend block with value: 10
11:28:08.671 [debug] Block returned: %{variant: :leaf}
11:28:08.671 [debug] Fun returned result: %{variant: :leaf}
11:28:08.671 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 9
11:28:08.671 [debug] Executing fun with value: 9
11:28:08.671 [debug] Evaluating bend block with value: 9
11:28:08.671 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 10
11:28:08.671 [debug] Executing fun with value: 10
11:28:08.671 [debug] Evaluating bend block with value: 10
11:28:08.671 [debug] Block returned: %{variant: :leaf}
11:28:08.671 [debug] Fun returned result: %{variant: :leaf}
11:28:08.671 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{variant: :leaf}
11:28:08.671 [debug] Executing bend with initial: 10
11:28:08.671 [debug] Executing fun with value: 10
11:28:08.671 [debug] Evaluating bend block with value: 10
11:28:08.671 [debug] Block returned: %{variant: :leaf}
11:28:08.671 [debug] Fun returned result: %{variant: :leaf}
11:28:08.671 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.671 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 8
11:28:08.671 [debug] Executing fun with value: 8
11:28:08.671 [debug] Evaluating bend block with value: 8
11:28:08.671 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.671 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.671 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 9
11:28:08.671 [debug] Executing fun with value: 9
11:28:08.671 [debug] Evaluating bend block with value: 9
11:28:08.671 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 10
11:28:08.671 [debug] Executing fun with value: 10
11:28:08.671 [debug] Evaluating bend block with value: 10
11:28:08.671 [debug] Block returned: %{variant: :leaf}
11:28:08.671 [debug] Fun returned result: %{variant: :leaf}
11:28:08.671 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{variant: :leaf}
11:28:08.671 [debug] Executing bend with initial: 10
11:28:08.671 [debug] Executing fun with value: 10
11:28:08.671 [debug] Evaluating bend block with value: 10
11:28:08.671 [debug] Block returned: %{variant: :leaf}
11:28:08.671 [debug] Fun returned result: %{variant: :leaf}
11:28:08.671 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{variant: :leaf}
11:28:08.671 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 9
11:28:08.671 [debug] Executing fun with value: 9
11:28:08.671 [debug] Evaluating bend block with value: 9
11:28:08.671 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.671 [debug] Executing bend with initial: 10
11:28:08.671 [debug] Executing fun with value: 10
11:28:08.671 [debug] Evaluating bend block with value: 10
11:28:08.671 [debug] Block returned: %{variant: :leaf}
11:28:08.672 [debug] Fun returned result: %{variant: :leaf}
11:28:08.672 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.672 [debug] do_bend final result: %{variant: :leaf}
11:28:08.672 [debug] Executing bend with initial: 10
11:28:08.672 [debug] Executing fun with value: 10
11:28:08.672 [debug] Evaluating bend block with value: 10
11:28:08.672 [debug] Block returned: %{variant: :leaf}
11:28:08.672 [debug] Fun returned result: %{variant: :leaf}
11:28:08.672 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.672 [debug] do_bend final result: %{variant: :leaf}
11:28:08.672 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.672 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.672 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.672 [debug] Executing bend with initial: 7
11:28:08.672 [debug] Executing fun with value: 7
11:28:08.672 [debug] Evaluating bend block with value: 7
11:28:08.672 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.672 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.672 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.672 [debug] Executing bend with initial: 8
11:28:08.672 [debug] Executing fun with value: 8
11:28:08.672 [debug] Evaluating bend block with value: 8
11:28:08.673 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.673 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.673 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.673 [debug] Executing bend with initial: 9
11:28:08.673 [debug] Executing fun with value: 9
11:28:08.673 [debug] Evaluating bend block with value: 9
11:28:08.673 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.673 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.673 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.673 [debug] Executing bend with initial: 10
11:28:08.673 [debug] Executing fun with value: 10
11:28:08.673 [debug] Evaluating bend block with value: 10
11:28:08.673 [debug] Block returned: %{variant: :leaf}
11:28:08.673 [debug] Fun returned result: %{variant: :leaf}
11:28:08.673 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.673 [debug] do_bend final result: %{variant: :leaf}
11:28:08.673 [debug] Executing bend with initial: 10
11:28:08.673 [debug] Executing fun with value: 10
11:28:08.673 [debug] Evaluating bend block with value: 10
11:28:08.673 [debug] Block returned: %{variant: :leaf}
11:28:08.673 [debug] Fun returned result: %{variant: :leaf}
11:28:08.673 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.673 [debug] do_bend final result: %{variant: :leaf}
11:28:08.673 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.673 [debug] Executing bend with initial: 9
11:28:08.673 [debug] Executing fun with value: 9
11:28:08.673 [debug] Evaluating bend block with value: 9
11:28:08.673 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.673 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.673 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.673 [debug] Executing bend with initial: 10
11:28:08.673 [debug] Executing fun with value: 10
11:28:08.673 [debug] Evaluating bend block with value: 10
11:28:08.673 [debug] Block returned: %{variant: :leaf}
11:28:08.673 [debug] Fun returned result: %{variant: :leaf}
11:28:08.673 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.673 [debug] do_bend final result: %{variant: :leaf}
11:28:08.673 [debug] Executing bend with initial: 10
11:28:08.673 [debug] Executing fun with value: 10
11:28:08.673 [debug] Evaluating bend block with value: 10
11:28:08.673 [debug] Block returned: %{variant: :leaf}
11:28:08.673 [debug] Fun returned result: %{variant: :leaf}
11:28:08.673 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.673 [debug] do_bend final result: %{variant: :leaf}
11:28:08.673 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.673 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.673 [debug] Executing bend with initial: 8
11:28:08.673 [debug] Executing fun with value: 8
11:28:08.673 [debug] Evaluating bend block with value: 8
11:28:08.673 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.673 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.674 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 9
11:28:08.674 [debug] Executing fun with value: 9
11:28:08.674 [debug] Evaluating bend block with value: 9
11:28:08.674 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 10
11:28:08.674 [debug] Executing fun with value: 10
11:28:08.674 [debug] Evaluating bend block with value: 10
11:28:08.674 [debug] Block returned: %{variant: :leaf}
11:28:08.674 [debug] Fun returned result: %{variant: :leaf}
11:28:08.674 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{variant: :leaf}
11:28:08.674 [debug] Executing bend with initial: 10
11:28:08.674 [debug] Executing fun with value: 10
11:28:08.674 [debug] Evaluating bend block with value: 10
11:28:08.674 [debug] Block returned: %{variant: :leaf}
11:28:08.674 [debug] Fun returned result: %{variant: :leaf}
11:28:08.674 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 9
11:28:08.674 [debug] Executing fun with value: 9
11:28:08.674 [debug] Evaluating bend block with value: 9
11:28:08.674 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 10
11:28:08.674 [debug] Executing fun with value: 10
11:28:08.674 [debug] Evaluating bend block with value: 10
11:28:08.674 [debug] Block returned: %{variant: :leaf}
11:28:08.674 [debug] Fun returned result: %{variant: :leaf}
11:28:08.674 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{variant: :leaf}
11:28:08.674 [debug] Executing bend with initial: 10
11:28:08.674 [debug] Executing fun with value: 10
11:28:08.674 [debug] Evaluating bend block with value: 10
11:28:08.674 [debug] Block returned: %{variant: :leaf}
11:28:08.674 [debug] Fun returned result: %{variant: :leaf}
11:28:08.674 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.674 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.674 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.674 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 6
11:28:08.674 [debug] Executing fun with value: 6
11:28:08.674 [debug] Evaluating bend block with value: 6
11:28:08.674 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.674 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.674 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 7
11:28:08.674 [debug] Executing fun with value: 7
11:28:08.674 [debug] Evaluating bend block with value: 7
11:28:08.674 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.674 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.674 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 8
11:28:08.674 [debug] Executing fun with value: 8
11:28:08.674 [debug] Evaluating bend block with value: 8
11:28:08.674 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.674 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.674 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 9
11:28:08.674 [debug] Executing fun with value: 9
11:28:08.674 [debug] Evaluating bend block with value: 9
11:28:08.674 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.674 [debug] Executing bend with initial: 10
11:28:08.674 [debug] Executing fun with value: 10
11:28:08.674 [debug] Evaluating bend block with value: 10
11:28:08.674 [debug] Block returned: %{variant: :leaf}
11:28:08.674 [debug] Fun returned result: %{variant: :leaf}
11:28:08.674 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{variant: :leaf}
11:28:08.674 [debug] Executing bend with initial: 10
11:28:08.674 [debug] Executing fun with value: 10
11:28:08.674 [debug] Evaluating bend block with value: 10
11:28:08.674 [debug] Block returned: %{variant: :leaf}
11:28:08.674 [debug] Fun returned result: %{variant: :leaf}
11:28:08.674 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{variant: :leaf}
11:28:08.674 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.675 [debug] Executing bend with initial: 9
11:28:08.675 [debug] Executing fun with value: 9
11:28:08.675 [debug] Evaluating bend block with value: 9
11:28:08.675 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.675 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.675 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.675 [debug] Executing bend with initial: 10
11:28:08.675 [debug] Executing fun with value: 10
11:28:08.675 [debug] Evaluating bend block with value: 10
11:28:08.675 [debug] Block returned: %{variant: :leaf}
11:28:08.675 [debug] Fun returned result: %{variant: :leaf}
11:28:08.675 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.675 [debug] do_bend final result: %{variant: :leaf}
11:28:08.675 [debug] Executing bend with initial: 10
11:28:08.675 [debug] Executing fun with value: 10
11:28:08.675 [debug] Evaluating bend block with value: 10
11:28:08.675 [debug] Block returned: %{variant: :leaf}
11:28:08.675 [debug] Fun returned result: %{variant: :leaf}
11:28:08.675 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.675 [debug] do_bend final result: %{variant: :leaf}
11:28:08.675 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.675 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.675 [debug] Executing bend with initial: 8
11:28:08.675 [debug] Executing fun with value: 8
11:28:08.675 [debug] Evaluating bend block with value: 8
11:28:08.675 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.675 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.675 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.675 [debug] Executing bend with initial: 9
11:28:08.675 [debug] Executing fun with value: 9
11:28:08.675 [debug] Evaluating bend block with value: 9
11:28:08.675 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.675 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.675 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.675 [debug] Executing bend with initial: 10
11:28:08.675 [debug] Executing fun with value: 10
11:28:08.675 [debug] Evaluating bend block with value: 10
11:28:08.675 [debug] Block returned: %{variant: :leaf}
11:28:08.675 [debug] Fun returned result: %{variant: :leaf}
11:28:08.675 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.675 [debug] do_bend final result: %{variant: :leaf}
11:28:08.676 [debug] Executing bend with initial: 10
11:28:08.676 [debug] Executing fun with value: 10
11:28:08.676 [debug] Evaluating bend block with value: 10
11:28:08.676 [debug] Block returned: %{variant: :leaf}
11:28:08.676 [debug] Fun returned result: %{variant: :leaf}
11:28:08.676 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.676 [debug] do_bend final result: %{variant: :leaf}
11:28:08.676 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.676 [debug] Executing bend with initial: 9
11:28:08.676 [debug] Executing fun with value: 9
11:28:08.677 [debug] Evaluating bend block with value: 9
11:28:08.677 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 10
11:28:08.677 [debug] Executing fun with value: 10
11:28:08.677 [debug] Evaluating bend block with value: 10
11:28:08.677 [debug] Block returned: %{variant: :leaf}
11:28:08.677 [debug] Fun returned result: %{variant: :leaf}
11:28:08.677 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{variant: :leaf}
11:28:08.677 [debug] Executing bend with initial: 10
11:28:08.677 [debug] Executing fun with value: 10
11:28:08.677 [debug] Evaluating bend block with value: 10
11:28:08.677 [debug] Block returned: %{variant: :leaf}
11:28:08.677 [debug] Fun returned result: %{variant: :leaf}
11:28:08.677 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.677 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.677 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 7
11:28:08.677 [debug] Executing fun with value: 7
11:28:08.677 [debug] Evaluating bend block with value: 7
11:28:08.677 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.677 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.677 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 8
11:28:08.677 [debug] Executing fun with value: 8
11:28:08.677 [debug] Evaluating bend block with value: 8
11:28:08.677 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.677 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.677 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 9
11:28:08.677 [debug] Executing fun with value: 9
11:28:08.677 [debug] Evaluating bend block with value: 9
11:28:08.677 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 10
11:28:08.677 [debug] Executing fun with value: 10
11:28:08.677 [debug] Evaluating bend block with value: 10
11:28:08.677 [debug] Block returned: %{variant: :leaf}
11:28:08.677 [debug] Fun returned result: %{variant: :leaf}
11:28:08.677 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{variant: :leaf}
11:28:08.677 [debug] Executing bend with initial: 10
11:28:08.677 [debug] Executing fun with value: 10
11:28:08.677 [debug] Evaluating bend block with value: 10
11:28:08.677 [debug] Block returned: %{variant: :leaf}
11:28:08.677 [debug] Fun returned result: %{variant: :leaf}
11:28:08.677 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 9
11:28:08.677 [debug] Executing fun with value: 9
11:28:08.677 [debug] Evaluating bend block with value: 9
11:28:08.677 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 10
11:28:08.677 [debug] Executing fun with value: 10
11:28:08.677 [debug] Evaluating bend block with value: 10
11:28:08.677 [debug] Block returned: %{variant: :leaf}
11:28:08.677 [debug] Fun returned result: %{variant: :leaf}
11:28:08.677 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{variant: :leaf}
11:28:08.677 [debug] Executing bend with initial: 10
11:28:08.677 [debug] Executing fun with value: 10
11:28:08.677 [debug] Evaluating bend block with value: 10
11:28:08.677 [debug] Block returned: %{variant: :leaf}
11:28:08.677 [debug] Fun returned result: %{variant: :leaf}
11:28:08.677 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{variant: :leaf}
11:28:08.677 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.677 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.677 [debug] Executing bend with initial: 8
11:28:08.677 [debug] Executing fun with value: 8
11:28:08.678 [debug] Evaluating bend block with value: 8
11:28:08.678 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.678 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.678 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.678 [debug] Executing bend with initial: 9
11:28:08.678 [debug] Executing fun with value: 9
11:28:08.678 [debug] Evaluating bend block with value: 9
11:28:08.678 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.678 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.678 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.678 [debug] Executing bend with initial: 10
11:28:08.678 [debug] Executing fun with value: 10
11:28:08.678 [debug] Evaluating bend block with value: 10
11:28:08.678 [debug] Block returned: %{variant: :leaf}
11:28:08.678 [debug] Fun returned result: %{variant: :leaf}
11:28:08.678 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.678 [debug] do_bend final result: %{variant: :leaf}
11:28:08.678 [debug] Executing bend with initial: 10
11:28:08.678 [debug] Executing fun with value: 10
11:28:08.678 [debug] Evaluating bend block with value: 10
11:28:08.678 [debug] Block returned: %{variant: :leaf}
11:28:08.678 [debug] Fun returned result: %{variant: :leaf}
11:28:08.678 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.678 [debug] do_bend final result: %{variant: :leaf}
11:28:08.678 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.678 [debug] Executing bend with initial: 9
11:28:08.678 [debug] Executing fun with value: 9
11:28:08.678 [debug] Evaluating bend block with value: 9
11:28:08.678 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.678 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.678 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.678 [debug] Executing bend with initial: 10
11:28:08.678 [debug] Executing fun with value: 10
11:28:08.678 [debug] Evaluating bend block with value: 10
11:28:08.678 [debug] Block returned: %{variant: :leaf}
11:28:08.678 [debug] Fun returned result: %{variant: :leaf}
11:28:08.678 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.678 [debug] do_bend final result: %{variant: :leaf}
11:28:08.678 [debug] Executing bend with initial: 10
11:28:08.678 [debug] Executing fun with value: 10
11:28:08.678 [debug] Evaluating bend block with value: 10
11:28:08.678 [debug] Block returned: %{variant: :leaf}
11:28:08.678 [debug] Fun returned result: %{variant: :leaf}
11:28:08.678 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.678 [debug] do_bend final result: %{variant: :leaf}
11:28:08.678 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.678 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.678 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.678 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.678 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.679 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.680 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.682 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
11:28:08.682 [debug] Executing bend with initial: 2
11:28:08.682 [debug] Executing fun with value: 2
11:28:08.682 [debug] Evaluating bend block with value: 2
11:28:08.682 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.682 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.682 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.682 [debug] Executing bend with initial: 3
11:28:08.682 [debug] Executing fun with value: 3
11:28:08.683 [debug] Evaluating bend block with value: 3
11:28:08.683 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 4
11:28:08.683 [debug] Executing fun with value: 4
11:28:08.683 [debug] Evaluating bend block with value: 4
11:28:08.683 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 5
11:28:08.683 [debug] Executing fun with value: 5
11:28:08.683 [debug] Evaluating bend block with value: 5
11:28:08.683 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 6
11:28:08.683 [debug] Executing fun with value: 6
11:28:08.683 [debug] Evaluating bend block with value: 6
11:28:08.683 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 7
11:28:08.683 [debug] Executing fun with value: 7
11:28:08.683 [debug] Evaluating bend block with value: 7
11:28:08.683 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 8
11:28:08.683 [debug] Executing fun with value: 8
11:28:08.683 [debug] Evaluating bend block with value: 8
11:28:08.683 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 9
11:28:08.683 [debug] Executing fun with value: 9
11:28:08.683 [debug] Evaluating bend block with value: 9
11:28:08.683 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 10
11:28:08.683 [debug] Executing fun with value: 10
11:28:08.683 [debug] Evaluating bend block with value: 10
11:28:08.683 [debug] Block returned: %{variant: :leaf}
11:28:08.683 [debug] Fun returned result: %{variant: :leaf}
11:28:08.683 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.683 [debug] do_bend final result: %{variant: :leaf}
11:28:08.683 [debug] Executing bend with initial: 10
11:28:08.683 [debug] Executing fun with value: 10
11:28:08.683 [debug] Evaluating bend block with value: 10
11:28:08.683 [debug] Block returned: %{variant: :leaf}
11:28:08.683 [debug] Fun returned result: %{variant: :leaf}
11:28:08.683 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.683 [debug] do_bend final result: %{variant: :leaf}
11:28:08.683 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 9
11:28:08.683 [debug] Executing fun with value: 9
11:28:08.683 [debug] Evaluating bend block with value: 9
11:28:08.683 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.683 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.683 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 10
11:28:08.683 [debug] Executing fun with value: 10
11:28:08.683 [debug] Evaluating bend block with value: 10
11:28:08.683 [debug] Block returned: %{variant: :leaf}
11:28:08.683 [debug] Fun returned result: %{variant: :leaf}
11:28:08.683 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.683 [debug] do_bend final result: %{variant: :leaf}
11:28:08.683 [debug] Executing bend with initial: 10
11:28:08.683 [debug] Executing fun with value: 10
11:28:08.683 [debug] Evaluating bend block with value: 10
11:28:08.683 [debug] Block returned: %{variant: :leaf}
11:28:08.683 [debug] Fun returned result: %{variant: :leaf}
11:28:08.683 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.683 [debug] do_bend final result: %{variant: :leaf}
11:28:08.683 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.683 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.683 [debug] Executing bend with initial: 8
11:28:08.683 [debug] Executing fun with value: 8
11:28:08.683 [debug] Evaluating bend block with value: 8
11:28:08.683 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.684 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.684 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.684 [debug] Executing bend with initial: 9
11:28:08.684 [debug] Executing fun with value: 9
11:28:08.684 [debug] Evaluating bend block with value: 9
11:28:08.684 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.684 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.684 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.684 [debug] Executing bend with initial: 10
11:28:08.684 [debug] Executing fun with value: 10
11:28:08.684 [debug] Evaluating bend block with value: 10
11:28:08.684 [debug] Block returned: %{variant: :leaf}
11:28:08.684 [debug] Fun returned result: %{variant: :leaf}
11:28:08.684 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.684 [debug] do_bend final result: %{variant: :leaf}
11:28:08.684 [debug] Executing bend with initial: 10
11:28:08.684 [debug] Executing fun with value: 10
11:28:08.684 [debug] Evaluating bend block with value: 10
11:28:08.684 [debug] Block returned: %{variant: :leaf}
11:28:08.684 [debug] Fun returned result: %{variant: :leaf}
11:28:08.684 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.684 [debug] do_bend final result: %{variant: :leaf}
11:28:08.684 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.684 [debug] Executing bend with initial: 9
11:28:08.685 [debug] Executing fun with value: 9
11:28:08.685 [debug] Evaluating bend block with value: 9
11:28:08.685 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 10
11:28:08.685 [debug] Executing fun with value: 10
11:28:08.685 [debug] Evaluating bend block with value: 10
11:28:08.685 [debug] Block returned: %{variant: :leaf}
11:28:08.685 [debug] Fun returned result: %{variant: :leaf}
11:28:08.685 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{variant: :leaf}
11:28:08.685 [debug] Executing bend with initial: 10
11:28:08.685 [debug] Executing fun with value: 10
11:28:08.685 [debug] Evaluating bend block with value: 10
11:28:08.685 [debug] Block returned: %{variant: :leaf}
11:28:08.685 [debug] Fun returned result: %{variant: :leaf}
11:28:08.685 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.685 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.685 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 7
11:28:08.685 [debug] Executing fun with value: 7
11:28:08.685 [debug] Evaluating bend block with value: 7
11:28:08.685 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.685 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.685 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 8
11:28:08.685 [debug] Executing fun with value: 8
11:28:08.685 [debug] Evaluating bend block with value: 8
11:28:08.685 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.685 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.685 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 9
11:28:08.685 [debug] Executing fun with value: 9
11:28:08.685 [debug] Evaluating bend block with value: 9
11:28:08.685 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 10
11:28:08.685 [debug] Executing fun with value: 10
11:28:08.685 [debug] Evaluating bend block with value: 10
11:28:08.685 [debug] Block returned: %{variant: :leaf}
11:28:08.685 [debug] Fun returned result: %{variant: :leaf}
11:28:08.685 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{variant: :leaf}
11:28:08.685 [debug] Executing bend with initial: 10
11:28:08.685 [debug] Executing fun with value: 10
11:28:08.685 [debug] Evaluating bend block with value: 10
11:28:08.685 [debug] Block returned: %{variant: :leaf}
11:28:08.685 [debug] Fun returned result: %{variant: :leaf}
11:28:08.685 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 9
11:28:08.685 [debug] Executing fun with value: 9
11:28:08.685 [debug] Evaluating bend block with value: 9
11:28:08.685 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 10
11:28:08.685 [debug] Executing fun with value: 10
11:28:08.685 [debug] Evaluating bend block with value: 10
11:28:08.685 [debug] Block returned: %{variant: :leaf}
11:28:08.685 [debug] Fun returned result: %{variant: :leaf}
11:28:08.685 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{variant: :leaf}
11:28:08.685 [debug] Executing bend with initial: 10
11:28:08.685 [debug] Executing fun with value: 10
11:28:08.685 [debug] Evaluating bend block with value: 10
11:28:08.685 [debug] Block returned: %{variant: :leaf}
11:28:08.685 [debug] Fun returned result: %{variant: :leaf}
11:28:08.685 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{variant: :leaf}
11:28:08.685 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.685 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.685 [debug] Executing bend with initial: 8
11:28:08.685 [debug] Executing fun with value: 8
11:28:08.685 [debug] Evaluating bend block with value: 8
11:28:08.685 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.685 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.686 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.686 [debug] Executing bend with initial: 9
11:28:08.686 [debug] Executing fun with value: 9
11:28:08.686 [debug] Evaluating bend block with value: 9
11:28:08.686 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.686 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.686 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.686 [debug] Executing bend with initial: 10
11:28:08.686 [debug] Executing fun with value: 10
11:28:08.686 [debug] Evaluating bend block with value: 10
11:28:08.686 [debug] Block returned: %{variant: :leaf}
11:28:08.686 [debug] Fun returned result: %{variant: :leaf}
11:28:08.686 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.686 [debug] do_bend final result: %{variant: :leaf}
11:28:08.686 [debug] Executing bend with initial: 10
11:28:08.686 [debug] Executing fun with value: 10
11:28:08.686 [debug] Evaluating bend block with value: 10
11:28:08.686 [debug] Block returned: %{variant: :leaf}
11:28:08.686 [debug] Fun returned result: %{variant: :leaf}
11:28:08.686 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.686 [debug] do_bend final result: %{variant: :leaf}
11:28:08.686 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.686 [debug] Executing bend with initial: 9
11:28:08.686 [debug] Executing fun with value: 9
11:28:08.686 [debug] Evaluating bend block with value: 9
11:28:08.687 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 10
11:28:08.687 [debug] Executing fun with value: 10
11:28:08.687 [debug] Evaluating bend block with value: 10
11:28:08.687 [debug] Block returned: %{variant: :leaf}
11:28:08.687 [debug] Fun returned result: %{variant: :leaf}
11:28:08.687 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.687 [debug] do_bend final result: %{variant: :leaf}
11:28:08.687 [debug] Executing bend with initial: 10
11:28:08.687 [debug] Executing fun with value: 10
11:28:08.687 [debug] Evaluating bend block with value: 10
11:28:08.687 [debug] Block returned: %{variant: :leaf}
11:28:08.687 [debug] Fun returned result: %{variant: :leaf}
11:28:08.687 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.687 [debug] do_bend final result: %{variant: :leaf}
11:28:08.687 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.687 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.687 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.687 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 6
11:28:08.687 [debug] Executing fun with value: 6
11:28:08.687 [debug] Evaluating bend block with value: 6
11:28:08.687 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.687 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.687 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 7
11:28:08.687 [debug] Executing fun with value: 7
11:28:08.687 [debug] Evaluating bend block with value: 7
11:28:08.687 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.687 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.687 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 8
11:28:08.687 [debug] Executing fun with value: 8
11:28:08.687 [debug] Evaluating bend block with value: 8
11:28:08.687 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.687 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.687 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 9
11:28:08.687 [debug] Executing fun with value: 9
11:28:08.687 [debug] Evaluating bend block with value: 9
11:28:08.687 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 10
11:28:08.687 [debug] Executing fun with value: 10
11:28:08.687 [debug] Evaluating bend block with value: 10
11:28:08.687 [debug] Block returned: %{variant: :leaf}
11:28:08.687 [debug] Fun returned result: %{variant: :leaf}
11:28:08.687 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.687 [debug] do_bend final result: %{variant: :leaf}
11:28:08.687 [debug] Executing bend with initial: 10
11:28:08.687 [debug] Executing fun with value: 10
11:28:08.687 [debug] Evaluating bend block with value: 10
11:28:08.687 [debug] Block returned: %{variant: :leaf}
11:28:08.687 [debug] Fun returned result: %{variant: :leaf}
11:28:08.687 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.687 [debug] do_bend final result: %{variant: :leaf}
11:28:08.687 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 9
11:28:08.687 [debug] Executing fun with value: 9
11:28:08.687 [debug] Evaluating bend block with value: 9
11:28:08.687 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.687 [debug] Executing bend with initial: 10
11:28:08.687 [debug] Executing fun with value: 10
11:28:08.687 [debug] Evaluating bend block with value: 10
11:28:08.687 [debug] Block returned: %{variant: :leaf}
11:28:08.687 [debug] Fun returned result: %{variant: :leaf}
11:28:08.687 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.687 [debug] do_bend final result: %{variant: :leaf}
11:28:08.687 [debug] Executing bend with initial: 10
11:28:08.688 [debug] Executing fun with value: 10
11:28:08.688 [debug] Evaluating bend block with value: 10
11:28:08.688 [debug] Block returned: %{variant: :leaf}
11:28:08.688 [debug] Fun returned result: %{variant: :leaf}
11:28:08.688 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.688 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 8
11:28:08.688 [debug] Executing fun with value: 8
11:28:08.688 [debug] Evaluating bend block with value: 8
11:28:08.688 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.688 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.688 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 9
11:28:08.688 [debug] Executing fun with value: 9
11:28:08.688 [debug] Evaluating bend block with value: 9
11:28:08.688 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 10
11:28:08.688 [debug] Executing fun with value: 10
11:28:08.688 [debug] Evaluating bend block with value: 10
11:28:08.688 [debug] Block returned: %{variant: :leaf}
11:28:08.688 [debug] Fun returned result: %{variant: :leaf}
11:28:08.688 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{variant: :leaf}
11:28:08.688 [debug] Executing bend with initial: 10
11:28:08.688 [debug] Executing fun with value: 10
11:28:08.688 [debug] Evaluating bend block with value: 10
11:28:08.688 [debug] Block returned: %{variant: :leaf}
11:28:08.688 [debug] Fun returned result: %{variant: :leaf}
11:28:08.688 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 9
11:28:08.688 [debug] Executing fun with value: 9
11:28:08.688 [debug] Evaluating bend block with value: 9
11:28:08.688 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 10
11:28:08.688 [debug] Executing fun with value: 10
11:28:08.688 [debug] Evaluating bend block with value: 10
11:28:08.688 [debug] Block returned: %{variant: :leaf}
11:28:08.688 [debug] Fun returned result: %{variant: :leaf}
11:28:08.688 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{variant: :leaf}
11:28:08.688 [debug] Executing bend with initial: 10
11:28:08.688 [debug] Executing fun with value: 10
11:28:08.688 [debug] Evaluating bend block with value: 10
11:28:08.688 [debug] Block returned: %{variant: :leaf}
11:28:08.688 [debug] Fun returned result: %{variant: :leaf}
11:28:08.688 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{variant: :leaf}
11:28:08.688 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.688 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.688 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 7
11:28:08.688 [debug] Executing fun with value: 7
11:28:08.688 [debug] Evaluating bend block with value: 7
11:28:08.688 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.688 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.688 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 8
11:28:08.688 [debug] Executing fun with value: 8
11:28:08.688 [debug] Evaluating bend block with value: 8
11:28:08.688 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.688 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.688 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 9
11:28:08.688 [debug] Executing fun with value: 9
11:28:08.688 [debug] Evaluating bend block with value: 9
11:28:08.688 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.688 [debug] Executing bend with initial: 10
11:28:08.688 [debug] Executing fun with value: 10
11:28:08.688 [debug] Evaluating bend block with value: 10
11:28:08.688 [debug] Block returned: %{variant: :leaf}
11:28:08.688 [debug] Fun returned result: %{variant: :leaf}
11:28:08.688 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.689 [debug] do_bend final result: %{variant: :leaf}
11:28:08.689 [debug] Executing bend with initial: 10
11:28:08.689 [debug] Executing fun with value: 10
11:28:08.689 [debug] Evaluating bend block with value: 10
11:28:08.689 [debug] Block returned: %{variant: :leaf}
11:28:08.689 [debug] Fun returned result: %{variant: :leaf}
11:28:08.689 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.689 [debug] do_bend final result: %{variant: :leaf}
11:28:08.689 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.689 [debug] Executing bend with initial: 9
11:28:08.689 [debug] Executing fun with value: 9
11:28:08.689 [debug] Evaluating bend block with value: 9
11:28:08.689 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.689 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.689 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.689 [debug] Executing bend with initial: 10
11:28:08.689 [debug] Executing fun with value: 10
11:28:08.689 [debug] Evaluating bend block with value: 10
11:28:08.689 [debug] Block returned: %{variant: :leaf}
11:28:08.689 [debug] Fun returned result: %{variant: :leaf}
11:28:08.689 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.689 [debug] do_bend final result: %{variant: :leaf}
11:28:08.689 [debug] Executing bend with initial: 10
11:28:08.689 [debug] Executing fun with value: 10
11:28:08.689 [debug] Evaluating bend block with value: 10
11:28:08.689 [debug] Block returned: %{variant: :leaf}
11:28:08.689 [debug] Fun returned result: %{variant: :leaf}
11:28:08.689 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.689 [debug] do_bend final result: %{variant: :leaf}
11:28:08.689 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.689 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.689 [debug] Executing bend with initial: 8
11:28:08.689 [debug] Executing fun with value: 8
11:28:08.691 [debug] Evaluating bend block with value: 8
11:28:08.691 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.691 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.691 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.691 [debug] Executing bend with initial: 9
11:28:08.691 [debug] Executing fun with value: 9
11:28:08.691 [debug] Evaluating bend block with value: 9
11:28:08.691 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.691 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.691 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.691 [debug] Executing bend with initial: 10
11:28:08.691 [debug] Executing fun with value: 10
11:28:08.691 [debug] Evaluating bend block with value: 10
11:28:08.691 [debug] Block returned: %{variant: :leaf}
11:28:08.691 [debug] Fun returned result: %{variant: :leaf}
11:28:08.691 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.691 [debug] do_bend final result: %{variant: :leaf}
11:28:08.691 [debug] Executing bend with initial: 10
11:28:08.691 [debug] Executing fun with value: 10
11:28:08.691 [debug] Evaluating bend block with value: 10
11:28:08.691 [debug] Block returned: %{variant: :leaf}
11:28:08.691 [debug] Fun returned result: %{variant: :leaf}
11:28:08.691 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.691 [debug] do_bend final result: %{variant: :leaf}
11:28:08.691 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.691 [debug] Executing bend with initial: 9
11:28:08.691 [debug] Executing fun with value: 9
11:28:08.691 [debug] Evaluating bend block with value: 9
11:28:08.691 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.691 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.691 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.691 [debug] Executing bend with initial: 10
11:28:08.691 [debug] Executing fun with value: 10
11:28:08.691 [debug] Evaluating bend block with value: 10
11:28:08.691 [debug] Block returned: %{variant: :leaf}
11:28:08.691 [debug] Fun returned result: %{variant: :leaf}
11:28:08.691 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.691 [debug] do_bend final result: %{variant: :leaf}
11:28:08.691 [debug] Executing bend with initial: 10
11:28:08.691 [debug] Executing fun with value: 10
11:28:08.691 [debug] Evaluating bend block with value: 10
11:28:08.691 [debug] Block returned: %{variant: :leaf}
11:28:08.691 [debug] Fun returned result: %{variant: :leaf}
11:28:08.691 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.691 [debug] do_bend final result: %{variant: :leaf}
11:28:08.691 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.691 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.691 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.691 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.691 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.691 [debug] Executing bend with initial: 5
11:28:08.691 [debug] Executing fun with value: 5
11:28:08.691 [debug] Evaluating bend block with value: 5
11:28:08.691 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.691 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.691 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.691 [debug] Executing bend with initial: 6
11:28:08.691 [debug] Executing fun with value: 6
11:28:08.691 [debug] Evaluating bend block with value: 6
11:28:08.691 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.691 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.691 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.691 [debug] Executing bend with initial: 7
11:28:08.691 [debug] Executing fun with value: 7
11:28:08.692 [debug] Evaluating bend block with value: 7
11:28:08.692 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.692 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.692 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 8
11:28:08.692 [debug] Executing fun with value: 8
11:28:08.692 [debug] Evaluating bend block with value: 8
11:28:08.692 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.692 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.692 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 9
11:28:08.692 [debug] Executing fun with value: 9
11:28:08.692 [debug] Evaluating bend block with value: 9
11:28:08.692 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 10
11:28:08.692 [debug] Executing fun with value: 10
11:28:08.692 [debug] Evaluating bend block with value: 10
11:28:08.692 [debug] Block returned: %{variant: :leaf}
11:28:08.692 [debug] Fun returned result: %{variant: :leaf}
11:28:08.692 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{variant: :leaf}
11:28:08.692 [debug] Executing bend with initial: 10
11:28:08.692 [debug] Executing fun with value: 10
11:28:08.692 [debug] Evaluating bend block with value: 10
11:28:08.692 [debug] Block returned: %{variant: :leaf}
11:28:08.692 [debug] Fun returned result: %{variant: :leaf}
11:28:08.692 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 9
11:28:08.692 [debug] Executing fun with value: 9
11:28:08.692 [debug] Evaluating bend block with value: 9
11:28:08.692 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 10
11:28:08.692 [debug] Executing fun with value: 10
11:28:08.692 [debug] Evaluating bend block with value: 10
11:28:08.692 [debug] Block returned: %{variant: :leaf}
11:28:08.692 [debug] Fun returned result: %{variant: :leaf}
11:28:08.692 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{variant: :leaf}
11:28:08.692 [debug] Executing bend with initial: 10
11:28:08.692 [debug] Executing fun with value: 10
11:28:08.692 [debug] Evaluating bend block with value: 10
11:28:08.692 [debug] Block returned: %{variant: :leaf}
11:28:08.692 [debug] Fun returned result: %{variant: :leaf}
11:28:08.692 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.692 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 8
11:28:08.692 [debug] Executing fun with value: 8
11:28:08.692 [debug] Evaluating bend block with value: 8
11:28:08.692 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.692 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.692 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 9
11:28:08.692 [debug] Executing fun with value: 9
11:28:08.692 [debug] Evaluating bend block with value: 9
11:28:08.692 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 10
11:28:08.692 [debug] Executing fun with value: 10
11:28:08.692 [debug] Evaluating bend block with value: 10
11:28:08.692 [debug] Block returned: %{variant: :leaf}
11:28:08.692 [debug] Fun returned result: %{variant: :leaf}
11:28:08.692 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{variant: :leaf}
11:28:08.692 [debug] Executing bend with initial: 10
11:28:08.692 [debug] Executing fun with value: 10
11:28:08.692 [debug] Evaluating bend block with value: 10
11:28:08.692 [debug] Block returned: %{variant: :leaf}
11:28:08.692 [debug] Fun returned result: %{variant: :leaf}
11:28:08.692 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{variant: :leaf}
11:28:08.692 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.692 [debug] Executing bend with initial: 9
11:28:08.692 [debug] Executing fun with value: 9
11:28:08.692 [debug] Evaluating bend block with value: 9
11:28:08.693 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Executing bend with initial: 10
11:28:08.693 [debug] Executing fun with value: 10
11:28:08.693 [debug] Evaluating bend block with value: 10
11:28:08.693 [debug] Block returned: %{variant: :leaf}
11:28:08.693 [debug] Fun returned result: %{variant: :leaf}
11:28:08.693 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.693 [debug] do_bend final result: %{variant: :leaf}
11:28:08.693 [debug] Executing bend with initial: 10
11:28:08.693 [debug] Executing fun with value: 10
11:28:08.693 [debug] Evaluating bend block with value: 10
11:28:08.693 [debug] Block returned: %{variant: :leaf}
11:28:08.693 [debug] Fun returned result: %{variant: :leaf}
11:28:08.693 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.693 [debug] do_bend final result: %{variant: :leaf}
11:28:08.693 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.693 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.693 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.693 [debug] Executing bend with initial: 7
11:28:08.693 [debug] Executing fun with value: 7
11:28:08.693 [debug] Evaluating bend block with value: 7
11:28:08.693 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.693 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.693 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.693 [debug] Executing bend with initial: 8
11:28:08.693 [debug] Executing fun with value: 8
11:28:08.693 [debug] Evaluating bend block with value: 8
11:28:08.693 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.693 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.693 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.693 [debug] Executing bend with initial: 9
11:28:08.693 [debug] Executing fun with value: 9
11:28:08.693 [debug] Evaluating bend block with value: 9
11:28:08.693 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Executing bend with initial: 10
11:28:08.693 [debug] Executing fun with value: 10
11:28:08.693 [debug] Evaluating bend block with value: 10
11:28:08.693 [debug] Block returned: %{variant: :leaf}
11:28:08.693 [debug] Fun returned result: %{variant: :leaf}
11:28:08.693 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.693 [debug] do_bend final result: %{variant: :leaf}
11:28:08.693 [debug] Executing bend with initial: 10
11:28:08.693 [debug] Executing fun with value: 10
11:28:08.693 [debug] Evaluating bend block with value: 10
11:28:08.693 [debug] Block returned: %{variant: :leaf}
11:28:08.693 [debug] Fun returned result: %{variant: :leaf}
11:28:08.693 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.693 [debug] do_bend final result: %{variant: :leaf}
11:28:08.693 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.693 [debug] Executing bend with initial: 9
11:28:08.693 [debug] Executing fun with value: 9
11:28:08.693 [debug] Evaluating bend block with value: 9
11:28:08.693 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.693 [debug] Executing bend with initial: 10
11:28:08.693 [debug] Executing fun with value: 10
11:28:08.693 [debug] Evaluating bend block with value: 10
11:28:08.693 [debug] Block returned: %{variant: :leaf}
11:28:08.693 [debug] Fun returned result: %{variant: :leaf}
11:28:08.693 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.693 [debug] do_bend final result: %{variant: :leaf}
11:28:08.693 [debug] Executing bend with initial: 10
11:28:08.693 [debug] Executing fun with value: 10
11:28:08.693 [debug] Evaluating bend block with value: 10
11:28:08.693 [debug] Block returned: %{variant: :leaf}
11:28:08.693 [debug] Fun returned result: %{variant: :leaf}
11:28:08.695 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.695 [debug] do_bend final result: %{variant: :leaf}
11:28:08.695 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.695 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.695 [debug] Executing bend with initial: 8
11:28:08.695 [debug] Executing fun with value: 8
11:28:08.695 [debug] Evaluating bend block with value: 8
11:28:08.695 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.695 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.695 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.695 [debug] Executing bend with initial: 9
11:28:08.695 [debug] Executing fun with value: 9
11:28:08.695 [debug] Evaluating bend block with value: 9
11:28:08.695 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.695 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.695 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.695 [debug] Executing bend with initial: 10
11:28:08.695 [debug] Executing fun with value: 10
11:28:08.695 [debug] Evaluating bend block with value: 10
11:28:08.695 [debug] Block returned: %{variant: :leaf}
11:28:08.695 [debug] Fun returned result: %{variant: :leaf}
11:28:08.695 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.695 [debug] do_bend final result: %{variant: :leaf}
11:28:08.695 [debug] Executing bend with initial: 10
11:28:08.695 [debug] Executing fun with value: 10
11:28:08.695 [debug] Evaluating bend block with value: 10
11:28:08.695 [debug] Block returned: %{variant: :leaf}
11:28:08.695 [debug] Fun returned result: %{variant: :leaf}
11:28:08.695 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.695 [debug] do_bend final result: %{variant: :leaf}
11:28:08.695 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.695 [debug] Executing bend with initial: 9
11:28:08.695 [debug] Executing fun with value: 9
11:28:08.695 [debug] Evaluating bend block with value: 9
11:28:08.695 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.695 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.695 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.695 [debug] Executing bend with initial: 10
11:28:08.695 [debug] Executing fun with value: 10
11:28:08.695 [debug] Evaluating bend block with value: 10
11:28:08.695 [debug] Block returned: %{variant: :leaf}
11:28:08.695 [debug] Fun returned result: %{variant: :leaf}
11:28:08.695 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.695 [debug] do_bend final result: %{variant: :leaf}
11:28:08.695 [debug] Executing bend with initial: 10
11:28:08.695 [debug] Executing fun with value: 10
11:28:08.695 [debug] Evaluating bend block with value: 10
11:28:08.695 [debug] Block returned: %{variant: :leaf}
11:28:08.695 [debug] Fun returned result: %{variant: :leaf}
11:28:08.696 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.696 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.696 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.696 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 6
11:28:08.696 [debug] Executing fun with value: 6
11:28:08.696 [debug] Evaluating bend block with value: 6
11:28:08.696 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.696 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.696 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 7
11:28:08.696 [debug] Executing fun with value: 7
11:28:08.696 [debug] Evaluating bend block with value: 7
11:28:08.696 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.696 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.696 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 8
11:28:08.696 [debug] Executing fun with value: 8
11:28:08.696 [debug] Evaluating bend block with value: 8
11:28:08.696 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.696 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.696 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 9
11:28:08.696 [debug] Executing fun with value: 9
11:28:08.696 [debug] Evaluating bend block with value: 9
11:28:08.696 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 10
11:28:08.696 [debug] Executing fun with value: 10
11:28:08.696 [debug] Evaluating bend block with value: 10
11:28:08.696 [debug] Block returned: %{variant: :leaf}
11:28:08.696 [debug] Fun returned result: %{variant: :leaf}
11:28:08.696 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{variant: :leaf}
11:28:08.696 [debug] Executing bend with initial: 10
11:28:08.696 [debug] Executing fun with value: 10
11:28:08.696 [debug] Evaluating bend block with value: 10
11:28:08.696 [debug] Block returned: %{variant: :leaf}
11:28:08.696 [debug] Fun returned result: %{variant: :leaf}
11:28:08.696 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 9
11:28:08.696 [debug] Executing fun with value: 9
11:28:08.696 [debug] Evaluating bend block with value: 9
11:28:08.696 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 10
11:28:08.696 [debug] Executing fun with value: 10
11:28:08.696 [debug] Evaluating bend block with value: 10
11:28:08.696 [debug] Block returned: %{variant: :leaf}
11:28:08.696 [debug] Fun returned result: %{variant: :leaf}
11:28:08.696 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{variant: :leaf}
11:28:08.696 [debug] Executing bend with initial: 10
11:28:08.696 [debug] Executing fun with value: 10
11:28:08.696 [debug] Evaluating bend block with value: 10
11:28:08.696 [debug] Block returned: %{variant: :leaf}
11:28:08.696 [debug] Fun returned result: %{variant: :leaf}
11:28:08.696 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.696 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 8
11:28:08.696 [debug] Executing fun with value: 8
11:28:08.696 [debug] Evaluating bend block with value: 8
11:28:08.696 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.696 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.696 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 9
11:28:08.696 [debug] Executing fun with value: 9
11:28:08.696 [debug] Evaluating bend block with value: 9
11:28:08.696 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.696 [debug] Executing bend with initial: 10
11:28:08.696 [debug] Executing fun with value: 10
11:28:08.696 [debug] Evaluating bend block with value: 10
11:28:08.696 [debug] Block returned: %{variant: :leaf}
11:28:08.696 [debug] Fun returned result: %{variant: :leaf}
11:28:08.696 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.696 [debug] do_bend final result: %{variant: :leaf}
11:28:08.696 [debug] Executing bend with initial: 10
11:28:08.696 [debug] Executing fun with value: 10
11:28:08.696 [debug] Evaluating bend block with value: 10
11:28:08.696 [debug] Block returned: %{variant: :leaf}
11:28:08.696 [debug] Fun returned result: %{variant: :leaf}
11:28:08.697 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 9
11:28:08.697 [debug] Executing fun with value: 9
11:28:08.697 [debug] Evaluating bend block with value: 9
11:28:08.697 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 10
11:28:08.697 [debug] Executing fun with value: 10
11:28:08.697 [debug] Evaluating bend block with value: 10
11:28:08.697 [debug] Block returned: %{variant: :leaf}
11:28:08.697 [debug] Fun returned result: %{variant: :leaf}
11:28:08.697 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{variant: :leaf}
11:28:08.697 [debug] Executing bend with initial: 10
11:28:08.697 [debug] Executing fun with value: 10
11:28:08.697 [debug] Evaluating bend block with value: 10
11:28:08.697 [debug] Block returned: %{variant: :leaf}
11:28:08.697 [debug] Fun returned result: %{variant: :leaf}
11:28:08.697 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.697 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.697 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 7
11:28:08.697 [debug] Executing fun with value: 7
11:28:08.697 [debug] Evaluating bend block with value: 7
11:28:08.697 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.697 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.697 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 8
11:28:08.697 [debug] Executing fun with value: 8
11:28:08.697 [debug] Evaluating bend block with value: 8
11:28:08.697 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.697 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.697 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 9
11:28:08.697 [debug] Executing fun with value: 9
11:28:08.697 [debug] Evaluating bend block with value: 9
11:28:08.697 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 10
11:28:08.697 [debug] Executing fun with value: 10
11:28:08.697 [debug] Evaluating bend block with value: 10
11:28:08.697 [debug] Block returned: %{variant: :leaf}
11:28:08.697 [debug] Fun returned result: %{variant: :leaf}
11:28:08.697 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{variant: :leaf}
11:28:08.697 [debug] Executing bend with initial: 10
11:28:08.697 [debug] Executing fun with value: 10
11:28:08.697 [debug] Evaluating bend block with value: 10
11:28:08.697 [debug] Block returned: %{variant: :leaf}
11:28:08.697 [debug] Fun returned result: %{variant: :leaf}
11:28:08.697 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 9
11:28:08.697 [debug] Executing fun with value: 9
11:28:08.697 [debug] Evaluating bend block with value: 9
11:28:08.697 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.697 [debug] Executing bend with initial: 10
11:28:08.697 [debug] Executing fun with value: 10
11:28:08.697 [debug] Evaluating bend block with value: 10
11:28:08.697 [debug] Block returned: %{variant: :leaf}
11:28:08.697 [debug] Fun returned result: %{variant: :leaf}
11:28:08.697 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{variant: :leaf}
11:28:08.697 [debug] Executing bend with initial: 10
11:28:08.697 [debug] Executing fun with value: 10
11:28:08.697 [debug] Evaluating bend block with value: 10
11:28:08.697 [debug] Block returned: %{variant: :leaf}
11:28:08.697 [debug] Fun returned result: %{variant: :leaf}
11:28:08.697 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.697 [debug] do_bend final result: %{variant: :leaf}
11:28:08.698 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.698 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.698 [debug] Executing bend with initial: 8
11:28:08.698 [debug] Executing fun with value: 8
11:28:08.698 [debug] Evaluating bend block with value: 8
11:28:08.698 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.698 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.698 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.698 [debug] Executing bend with initial: 9
11:28:08.698 [debug] Executing fun with value: 9
11:28:08.698 [debug] Evaluating bend block with value: 9
11:28:08.698 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.698 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.698 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.698 [debug] Executing bend with initial: 10
11:28:08.698 [debug] Executing fun with value: 10
11:28:08.698 [debug] Evaluating bend block with value: 10
11:28:08.698 [debug] Block returned: %{variant: :leaf}
11:28:08.698 [debug] Fun returned result: %{variant: :leaf}
11:28:08.698 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.698 [debug] do_bend final result: %{variant: :leaf}
11:28:08.698 [debug] Executing bend with initial: 10
11:28:08.698 [debug] Executing fun with value: 10
11:28:08.698 [debug] Evaluating bend block with value: 10
11:28:08.698 [debug] Block returned: %{variant: :leaf}
11:28:08.698 [debug] Fun returned result: %{variant: :leaf}
11:28:08.698 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.698 [debug] do_bend final result: %{variant: :leaf}
11:28:08.698 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.698 [debug] Executing bend with initial: 9
11:28:08.698 [debug] Executing fun with value: 9
11:28:08.698 [debug] Evaluating bend block with value: 9
11:28:08.698 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.698 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.698 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.698 [debug] Executing bend with initial: 10
11:28:08.698 [debug] Executing fun with value: 10
11:28:08.698 [debug] Evaluating bend block with value: 10
11:28:08.698 [debug] Block returned: %{variant: :leaf}
11:28:08.698 [debug] Fun returned result: %{variant: :leaf}
11:28:08.698 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.698 [debug] do_bend final result: %{variant: :leaf}
11:28:08.698 [debug] Executing bend with initial: 10
11:28:08.698 [debug] Executing fun with value: 10
11:28:08.698 [debug] Evaluating bend block with value: 10
11:28:08.698 [debug] Block returned: %{variant: :leaf}
11:28:08.698 [debug] Fun returned result: %{variant: :leaf}
11:28:08.698 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.698 [debug] do_bend final result: %{variant: :leaf}
11:28:08.698 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.698 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.698 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.698 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.698 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.699 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 4
11:28:08.699 [debug] Executing fun with value: 4
11:28:08.699 [debug] Evaluating bend block with value: 4
11:28:08.699 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.699 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.699 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 5
11:28:08.699 [debug] Executing fun with value: 5
11:28:08.699 [debug] Evaluating bend block with value: 5
11:28:08.699 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.699 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.699 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 6
11:28:08.699 [debug] Executing fun with value: 6
11:28:08.699 [debug] Evaluating bend block with value: 6
11:28:08.699 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.699 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.699 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 7
11:28:08.699 [debug] Executing fun with value: 7
11:28:08.699 [debug] Evaluating bend block with value: 7
11:28:08.699 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.699 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.699 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 8
11:28:08.699 [debug] Executing fun with value: 8
11:28:08.699 [debug] Evaluating bend block with value: 8
11:28:08.699 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.699 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.699 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 9
11:28:08.699 [debug] Executing fun with value: 9
11:28:08.699 [debug] Evaluating bend block with value: 9
11:28:08.699 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.699 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.699 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 10
11:28:08.699 [debug] Executing fun with value: 10
11:28:08.699 [debug] Evaluating bend block with value: 10
11:28:08.699 [debug] Block returned: %{variant: :leaf}
11:28:08.699 [debug] Fun returned result: %{variant: :leaf}
11:28:08.699 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.699 [debug] do_bend final result: %{variant: :leaf}
11:28:08.699 [debug] Executing bend with initial: 10
11:28:08.699 [debug] Executing fun with value: 10
11:28:08.699 [debug] Evaluating bend block with value: 10
11:28:08.699 [debug] Block returned: %{variant: :leaf}
11:28:08.699 [debug] Fun returned result: %{variant: :leaf}
11:28:08.699 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.699 [debug] do_bend final result: %{variant: :leaf}
11:28:08.699 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.699 [debug] Executing bend with initial: 9
11:28:08.699 [debug] Executing fun with value: 9
11:28:08.699 [debug] Evaluating bend block with value: 9
11:28:08.699 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.699 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.699 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.700 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 8
11:28:08.700 [debug] Executing fun with value: 8
11:28:08.700 [debug] Evaluating bend block with value: 8
11:28:08.700 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.700 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.700 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 9
11:28:08.700 [debug] Executing fun with value: 9
11:28:08.700 [debug] Evaluating bend block with value: 9
11:28:08.700 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 9
11:28:08.700 [debug] Executing fun with value: 9
11:28:08.700 [debug] Evaluating bend block with value: 9
11:28:08.700 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.700 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.700 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 7
11:28:08.700 [debug] Executing fun with value: 7
11:28:08.700 [debug] Evaluating bend block with value: 7
11:28:08.700 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.700 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.700 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 8
11:28:08.700 [debug] Executing fun with value: 8
11:28:08.700 [debug] Evaluating bend block with value: 8
11:28:08.700 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.700 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.700 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 9
11:28:08.700 [debug] Executing fun with value: 9
11:28:08.700 [debug] Evaluating bend block with value: 9
11:28:08.700 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.700 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{variant: :leaf}
11:28:08.700 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 9
11:28:08.700 [debug] Executing fun with value: 9
11:28:08.700 [debug] Evaluating bend block with value: 9
11:28:08.700 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.700 [debug] Executing bend with initial: 10
11:28:08.700 [debug] Executing fun with value: 10
11:28:08.700 [debug] Evaluating bend block with value: 10
11:28:08.700 [debug] Block returned: %{variant: :leaf}
11:28:08.700 [debug] Fun returned result: %{variant: :leaf}
11:28:08.702 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.702 [debug] do_bend final result: %{variant: :leaf}
11:28:08.703 [debug] Executing bend with initial: 10
11:28:08.703 [debug] Executing fun with value: 10
11:28:08.703 [debug] Evaluating bend block with value: 10
11:28:08.703 [debug] Block returned: %{variant: :leaf}
11:28:08.703 [debug] Fun returned result: %{variant: :leaf}
11:28:08.703 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.703 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.703 [debug] Executing bend with initial: 8
11:28:08.703 [debug] Executing fun with value: 8
11:28:08.703 [debug] Evaluating bend block with value: 8
11:28:08.703 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.703 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.703 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.703 [debug] Executing bend with initial: 9
11:28:08.703 [debug] Executing fun with value: 9
11:28:08.703 [debug] Evaluating bend block with value: 9
11:28:08.703 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.703 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.703 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.703 [debug] Executing bend with initial: 10
11:28:08.703 [debug] Executing fun with value: 10
11:28:08.703 [debug] Evaluating bend block with value: 10
11:28:08.703 [debug] Block returned: %{variant: :leaf}
11:28:08.703 [debug] Fun returned result: %{variant: :leaf}
11:28:08.703 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{variant: :leaf}
11:28:08.703 [debug] Executing bend with initial: 10
11:28:08.703 [debug] Executing fun with value: 10
11:28:08.703 [debug] Evaluating bend block with value: 10
11:28:08.703 [debug] Block returned: %{variant: :leaf}
11:28:08.703 [debug] Fun returned result: %{variant: :leaf}
11:28:08.703 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.703 [debug] Executing bend with initial: 9
11:28:08.703 [debug] Executing fun with value: 9
11:28:08.703 [debug] Evaluating bend block with value: 9
11:28:08.703 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.703 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.703 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.703 [debug] Executing bend with initial: 10
11:28:08.703 [debug] Executing fun with value: 10
11:28:08.703 [debug] Evaluating bend block with value: 10
11:28:08.703 [debug] Block returned: %{variant: :leaf}
11:28:08.703 [debug] Fun returned result: %{variant: :leaf}
11:28:08.703 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{variant: :leaf}
11:28:08.703 [debug] Executing bend with initial: 10
11:28:08.703 [debug] Executing fun with value: 10
11:28:08.703 [debug] Evaluating bend block with value: 10
11:28:08.703 [debug] Block returned: %{variant: :leaf}
11:28:08.703 [debug] Fun returned result: %{variant: :leaf}
11:28:08.703 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{variant: :leaf}
11:28:08.703 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.703 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.703 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.703 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.703 [debug] Executing bend with initial: 6
11:28:08.703 [debug] Executing fun with value: 6
11:28:08.703 [debug] Evaluating bend block with value: 6
11:28:08.703 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.703 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.703 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.703 [debug] Executing bend with initial: 7
11:28:08.704 [debug] Executing fun with value: 7
11:28:08.704 [debug] Evaluating bend block with value: 7
11:28:08.704 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.704 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.704 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 8
11:28:08.704 [debug] Executing fun with value: 8
11:28:08.704 [debug] Evaluating bend block with value: 8
11:28:08.704 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.704 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.704 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 9
11:28:08.704 [debug] Executing fun with value: 9
11:28:08.704 [debug] Evaluating bend block with value: 9
11:28:08.704 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 9
11:28:08.704 [debug] Executing fun with value: 9
11:28:08.704 [debug] Evaluating bend block with value: 9
11:28:08.704 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.704 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 8
11:28:08.704 [debug] Executing fun with value: 8
11:28:08.704 [debug] Evaluating bend block with value: 8
11:28:08.704 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.704 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.704 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 9
11:28:08.704 [debug] Executing fun with value: 9
11:28:08.704 [debug] Evaluating bend block with value: 9
11:28:08.704 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 9
11:28:08.704 [debug] Executing fun with value: 9
11:28:08.704 [debug] Evaluating bend block with value: 9
11:28:08.704 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] Executing bend with initial: 10
11:28:08.704 [debug] Executing fun with value: 10
11:28:08.704 [debug] Evaluating bend block with value: 10
11:28:08.704 [debug] Block returned: %{variant: :leaf}
11:28:08.704 [debug] Fun returned result: %{variant: :leaf}
11:28:08.704 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{variant: :leaf}
11:28:08.704 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.704 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.705 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 7
11:28:08.705 [debug] Executing fun with value: 7
11:28:08.705 [debug] Evaluating bend block with value: 7
11:28:08.705 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.705 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.705 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 8
11:28:08.705 [debug] Executing fun with value: 8
11:28:08.705 [debug] Evaluating bend block with value: 8
11:28:08.705 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.705 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.705 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 9
11:28:08.705 [debug] Executing fun with value: 9
11:28:08.705 [debug] Evaluating bend block with value: 9
11:28:08.705 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 10
11:28:08.705 [debug] Executing fun with value: 10
11:28:08.705 [debug] Evaluating bend block with value: 10
11:28:08.705 [debug] Block returned: %{variant: :leaf}
11:28:08.705 [debug] Fun returned result: %{variant: :leaf}
11:28:08.705 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.705 [debug] do_bend final result: %{variant: :leaf}
11:28:08.705 [debug] Executing bend with initial: 10
11:28:08.705 [debug] Executing fun with value: 10
11:28:08.705 [debug] Evaluating bend block with value: 10
11:28:08.705 [debug] Block returned: %{variant: :leaf}
11:28:08.705 [debug] Fun returned result: %{variant: :leaf}
11:28:08.705 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.705 [debug] do_bend final result: %{variant: :leaf}
11:28:08.705 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 9
11:28:08.705 [debug] Executing fun with value: 9
11:28:08.705 [debug] Evaluating bend block with value: 9
11:28:08.705 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 10
11:28:08.705 [debug] Executing fun with value: 10
11:28:08.705 [debug] Evaluating bend block with value: 10
11:28:08.705 [debug] Block returned: %{variant: :leaf}
11:28:08.705 [debug] Fun returned result: %{variant: :leaf}
11:28:08.705 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.705 [debug] do_bend final result: %{variant: :leaf}
11:28:08.705 [debug] Executing bend with initial: 10
11:28:08.705 [debug] Executing fun with value: 10
11:28:08.705 [debug] Evaluating bend block with value: 10
11:28:08.705 [debug] Block returned: %{variant: :leaf}
11:28:08.705 [debug] Fun returned result: %{variant: :leaf}
11:28:08.705 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.705 [debug] do_bend final result: %{variant: :leaf}
11:28:08.705 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.705 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 8
11:28:08.705 [debug] Executing fun with value: 8
11:28:08.705 [debug] Evaluating bend block with value: 8
11:28:08.705 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.705 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.705 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 9
11:28:08.705 [debug] Executing fun with value: 9
11:28:08.705 [debug] Evaluating bend block with value: 9
11:28:08.705 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.705 [debug] Executing bend with initial: 10
11:28:08.705 [debug] Executing fun with value: 10
11:28:08.705 [debug] Evaluating bend block with value: 10
11:28:08.705 [debug] Block returned: %{variant: :leaf}
11:28:08.705 [debug] Fun returned result: %{variant: :leaf}
11:28:08.705 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.706 [debug] do_bend final result: %{variant: :leaf}
11:28:08.706 [debug] Executing bend with initial: 10
11:28:08.706 [debug] Executing fun with value: 10
11:28:08.706 [debug] Evaluating bend block with value: 10
11:28:08.706 [debug] Block returned: %{variant: :leaf}
11:28:08.706 [debug] Fun returned result: %{variant: :leaf}
11:28:08.706 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.706 [debug] do_bend final result: %{variant: :leaf}
11:28:08.706 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.706 [debug] Executing bend with initial: 9
11:28:08.706 [debug] Executing fun with value: 9
11:28:08.706 [debug] Evaluating bend block with value: 9
11:28:08.706 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.706 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.706 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.706 [debug] Executing bend with initial: 10
11:28:08.706 [debug] Executing fun with value: 10
11:28:08.706 [debug] Evaluating bend block with value: 10
11:28:08.706 [debug] Block returned: %{variant: :leaf}
11:28:08.706 [debug] Fun returned result: %{variant: :leaf}
11:28:08.706 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.706 [debug] do_bend final result: %{variant: :leaf}
11:28:08.706 [debug] Executing bend with initial: 10
11:28:08.706 [debug] Executing fun with value: 10
11:28:08.706 [debug] Evaluating bend block with value: 10
11:28:08.706 [debug] Block returned: %{variant: :leaf}
11:28:08.706 [debug] Fun returned result: %{variant: :leaf}
11:28:08.706 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.706 [debug] do_bend final result: %{variant: :leaf}
11:28:08.706 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.706 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.706 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.706 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.706 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.706 [debug] Executing bend with initial: 5
11:28:08.706 [debug] Executing fun with value: 5
11:28:08.706 [debug] Evaluating bend block with value: 5
11:28:08.706 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.706 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.706 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.706 [debug] Executing bend with initial: 6
11:28:08.706 [debug] Executing fun with value: 6
11:28:08.706 [debug] Evaluating bend block with value: 6
11:28:08.706 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.706 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.706 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.706 [debug] Executing bend with initial: 7
11:28:08.706 [debug] Executing fun with value: 7
11:28:08.706 [debug] Evaluating bend block with value: 7
11:28:08.707 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.707 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.707 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 8
11:28:08.707 [debug] Executing fun with value: 8
11:28:08.707 [debug] Evaluating bend block with value: 8
11:28:08.707 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.707 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.707 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 9
11:28:08.707 [debug] Executing fun with value: 9
11:28:08.707 [debug] Evaluating bend block with value: 9
11:28:08.707 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 10
11:28:08.707 [debug] Executing fun with value: 10
11:28:08.707 [debug] Evaluating bend block with value: 10
11:28:08.707 [debug] Block returned: %{variant: :leaf}
11:28:08.707 [debug] Fun returned result: %{variant: :leaf}
11:28:08.707 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{variant: :leaf}
11:28:08.707 [debug] Executing bend with initial: 10
11:28:08.707 [debug] Executing fun with value: 10
11:28:08.707 [debug] Evaluating bend block with value: 10
11:28:08.707 [debug] Block returned: %{variant: :leaf}
11:28:08.707 [debug] Fun returned result: %{variant: :leaf}
11:28:08.707 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 9
11:28:08.707 [debug] Executing fun with value: 9
11:28:08.707 [debug] Evaluating bend block with value: 9
11:28:08.707 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 10
11:28:08.707 [debug] Executing fun with value: 10
11:28:08.707 [debug] Evaluating bend block with value: 10
11:28:08.707 [debug] Block returned: %{variant: :leaf}
11:28:08.707 [debug] Fun returned result: %{variant: :leaf}
11:28:08.707 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{variant: :leaf}
11:28:08.707 [debug] Executing bend with initial: 10
11:28:08.707 [debug] Executing fun with value: 10
11:28:08.707 [debug] Evaluating bend block with value: 10
11:28:08.707 [debug] Block returned: %{variant: :leaf}
11:28:08.707 [debug] Fun returned result: %{variant: :leaf}
11:28:08.707 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.707 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 8
11:28:08.707 [debug] Executing fun with value: 8
11:28:08.707 [debug] Evaluating bend block with value: 8
11:28:08.707 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.707 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.707 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 9
11:28:08.707 [debug] Executing fun with value: 9
11:28:08.707 [debug] Evaluating bend block with value: 9
11:28:08.707 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 10
11:28:08.707 [debug] Executing fun with value: 10
11:28:08.707 [debug] Evaluating bend block with value: 10
11:28:08.707 [debug] Block returned: %{variant: :leaf}
11:28:08.707 [debug] Fun returned result: %{variant: :leaf}
11:28:08.707 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{variant: :leaf}
11:28:08.707 [debug] Executing bend with initial: 10
11:28:08.707 [debug] Executing fun with value: 10
11:28:08.707 [debug] Evaluating bend block with value: 10
11:28:08.707 [debug] Block returned: %{variant: :leaf}
11:28:08.707 [debug] Fun returned result: %{variant: :leaf}
11:28:08.707 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{variant: :leaf}
11:28:08.707 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.707 [debug] Executing bend with initial: 9
11:28:08.707 [debug] Executing fun with value: 9
11:28:08.707 [debug] Evaluating bend block with value: 9
11:28:08.707 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.707 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.708 [debug] Executing bend with initial: 10
11:28:08.708 [debug] Executing fun with value: 10
11:28:08.708 [debug] Evaluating bend block with value: 10
11:28:08.708 [debug] Block returned: %{variant: :leaf}
11:28:08.708 [debug] Fun returned result: %{variant: :leaf}
11:28:08.708 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.708 [debug] do_bend final result: %{variant: :leaf}
11:28:08.708 [debug] Executing bend with initial: 10
11:28:08.708 [debug] Executing fun with value: 10
11:28:08.708 [debug] Evaluating bend block with value: 10
11:28:08.708 [debug] Block returned: %{variant: :leaf}
11:28:08.708 [debug] Fun returned result: %{variant: :leaf}
11:28:08.708 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.708 [debug] do_bend final result: %{variant: :leaf}
11:28:08.708 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.708 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.708 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.708 [debug] Executing bend with initial: 7
11:28:08.708 [debug] Executing fun with value: 7
11:28:08.708 [debug] Evaluating bend block with value: 7
11:28:08.708 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.708 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.708 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.708 [debug] Executing bend with initial: 8
11:28:08.708 [debug] Executing fun with value: 8
11:28:08.708 [debug] Evaluating bend block with value: 8
11:28:08.708 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.708 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.708 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.708 [debug] Executing bend with initial: 9
11:28:08.708 [debug] Executing fun with value: 9
11:28:08.708 [debug] Evaluating bend block with value: 9
11:28:08.708 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.708 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.708 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.708 [debug] Executing bend with initial: 10
11:28:08.708 [debug] Executing fun with value: 10
11:28:08.708 [debug] Evaluating bend block with value: 10
11:28:08.708 [debug] Block returned: %{variant: :leaf}
11:28:08.708 [debug] Fun returned result: %{variant: :leaf}
11:28:08.708 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.708 [debug] do_bend final result: %{variant: :leaf}
11:28:08.708 [debug] Executing bend with initial: 10
11:28:08.708 [debug] Executing fun with value: 10
11:28:08.708 [debug] Evaluating bend block with value: 10
11:28:08.708 [debug] Block returned: %{variant: :leaf}
11:28:08.708 [debug] Fun returned result: %{variant: :leaf}
11:28:08.708 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.708 [debug] do_bend final result: %{variant: :leaf}
11:28:08.708 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.708 [debug] Executing bend with initial: 9
11:28:08.708 [debug] Executing fun with value: 9
11:28:08.708 [debug] Evaluating bend block with value: 9
11:28:08.708 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.708 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.708 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.708 [debug] Executing bend with initial: 10
11:28:08.708 [debug] Executing fun with value: 10
11:28:08.708 [debug] Evaluating bend block with value: 10
11:28:08.708 [debug] Block returned: %{variant: :leaf}
11:28:08.708 [debug] Fun returned result: %{variant: :leaf}
11:28:08.708 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.708 [debug] do_bend final result: %{variant: :leaf}
11:28:08.708 [debug] Executing bend with initial: 10
11:28:08.708 [debug] Executing fun with value: 10
11:28:08.708 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.709 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 8
11:28:08.709 [debug] Executing fun with value: 8
11:28:08.709 [debug] Evaluating bend block with value: 8
11:28:08.709 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 9
11:28:08.709 [debug] Executing fun with value: 9
11:28:08.709 [debug] Evaluating bend block with value: 9
11:28:08.709 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 9
11:28:08.709 [debug] Executing fun with value: 9
11:28:08.709 [debug] Evaluating bend block with value: 9
11:28:08.709 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.709 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.709 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.709 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 6
11:28:08.709 [debug] Executing fun with value: 6
11:28:08.709 [debug] Evaluating bend block with value: 6
11:28:08.709 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 7
11:28:08.709 [debug] Executing fun with value: 7
11:28:08.709 [debug] Evaluating bend block with value: 7
11:28:08.709 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 8
11:28:08.709 [debug] Executing fun with value: 8
11:28:08.709 [debug] Evaluating bend block with value: 8
11:28:08.709 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 9
11:28:08.709 [debug] Executing fun with value: 9
11:28:08.709 [debug] Evaluating bend block with value: 9
11:28:08.709 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 9
11:28:08.709 [debug] Executing fun with value: 9
11:28:08.709 [debug] Evaluating bend block with value: 9
11:28:08.709 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.709 [debug] Executing bend with initial: 10
11:28:08.709 [debug] Executing fun with value: 10
11:28:08.709 [debug] Evaluating bend block with value: 10
11:28:08.709 [debug] Block returned: %{variant: :leaf}
11:28:08.709 [debug] Fun returned result: %{variant: :leaf}
11:28:08.709 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.709 [debug] do_bend final result: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.710 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 8
11:28:08.710 [debug] Executing fun with value: 8
11:28:08.710 [debug] Evaluating bend block with value: 8
11:28:08.710 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.710 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.710 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 9
11:28:08.710 [debug] Executing fun with value: 9
11:28:08.710 [debug] Evaluating bend block with value: 9
11:28:08.710 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 10
11:28:08.710 [debug] Executing fun with value: 10
11:28:08.710 [debug] Evaluating bend block with value: 10
11:28:08.710 [debug] Block returned: %{variant: :leaf}
11:28:08.710 [debug] Fun returned result: %{variant: :leaf}
11:28:08.710 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{variant: :leaf}
11:28:08.710 [debug] Executing bend with initial: 10
11:28:08.710 [debug] Executing fun with value: 10
11:28:08.710 [debug] Evaluating bend block with value: 10
11:28:08.710 [debug] Block returned: %{variant: :leaf}
11:28:08.710 [debug] Fun returned result: %{variant: :leaf}
11:28:08.710 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 9
11:28:08.710 [debug] Executing fun with value: 9
11:28:08.710 [debug] Evaluating bend block with value: 9
11:28:08.710 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 10
11:28:08.710 [debug] Executing fun with value: 10
11:28:08.710 [debug] Evaluating bend block with value: 10
11:28:08.710 [debug] Block returned: %{variant: :leaf}
11:28:08.710 [debug] Fun returned result: %{variant: :leaf}
11:28:08.710 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{variant: :leaf}
11:28:08.710 [debug] Executing bend with initial: 10
11:28:08.710 [debug] Executing fun with value: 10
11:28:08.710 [debug] Evaluating bend block with value: 10
11:28:08.710 [debug] Block returned: %{variant: :leaf}
11:28:08.710 [debug] Fun returned result: %{variant: :leaf}
11:28:08.710 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.710 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.710 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 7
11:28:08.710 [debug] Executing fun with value: 7
11:28:08.710 [debug] Evaluating bend block with value: 7
11:28:08.710 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.710 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.710 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 8
11:28:08.710 [debug] Executing fun with value: 8
11:28:08.710 [debug] Evaluating bend block with value: 8
11:28:08.710 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.710 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.710 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 9
11:28:08.710 [debug] Executing fun with value: 9
11:28:08.710 [debug] Evaluating bend block with value: 9
11:28:08.710 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 10
11:28:08.710 [debug] Executing fun with value: 10
11:28:08.710 [debug] Evaluating bend block with value: 10
11:28:08.710 [debug] Block returned: %{variant: :leaf}
11:28:08.710 [debug] Fun returned result: %{variant: :leaf}
11:28:08.710 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{variant: :leaf}
11:28:08.710 [debug] Executing bend with initial: 10
11:28:08.710 [debug] Executing fun with value: 10
11:28:08.710 [debug] Evaluating bend block with value: 10
11:28:08.710 [debug] Block returned: %{variant: :leaf}
11:28:08.710 [debug] Fun returned result: %{variant: :leaf}
11:28:08.710 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{variant: :leaf}
11:28:08.710 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 9
11:28:08.710 [debug] Executing fun with value: 9
11:28:08.710 [debug] Evaluating bend block with value: 9
11:28:08.710 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.710 [debug] Executing bend with initial: 10
11:28:08.710 [debug] Executing fun with value: 10
11:28:08.710 [debug] Evaluating bend block with value: 10
11:28:08.710 [debug] Block returned: %{variant: :leaf}
11:28:08.710 [debug] Fun returned result: %{variant: :leaf}
11:28:08.711 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{variant: :leaf}
11:28:08.711 [debug] Executing bend with initial: 10
11:28:08.711 [debug] Executing fun with value: 10
11:28:08.711 [debug] Evaluating bend block with value: 10
11:28:08.711 [debug] Block returned: %{variant: :leaf}
11:28:08.711 [debug] Fun returned result: %{variant: :leaf}
11:28:08.711 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.711 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.711 [debug] Executing bend with initial: 8
11:28:08.711 [debug] Executing fun with value: 8
11:28:08.711 [debug] Evaluating bend block with value: 8
11:28:08.711 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.711 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.711 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.711 [debug] Executing bend with initial: 9
11:28:08.711 [debug] Executing fun with value: 9
11:28:08.711 [debug] Evaluating bend block with value: 9
11:28:08.711 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.711 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.711 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.711 [debug] Executing bend with initial: 10
11:28:08.711 [debug] Executing fun with value: 10
11:28:08.711 [debug] Evaluating bend block with value: 10
11:28:08.711 [debug] Block returned: %{variant: :leaf}
11:28:08.711 [debug] Fun returned result: %{variant: :leaf}
11:28:08.711 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{variant: :leaf}
11:28:08.711 [debug] Executing bend with initial: 10
11:28:08.711 [debug] Executing fun with value: 10
11:28:08.711 [debug] Evaluating bend block with value: 10
11:28:08.711 [debug] Block returned: %{variant: :leaf}
11:28:08.711 [debug] Fun returned result: %{variant: :leaf}
11:28:08.711 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.711 [debug] Executing bend with initial: 9
11:28:08.711 [debug] Executing fun with value: 9
11:28:08.711 [debug] Evaluating bend block with value: 9
11:28:08.711 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.711 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.711 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.711 [debug] Executing bend with initial: 10
11:28:08.711 [debug] Executing fun with value: 10
11:28:08.711 [debug] Evaluating bend block with value: 10
11:28:08.711 [debug] Block returned: %{variant: :leaf}
11:28:08.711 [debug] Fun returned result: %{variant: :leaf}
11:28:08.711 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{variant: :leaf}
11:28:08.711 [debug] Executing bend with initial: 10
11:28:08.711 [debug] Executing fun with value: 10
11:28:08.711 [debug] Evaluating bend block with value: 10
11:28:08.711 [debug] Block returned: %{variant: :leaf}
11:28:08.711 [debug] Fun returned result: %{variant: :leaf}
11:28:08.711 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{variant: :leaf}
11:28:08.711 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.711 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.712 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.712 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.712 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.712 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.713 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 3
11:28:08.713 [debug] Executing fun with value: 3
11:28:08.713 [debug] Evaluating bend block with value: 3
11:28:08.713 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.713 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.713 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 4
11:28:08.713 [debug] Executing fun with value: 4
11:28:08.713 [debug] Evaluating bend block with value: 4
11:28:08.713 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.713 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.713 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 5
11:28:08.713 [debug] Executing fun with value: 5
11:28:08.713 [debug] Evaluating bend block with value: 5
11:28:08.713 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.713 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.713 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 6
11:28:08.713 [debug] Executing fun with value: 6
11:28:08.713 [debug] Evaluating bend block with value: 6
11:28:08.713 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.713 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.713 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 7
11:28:08.713 [debug] Executing fun with value: 7
11:28:08.713 [debug] Evaluating bend block with value: 7
11:28:08.713 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.713 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.713 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 8
11:28:08.713 [debug] Executing fun with value: 8
11:28:08.713 [debug] Evaluating bend block with value: 8
11:28:08.713 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.713 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.713 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 9
11:28:08.713 [debug] Executing fun with value: 9
11:28:08.713 [debug] Evaluating bend block with value: 9
11:28:08.713 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.713 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.713 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.713 [debug] Executing bend with initial: 10
11:28:08.713 [debug] Executing fun with value: 10
11:28:08.713 [debug] Evaluating bend block with value: 10
11:28:08.713 [debug] Block returned: %{variant: :leaf}
11:28:08.713 [debug] Fun returned result: %{variant: :leaf}
11:28:08.713 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.713 [debug] do_bend final result: %{variant: :leaf}
11:28:08.713 [debug] Executing bend with initial: 10
11:28:08.713 [debug] Executing fun with value: 10
11:28:08.713 [debug] Evaluating bend block with value: 10
11:28:08.715 [debug] Block returned: %{variant: :leaf}
11:28:08.715 [debug] Fun returned result: %{variant: :leaf}
11:28:08.715 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.715 [debug] do_bend final result: %{variant: :leaf}
11:28:08.715 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.715 [debug] Executing bend with initial: 9
11:28:08.715 [debug] Executing fun with value: 9
11:28:08.715 [debug] Evaluating bend block with value: 9
11:28:08.715 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.715 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.715 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.715 [debug] Executing bend with initial: 10
11:28:08.715 [debug] Executing fun with value: 10
11:28:08.715 [debug] Evaluating bend block with value: 10
11:28:08.715 [debug] Block returned: %{variant: :leaf}
11:28:08.715 [debug] Fun returned result: %{variant: :leaf}
11:28:08.715 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.715 [debug] do_bend final result: %{variant: :leaf}
11:28:08.715 [debug] Executing bend with initial: 10
11:28:08.715 [debug] Executing fun with value: 10
11:28:08.715 [debug] Evaluating bend block with value: 10
11:28:08.715 [debug] Block returned: %{variant: :leaf}
11:28:08.715 [debug] Fun returned result: %{variant: :leaf}
11:28:08.715 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.715 [debug] do_bend final result: %{variant: :leaf}
11:28:08.715 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.715 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.715 [debug] Executing bend with initial: 8
11:28:08.715 [debug] Executing fun with value: 8
11:28:08.715 [debug] Evaluating bend block with value: 8
11:28:08.715 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.715 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.715 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.715 [debug] Executing bend with initial: 9
11:28:08.715 [debug] Executing fun with value: 9
11:28:08.715 [debug] Evaluating bend block with value: 9
11:28:08.715 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.715 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.715 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.715 [debug] Executing bend with initial: 10
11:28:08.715 [debug] Executing fun with value: 10
11:28:08.715 [debug] Evaluating bend block with value: 10
11:28:08.715 [debug] Block returned: %{variant: :leaf}
11:28:08.715 [debug] Fun returned result: %{variant: :leaf}
11:28:08.715 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.715 [debug] do_bend final result: %{variant: :leaf}
11:28:08.715 [debug] Executing bend with initial: 10
11:28:08.715 [debug] Executing fun with value: 10
11:28:08.715 [debug] Evaluating bend block with value: 10
11:28:08.715 [debug] Block returned: %{variant: :leaf}
11:28:08.715 [debug] Fun returned result: %{variant: :leaf}
11:28:08.715 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.715 [debug] do_bend final result: %{variant: :leaf}
11:28:08.716 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.716 [debug] Executing bend with initial: 9
11:28:08.716 [debug] Executing fun with value: 9
11:28:08.716 [debug] Evaluating bend block with value: 9
11:28:08.716 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.716 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.716 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.716 [debug] Executing bend with initial: 10
11:28:08.716 [debug] Executing fun with value: 10
11:28:08.716 [debug] Evaluating bend block with value: 10
11:28:08.716 [debug] Block returned: %{variant: :leaf}
11:28:08.716 [debug] Fun returned result: %{variant: :leaf}
11:28:08.716 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.716 [debug] do_bend final result: %{variant: :leaf}
11:28:08.716 [debug] Executing bend with initial: 10
11:28:08.716 [debug] Executing fun with value: 10
11:28:08.716 [debug] Evaluating bend block with value: 10
11:28:08.716 [debug] Block returned: %{variant: :leaf}
11:28:08.716 [debug] Fun returned result: %{variant: :leaf}
11:28:08.716 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.716 [debug] do_bend final result: %{variant: :leaf}
11:28:08.716 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.716 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.717 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 7
11:28:08.717 [debug] Executing fun with value: 7
11:28:08.717 [debug] Evaluating bend block with value: 7
11:28:08.717 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 8
11:28:08.717 [debug] Executing fun with value: 8
11:28:08.717 [debug] Evaluating bend block with value: 8
11:28:08.717 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 9
11:28:08.717 [debug] Executing fun with value: 9
11:28:08.717 [debug] Evaluating bend block with value: 9
11:28:08.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 9
11:28:08.717 [debug] Executing fun with value: 9
11:28:08.717 [debug] Evaluating bend block with value: 9
11:28:08.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.717 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 8
11:28:08.717 [debug] Executing fun with value: 8
11:28:08.717 [debug] Evaluating bend block with value: 8
11:28:08.717 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 9
11:28:08.717 [debug] Executing fun with value: 9
11:28:08.717 [debug] Evaluating bend block with value: 9
11:28:08.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 9
11:28:08.717 [debug] Executing fun with value: 9
11:28:08.717 [debug] Evaluating bend block with value: 9
11:28:08.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] Executing bend with initial: 10
11:28:08.717 [debug] Executing fun with value: 10
11:28:08.717 [debug] Evaluating bend block with value: 10
11:28:08.717 [debug] Block returned: %{variant: :leaf}
11:28:08.717 [debug] Fun returned result: %{variant: :leaf}
11:28:08.717 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{variant: :leaf}
11:28:08.717 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.717 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.717 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.717 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 6
11:28:08.717 [debug] Executing fun with value: 6
11:28:08.717 [debug] Evaluating bend block with value: 6
11:28:08.717 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 7
11:28:08.717 [debug] Executing fun with value: 7
11:28:08.717 [debug] Evaluating bend block with value: 7
11:28:08.717 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.717 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.717 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.717 [debug] Executing bend with initial: 8
11:28:08.717 [debug] Executing fun with value: 8
11:28:08.717 [debug] Evaluating bend block with value: 8
11:28:08.718 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.718 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.718 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 9
11:28:08.718 [debug] Executing fun with value: 9
11:28:08.718 [debug] Evaluating bend block with value: 9
11:28:08.718 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 10
11:28:08.718 [debug] Executing fun with value: 10
11:28:08.718 [debug] Evaluating bend block with value: 10
11:28:08.718 [debug] Block returned: %{variant: :leaf}
11:28:08.718 [debug] Fun returned result: %{variant: :leaf}
11:28:08.718 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{variant: :leaf}
11:28:08.718 [debug] Executing bend with initial: 10
11:28:08.718 [debug] Executing fun with value: 10
11:28:08.718 [debug] Evaluating bend block with value: 10
11:28:08.718 [debug] Block returned: %{variant: :leaf}
11:28:08.718 [debug] Fun returned result: %{variant: :leaf}
11:28:08.718 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 9
11:28:08.718 [debug] Executing fun with value: 9
11:28:08.718 [debug] Evaluating bend block with value: 9
11:28:08.718 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 10
11:28:08.718 [debug] Executing fun with value: 10
11:28:08.718 [debug] Evaluating bend block with value: 10
11:28:08.718 [debug] Block returned: %{variant: :leaf}
11:28:08.718 [debug] Fun returned result: %{variant: :leaf}
11:28:08.718 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{variant: :leaf}
11:28:08.718 [debug] Executing bend with initial: 10
11:28:08.718 [debug] Executing fun with value: 10
11:28:08.718 [debug] Evaluating bend block with value: 10
11:28:08.718 [debug] Block returned: %{variant: :leaf}
11:28:08.718 [debug] Fun returned result: %{variant: :leaf}
11:28:08.718 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.718 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 8
11:28:08.718 [debug] Executing fun with value: 8
11:28:08.718 [debug] Evaluating bend block with value: 8
11:28:08.718 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.718 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.718 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 9
11:28:08.718 [debug] Executing fun with value: 9
11:28:08.718 [debug] Evaluating bend block with value: 9
11:28:08.718 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 10
11:28:08.718 [debug] Executing fun with value: 10
11:28:08.718 [debug] Evaluating bend block with value: 10
11:28:08.718 [debug] Block returned: %{variant: :leaf}
11:28:08.718 [debug] Fun returned result: %{variant: :leaf}
11:28:08.718 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{variant: :leaf}
11:28:08.718 [debug] Executing bend with initial: 10
11:28:08.718 [debug] Executing fun with value: 10
11:28:08.718 [debug] Evaluating bend block with value: 10
11:28:08.718 [debug] Block returned: %{variant: :leaf}
11:28:08.718 [debug] Fun returned result: %{variant: :leaf}
11:28:08.718 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{variant: :leaf}
11:28:08.718 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 9
11:28:08.718 [debug] Executing fun with value: 9
11:28:08.718 [debug] Evaluating bend block with value: 9
11:28:08.718 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.718 [debug] Executing bend with initial: 10
11:28:08.718 [debug] Executing fun with value: 10
11:28:08.718 [debug] Evaluating bend block with value: 10
11:28:08.718 [debug] Block returned: %{variant: :leaf}
11:28:08.718 [debug] Fun returned result: %{variant: :leaf}
11:28:08.719 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{variant: :leaf}
11:28:08.719 [debug] Executing bend with initial: 10
11:28:08.719 [debug] Executing fun with value: 10
11:28:08.719 [debug] Evaluating bend block with value: 10
11:28:08.719 [debug] Block returned: %{variant: :leaf}
11:28:08.719 [debug] Fun returned result: %{variant: :leaf}
11:28:08.719 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.719 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.719 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.719 [debug] Executing bend with initial: 7
11:28:08.719 [debug] Executing fun with value: 7
11:28:08.719 [debug] Evaluating bend block with value: 7
11:28:08.719 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.719 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.719 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.719 [debug] Executing bend with initial: 8
11:28:08.719 [debug] Executing fun with value: 8
11:28:08.719 [debug] Evaluating bend block with value: 8
11:28:08.719 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.719 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.719 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.719 [debug] Executing bend with initial: 9
11:28:08.719 [debug] Executing fun with value: 9
11:28:08.719 [debug] Evaluating bend block with value: 9
11:28:08.719 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.719 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.719 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.719 [debug] Executing bend with initial: 10
11:28:08.719 [debug] Executing fun with value: 10
11:28:08.719 [debug] Evaluating bend block with value: 10
11:28:08.719 [debug] Block returned: %{variant: :leaf}
11:28:08.719 [debug] Fun returned result: %{variant: :leaf}
11:28:08.719 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{variant: :leaf}
11:28:08.719 [debug] Executing bend with initial: 10
11:28:08.719 [debug] Executing fun with value: 10
11:28:08.719 [debug] Evaluating bend block with value: 10
11:28:08.719 [debug] Block returned: %{variant: :leaf}
11:28:08.719 [debug] Fun returned result: %{variant: :leaf}
11:28:08.719 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.719 [debug] Executing bend with initial: 9
11:28:08.719 [debug] Executing fun with value: 9
11:28:08.719 [debug] Evaluating bend block with value: 9
11:28:08.719 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.719 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.719 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.719 [debug] Executing bend with initial: 10
11:28:08.719 [debug] Executing fun with value: 10
11:28:08.719 [debug] Evaluating bend block with value: 10
11:28:08.719 [debug] Block returned: %{variant: :leaf}
11:28:08.719 [debug] Fun returned result: %{variant: :leaf}
11:28:08.719 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{variant: :leaf}
11:28:08.719 [debug] Executing bend with initial: 10
11:28:08.719 [debug] Executing fun with value: 10
11:28:08.719 [debug] Evaluating bend block with value: 10
11:28:08.719 [debug] Block returned: %{variant: :leaf}
11:28:08.719 [debug] Fun returned result: %{variant: :leaf}
11:28:08.719 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{variant: :leaf}
11:28:08.719 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.719 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.719 [debug] Executing bend with initial: 8
11:28:08.720 [debug] Executing fun with value: 8
11:28:08.720 [debug] Evaluating bend block with value: 8
11:28:08.720 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.720 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.720 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.720 [debug] Executing bend with initial: 9
11:28:08.720 [debug] Executing fun with value: 9
11:28:08.720 [debug] Evaluating bend block with value: 9
11:28:08.720 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.720 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.720 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.720 [debug] Executing bend with initial: 10
11:28:08.720 [debug] Executing fun with value: 10
11:28:08.720 [debug] Evaluating bend block with value: 10
11:28:08.720 [debug] Block returned: %{variant: :leaf}
11:28:08.720 [debug] Fun returned result: %{variant: :leaf}
11:28:08.720 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.720 [debug] do_bend final result: %{variant: :leaf}
11:28:08.720 [debug] Executing bend with initial: 10
11:28:08.720 [debug] Executing fun with value: 10
11:28:08.720 [debug] Evaluating bend block with value: 10
11:28:08.720 [debug] Block returned: %{variant: :leaf}
11:28:08.720 [debug] Fun returned result: %{variant: :leaf}
11:28:08.720 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.720 [debug] do_bend final result: %{variant: :leaf}
11:28:08.720 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.720 [debug] Executing bend with initial: 9
11:28:08.720 [debug] Executing fun with value: 9
11:28:08.724 [debug] Evaluating bend block with value: 9
11:28:08.724 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.724 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.724 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.724 [debug] Executing bend with initial: 10
11:28:08.724 [debug] Executing fun with value: 10
11:28:08.724 [debug] Evaluating bend block with value: 10
11:28:08.724 [debug] Block returned: %{variant: :leaf}
11:28:08.724 [debug] Fun returned result: %{variant: :leaf}
11:28:08.724 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.724 [debug] do_bend final result: %{variant: :leaf}
11:28:08.724 [debug] Executing bend with initial: 10
11:28:08.724 [debug] Executing fun with value: 10
11:28:08.724 [debug] Evaluating bend block with value: 10
11:28:08.724 [debug] Block returned: %{variant: :leaf}
11:28:08.724 [debug] Fun returned result: %{variant: :leaf}
11:28:08.724 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.724 [debug] do_bend final result: %{variant: :leaf}
11:28:08.724 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.724 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.724 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.724 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.725 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 5
11:28:08.725 [debug] Executing fun with value: 5
11:28:08.725 [debug] Evaluating bend block with value: 5
11:28:08.725 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.725 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.725 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 6
11:28:08.725 [debug] Executing fun with value: 6
11:28:08.725 [debug] Evaluating bend block with value: 6
11:28:08.725 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.725 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.725 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 7
11:28:08.725 [debug] Executing fun with value: 7
11:28:08.725 [debug] Evaluating bend block with value: 7
11:28:08.725 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.725 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.725 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 8
11:28:08.725 [debug] Executing fun with value: 8
11:28:08.725 [debug] Evaluating bend block with value: 8
11:28:08.725 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.725 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.725 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 9
11:28:08.725 [debug] Executing fun with value: 9
11:28:08.725 [debug] Evaluating bend block with value: 9
11:28:08.725 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.725 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.725 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 10
11:28:08.725 [debug] Executing fun with value: 10
11:28:08.725 [debug] Evaluating bend block with value: 10
11:28:08.725 [debug] Block returned: %{variant: :leaf}
11:28:08.725 [debug] Fun returned result: %{variant: :leaf}
11:28:08.725 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.725 [debug] do_bend final result: %{variant: :leaf}
11:28:08.725 [debug] Executing bend with initial: 10
11:28:08.725 [debug] Executing fun with value: 10
11:28:08.725 [debug] Evaluating bend block with value: 10
11:28:08.725 [debug] Block returned: %{variant: :leaf}
11:28:08.725 [debug] Fun returned result: %{variant: :leaf}
11:28:08.725 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.725 [debug] do_bend final result: %{variant: :leaf}
11:28:08.725 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 9
11:28:08.725 [debug] Executing fun with value: 9
11:28:08.725 [debug] Evaluating bend block with value: 9
11:28:08.725 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.725 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.725 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.725 [debug] Executing bend with initial: 10
11:28:08.725 [debug] Executing fun with value: 10
11:28:08.725 [debug] Evaluating bend block with value: 10
11:28:08.725 [debug] Block returned: %{variant: :leaf}
11:28:08.725 [debug] Fun returned result: %{variant: :leaf}
11:28:08.726 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{variant: :leaf}
11:28:08.726 [debug] Executing bend with initial: 10
11:28:08.726 [debug] Executing fun with value: 10
11:28:08.726 [debug] Evaluating bend block with value: 10
11:28:08.726 [debug] Block returned: %{variant: :leaf}
11:28:08.726 [debug] Fun returned result: %{variant: :leaf}
11:28:08.726 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.726 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 8
11:28:08.726 [debug] Executing fun with value: 8
11:28:08.726 [debug] Evaluating bend block with value: 8
11:28:08.726 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.726 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.726 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 9
11:28:08.726 [debug] Executing fun with value: 9
11:28:08.726 [debug] Evaluating bend block with value: 9
11:28:08.726 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 10
11:28:08.726 [debug] Executing fun with value: 10
11:28:08.726 [debug] Evaluating bend block with value: 10
11:28:08.726 [debug] Block returned: %{variant: :leaf}
11:28:08.726 [debug] Fun returned result: %{variant: :leaf}
11:28:08.726 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{variant: :leaf}
11:28:08.726 [debug] Executing bend with initial: 10
11:28:08.726 [debug] Executing fun with value: 10
11:28:08.726 [debug] Evaluating bend block with value: 10
11:28:08.726 [debug] Block returned: %{variant: :leaf}
11:28:08.726 [debug] Fun returned result: %{variant: :leaf}
11:28:08.726 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 9
11:28:08.726 [debug] Executing fun with value: 9
11:28:08.726 [debug] Evaluating bend block with value: 9
11:28:08.726 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 10
11:28:08.726 [debug] Executing fun with value: 10
11:28:08.726 [debug] Evaluating bend block with value: 10
11:28:08.726 [debug] Block returned: %{variant: :leaf}
11:28:08.726 [debug] Fun returned result: %{variant: :leaf}
11:28:08.726 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{variant: :leaf}
11:28:08.726 [debug] Executing bend with initial: 10
11:28:08.726 [debug] Executing fun with value: 10
11:28:08.726 [debug] Evaluating bend block with value: 10
11:28:08.726 [debug] Block returned: %{variant: :leaf}
11:28:08.726 [debug] Fun returned result: %{variant: :leaf}
11:28:08.726 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{variant: :leaf}
11:28:08.726 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.726 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.726 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 7
11:28:08.726 [debug] Executing fun with value: 7
11:28:08.726 [debug] Evaluating bend block with value: 7
11:28:08.726 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.726 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.726 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 8
11:28:08.726 [debug] Executing fun with value: 8
11:28:08.726 [debug] Evaluating bend block with value: 8
11:28:08.726 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.726 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.726 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 9
11:28:08.726 [debug] Executing fun with value: 9
11:28:08.726 [debug] Evaluating bend block with value: 9
11:28:08.726 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.726 [debug] Executing bend with initial: 10
11:28:08.726 [debug] Executing fun with value: 10
11:28:08.726 [debug] Evaluating bend block with value: 10
11:28:08.726 [debug] Block returned: %{variant: :leaf}
11:28:08.726 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] Executing bend with initial: 10
11:28:08.727 [debug] Executing fun with value: 10
11:28:08.727 [debug] Evaluating bend block with value: 10
11:28:08.727 [debug] Block returned: %{variant: :leaf}
11:28:08.727 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.727 [debug] Executing bend with initial: 9
11:28:08.727 [debug] Executing fun with value: 9
11:28:08.727 [debug] Evaluating bend block with value: 9
11:28:08.727 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Executing bend with initial: 10
11:28:08.727 [debug] Executing fun with value: 10
11:28:08.727 [debug] Evaluating bend block with value: 10
11:28:08.727 [debug] Block returned: %{variant: :leaf}
11:28:08.727 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] Executing bend with initial: 10
11:28:08.727 [debug] Executing fun with value: 10
11:28:08.727 [debug] Evaluating bend block with value: 10
11:28:08.727 [debug] Block returned: %{variant: :leaf}
11:28:08.727 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.727 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.727 [debug] Executing bend with initial: 8
11:28:08.727 [debug] Executing fun with value: 8
11:28:08.727 [debug] Evaluating bend block with value: 8
11:28:08.727 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.727 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.727 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.727 [debug] Executing bend with initial: 9
11:28:08.727 [debug] Executing fun with value: 9
11:28:08.727 [debug] Evaluating bend block with value: 9
11:28:08.727 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Executing bend with initial: 10
11:28:08.727 [debug] Executing fun with value: 10
11:28:08.727 [debug] Evaluating bend block with value: 10
11:28:08.727 [debug] Block returned: %{variant: :leaf}
11:28:08.727 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] Executing bend with initial: 10
11:28:08.727 [debug] Executing fun with value: 10
11:28:08.727 [debug] Evaluating bend block with value: 10
11:28:08.727 [debug] Block returned: %{variant: :leaf}
11:28:08.727 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.727 [debug] Executing bend with initial: 9
11:28:08.727 [debug] Executing fun with value: 9
11:28:08.727 [debug] Evaluating bend block with value: 9
11:28:08.727 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.727 [debug] Executing bend with initial: 10
11:28:08.727 [debug] Executing fun with value: 10
11:28:08.727 [debug] Evaluating bend block with value: 10
11:28:08.727 [debug] Block returned: %{variant: :leaf}
11:28:08.727 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] Executing bend with initial: 10
11:28:08.727 [debug] Executing fun with value: 10
11:28:08.727 [debug] Evaluating bend block with value: 10
11:28:08.727 [debug] Block returned: %{variant: :leaf}
11:28:08.727 [debug] Fun returned result: %{variant: :leaf}
11:28:08.727 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{variant: :leaf}
11:28:08.727 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.727 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.727 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.728 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 6
11:28:08.728 [debug] Executing fun with value: 6
11:28:08.728 [debug] Evaluating bend block with value: 6
11:28:08.728 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.728 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.728 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 7
11:28:08.728 [debug] Executing fun with value: 7
11:28:08.728 [debug] Evaluating bend block with value: 7
11:28:08.728 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.728 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.728 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 8
11:28:08.728 [debug] Executing fun with value: 8
11:28:08.728 [debug] Evaluating bend block with value: 8
11:28:08.728 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.728 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.728 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 9
11:28:08.728 [debug] Executing fun with value: 9
11:28:08.728 [debug] Evaluating bend block with value: 9
11:28:08.728 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 10
11:28:08.728 [debug] Executing fun with value: 10
11:28:08.728 [debug] Evaluating bend block with value: 10
11:28:08.728 [debug] Block returned: %{variant: :leaf}
11:28:08.728 [debug] Fun returned result: %{variant: :leaf}
11:28:08.728 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.728 [debug] do_bend final result: %{variant: :leaf}
11:28:08.728 [debug] Executing bend with initial: 10
11:28:08.728 [debug] Executing fun with value: 10
11:28:08.728 [debug] Evaluating bend block with value: 10
11:28:08.728 [debug] Block returned: %{variant: :leaf}
11:28:08.728 [debug] Fun returned result: %{variant: :leaf}
11:28:08.728 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.728 [debug] do_bend final result: %{variant: :leaf}
11:28:08.728 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 9
11:28:08.728 [debug] Executing fun with value: 9
11:28:08.728 [debug] Evaluating bend block with value: 9
11:28:08.728 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 10
11:28:08.728 [debug] Executing fun with value: 10
11:28:08.728 [debug] Evaluating bend block with value: 10
11:28:08.728 [debug] Block returned: %{variant: :leaf}
11:28:08.728 [debug] Fun returned result: %{variant: :leaf}
11:28:08.728 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.728 [debug] do_bend final result: %{variant: :leaf}
11:28:08.728 [debug] Executing bend with initial: 10
11:28:08.728 [debug] Executing fun with value: 10
11:28:08.728 [debug] Evaluating bend block with value: 10
11:28:08.728 [debug] Block returned: %{variant: :leaf}
11:28:08.728 [debug] Fun returned result: %{variant: :leaf}
11:28:08.728 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.728 [debug] do_bend final result: %{variant: :leaf}
11:28:08.728 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.728 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 8
11:28:08.728 [debug] Executing fun with value: 8
11:28:08.728 [debug] Evaluating bend block with value: 8
11:28:08.728 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.728 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.728 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 9
11:28:08.728 [debug] Executing fun with value: 9
11:28:08.728 [debug] Evaluating bend block with value: 9
11:28:08.728 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.728 [debug] Executing bend with initial: 10
11:28:08.728 [debug] Executing fun with value: 10
11:28:08.728 [debug] Evaluating bend block with value: 10
11:28:08.728 [debug] Block returned: %{variant: :leaf}
11:28:08.728 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] Executing bend with initial: 10
11:28:08.730 [debug] Executing fun with value: 10
11:28:08.730 [debug] Evaluating bend block with value: 10
11:28:08.730 [debug] Block returned: %{variant: :leaf}
11:28:08.730 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 9
11:28:08.730 [debug] Executing fun with value: 9
11:28:08.730 [debug] Evaluating bend block with value: 9
11:28:08.730 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 10
11:28:08.730 [debug] Executing fun with value: 10
11:28:08.730 [debug] Evaluating bend block with value: 10
11:28:08.730 [debug] Block returned: %{variant: :leaf}
11:28:08.730 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] Executing bend with initial: 10
11:28:08.730 [debug] Executing fun with value: 10
11:28:08.730 [debug] Evaluating bend block with value: 10
11:28:08.730 [debug] Block returned: %{variant: :leaf}
11:28:08.730 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.730 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.730 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 7
11:28:08.730 [debug] Executing fun with value: 7
11:28:08.730 [debug] Evaluating bend block with value: 7
11:28:08.730 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.730 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.730 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 8
11:28:08.730 [debug] Executing fun with value: 8
11:28:08.730 [debug] Evaluating bend block with value: 8
11:28:08.730 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.730 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.730 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 9
11:28:08.730 [debug] Executing fun with value: 9
11:28:08.730 [debug] Evaluating bend block with value: 9
11:28:08.730 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 10
11:28:08.730 [debug] Executing fun with value: 10
11:28:08.730 [debug] Evaluating bend block with value: 10
11:28:08.730 [debug] Block returned: %{variant: :leaf}
11:28:08.730 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] Executing bend with initial: 10
11:28:08.730 [debug] Executing fun with value: 10
11:28:08.730 [debug] Evaluating bend block with value: 10
11:28:08.730 [debug] Block returned: %{variant: :leaf}
11:28:08.730 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 9
11:28:08.730 [debug] Executing fun with value: 9
11:28:08.730 [debug] Evaluating bend block with value: 9
11:28:08.730 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.730 [debug] Executing bend with initial: 10
11:28:08.730 [debug] Executing fun with value: 10
11:28:08.730 [debug] Evaluating bend block with value: 10
11:28:08.730 [debug] Block returned: %{variant: :leaf}
11:28:08.730 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] Executing bend with initial: 10
11:28:08.730 [debug] Executing fun with value: 10
11:28:08.730 [debug] Evaluating bend block with value: 10
11:28:08.730 [debug] Block returned: %{variant: :leaf}
11:28:08.730 [debug] Fun returned result: %{variant: :leaf}
11:28:08.730 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{variant: :leaf}
11:28:08.730 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.731 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.731 [debug] Executing bend with initial: 8
11:28:08.731 [debug] Executing fun with value: 8
11:28:08.731 [debug] Evaluating bend block with value: 8
11:28:08.731 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.731 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.731 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.731 [debug] Executing bend with initial: 9
11:28:08.731 [debug] Executing fun with value: 9
11:28:08.731 [debug] Evaluating bend block with value: 9
11:28:08.731 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.731 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.731 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.731 [debug] Executing bend with initial: 10
11:28:08.731 [debug] Executing fun with value: 10
11:28:08.731 [debug] Evaluating bend block with value: 10
11:28:08.731 [debug] Block returned: %{variant: :leaf}
11:28:08.731 [debug] Fun returned result: %{variant: :leaf}
11:28:08.731 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.731 [debug] do_bend final result: %{variant: :leaf}
11:28:08.731 [debug] Executing bend with initial: 10
11:28:08.731 [debug] Executing fun with value: 10
11:28:08.731 [debug] Evaluating bend block with value: 10
11:28:08.731 [debug] Block returned: %{variant: :leaf}
11:28:08.731 [debug] Fun returned result: %{variant: :leaf}
11:28:08.731 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.731 [debug] do_bend final result: %{variant: :leaf}
11:28:08.731 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.731 [debug] Executing bend with initial: 9
11:28:08.731 [debug] Executing fun with value: 9
11:28:08.731 [debug] Evaluating bend block with value: 9
11:28:08.731 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.731 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.731 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.731 [debug] Executing bend with initial: 10
11:28:08.731 [debug] Executing fun with value: 10
11:28:08.731 [debug] Evaluating bend block with value: 10
11:28:08.731 [debug] Block returned: %{variant: :leaf}
11:28:08.731 [debug] Fun returned result: %{variant: :leaf}
11:28:08.731 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.731 [debug] do_bend final result: %{variant: :leaf}
11:28:08.731 [debug] Executing bend with initial: 10
11:28:08.731 [debug] Executing fun with value: 10
11:28:08.731 [debug] Evaluating bend block with value: 10
11:28:08.731 [debug] Block returned: %{variant: :leaf}
11:28:08.731 [debug] Fun returned result: %{variant: :leaf}
11:28:08.731 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.731 [debug] do_bend final result: %{variant: :leaf}
11:28:08.731 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.731 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.731 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.731 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.731 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.732 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 4
11:28:08.732 [debug] Executing fun with value: 4
11:28:08.732 [debug] Evaluating bend block with value: 4
11:28:08.732 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.732 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.732 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 5
11:28:08.732 [debug] Executing fun with value: 5
11:28:08.732 [debug] Evaluating bend block with value: 5
11:28:08.732 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.732 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.732 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 6
11:28:08.732 [debug] Executing fun with value: 6
11:28:08.732 [debug] Evaluating bend block with value: 6
11:28:08.732 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.732 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.732 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 7
11:28:08.732 [debug] Executing fun with value: 7
11:28:08.732 [debug] Evaluating bend block with value: 7
11:28:08.732 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.732 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.732 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 8
11:28:08.732 [debug] Executing fun with value: 8
11:28:08.732 [debug] Evaluating bend block with value: 8
11:28:08.732 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.732 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.732 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 9
11:28:08.732 [debug] Executing fun with value: 9
11:28:08.732 [debug] Evaluating bend block with value: 9
11:28:08.732 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.732 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.732 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 10
11:28:08.732 [debug] Executing fun with value: 10
11:28:08.732 [debug] Evaluating bend block with value: 10
11:28:08.732 [debug] Block returned: %{variant: :leaf}
11:28:08.732 [debug] Fun returned result: %{variant: :leaf}
11:28:08.732 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.732 [debug] do_bend final result: %{variant: :leaf}
11:28:08.732 [debug] Executing bend with initial: 10
11:28:08.732 [debug] Executing fun with value: 10
11:28:08.732 [debug] Evaluating bend block with value: 10
11:28:08.732 [debug] Block returned: %{variant: :leaf}
11:28:08.732 [debug] Fun returned result: %{variant: :leaf}
11:28:08.732 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.732 [debug] do_bend final result: %{variant: :leaf}
11:28:08.732 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.732 [debug] Executing bend with initial: 9
11:28:08.732 [debug] Executing fun with value: 9
11:28:08.732 [debug] Evaluating bend block with value: 9
11:28:08.732 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.732 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.733 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.733 [debug] Executing bend with initial: 10
11:28:08.733 [debug] Executing fun with value: 10
11:28:08.733 [debug] Evaluating bend block with value: 10
11:28:08.733 [debug] Block returned: %{variant: :leaf}
11:28:08.733 [debug] Fun returned result: %{variant: :leaf}
11:28:08.733 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.733 [debug] do_bend final result: %{variant: :leaf}
11:28:08.733 [debug] Executing bend with initial: 10
11:28:08.733 [debug] Executing fun with value: 10
11:28:08.733 [debug] Evaluating bend block with value: 10
11:28:08.733 [debug] Block returned: %{variant: :leaf}
11:28:08.733 [debug] Fun returned result: %{variant: :leaf}
11:28:08.733 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.733 [debug] do_bend final result: %{variant: :leaf}
11:28:08.733 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.733 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.733 [debug] Executing bend with initial: 8
11:28:08.733 [debug] Executing fun with value: 8
11:28:08.733 [debug] Evaluating bend block with value: 8
11:28:08.733 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.733 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.733 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.733 [debug] Executing bend with initial: 9
11:28:08.733 [debug] Executing fun with value: 9
11:28:08.733 [debug] Evaluating bend block with value: 9
11:28:08.733 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.733 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.733 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.733 [debug] Executing bend with initial: 10
11:28:08.734 [debug] Executing fun with value: 10
11:28:08.734 [debug] Evaluating bend block with value: 10
11:28:08.734 [debug] Block returned: %{variant: :leaf}
11:28:08.734 [debug] Fun returned result: %{variant: :leaf}
11:28:08.734 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.734 [debug] do_bend final result: %{variant: :leaf}
11:28:08.734 [debug] Executing bend with initial: 10
11:28:08.734 [debug] Executing fun with value: 10
11:28:08.734 [debug] Evaluating bend block with value: 10
11:28:08.734 [debug] Block returned: %{variant: :leaf}
11:28:08.734 [debug] Fun returned result: %{variant: :leaf}
11:28:08.734 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.734 [debug] do_bend final result: %{variant: :leaf}
11:28:08.734 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.734 [debug] Executing bend with initial: 9
11:28:08.734 [debug] Executing fun with value: 9
11:28:08.734 [debug] Evaluating bend block with value: 9
11:28:08.734 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.734 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.734 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.734 [debug] Executing bend with initial: 10
11:28:08.734 [debug] Executing fun with value: 10
11:28:08.734 [debug] Evaluating bend block with value: 10
11:28:08.734 [debug] Block returned: %{variant: :leaf}
11:28:08.734 [debug] Fun returned result: %{variant: :leaf}
11:28:08.734 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.734 [debug] do_bend final result: %{variant: :leaf}
11:28:08.735 [debug] Executing bend with initial: 10
11:28:08.735 [debug] Executing fun with value: 10
11:28:08.735 [debug] Evaluating bend block with value: 10
11:28:08.735 [debug] Block returned: %{variant: :leaf}
11:28:08.735 [debug] Fun returned result: %{variant: :leaf}
11:28:08.735 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.735 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.735 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 7
11:28:08.735 [debug] Executing fun with value: 7
11:28:08.735 [debug] Evaluating bend block with value: 7
11:28:08.735 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.735 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.735 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 8
11:28:08.735 [debug] Executing fun with value: 8
11:28:08.735 [debug] Evaluating bend block with value: 8
11:28:08.735 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.735 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.735 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 9
11:28:08.735 [debug] Executing fun with value: 9
11:28:08.735 [debug] Evaluating bend block with value: 9
11:28:08.735 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 10
11:28:08.735 [debug] Executing fun with value: 10
11:28:08.735 [debug] Evaluating bend block with value: 10
11:28:08.735 [debug] Block returned: %{variant: :leaf}
11:28:08.735 [debug] Fun returned result: %{variant: :leaf}
11:28:08.735 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{variant: :leaf}
11:28:08.735 [debug] Executing bend with initial: 10
11:28:08.735 [debug] Executing fun with value: 10
11:28:08.735 [debug] Evaluating bend block with value: 10
11:28:08.735 [debug] Block returned: %{variant: :leaf}
11:28:08.735 [debug] Fun returned result: %{variant: :leaf}
11:28:08.735 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 9
11:28:08.735 [debug] Executing fun with value: 9
11:28:08.735 [debug] Evaluating bend block with value: 9
11:28:08.735 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 10
11:28:08.735 [debug] Executing fun with value: 10
11:28:08.735 [debug] Evaluating bend block with value: 10
11:28:08.735 [debug] Block returned: %{variant: :leaf}
11:28:08.735 [debug] Fun returned result: %{variant: :leaf}
11:28:08.735 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{variant: :leaf}
11:28:08.735 [debug] Executing bend with initial: 10
11:28:08.735 [debug] Executing fun with value: 10
11:28:08.735 [debug] Evaluating bend block with value: 10
11:28:08.735 [debug] Block returned: %{variant: :leaf}
11:28:08.735 [debug] Fun returned result: %{variant: :leaf}
11:28:08.735 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{variant: :leaf}
11:28:08.735 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.735 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 8
11:28:08.735 [debug] Executing fun with value: 8
11:28:08.735 [debug] Evaluating bend block with value: 8
11:28:08.735 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.735 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.735 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 9
11:28:08.735 [debug] Executing fun with value: 9
11:28:08.735 [debug] Evaluating bend block with value: 9
11:28:08.735 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.735 [debug] Executing bend with initial: 10
11:28:08.735 [debug] Executing fun with value: 10
11:28:08.736 [debug] Evaluating bend block with value: 10
11:28:08.736 [debug] Block returned: %{variant: :leaf}
11:28:08.736 [debug] Fun returned result: %{variant: :leaf}
11:28:08.736 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{variant: :leaf}
11:28:08.736 [debug] Executing bend with initial: 10
11:28:08.736 [debug] Executing fun with value: 10
11:28:08.736 [debug] Evaluating bend block with value: 10
11:28:08.736 [debug] Block returned: %{variant: :leaf}
11:28:08.736 [debug] Fun returned result: %{variant: :leaf}
11:28:08.736 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 9
11:28:08.736 [debug] Executing fun with value: 9
11:28:08.736 [debug] Evaluating bend block with value: 9
11:28:08.736 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 10
11:28:08.736 [debug] Executing fun with value: 10
11:28:08.736 [debug] Evaluating bend block with value: 10
11:28:08.736 [debug] Block returned: %{variant: :leaf}
11:28:08.736 [debug] Fun returned result: %{variant: :leaf}
11:28:08.736 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{variant: :leaf}
11:28:08.736 [debug] Executing bend with initial: 10
11:28:08.736 [debug] Executing fun with value: 10
11:28:08.736 [debug] Evaluating bend block with value: 10
11:28:08.736 [debug] Block returned: %{variant: :leaf}
11:28:08.736 [debug] Fun returned result: %{variant: :leaf}
11:28:08.736 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.736 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.736 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.736 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 6
11:28:08.736 [debug] Executing fun with value: 6
11:28:08.736 [debug] Evaluating bend block with value: 6
11:28:08.736 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.736 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.736 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 7
11:28:08.736 [debug] Executing fun with value: 7
11:28:08.736 [debug] Evaluating bend block with value: 7
11:28:08.736 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.736 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.736 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 8
11:28:08.736 [debug] Executing fun with value: 8
11:28:08.736 [debug] Evaluating bend block with value: 8
11:28:08.736 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.736 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.736 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 9
11:28:08.736 [debug] Executing fun with value: 9
11:28:08.736 [debug] Evaluating bend block with value: 9
11:28:08.736 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 10
11:28:08.736 [debug] Executing fun with value: 10
11:28:08.736 [debug] Evaluating bend block with value: 10
11:28:08.736 [debug] Block returned: %{variant: :leaf}
11:28:08.736 [debug] Fun returned result: %{variant: :leaf}
11:28:08.736 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{variant: :leaf}
11:28:08.736 [debug] Executing bend with initial: 10
11:28:08.736 [debug] Executing fun with value: 10
11:28:08.736 [debug] Evaluating bend block with value: 10
11:28:08.736 [debug] Block returned: %{variant: :leaf}
11:28:08.736 [debug] Fun returned result: %{variant: :leaf}
11:28:08.736 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{variant: :leaf}
11:28:08.736 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 9
11:28:08.736 [debug] Executing fun with value: 9
11:28:08.736 [debug] Evaluating bend block with value: 9
11:28:08.736 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.736 [debug] Executing bend with initial: 10
11:28:08.736 [debug] Executing fun with value: 10
11:28:08.736 [debug] Evaluating bend block with value: 10
11:28:08.736 [debug] Block returned: %{variant: :leaf}
11:28:08.736 [debug] Fun returned result: %{variant: :leaf}
11:28:08.736 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] Executing bend with initial: 10
11:28:08.737 [debug] Executing fun with value: 10
11:28:08.737 [debug] Evaluating bend block with value: 10
11:28:08.737 [debug] Block returned: %{variant: :leaf}
11:28:08.737 [debug] Fun returned result: %{variant: :leaf}
11:28:08.737 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.737 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 8
11:28:08.737 [debug] Executing fun with value: 8
11:28:08.737 [debug] Evaluating bend block with value: 8
11:28:08.737 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.737 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.737 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 9
11:28:08.737 [debug] Executing fun with value: 9
11:28:08.737 [debug] Evaluating bend block with value: 9
11:28:08.737 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 10
11:28:08.737 [debug] Executing fun with value: 10
11:28:08.737 [debug] Evaluating bend block with value: 10
11:28:08.737 [debug] Block returned: %{variant: :leaf}
11:28:08.737 [debug] Fun returned result: %{variant: :leaf}
11:28:08.737 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] Executing bend with initial: 10
11:28:08.737 [debug] Executing fun with value: 10
11:28:08.737 [debug] Evaluating bend block with value: 10
11:28:08.737 [debug] Block returned: %{variant: :leaf}
11:28:08.737 [debug] Fun returned result: %{variant: :leaf}
11:28:08.737 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 9
11:28:08.737 [debug] Executing fun with value: 9
11:28:08.737 [debug] Evaluating bend block with value: 9
11:28:08.737 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 10
11:28:08.737 [debug] Executing fun with value: 10
11:28:08.737 [debug] Evaluating bend block with value: 10
11:28:08.737 [debug] Block returned: %{variant: :leaf}
11:28:08.737 [debug] Fun returned result: %{variant: :leaf}
11:28:08.737 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] Executing bend with initial: 10
11:28:08.737 [debug] Executing fun with value: 10
11:28:08.737 [debug] Evaluating bend block with value: 10
11:28:08.737 [debug] Block returned: %{variant: :leaf}
11:28:08.737 [debug] Fun returned result: %{variant: :leaf}
11:28:08.737 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.737 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.737 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 7
11:28:08.737 [debug] Executing fun with value: 7
11:28:08.737 [debug] Evaluating bend block with value: 7
11:28:08.737 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.737 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.737 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 8
11:28:08.737 [debug] Executing fun with value: 8
11:28:08.737 [debug] Evaluating bend block with value: 8
11:28:08.737 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.737 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.737 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 9
11:28:08.737 [debug] Executing fun with value: 9
11:28:08.737 [debug] Evaluating bend block with value: 9
11:28:08.737 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 10
11:28:08.737 [debug] Executing fun with value: 10
11:28:08.737 [debug] Evaluating bend block with value: 10
11:28:08.737 [debug] Block returned: %{variant: :leaf}
11:28:08.737 [debug] Fun returned result: %{variant: :leaf}
11:28:08.737 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] Executing bend with initial: 10
11:28:08.737 [debug] Executing fun with value: 10
11:28:08.737 [debug] Evaluating bend block with value: 10
11:28:08.737 [debug] Block returned: %{variant: :leaf}
11:28:08.737 [debug] Fun returned result: %{variant: :leaf}
11:28:08.737 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{variant: :leaf}
11:28:08.737 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.737 [debug] Executing bend with initial: 9
11:28:08.737 [debug] Executing fun with value: 9
11:28:08.737 [debug] Evaluating bend block with value: 9
11:28:08.737 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.737 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.738 [debug] Executing bend with initial: 10
11:28:08.738 [debug] Executing fun with value: 10
11:28:08.738 [debug] Evaluating bend block with value: 10
11:28:08.738 [debug] Block returned: %{variant: :leaf}
11:28:08.738 [debug] Fun returned result: %{variant: :leaf}
11:28:08.738 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{variant: :leaf}
11:28:08.738 [debug] Executing bend with initial: 10
11:28:08.738 [debug] Executing fun with value: 10
11:28:08.738 [debug] Evaluating bend block with value: 10
11:28:08.738 [debug] Block returned: %{variant: :leaf}
11:28:08.738 [debug] Fun returned result: %{variant: :leaf}
11:28:08.738 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.738 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.738 [debug] Executing bend with initial: 8
11:28:08.738 [debug] Executing fun with value: 8
11:28:08.738 [debug] Evaluating bend block with value: 8
11:28:08.738 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.738 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.738 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.738 [debug] Executing bend with initial: 9
11:28:08.738 [debug] Executing fun with value: 9
11:28:08.738 [debug] Evaluating bend block with value: 9
11:28:08.738 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.738 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.738 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.738 [debug] Executing bend with initial: 10
11:28:08.738 [debug] Executing fun with value: 10
11:28:08.738 [debug] Evaluating bend block with value: 10
11:28:08.738 [debug] Block returned: %{variant: :leaf}
11:28:08.738 [debug] Fun returned result: %{variant: :leaf}
11:28:08.738 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{variant: :leaf}
11:28:08.738 [debug] Executing bend with initial: 10
11:28:08.738 [debug] Executing fun with value: 10
11:28:08.738 [debug] Evaluating bend block with value: 10
11:28:08.738 [debug] Block returned: %{variant: :leaf}
11:28:08.738 [debug] Fun returned result: %{variant: :leaf}
11:28:08.738 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.738 [debug] Executing bend with initial: 9
11:28:08.738 [debug] Executing fun with value: 9
11:28:08.738 [debug] Evaluating bend block with value: 9
11:28:08.738 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.738 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.738 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.738 [debug] Executing bend with initial: 10
11:28:08.738 [debug] Executing fun with value: 10
11:28:08.738 [debug] Evaluating bend block with value: 10
11:28:08.738 [debug] Block returned: %{variant: :leaf}
11:28:08.738 [debug] Fun returned result: %{variant: :leaf}
11:28:08.738 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{variant: :leaf}
11:28:08.738 [debug] Executing bend with initial: 10
11:28:08.738 [debug] Executing fun with value: 10
11:28:08.738 [debug] Evaluating bend block with value: 10
11:28:08.738 [debug] Block returned: %{variant: :leaf}
11:28:08.738 [debug] Fun returned result: %{variant: :leaf}
11:28:08.738 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{variant: :leaf}
11:28:08.738 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.738 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.738 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.738 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.738 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.738 [debug] Executing bend with initial: 5
11:28:08.738 [debug] Executing fun with value: 5
11:28:08.738 [debug] Evaluating bend block with value: 5
11:28:08.738 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.738 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.738 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 6
11:28:08.739 [debug] Executing fun with value: 6
11:28:08.739 [debug] Evaluating bend block with value: 6
11:28:08.739 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 7
11:28:08.739 [debug] Executing fun with value: 7
11:28:08.739 [debug] Evaluating bend block with value: 7
11:28:08.739 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 8
11:28:08.739 [debug] Executing fun with value: 8
11:28:08.739 [debug] Evaluating bend block with value: 8
11:28:08.739 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 9
11:28:08.739 [debug] Executing fun with value: 9
11:28:08.739 [debug] Evaluating bend block with value: 9
11:28:08.739 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.739 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{variant: :leaf}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.739 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 9
11:28:08.739 [debug] Executing fun with value: 9
11:28:08.739 [debug] Evaluating bend block with value: 9
11:28:08.739 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.739 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{variant: :leaf}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.739 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.739 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 8
11:28:08.739 [debug] Executing fun with value: 8
11:28:08.739 [debug] Evaluating bend block with value: 8
11:28:08.739 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 9
11:28:08.739 [debug] Executing fun with value: 9
11:28:08.739 [debug] Evaluating bend block with value: 9
11:28:08.739 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.739 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{variant: :leaf}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.739 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 9
11:28:08.739 [debug] Executing fun with value: 9
11:28:08.739 [debug] Evaluating bend block with value: 9
11:28:08.739 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.739 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.739 [debug] do_bend final result: %{variant: :leaf}
11:28:08.739 [debug] Executing bend with initial: 10
11:28:08.739 [debug] Executing fun with value: 10
11:28:08.739 [debug] Evaluating bend block with value: 10
11:28:08.739 [debug] Block returned: %{variant: :leaf}
11:28:08.739 [debug] Fun returned result: %{variant: :leaf}
11:28:08.740 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.740 [debug] do_bend final result: %{variant: :leaf}
11:28:08.740 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.740 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.740 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.740 [debug] Executing bend with initial: 7
11:28:08.740 [debug] Executing fun with value: 7
11:28:08.740 [debug] Evaluating bend block with value: 7
11:28:08.740 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.740 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.740 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.740 [debug] Executing bend with initial: 8
11:28:08.740 [debug] Executing fun with value: 8
11:28:08.740 [debug] Evaluating bend block with value: 8
11:28:08.740 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.740 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.740 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.740 [debug] Executing bend with initial: 9
11:28:08.740 [debug] Executing fun with value: 9
11:28:08.740 [debug] Evaluating bend block with value: 9
11:28:08.740 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.740 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.740 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.740 [debug] Executing bend with initial: 10
11:28:08.740 [debug] Executing fun with value: 10
11:28:08.740 [debug] Evaluating bend block with value: 10
11:28:08.740 [debug] Block returned: %{variant: :leaf}
11:28:08.740 [debug] Fun returned result: %{variant: :leaf}
11:28:08.740 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.740 [debug] do_bend final result: %{variant: :leaf}
11:28:08.740 [debug] Executing bend with initial: 10
11:28:08.740 [debug] Executing fun with value: 10
11:28:08.740 [debug] Evaluating bend block with value: 10
11:28:08.740 [debug] Block returned: %{variant: :leaf}
11:28:08.740 [debug] Fun returned result: %{variant: :leaf}
11:28:08.740 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.740 [debug] do_bend final result: %{variant: :leaf}
11:28:08.740 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.740 [debug] Executing bend with initial: 9
11:28:08.740 [debug] Executing fun with value: 9
11:28:08.740 [debug] Evaluating bend block with value: 9
11:28:08.740 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.740 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.740 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.740 [debug] Executing bend with initial: 10
11:28:08.740 [debug] Executing fun with value: 10
11:28:08.740 [debug] Evaluating bend block with value: 10
11:28:08.740 [debug] Block returned: %{variant: :leaf}
11:28:08.740 [debug] Fun returned result: %{variant: :leaf}
11:28:08.740 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.740 [debug] do_bend final result: %{variant: :leaf}
11:28:08.740 [debug] Executing bend with initial: 10
11:28:08.740 [debug] Executing fun with value: 10
11:28:08.740 [debug] Evaluating bend block with value: 10
11:28:08.740 [debug] Block returned: %{variant: :leaf}
11:28:08.740 [debug] Fun returned result: %{variant: :leaf}
11:28:08.740 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.741 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 8
11:28:08.741 [debug] Executing fun with value: 8
11:28:08.741 [debug] Evaluating bend block with value: 8
11:28:08.741 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.741 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.741 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 9
11:28:08.741 [debug] Executing fun with value: 9
11:28:08.741 [debug] Evaluating bend block with value: 9
11:28:08.741 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 10
11:28:08.741 [debug] Executing fun with value: 10
11:28:08.741 [debug] Evaluating bend block with value: 10
11:28:08.741 [debug] Block returned: %{variant: :leaf}
11:28:08.741 [debug] Fun returned result: %{variant: :leaf}
11:28:08.741 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{variant: :leaf}
11:28:08.741 [debug] Executing bend with initial: 10
11:28:08.741 [debug] Executing fun with value: 10
11:28:08.741 [debug] Evaluating bend block with value: 10
11:28:08.741 [debug] Block returned: %{variant: :leaf}
11:28:08.741 [debug] Fun returned result: %{variant: :leaf}
11:28:08.741 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 9
11:28:08.741 [debug] Executing fun with value: 9
11:28:08.741 [debug] Evaluating bend block with value: 9
11:28:08.741 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 10
11:28:08.741 [debug] Executing fun with value: 10
11:28:08.741 [debug] Evaluating bend block with value: 10
11:28:08.741 [debug] Block returned: %{variant: :leaf}
11:28:08.741 [debug] Fun returned result: %{variant: :leaf}
11:28:08.741 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{variant: :leaf}
11:28:08.741 [debug] Executing bend with initial: 10
11:28:08.741 [debug] Executing fun with value: 10
11:28:08.741 [debug] Evaluating bend block with value: 10
11:28:08.741 [debug] Block returned: %{variant: :leaf}
11:28:08.741 [debug] Fun returned result: %{variant: :leaf}
11:28:08.741 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{variant: :leaf}
11:28:08.741 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.741 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.741 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.741 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 6
11:28:08.741 [debug] Executing fun with value: 6
11:28:08.741 [debug] Evaluating bend block with value: 6
11:28:08.741 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.741 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.741 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 7
11:28:08.741 [debug] Executing fun with value: 7
11:28:08.741 [debug] Evaluating bend block with value: 7
11:28:08.741 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.741 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.741 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 8
11:28:08.741 [debug] Executing fun with value: 8
11:28:08.741 [debug] Evaluating bend block with value: 8
11:28:08.741 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.741 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.741 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 9
11:28:08.741 [debug] Executing fun with value: 9
11:28:08.741 [debug] Evaluating bend block with value: 9
11:28:08.741 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.741 [debug] Executing bend with initial: 10
11:28:08.743 [debug] Executing fun with value: 10
11:28:08.743 [debug] Evaluating bend block with value: 10
11:28:08.743 [debug] Block returned: %{variant: :leaf}
11:28:08.743 [debug] Fun returned result: %{variant: :leaf}
11:28:08.743 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{variant: :leaf}
11:28:08.743 [debug] Executing bend with initial: 10
11:28:08.743 [debug] Executing fun with value: 10
11:28:08.743 [debug] Evaluating bend block with value: 10
11:28:08.743 [debug] Block returned: %{variant: :leaf}
11:28:08.743 [debug] Fun returned result: %{variant: :leaf}
11:28:08.743 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.743 [debug] Executing bend with initial: 9
11:28:08.743 [debug] Executing fun with value: 9
11:28:08.743 [debug] Evaluating bend block with value: 9
11:28:08.743 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Executing bend with initial: 10
11:28:08.743 [debug] Executing fun with value: 10
11:28:08.743 [debug] Evaluating bend block with value: 10
11:28:08.743 [debug] Block returned: %{variant: :leaf}
11:28:08.743 [debug] Fun returned result: %{variant: :leaf}
11:28:08.743 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{variant: :leaf}
11:28:08.743 [debug] Executing bend with initial: 10
11:28:08.743 [debug] Executing fun with value: 10
11:28:08.743 [debug] Evaluating bend block with value: 10
11:28:08.743 [debug] Block returned: %{variant: :leaf}
11:28:08.743 [debug] Fun returned result: %{variant: :leaf}
11:28:08.743 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.743 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.743 [debug] Executing bend with initial: 8
11:28:08.743 [debug] Executing fun with value: 8
11:28:08.743 [debug] Evaluating bend block with value: 8
11:28:08.743 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.743 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.743 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.743 [debug] Executing bend with initial: 9
11:28:08.743 [debug] Executing fun with value: 9
11:28:08.743 [debug] Evaluating bend block with value: 9
11:28:08.743 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Executing bend with initial: 10
11:28:08.743 [debug] Executing fun with value: 10
11:28:08.743 [debug] Evaluating bend block with value: 10
11:28:08.743 [debug] Block returned: %{variant: :leaf}
11:28:08.743 [debug] Fun returned result: %{variant: :leaf}
11:28:08.743 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{variant: :leaf}
11:28:08.743 [debug] Executing bend with initial: 10
11:28:08.743 [debug] Executing fun with value: 10
11:28:08.743 [debug] Evaluating bend block with value: 10
11:28:08.743 [debug] Block returned: %{variant: :leaf}
11:28:08.743 [debug] Fun returned result: %{variant: :leaf}
11:28:08.743 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{variant: :leaf}
11:28:08.743 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.743 [debug] Executing bend with initial: 9
11:28:08.743 [debug] Executing fun with value: 9
11:28:08.743 [debug] Evaluating bend block with value: 9
11:28:08.743 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.743 [debug] Executing bend with initial: 10
11:28:08.743 [debug] Executing fun with value: 10
11:28:08.743 [debug] Evaluating bend block with value: 10
11:28:08.744 [debug] Block returned: %{variant: :leaf}
11:28:08.744 [debug] Fun returned result: %{variant: :leaf}
11:28:08.744 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{variant: :leaf}
11:28:08.744 [debug] Executing bend with initial: 10
11:28:08.744 [debug] Executing fun with value: 10
11:28:08.744 [debug] Evaluating bend block with value: 10
11:28:08.744 [debug] Block returned: %{variant: :leaf}
11:28:08.744 [debug] Fun returned result: %{variant: :leaf}
11:28:08.744 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.744 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.744 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 7
11:28:08.744 [debug] Executing fun with value: 7
11:28:08.744 [debug] Evaluating bend block with value: 7
11:28:08.744 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.744 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.744 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 8
11:28:08.744 [debug] Executing fun with value: 8
11:28:08.744 [debug] Evaluating bend block with value: 8
11:28:08.744 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.744 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.744 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 9
11:28:08.744 [debug] Executing fun with value: 9
11:28:08.744 [debug] Evaluating bend block with value: 9
11:28:08.744 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 10
11:28:08.744 [debug] Executing fun with value: 10
11:28:08.744 [debug] Evaluating bend block with value: 10
11:28:08.744 [debug] Block returned: %{variant: :leaf}
11:28:08.744 [debug] Fun returned result: %{variant: :leaf}
11:28:08.744 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{variant: :leaf}
11:28:08.744 [debug] Executing bend with initial: 10
11:28:08.744 [debug] Executing fun with value: 10
11:28:08.744 [debug] Evaluating bend block with value: 10
11:28:08.744 [debug] Block returned: %{variant: :leaf}
11:28:08.744 [debug] Fun returned result: %{variant: :leaf}
11:28:08.744 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 9
11:28:08.744 [debug] Executing fun with value: 9
11:28:08.744 [debug] Evaluating bend block with value: 9
11:28:08.744 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 10
11:28:08.744 [debug] Executing fun with value: 10
11:28:08.744 [debug] Evaluating bend block with value: 10
11:28:08.744 [debug] Block returned: %{variant: :leaf}
11:28:08.744 [debug] Fun returned result: %{variant: :leaf}
11:28:08.744 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{variant: :leaf}
11:28:08.744 [debug] Executing bend with initial: 10
11:28:08.744 [debug] Executing fun with value: 10
11:28:08.744 [debug] Evaluating bend block with value: 10
11:28:08.744 [debug] Block returned: %{variant: :leaf}
11:28:08.744 [debug] Fun returned result: %{variant: :leaf}
11:28:08.744 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{variant: :leaf}
11:28:08.744 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.744 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 8
11:28:08.744 [debug] Executing fun with value: 8
11:28:08.744 [debug] Evaluating bend block with value: 8
11:28:08.744 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.744 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.744 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 9
11:28:08.744 [debug] Executing fun with value: 9
11:28:08.744 [debug] Evaluating bend block with value: 9
11:28:08.744 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.744 [debug] Executing bend with initial: 10
11:28:08.744 [debug] Executing fun with value: 10
11:28:08.744 [debug] Evaluating bend block with value: 10
11:28:08.745 [debug] Block returned: %{variant: :leaf}
11:28:08.745 [debug] Fun returned result: %{variant: :leaf}
11:28:08.745 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.745 [debug] do_bend final result: %{variant: :leaf}
11:28:08.745 [debug] Executing bend with initial: 10
11:28:08.745 [debug] Executing fun with value: 10
11:28:08.745 [debug] Evaluating bend block with value: 10
11:28:08.745 [debug] Block returned: %{variant: :leaf}
11:28:08.745 [debug] Fun returned result: %{variant: :leaf}
11:28:08.745 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.745 [debug] do_bend final result: %{variant: :leaf}
11:28:08.745 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.745 [debug] Executing bend with initial: 9
11:28:08.745 [debug] Executing fun with value: 9
11:28:08.745 [debug] Evaluating bend block with value: 9
11:28:08.745 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.745 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.745 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.745 [debug] Executing bend with initial: 10
11:28:08.745 [debug] Executing fun with value: 10
11:28:08.745 [debug] Evaluating bend block with value: 10
11:28:08.745 [debug] Block returned: %{variant: :leaf}
11:28:08.745 [debug] Fun returned result: %{variant: :leaf}
11:28:08.745 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.745 [debug] do_bend final result: %{variant: :leaf}
11:28:08.745 [debug] Executing bend with initial: 10
11:28:08.745 [debug] Executing fun with value: 10
11:28:08.745 [debug] Evaluating bend block with value: 10
11:28:08.745 [debug] Block returned: %{variant: :leaf}
11:28:08.745 [debug] Fun returned result: %{variant: :leaf}
11:28:08.745 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.745 [debug] do_bend final result: %{variant: :leaf}
11:28:08.745 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.745 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.745 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.745 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.745 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.746 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.747 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.748 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
11:28:08.753 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, (truncated)
11:28:08.753 [debug] Executing bend with initial: 1
11:28:08.753 [debug] Executing fun with value: 1
11:28:08.753 [debug] Evaluating bend block with value: 1
11:28:08.753 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.753 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.753 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
11:28:08.753 [debug] Executing bend with initial: 2
11:28:08.753 [debug] Executing fun with value: 2
11:28:08.753 [debug] Evaluating bend block with value: 2
11:28:08.753 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.753 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.753 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.753 [debug] Executing bend with initial: 3
11:28:08.753 [debug] Executing fun with value: 3
11:28:08.753 [debug] Evaluating bend block with value: 3
11:28:08.753 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.753 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.753 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.753 [debug] Executing bend with initial: 4
11:28:08.753 [debug] Executing fun with value: 4
11:28:08.753 [debug] Evaluating bend block with value: 4
11:28:08.753 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.754 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 5
11:28:08.754 [debug] Executing fun with value: 5
11:28:08.754 [debug] Evaluating bend block with value: 5
11:28:08.754 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.754 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 6
11:28:08.754 [debug] Executing fun with value: 6
11:28:08.754 [debug] Evaluating bend block with value: 6
11:28:08.754 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.754 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 7
11:28:08.754 [debug] Executing fun with value: 7
11:28:08.754 [debug] Evaluating bend block with value: 7
11:28:08.754 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.754 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 8
11:28:08.754 [debug] Executing fun with value: 8
11:28:08.754 [debug] Evaluating bend block with value: 8
11:28:08.754 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.754 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 9
11:28:08.754 [debug] Executing fun with value: 9
11:28:08.754 [debug] Evaluating bend block with value: 9
11:28:08.754 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.754 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 10
11:28:08.754 [debug] Executing fun with value: 10
11:28:08.754 [debug] Evaluating bend block with value: 10
11:28:08.754 [debug] Block returned: %{variant: :leaf}
11:28:08.754 [debug] Fun returned result: %{variant: :leaf}
11:28:08.754 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.754 [debug] do_bend final result: %{variant: :leaf}
11:28:08.754 [debug] Executing bend with initial: 10
11:28:08.754 [debug] Executing fun with value: 10
11:28:08.754 [debug] Evaluating bend block with value: 10
11:28:08.754 [debug] Block returned: %{variant: :leaf}
11:28:08.754 [debug] Fun returned result: %{variant: :leaf}
11:28:08.754 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.754 [debug] do_bend final result: %{variant: :leaf}
11:28:08.754 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 9
11:28:08.754 [debug] Executing fun with value: 9
11:28:08.754 [debug] Evaluating bend block with value: 9
11:28:08.754 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.754 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 10
11:28:08.754 [debug] Executing fun with value: 10
11:28:08.754 [debug] Evaluating bend block with value: 10
11:28:08.754 [debug] Block returned: %{variant: :leaf}
11:28:08.754 [debug] Fun returned result: %{variant: :leaf}
11:28:08.754 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.754 [debug] do_bend final result: %{variant: :leaf}
11:28:08.754 [debug] Executing bend with initial: 10
11:28:08.754 [debug] Executing fun with value: 10
11:28:08.754 [debug] Evaluating bend block with value: 10
11:28:08.754 [debug] Block returned: %{variant: :leaf}
11:28:08.754 [debug] Fun returned result: %{variant: :leaf}
11:28:08.754 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.754 [debug] do_bend final result: %{variant: :leaf}
11:28:08.754 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.754 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.754 [debug] Executing bend with initial: 8
11:28:08.754 [debug] Executing fun with value: 8
11:28:08.754 [debug] Evaluating bend block with value: 8
11:28:08.754 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.754 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.755 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 9
11:28:08.755 [debug] Executing fun with value: 9
11:28:08.755 [debug] Evaluating bend block with value: 9
11:28:08.755 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 10
11:28:08.755 [debug] Executing fun with value: 10
11:28:08.755 [debug] Evaluating bend block with value: 10
11:28:08.755 [debug] Block returned: %{variant: :leaf}
11:28:08.755 [debug] Fun returned result: %{variant: :leaf}
11:28:08.755 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.755 [debug] do_bend final result: %{variant: :leaf}
11:28:08.755 [debug] Executing bend with initial: 10
11:28:08.755 [debug] Executing fun with value: 10
11:28:08.755 [debug] Evaluating bend block with value: 10
11:28:08.755 [debug] Block returned: %{variant: :leaf}
11:28:08.755 [debug] Fun returned result: %{variant: :leaf}
11:28:08.755 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.755 [debug] do_bend final result: %{variant: :leaf}
11:28:08.755 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 9
11:28:08.755 [debug] Executing fun with value: 9
11:28:08.755 [debug] Evaluating bend block with value: 9
11:28:08.755 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 10
11:28:08.755 [debug] Executing fun with value: 10
11:28:08.755 [debug] Evaluating bend block with value: 10
11:28:08.755 [debug] Block returned: %{variant: :leaf}
11:28:08.755 [debug] Fun returned result: %{variant: :leaf}
11:28:08.755 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.755 [debug] do_bend final result: %{variant: :leaf}
11:28:08.755 [debug] Executing bend with initial: 10
11:28:08.755 [debug] Executing fun with value: 10
11:28:08.755 [debug] Evaluating bend block with value: 10
11:28:08.755 [debug] Block returned: %{variant: :leaf}
11:28:08.755 [debug] Fun returned result: %{variant: :leaf}
11:28:08.755 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.755 [debug] do_bend final result: %{variant: :leaf}
11:28:08.755 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.755 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.755 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 7
11:28:08.755 [debug] Executing fun with value: 7
11:28:08.755 [debug] Evaluating bend block with value: 7
11:28:08.755 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.755 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.755 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 8
11:28:08.755 [debug] Executing fun with value: 8
11:28:08.755 [debug] Evaluating bend block with value: 8
11:28:08.755 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.755 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.755 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 9
11:28:08.755 [debug] Executing fun with value: 9
11:28:08.755 [debug] Evaluating bend block with value: 9
11:28:08.755 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.755 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.756 [debug] Block returned: %{variant: :leaf}
11:28:08.756 [debug] Fun returned result: %{variant: :leaf}
11:28:08.756 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{variant: :leaf}
11:28:08.756 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.756 [debug] Block returned: %{variant: :leaf}
11:28:08.756 [debug] Fun returned result: %{variant: :leaf}
11:28:08.756 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.756 [debug] Executing bend with initial: 9
11:28:08.756 [debug] Executing fun with value: 9
11:28:08.756 [debug] Evaluating bend block with value: 9
11:28:08.756 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.756 [debug] Block returned: %{variant: :leaf}
11:28:08.756 [debug] Fun returned result: %{variant: :leaf}
11:28:08.756 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{variant: :leaf}
11:28:08.756 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.756 [debug] Block returned: %{variant: :leaf}
11:28:08.756 [debug] Fun returned result: %{variant: :leaf}
11:28:08.756 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.756 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.756 [debug] Executing bend with initial: 8
11:28:08.756 [debug] Executing fun with value: 8
11:28:08.756 [debug] Evaluating bend block with value: 8
11:28:08.756 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.756 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.756 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.756 [debug] Executing bend with initial: 9
11:28:08.756 [debug] Executing fun with value: 9
11:28:08.756 [debug] Evaluating bend block with value: 9
11:28:08.756 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.756 [debug] Block returned: %{variant: :leaf}
11:28:08.756 [debug] Fun returned result: %{variant: :leaf}
11:28:08.756 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{variant: :leaf}
11:28:08.756 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.756 [debug] Block returned: %{variant: :leaf}
11:28:08.756 [debug] Fun returned result: %{variant: :leaf}
11:28:08.756 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.756 [debug] Executing bend with initial: 9
11:28:08.756 [debug] Executing fun with value: 9
11:28:08.756 [debug] Evaluating bend block with value: 9
11:28:08.756 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.756 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.756 [debug] Block returned: %{variant: :leaf}
11:28:08.756 [debug] Fun returned result: %{variant: :leaf}
11:28:08.756 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.756 [debug] do_bend final result: %{variant: :leaf}
11:28:08.756 [debug] Executing bend with initial: 10
11:28:08.756 [debug] Executing fun with value: 10
11:28:08.756 [debug] Evaluating bend block with value: 10
11:28:08.757 [debug] Block returned: %{variant: :leaf}
11:28:08.757 [debug] Fun returned result: %{variant: :leaf}
11:28:08.757 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.757 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.757 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.757 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 6
11:28:08.757 [debug] Executing fun with value: 6
11:28:08.757 [debug] Evaluating bend block with value: 6
11:28:08.757 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.757 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.757 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 7
11:28:08.757 [debug] Executing fun with value: 7
11:28:08.757 [debug] Evaluating bend block with value: 7
11:28:08.757 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.757 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.757 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 8
11:28:08.757 [debug] Executing fun with value: 8
11:28:08.757 [debug] Evaluating bend block with value: 8
11:28:08.757 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.757 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.757 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 9
11:28:08.757 [debug] Executing fun with value: 9
11:28:08.757 [debug] Evaluating bend block with value: 9
11:28:08.757 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.757 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.757 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 10
11:28:08.757 [debug] Executing fun with value: 10
11:28:08.757 [debug] Evaluating bend block with value: 10
11:28:08.757 [debug] Block returned: %{variant: :leaf}
11:28:08.757 [debug] Fun returned result: %{variant: :leaf}
11:28:08.757 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{variant: :leaf}
11:28:08.757 [debug] Executing bend with initial: 10
11:28:08.757 [debug] Executing fun with value: 10
11:28:08.757 [debug] Evaluating bend block with value: 10
11:28:08.757 [debug] Block returned: %{variant: :leaf}
11:28:08.757 [debug] Fun returned result: %{variant: :leaf}
11:28:08.757 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 9
11:28:08.757 [debug] Executing fun with value: 9
11:28:08.757 [debug] Evaluating bend block with value: 9
11:28:08.757 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.757 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.757 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 10
11:28:08.757 [debug] Executing fun with value: 10
11:28:08.757 [debug] Evaluating bend block with value: 10
11:28:08.757 [debug] Block returned: %{variant: :leaf}
11:28:08.757 [debug] Fun returned result: %{variant: :leaf}
11:28:08.757 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{variant: :leaf}
11:28:08.757 [debug] Executing bend with initial: 10
11:28:08.757 [debug] Executing fun with value: 10
11:28:08.757 [debug] Evaluating bend block with value: 10
11:28:08.757 [debug] Block returned: %{variant: :leaf}
11:28:08.757 [debug] Fun returned result: %{variant: :leaf}
11:28:08.757 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{variant: :leaf}
11:28:08.757 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.757 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 8
11:28:08.757 [debug] Executing fun with value: 8
11:28:08.757 [debug] Evaluating bend block with value: 8
11:28:08.757 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.757 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.757 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.757 [debug] Executing bend with initial: 9
11:28:08.757 [debug] Executing fun with value: 9
11:28:08.757 [debug] Evaluating bend block with value: 9
11:28:08.757 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 10
11:28:08.758 [debug] Executing fun with value: 10
11:28:08.758 [debug] Evaluating bend block with value: 10
11:28:08.758 [debug] Block returned: %{variant: :leaf}
11:28:08.758 [debug] Fun returned result: %{variant: :leaf}
11:28:08.758 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{variant: :leaf}
11:28:08.758 [debug] Executing bend with initial: 10
11:28:08.758 [debug] Executing fun with value: 10
11:28:08.758 [debug] Evaluating bend block with value: 10
11:28:08.758 [debug] Block returned: %{variant: :leaf}
11:28:08.758 [debug] Fun returned result: %{variant: :leaf}
11:28:08.758 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 9
11:28:08.758 [debug] Executing fun with value: 9
11:28:08.758 [debug] Evaluating bend block with value: 9
11:28:08.758 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 10
11:28:08.758 [debug] Executing fun with value: 10
11:28:08.758 [debug] Evaluating bend block with value: 10
11:28:08.758 [debug] Block returned: %{variant: :leaf}
11:28:08.758 [debug] Fun returned result: %{variant: :leaf}
11:28:08.758 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{variant: :leaf}
11:28:08.758 [debug] Executing bend with initial: 10
11:28:08.758 [debug] Executing fun with value: 10
11:28:08.758 [debug] Evaluating bend block with value: 10
11:28:08.758 [debug] Block returned: %{variant: :leaf}
11:28:08.758 [debug] Fun returned result: %{variant: :leaf}
11:28:08.758 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.758 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.758 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 7
11:28:08.758 [debug] Executing fun with value: 7
11:28:08.758 [debug] Evaluating bend block with value: 7
11:28:08.758 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.758 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.758 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 8
11:28:08.758 [debug] Executing fun with value: 8
11:28:08.758 [debug] Evaluating bend block with value: 8
11:28:08.758 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.758 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.758 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 9
11:28:08.758 [debug] Executing fun with value: 9
11:28:08.758 [debug] Evaluating bend block with value: 9
11:28:08.758 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 10
11:28:08.758 [debug] Executing fun with value: 10
11:28:08.758 [debug] Evaluating bend block with value: 10
11:28:08.758 [debug] Block returned: %{variant: :leaf}
11:28:08.758 [debug] Fun returned result: %{variant: :leaf}
11:28:08.758 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{variant: :leaf}
11:28:08.758 [debug] Executing bend with initial: 10
11:28:08.758 [debug] Executing fun with value: 10
11:28:08.758 [debug] Evaluating bend block with value: 10
11:28:08.758 [debug] Block returned: %{variant: :leaf}
11:28:08.758 [debug] Fun returned result: %{variant: :leaf}
11:28:08.758 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{variant: :leaf}
11:28:08.758 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 9
11:28:08.758 [debug] Executing fun with value: 9
11:28:08.758 [debug] Evaluating bend block with value: 9
11:28:08.758 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.758 [debug] Executing bend with initial: 10
11:28:08.758 [debug] Executing fun with value: 10
11:28:08.758 [debug] Evaluating bend block with value: 10
11:28:08.758 [debug] Block returned: %{variant: :leaf}
11:28:08.758 [debug] Fun returned result: %{variant: :leaf}
11:28:08.759 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{variant: :leaf}
11:28:08.759 [debug] Executing bend with initial: 10
11:28:08.759 [debug] Executing fun with value: 10
11:28:08.759 [debug] Evaluating bend block with value: 10
11:28:08.759 [debug] Block returned: %{variant: :leaf}
11:28:08.759 [debug] Fun returned result: %{variant: :leaf}
11:28:08.759 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.759 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.759 [debug] Executing bend with initial: 8
11:28:08.759 [debug] Executing fun with value: 8
11:28:08.759 [debug] Evaluating bend block with value: 8
11:28:08.759 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.759 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.759 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.759 [debug] Executing bend with initial: 9
11:28:08.759 [debug] Executing fun with value: 9
11:28:08.759 [debug] Evaluating bend block with value: 9
11:28:08.759 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.759 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.759 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.759 [debug] Executing bend with initial: 10
11:28:08.759 [debug] Executing fun with value: 10
11:28:08.759 [debug] Evaluating bend block with value: 10
11:28:08.759 [debug] Block returned: %{variant: :leaf}
11:28:08.759 [debug] Fun returned result: %{variant: :leaf}
11:28:08.759 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{variant: :leaf}
11:28:08.759 [debug] Executing bend with initial: 10
11:28:08.759 [debug] Executing fun with value: 10
11:28:08.759 [debug] Evaluating bend block with value: 10
11:28:08.759 [debug] Block returned: %{variant: :leaf}
11:28:08.759 [debug] Fun returned result: %{variant: :leaf}
11:28:08.759 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.759 [debug] Executing bend with initial: 9
11:28:08.759 [debug] Executing fun with value: 9
11:28:08.759 [debug] Evaluating bend block with value: 9
11:28:08.759 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.759 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.759 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.759 [debug] Executing bend with initial: 10
11:28:08.759 [debug] Executing fun with value: 10
11:28:08.759 [debug] Evaluating bend block with value: 10
11:28:08.759 [debug] Block returned: %{variant: :leaf}
11:28:08.759 [debug] Fun returned result: %{variant: :leaf}
11:28:08.759 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{variant: :leaf}
11:28:08.759 [debug] Executing bend with initial: 10
11:28:08.759 [debug] Executing fun with value: 10
11:28:08.759 [debug] Evaluating bend block with value: 10
11:28:08.759 [debug] Block returned: %{variant: :leaf}
11:28:08.759 [debug] Fun returned result: %{variant: :leaf}
11:28:08.759 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{variant: :leaf}
11:28:08.759 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.759 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.759 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.759 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.760 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.760 [debug] Executing bend with initial: 5
11:28:08.760 [debug] Executing fun with value: 5
11:28:08.760 [debug] Evaluating bend block with value: 5
11:28:08.760 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.760 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.760 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.760 [debug] Executing bend with initial: 6
11:28:08.760 [debug] Executing fun with value: 6
11:28:08.760 [debug] Evaluating bend block with value: 6
11:28:08.760 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.760 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.760 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.760 [debug] Executing bend with initial: 7
11:28:08.760 [debug] Executing fun with value: 7
11:28:08.760 [debug] Evaluating bend block with value: 7
11:28:08.760 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.760 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.760 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.760 [debug] Executing bend with initial: 8
11:28:08.760 [debug] Executing fun with value: 8
11:28:08.760 [debug] Evaluating bend block with value: 8
11:28:08.760 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.760 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.760 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.760 [debug] Executing bend with initial: 9
11:28:08.760 [debug] Executing fun with value: 9
11:28:08.760 [debug] Evaluating bend block with value: 9
11:28:08.760 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.760 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.760 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.760 [debug] Executing bend with initial: 10
11:28:08.760 [debug] Executing fun with value: 10
11:28:08.760 [debug] Evaluating bend block with value: 10
11:28:08.760 [debug] Block returned: %{variant: :leaf}
11:28:08.760 [debug] Fun returned result: %{variant: :leaf}
11:28:08.760 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.760 [debug] do_bend final result: %{variant: :leaf}
11:28:08.760 [debug] Executing bend with initial: 10
11:28:08.760 [debug] Executing fun with value: 10
11:28:08.760 [debug] Evaluating bend block with value: 10
11:28:08.760 [debug] Block returned: %{variant: :leaf}
11:28:08.760 [debug] Fun returned result: %{variant: :leaf}
11:28:08.760 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.760 [debug] do_bend final result: %{variant: :leaf}
11:28:08.760 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.760 [debug] Executing bend with initial: 9
11:28:08.760 [debug] Executing fun with value: 9
11:28:08.760 [debug] Evaluating bend block with value: 9
11:28:08.760 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.760 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.760 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.761 [debug] Executing bend with initial: 10
11:28:08.761 [debug] Executing fun with value: 10
11:28:08.761 [debug] Evaluating bend block with value: 10
11:28:08.761 [debug] Block returned: %{variant: :leaf}
11:28:08.761 [debug] Fun returned result: %{variant: :leaf}
11:28:08.761 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{variant: :leaf}
11:28:08.761 [debug] Executing bend with initial: 10
11:28:08.761 [debug] Executing fun with value: 10
11:28:08.761 [debug] Evaluating bend block with value: 10
11:28:08.761 [debug] Block returned: %{variant: :leaf}
11:28:08.761 [debug] Fun returned result: %{variant: :leaf}
11:28:08.761 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.761 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.761 [debug] Executing bend with initial: 8
11:28:08.761 [debug] Executing fun with value: 8
11:28:08.761 [debug] Evaluating bend block with value: 8
11:28:08.761 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.761 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.761 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.761 [debug] Executing bend with initial: 9
11:28:08.761 [debug] Executing fun with value: 9
11:28:08.761 [debug] Evaluating bend block with value: 9
11:28:08.761 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.761 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.761 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.761 [debug] Executing bend with initial: 10
11:28:08.761 [debug] Executing fun with value: 10
11:28:08.761 [debug] Evaluating bend block with value: 10
11:28:08.761 [debug] Block returned: %{variant: :leaf}
11:28:08.761 [debug] Fun returned result: %{variant: :leaf}
11:28:08.761 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{variant: :leaf}
11:28:08.761 [debug] Executing bend with initial: 10
11:28:08.761 [debug] Executing fun with value: 10
11:28:08.761 [debug] Evaluating bend block with value: 10
11:28:08.761 [debug] Block returned: %{variant: :leaf}
11:28:08.761 [debug] Fun returned result: %{variant: :leaf}
11:28:08.761 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.761 [debug] Executing bend with initial: 9
11:28:08.761 [debug] Executing fun with value: 9
11:28:08.761 [debug] Evaluating bend block with value: 9
11:28:08.761 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.761 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.761 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.761 [debug] Executing bend with initial: 10
11:28:08.761 [debug] Executing fun with value: 10
11:28:08.761 [debug] Evaluating bend block with value: 10
11:28:08.761 [debug] Block returned: %{variant: :leaf}
11:28:08.761 [debug] Fun returned result: %{variant: :leaf}
11:28:08.761 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{variant: :leaf}
11:28:08.761 [debug] Executing bend with initial: 10
11:28:08.761 [debug] Executing fun with value: 10
11:28:08.761 [debug] Evaluating bend block with value: 10
11:28:08.761 [debug] Block returned: %{variant: :leaf}
11:28:08.761 [debug] Fun returned result: %{variant: :leaf}
11:28:08.761 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{variant: :leaf}
11:28:08.761 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.761 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.761 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.761 [debug] Executing bend with initial: 7
11:28:08.761 [debug] Executing fun with value: 7
11:28:08.761 [debug] Evaluating bend block with value: 7
11:28:08.762 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.762 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.762 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 8
11:28:08.762 [debug] Executing fun with value: 8
11:28:08.762 [debug] Evaluating bend block with value: 8
11:28:08.762 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.762 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.762 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 9
11:28:08.762 [debug] Executing fun with value: 9
11:28:08.762 [debug] Evaluating bend block with value: 9
11:28:08.762 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 10
11:28:08.762 [debug] Executing fun with value: 10
11:28:08.762 [debug] Evaluating bend block with value: 10
11:28:08.762 [debug] Block returned: %{variant: :leaf}
11:28:08.762 [debug] Fun returned result: %{variant: :leaf}
11:28:08.762 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{variant: :leaf}
11:28:08.762 [debug] Executing bend with initial: 10
11:28:08.762 [debug] Executing fun with value: 10
11:28:08.762 [debug] Evaluating bend block with value: 10
11:28:08.762 [debug] Block returned: %{variant: :leaf}
11:28:08.762 [debug] Fun returned result: %{variant: :leaf}
11:28:08.762 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 9
11:28:08.762 [debug] Executing fun with value: 9
11:28:08.762 [debug] Evaluating bend block with value: 9
11:28:08.762 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 10
11:28:08.762 [debug] Executing fun with value: 10
11:28:08.762 [debug] Evaluating bend block with value: 10
11:28:08.762 [debug] Block returned: %{variant: :leaf}
11:28:08.762 [debug] Fun returned result: %{variant: :leaf}
11:28:08.762 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{variant: :leaf}
11:28:08.762 [debug] Executing bend with initial: 10
11:28:08.762 [debug] Executing fun with value: 10
11:28:08.762 [debug] Evaluating bend block with value: 10
11:28:08.762 [debug] Block returned: %{variant: :leaf}
11:28:08.762 [debug] Fun returned result: %{variant: :leaf}
11:28:08.762 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.762 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 8
11:28:08.762 [debug] Executing fun with value: 8
11:28:08.762 [debug] Evaluating bend block with value: 8
11:28:08.762 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.762 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.762 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 9
11:28:08.762 [debug] Executing fun with value: 9
11:28:08.762 [debug] Evaluating bend block with value: 9
11:28:08.762 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 10
11:28:08.762 [debug] Executing fun with value: 10
11:28:08.762 [debug] Evaluating bend block with value: 10
11:28:08.762 [debug] Block returned: %{variant: :leaf}
11:28:08.762 [debug] Fun returned result: %{variant: :leaf}
11:28:08.762 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{variant: :leaf}
11:28:08.762 [debug] Executing bend with initial: 10
11:28:08.762 [debug] Executing fun with value: 10
11:28:08.762 [debug] Evaluating bend block with value: 10
11:28:08.762 [debug] Block returned: %{variant: :leaf}
11:28:08.762 [debug] Fun returned result: %{variant: :leaf}
11:28:08.762 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{variant: :leaf}
11:28:08.762 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 9
11:28:08.762 [debug] Executing fun with value: 9
11:28:08.762 [debug] Evaluating bend block with value: 9
11:28:08.762 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.762 [debug] Executing bend with initial: 10
11:28:08.762 [debug] Executing fun with value: 10
11:28:08.762 [debug] Evaluating bend block with value: 10
11:28:08.763 [debug] Block returned: %{variant: :leaf}
11:28:08.763 [debug] Fun returned result: %{variant: :leaf}
11:28:08.763 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{variant: :leaf}
11:28:08.763 [debug] Executing bend with initial: 10
11:28:08.763 [debug] Executing fun with value: 10
11:28:08.763 [debug] Evaluating bend block with value: 10
11:28:08.763 [debug] Block returned: %{variant: :leaf}
11:28:08.763 [debug] Fun returned result: %{variant: :leaf}
11:28:08.763 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.763 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.763 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.763 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 6
11:28:08.763 [debug] Executing fun with value: 6
11:28:08.763 [debug] Evaluating bend block with value: 6
11:28:08.763 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.763 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.763 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 7
11:28:08.763 [debug] Executing fun with value: 7
11:28:08.763 [debug] Evaluating bend block with value: 7
11:28:08.763 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.763 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.763 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 8
11:28:08.763 [debug] Executing fun with value: 8
11:28:08.763 [debug] Evaluating bend block with value: 8
11:28:08.763 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.763 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.763 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 9
11:28:08.763 [debug] Executing fun with value: 9
11:28:08.763 [debug] Evaluating bend block with value: 9
11:28:08.763 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.763 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.763 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 10
11:28:08.763 [debug] Executing fun with value: 10
11:28:08.763 [debug] Evaluating bend block with value: 10
11:28:08.763 [debug] Block returned: %{variant: :leaf}
11:28:08.763 [debug] Fun returned result: %{variant: :leaf}
11:28:08.763 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{variant: :leaf}
11:28:08.763 [debug] Executing bend with initial: 10
11:28:08.763 [debug] Executing fun with value: 10
11:28:08.763 [debug] Evaluating bend block with value: 10
11:28:08.763 [debug] Block returned: %{variant: :leaf}
11:28:08.763 [debug] Fun returned result: %{variant: :leaf}
11:28:08.763 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 9
11:28:08.763 [debug] Executing fun with value: 9
11:28:08.763 [debug] Evaluating bend block with value: 9
11:28:08.763 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.763 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.763 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 10
11:28:08.763 [debug] Executing fun with value: 10
11:28:08.763 [debug] Evaluating bend block with value: 10
11:28:08.763 [debug] Block returned: %{variant: :leaf}
11:28:08.763 [debug] Fun returned result: %{variant: :leaf}
11:28:08.763 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{variant: :leaf}
11:28:08.763 [debug] Executing bend with initial: 10
11:28:08.763 [debug] Executing fun with value: 10
11:28:08.763 [debug] Evaluating bend block with value: 10
11:28:08.763 [debug] Block returned: %{variant: :leaf}
11:28:08.763 [debug] Fun returned result: %{variant: :leaf}
11:28:08.763 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{variant: :leaf}
11:28:08.763 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.763 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 8
11:28:08.763 [debug] Executing fun with value: 8
11:28:08.763 [debug] Evaluating bend block with value: 8
11:28:08.763 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.763 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.763 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.763 [debug] Executing bend with initial: 9
11:28:08.763 [debug] Executing fun with value: 9
11:28:08.764 [debug] Evaluating bend block with value: 9
11:28:08.764 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.764 [debug] Fun returned result: %{variant: :leaf}
11:28:08.764 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{variant: :leaf}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.764 [debug] Fun returned result: %{variant: :leaf}
11:28:08.764 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 9
11:28:08.764 [debug] Executing fun with value: 9
11:28:08.764 [debug] Evaluating bend block with value: 9
11:28:08.764 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.764 [debug] Fun returned result: %{variant: :leaf}
11:28:08.764 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{variant: :leaf}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.764 [debug] Fun returned result: %{variant: :leaf}
11:28:08.764 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.764 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.764 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 7
11:28:08.764 [debug] Executing fun with value: 7
11:28:08.764 [debug] Evaluating bend block with value: 7
11:28:08.764 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.764 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.764 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 8
11:28:08.764 [debug] Executing fun with value: 8
11:28:08.764 [debug] Evaluating bend block with value: 8
11:28:08.764 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.764 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.764 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 9
11:28:08.764 [debug] Executing fun with value: 9
11:28:08.764 [debug] Evaluating bend block with value: 9
11:28:08.764 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.764 [debug] Fun returned result: %{variant: :leaf}
11:28:08.764 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{variant: :leaf}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.764 [debug] Fun returned result: %{variant: :leaf}
11:28:08.764 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 9
11:28:08.764 [debug] Executing fun with value: 9
11:28:08.764 [debug] Evaluating bend block with value: 9
11:28:08.764 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.764 [debug] Fun returned result: %{variant: :leaf}
11:28:08.764 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.764 [debug] do_bend final result: %{variant: :leaf}
11:28:08.764 [debug] Executing bend with initial: 10
11:28:08.764 [debug] Executing fun with value: 10
11:28:08.764 [debug] Evaluating bend block with value: 10
11:28:08.764 [debug] Block returned: %{variant: :leaf}
11:28:08.765 [debug] Fun returned result: %{variant: :leaf}
11:28:08.765 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.765 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.765 [debug] Executing bend with initial: 8
11:28:08.765 [debug] Executing fun with value: 8
11:28:08.765 [debug] Evaluating bend block with value: 8
11:28:08.765 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.765 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.765 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.765 [debug] Executing bend with initial: 9
11:28:08.765 [debug] Executing fun with value: 9
11:28:08.765 [debug] Evaluating bend block with value: 9
11:28:08.765 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.765 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.765 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.765 [debug] Executing bend with initial: 10
11:28:08.765 [debug] Executing fun with value: 10
11:28:08.765 [debug] Evaluating bend block with value: 10
11:28:08.765 [debug] Block returned: %{variant: :leaf}
11:28:08.765 [debug] Fun returned result: %{variant: :leaf}
11:28:08.765 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{variant: :leaf}
11:28:08.765 [debug] Executing bend with initial: 10
11:28:08.765 [debug] Executing fun with value: 10
11:28:08.765 [debug] Evaluating bend block with value: 10
11:28:08.765 [debug] Block returned: %{variant: :leaf}
11:28:08.765 [debug] Fun returned result: %{variant: :leaf}
11:28:08.765 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.765 [debug] Executing bend with initial: 9
11:28:08.765 [debug] Executing fun with value: 9
11:28:08.765 [debug] Evaluating bend block with value: 9
11:28:08.765 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.765 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.765 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.765 [debug] Executing bend with initial: 10
11:28:08.765 [debug] Executing fun with value: 10
11:28:08.765 [debug] Evaluating bend block with value: 10
11:28:08.765 [debug] Block returned: %{variant: :leaf}
11:28:08.765 [debug] Fun returned result: %{variant: :leaf}
11:28:08.765 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{variant: :leaf}
11:28:08.765 [debug] Executing bend with initial: 10
11:28:08.765 [debug] Executing fun with value: 10
11:28:08.765 [debug] Evaluating bend block with value: 10
11:28:08.765 [debug] Block returned: %{variant: :leaf}
11:28:08.765 [debug] Fun returned result: %{variant: :leaf}
11:28:08.765 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{variant: :leaf}
11:28:08.765 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.765 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.765 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.765 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.766 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.766 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 4
11:28:08.766 [debug] Executing fun with value: 4
11:28:08.766 [debug] Evaluating bend block with value: 4
11:28:08.766 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.766 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.766 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 5
11:28:08.766 [debug] Executing fun with value: 5
11:28:08.766 [debug] Evaluating bend block with value: 5
11:28:08.766 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.766 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.766 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 6
11:28:08.766 [debug] Executing fun with value: 6
11:28:08.766 [debug] Evaluating bend block with value: 6
11:28:08.766 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.766 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.766 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 7
11:28:08.766 [debug] Executing fun with value: 7
11:28:08.766 [debug] Evaluating bend block with value: 7
11:28:08.766 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.766 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.766 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 8
11:28:08.766 [debug] Executing fun with value: 8
11:28:08.766 [debug] Evaluating bend block with value: 8
11:28:08.766 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.766 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.766 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 9
11:28:08.766 [debug] Executing fun with value: 9
11:28:08.766 [debug] Evaluating bend block with value: 9
11:28:08.766 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.766 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.766 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 10
11:28:08.766 [debug] Executing fun with value: 10
11:28:08.766 [debug] Evaluating bend block with value: 10
11:28:08.766 [debug] Block returned: %{variant: :leaf}
11:28:08.766 [debug] Fun returned result: %{variant: :leaf}
11:28:08.766 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.766 [debug] do_bend final result: %{variant: :leaf}
11:28:08.766 [debug] Executing bend with initial: 10
11:28:08.766 [debug] Executing fun with value: 10
11:28:08.766 [debug] Evaluating bend block with value: 10
11:28:08.766 [debug] Block returned: %{variant: :leaf}
11:28:08.766 [debug] Fun returned result: %{variant: :leaf}
11:28:08.766 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.766 [debug] do_bend final result: %{variant: :leaf}
11:28:08.766 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 9
11:28:08.766 [debug] Executing fun with value: 9
11:28:08.766 [debug] Evaluating bend block with value: 9
11:28:08.766 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.766 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.766 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.766 [debug] Executing bend with initial: 10
11:28:08.766 [debug] Executing fun with value: 10
11:28:08.766 [debug] Evaluating bend block with value: 10
11:28:08.766 [debug] Block returned: %{variant: :leaf}
11:28:08.766 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.767 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 8
11:28:08.767 [debug] Executing fun with value: 8
11:28:08.767 [debug] Evaluating bend block with value: 8
11:28:08.767 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.767 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.767 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 9
11:28:08.767 [debug] Executing fun with value: 9
11:28:08.767 [debug] Evaluating bend block with value: 9
11:28:08.767 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 9
11:28:08.767 [debug] Executing fun with value: 9
11:28:08.767 [debug] Evaluating bend block with value: 9
11:28:08.767 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.767 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.767 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 7
11:28:08.767 [debug] Executing fun with value: 7
11:28:08.767 [debug] Evaluating bend block with value: 7
11:28:08.767 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.767 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.767 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 8
11:28:08.767 [debug] Executing fun with value: 8
11:28:08.767 [debug] Evaluating bend block with value: 8
11:28:08.767 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.767 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.767 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 9
11:28:08.767 [debug] Executing fun with value: 9
11:28:08.767 [debug] Evaluating bend block with value: 9
11:28:08.767 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{variant: :leaf}
11:28:08.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 9
11:28:08.767 [debug] Executing fun with value: 9
11:28:08.767 [debug] Evaluating bend block with value: 9
11:28:08.767 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.767 [debug] Executing bend with initial: 10
11:28:08.767 [debug] Executing fun with value: 10
11:28:08.767 [debug] Evaluating bend block with value: 10
11:28:08.767 [debug] Block returned: %{variant: :leaf}
11:28:08.767 [debug] Fun returned result: %{variant: :leaf}
11:28:08.767 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.768 [debug] Executing bend with initial: 10
11:28:08.768 [debug] Executing fun with value: 10
11:28:08.768 [debug] Evaluating bend block with value: 10
11:28:08.768 [debug] Block returned: %{variant: :leaf}
11:28:08.768 [debug] Fun returned result: %{variant: :leaf}
11:28:08.768 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.768 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 8
11:28:08.768 [debug] Executing fun with value: 8
11:28:08.768 [debug] Evaluating bend block with value: 8
11:28:08.768 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.768 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.768 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 9
11:28:08.768 [debug] Executing fun with value: 9
11:28:08.768 [debug] Evaluating bend block with value: 9
11:28:08.768 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 10
11:28:08.768 [debug] Executing fun with value: 10
11:28:08.768 [debug] Evaluating bend block with value: 10
11:28:08.768 [debug] Block returned: %{variant: :leaf}
11:28:08.768 [debug] Fun returned result: %{variant: :leaf}
11:28:08.768 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.768 [debug] Executing bend with initial: 10
11:28:08.768 [debug] Executing fun with value: 10
11:28:08.768 [debug] Evaluating bend block with value: 10
11:28:08.768 [debug] Block returned: %{variant: :leaf}
11:28:08.768 [debug] Fun returned result: %{variant: :leaf}
11:28:08.768 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 9
11:28:08.768 [debug] Executing fun with value: 9
11:28:08.768 [debug] Evaluating bend block with value: 9
11:28:08.768 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 10
11:28:08.768 [debug] Executing fun with value: 10
11:28:08.768 [debug] Evaluating bend block with value: 10
11:28:08.768 [debug] Block returned: %{variant: :leaf}
11:28:08.768 [debug] Fun returned result: %{variant: :leaf}
11:28:08.768 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.768 [debug] Executing bend with initial: 10
11:28:08.768 [debug] Executing fun with value: 10
11:28:08.768 [debug] Evaluating bend block with value: 10
11:28:08.768 [debug] Block returned: %{variant: :leaf}
11:28:08.768 [debug] Fun returned result: %{variant: :leaf}
11:28:08.768 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.768 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.768 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.768 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 6
11:28:08.768 [debug] Executing fun with value: 6
11:28:08.768 [debug] Evaluating bend block with value: 6
11:28:08.768 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.768 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.768 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 7
11:28:08.768 [debug] Executing fun with value: 7
11:28:08.768 [debug] Evaluating bend block with value: 7
11:28:08.768 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.768 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.768 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 8
11:28:08.768 [debug] Executing fun with value: 8
11:28:08.768 [debug] Evaluating bend block with value: 8
11:28:08.768 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.768 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.768 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 9
11:28:08.768 [debug] Executing fun with value: 9
11:28:08.768 [debug] Evaluating bend block with value: 9
11:28:08.768 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.768 [debug] Executing bend with initial: 10
11:28:08.768 [debug] Executing fun with value: 10
11:28:08.768 [debug] Evaluating bend block with value: 10
11:28:08.768 [debug] Block returned: %{variant: :leaf}
11:28:08.768 [debug] Fun returned result: %{variant: :leaf}
11:28:08.768 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.768 [debug] Executing bend with initial: 10
11:28:08.768 [debug] Executing fun with value: 10
11:28:08.768 [debug] Evaluating bend block with value: 10
11:28:08.768 [debug] Block returned: %{variant: :leaf}
11:28:08.768 [debug] Fun returned result: %{variant: :leaf}
11:28:08.768 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.768 [debug] do_bend final result: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 9
11:28:08.769 [debug] Executing fun with value: 9
11:28:08.769 [debug] Evaluating bend block with value: 9
11:28:08.769 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 10
11:28:08.769 [debug] Executing fun with value: 10
11:28:08.769 [debug] Evaluating bend block with value: 10
11:28:08.769 [debug] Block returned: %{variant: :leaf}
11:28:08.769 [debug] Fun returned result: %{variant: :leaf}
11:28:08.769 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{variant: :leaf}
11:28:08.769 [debug] Executing bend with initial: 10
11:28:08.769 [debug] Executing fun with value: 10
11:28:08.769 [debug] Evaluating bend block with value: 10
11:28:08.769 [debug] Block returned: %{variant: :leaf}
11:28:08.769 [debug] Fun returned result: %{variant: :leaf}
11:28:08.769 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.769 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 8
11:28:08.769 [debug] Executing fun with value: 8
11:28:08.769 [debug] Evaluating bend block with value: 8
11:28:08.769 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.769 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.769 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 9
11:28:08.769 [debug] Executing fun with value: 9
11:28:08.769 [debug] Evaluating bend block with value: 9
11:28:08.769 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 10
11:28:08.769 [debug] Executing fun with value: 10
11:28:08.769 [debug] Evaluating bend block with value: 10
11:28:08.769 [debug] Block returned: %{variant: :leaf}
11:28:08.769 [debug] Fun returned result: %{variant: :leaf}
11:28:08.769 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{variant: :leaf}
11:28:08.769 [debug] Executing bend with initial: 10
11:28:08.769 [debug] Executing fun with value: 10
11:28:08.769 [debug] Evaluating bend block with value: 10
11:28:08.769 [debug] Block returned: %{variant: :leaf}
11:28:08.769 [debug] Fun returned result: %{variant: :leaf}
11:28:08.769 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 9
11:28:08.769 [debug] Executing fun with value: 9
11:28:08.769 [debug] Evaluating bend block with value: 9
11:28:08.769 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 10
11:28:08.769 [debug] Executing fun with value: 10
11:28:08.769 [debug] Evaluating bend block with value: 10
11:28:08.769 [debug] Block returned: %{variant: :leaf}
11:28:08.769 [debug] Fun returned result: %{variant: :leaf}
11:28:08.769 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{variant: :leaf}
11:28:08.769 [debug] Executing bend with initial: 10
11:28:08.769 [debug] Executing fun with value: 10
11:28:08.769 [debug] Evaluating bend block with value: 10
11:28:08.769 [debug] Block returned: %{variant: :leaf}
11:28:08.769 [debug] Fun returned result: %{variant: :leaf}
11:28:08.769 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{variant: :leaf}
11:28:08.769 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.769 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.769 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.769 [debug] Executing bend with initial: 7
11:28:08.770 [debug] Executing fun with value: 7
11:28:08.770 [debug] Evaluating bend block with value: 7
11:28:08.770 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.770 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.770 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 8
11:28:08.770 [debug] Executing fun with value: 8
11:28:08.770 [debug] Evaluating bend block with value: 8
11:28:08.770 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.770 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.770 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 9
11:28:08.770 [debug] Executing fun with value: 9
11:28:08.770 [debug] Evaluating bend block with value: 9
11:28:08.770 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 9
11:28:08.770 [debug] Executing fun with value: 9
11:28:08.770 [debug] Evaluating bend block with value: 9
11:28:08.770 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.770 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 8
11:28:08.770 [debug] Executing fun with value: 8
11:28:08.770 [debug] Evaluating bend block with value: 8
11:28:08.770 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.770 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.770 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 9
11:28:08.770 [debug] Executing fun with value: 9
11:28:08.770 [debug] Evaluating bend block with value: 9
11:28:08.770 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 9
11:28:08.770 [debug] Executing fun with value: 9
11:28:08.770 [debug] Evaluating bend block with value: 9
11:28:08.770 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] Executing bend with initial: 10
11:28:08.770 [debug] Executing fun with value: 10
11:28:08.770 [debug] Evaluating bend block with value: 10
11:28:08.770 [debug] Block returned: %{variant: :leaf}
11:28:08.770 [debug] Fun returned result: %{variant: :leaf}
11:28:08.770 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{variant: :leaf}
11:28:08.770 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.770 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.770 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.771 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.771 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 5
11:28:08.771 [debug] Executing fun with value: 5
11:28:08.771 [debug] Evaluating bend block with value: 5
11:28:08.771 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.771 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.771 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 6
11:28:08.771 [debug] Executing fun with value: 6
11:28:08.771 [debug] Evaluating bend block with value: 6
11:28:08.771 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.771 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.771 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 7
11:28:08.771 [debug] Executing fun with value: 7
11:28:08.771 [debug] Evaluating bend block with value: 7
11:28:08.771 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.771 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.771 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 8
11:28:08.771 [debug] Executing fun with value: 8
11:28:08.771 [debug] Evaluating bend block with value: 8
11:28:08.771 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.771 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.771 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 9
11:28:08.771 [debug] Executing fun with value: 9
11:28:08.771 [debug] Evaluating bend block with value: 9
11:28:08.771 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.771 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.771 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 10
11:28:08.771 [debug] Executing fun with value: 10
11:28:08.771 [debug] Evaluating bend block with value: 10
11:28:08.771 [debug] Block returned: %{variant: :leaf}
11:28:08.771 [debug] Fun returned result: %{variant: :leaf}
11:28:08.771 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.771 [debug] do_bend final result: %{variant: :leaf}
11:28:08.771 [debug] Executing bend with initial: 10
11:28:08.771 [debug] Executing fun with value: 10
11:28:08.771 [debug] Evaluating bend block with value: 10
11:28:08.771 [debug] Block returned: %{variant: :leaf}
11:28:08.771 [debug] Fun returned result: %{variant: :leaf}
11:28:08.771 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.771 [debug] do_bend final result: %{variant: :leaf}
11:28:08.771 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 9
11:28:08.771 [debug] Executing fun with value: 9
11:28:08.771 [debug] Evaluating bend block with value: 9
11:28:08.771 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.771 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.771 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.771 [debug] Executing bend with initial: 10
11:28:08.771 [debug] Executing fun with value: 10
11:28:08.771 [debug] Evaluating bend block with value: 10
11:28:08.771 [debug] Block returned: %{variant: :leaf}
11:28:08.771 [debug] Fun returned result: %{variant: :leaf}
11:28:08.771 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.773 [debug] do_bend final result: %{variant: :leaf}
11:28:08.773 [debug] Executing bend with initial: 10
11:28:08.773 [debug] Executing fun with value: 10
11:28:08.773 [debug] Evaluating bend block with value: 10
11:28:08.773 [debug] Block returned: %{variant: :leaf}
11:28:08.773 [debug] Fun returned result: %{variant: :leaf}
11:28:08.773 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.773 [debug] do_bend final result: %{variant: :leaf}
11:28:08.773 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.773 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.773 [debug] Executing bend with initial: 8
11:28:08.773 [debug] Executing fun with value: 8
11:28:08.773 [debug] Evaluating bend block with value: 8
11:28:08.773 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.773 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.773 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.773 [debug] Executing bend with initial: 9
11:28:08.773 [debug] Executing fun with value: 9
11:28:08.773 [debug] Evaluating bend block with value: 9
11:28:08.773 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.773 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.773 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.773 [debug] Executing bend with initial: 10
11:28:08.773 [debug] Executing fun with value: 10
11:28:08.773 [debug] Evaluating bend block with value: 10
11:28:08.773 [debug] Block returned: %{variant: :leaf}
11:28:08.773 [debug] Fun returned result: %{variant: :leaf}
11:28:08.773 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.773 [debug] do_bend final result: %{variant: :leaf}
11:28:08.773 [debug] Executing bend with initial: 10
11:28:08.773 [debug] Executing fun with value: 10
11:28:08.773 [debug] Evaluating bend block with value: 10
11:28:08.773 [debug] Block returned: %{variant: :leaf}
11:28:08.773 [debug] Fun returned result: %{variant: :leaf}
11:28:08.773 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.773 [debug] do_bend final result: %{variant: :leaf}
11:28:08.773 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.773 [debug] Executing bend with initial: 9
11:28:08.773 [debug] Executing fun with value: 9
11:28:08.773 [debug] Evaluating bend block with value: 9
11:28:08.773 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.773 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.773 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.773 [debug] Executing bend with initial: 10
11:28:08.773 [debug] Executing fun with value: 10
11:28:08.773 [debug] Evaluating bend block with value: 10
11:28:08.773 [debug] Block returned: %{variant: :leaf}
11:28:08.773 [debug] Fun returned result: %{variant: :leaf}
11:28:08.773 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.773 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.774 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.774 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 7
11:28:08.774 [debug] Executing fun with value: 7
11:28:08.774 [debug] Evaluating bend block with value: 7
11:28:08.774 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.774 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.774 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 8
11:28:08.774 [debug] Executing fun with value: 8
11:28:08.774 [debug] Evaluating bend block with value: 8
11:28:08.774 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.774 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.774 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 9
11:28:08.774 [debug] Executing fun with value: 9
11:28:08.774 [debug] Evaluating bend block with value: 9
11:28:08.774 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 9
11:28:08.774 [debug] Executing fun with value: 9
11:28:08.774 [debug] Evaluating bend block with value: 9
11:28:08.774 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.774 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 8
11:28:08.774 [debug] Executing fun with value: 8
11:28:08.774 [debug] Evaluating bend block with value: 8
11:28:08.774 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.774 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.774 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 9
11:28:08.774 [debug] Executing fun with value: 9
11:28:08.774 [debug] Evaluating bend block with value: 9
11:28:08.774 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 9
11:28:08.774 [debug] Executing fun with value: 9
11:28:08.774 [debug] Evaluating bend block with value: 9
11:28:08.774 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] Executing bend with initial: 10
11:28:08.774 [debug] Executing fun with value: 10
11:28:08.774 [debug] Evaluating bend block with value: 10
11:28:08.774 [debug] Block returned: %{variant: :leaf}
11:28:08.774 [debug] Fun returned result: %{variant: :leaf}
11:28:08.774 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{variant: :leaf}
11:28:08.774 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.774 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.774 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.774 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 6
11:28:08.775 [debug] Executing fun with value: 6
11:28:08.775 [debug] Evaluating bend block with value: 6
11:28:08.775 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 7
11:28:08.775 [debug] Executing fun with value: 7
11:28:08.775 [debug] Evaluating bend block with value: 7
11:28:08.775 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 8
11:28:08.775 [debug] Executing fun with value: 8
11:28:08.775 [debug] Evaluating bend block with value: 8
11:28:08.775 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 9
11:28:08.775 [debug] Executing fun with value: 9
11:28:08.775 [debug] Evaluating bend block with value: 9
11:28:08.775 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.775 [debug] Block returned: %{variant: :leaf}
11:28:08.775 [debug] Fun returned result: %{variant: :leaf}
11:28:08.775 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{variant: :leaf}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.775 [debug] Block returned: %{variant: :leaf}
11:28:08.775 [debug] Fun returned result: %{variant: :leaf}
11:28:08.775 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 9
11:28:08.775 [debug] Executing fun with value: 9
11:28:08.775 [debug] Evaluating bend block with value: 9
11:28:08.775 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.775 [debug] Block returned: %{variant: :leaf}
11:28:08.775 [debug] Fun returned result: %{variant: :leaf}
11:28:08.775 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{variant: :leaf}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.775 [debug] Block returned: %{variant: :leaf}
11:28:08.775 [debug] Fun returned result: %{variant: :leaf}
11:28:08.775 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.775 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 8
11:28:08.775 [debug] Executing fun with value: 8
11:28:08.775 [debug] Evaluating bend block with value: 8
11:28:08.775 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 9
11:28:08.775 [debug] Executing fun with value: 9
11:28:08.775 [debug] Evaluating bend block with value: 9
11:28:08.775 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.775 [debug] Block returned: %{variant: :leaf}
11:28:08.775 [debug] Fun returned result: %{variant: :leaf}
11:28:08.775 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{variant: :leaf}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.775 [debug] Block returned: %{variant: :leaf}
11:28:08.775 [debug] Fun returned result: %{variant: :leaf}
11:28:08.775 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 9
11:28:08.775 [debug] Executing fun with value: 9
11:28:08.775 [debug] Evaluating bend block with value: 9
11:28:08.775 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.775 [debug] Block returned: %{variant: :leaf}
11:28:08.775 [debug] Fun returned result: %{variant: :leaf}
11:28:08.775 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.775 [debug] do_bend final result: %{variant: :leaf}
11:28:08.775 [debug] Executing bend with initial: 10
11:28:08.775 [debug] Executing fun with value: 10
11:28:08.775 [debug] Evaluating bend block with value: 10
11:28:08.780 [debug] Block returned: %{variant: :leaf}
11:28:08.780 [debug] Fun returned result: %{variant: :leaf}
11:28:08.780 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.780 [debug] do_bend final result: %{variant: :leaf}
11:28:08.780 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.780 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.780 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.780 [debug] Executing bend with initial: 7
11:28:08.780 [debug] Executing fun with value: 7
11:28:08.780 [debug] Evaluating bend block with value: 7
11:28:08.780 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.780 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.780 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.780 [debug] Executing bend with initial: 8
11:28:08.780 [debug] Executing fun with value: 8
11:28:08.780 [debug] Evaluating bend block with value: 8
11:28:08.780 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.780 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.780 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.780 [debug] Executing bend with initial: 9
11:28:08.780 [debug] Executing fun with value: 9
11:28:08.780 [debug] Evaluating bend block with value: 9
11:28:08.780 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.780 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.780 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.780 [debug] Executing bend with initial: 10
11:28:08.780 [debug] Executing fun with value: 10
11:28:08.780 [debug] Evaluating bend block with value: 10
11:28:08.780 [debug] Block returned: %{variant: :leaf}
11:28:08.780 [debug] Fun returned result: %{variant: :leaf}
11:28:08.780 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.780 [debug] do_bend final result: %{variant: :leaf}
11:28:08.780 [debug] Executing bend with initial: 10
11:28:08.780 [debug] Executing fun with value: 10
11:28:08.780 [debug] Evaluating bend block with value: 10
11:28:08.780 [debug] Block returned: %{variant: :leaf}
11:28:08.780 [debug] Fun returned result: %{variant: :leaf}
11:28:08.780 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.780 [debug] do_bend final result: %{variant: :leaf}
11:28:08.780 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.780 [debug] Executing bend with initial: 9
11:28:08.780 [debug] Executing fun with value: 9
11:28:08.780 [debug] Evaluating bend block with value: 9
11:28:08.780 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.780 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.780 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.780 [debug] Executing bend with initial: 10
11:28:08.780 [debug] Executing fun with value: 10
11:28:08.781 [debug] Evaluating bend block with value: 10
11:28:08.781 [debug] Block returned: %{variant: :leaf}
11:28:08.781 [debug] Fun returned result: %{variant: :leaf}
11:28:08.781 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{variant: :leaf}
11:28:08.781 [debug] Executing bend with initial: 10
11:28:08.781 [debug] Executing fun with value: 10
11:28:08.781 [debug] Evaluating bend block with value: 10
11:28:08.781 [debug] Block returned: %{variant: :leaf}
11:28:08.781 [debug] Fun returned result: %{variant: :leaf}
11:28:08.781 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.781 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.781 [debug] Executing bend with initial: 8
11:28:08.781 [debug] Executing fun with value: 8
11:28:08.781 [debug] Evaluating bend block with value: 8
11:28:08.781 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.781 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.781 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.781 [debug] Executing bend with initial: 9
11:28:08.781 [debug] Executing fun with value: 9
11:28:08.781 [debug] Evaluating bend block with value: 9
11:28:08.781 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.781 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.781 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.781 [debug] Executing bend with initial: 10
11:28:08.781 [debug] Executing fun with value: 10
11:28:08.781 [debug] Evaluating bend block with value: 10
11:28:08.781 [debug] Block returned: %{variant: :leaf}
11:28:08.781 [debug] Fun returned result: %{variant: :leaf}
11:28:08.781 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{variant: :leaf}
11:28:08.781 [debug] Executing bend with initial: 10
11:28:08.781 [debug] Executing fun with value: 10
11:28:08.781 [debug] Evaluating bend block with value: 10
11:28:08.781 [debug] Block returned: %{variant: :leaf}
11:28:08.781 [debug] Fun returned result: %{variant: :leaf}
11:28:08.781 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.781 [debug] Executing bend with initial: 9
11:28:08.781 [debug] Executing fun with value: 9
11:28:08.781 [debug] Evaluating bend block with value: 9
11:28:08.781 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.781 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.781 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.781 [debug] Executing bend with initial: 10
11:28:08.781 [debug] Executing fun with value: 10
11:28:08.781 [debug] Evaluating bend block with value: 10
11:28:08.781 [debug] Block returned: %{variant: :leaf}
11:28:08.781 [debug] Fun returned result: %{variant: :leaf}
11:28:08.781 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{variant: :leaf}
11:28:08.781 [debug] Executing bend with initial: 10
11:28:08.781 [debug] Executing fun with value: 10
11:28:08.781 [debug] Evaluating bend block with value: 10
11:28:08.781 [debug] Block returned: %{variant: :leaf}
11:28:08.781 [debug] Fun returned result: %{variant: :leaf}
11:28:08.781 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{variant: :leaf}
11:28:08.781 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.781 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.781 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.781 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.781 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.782 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.782 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.782 [debug] Executing bend with initial: 3
11:28:08.782 [debug] Executing fun with value: 3
11:28:08.782 [debug] Evaluating bend block with value: 3
11:28:08.782 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.782 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.782 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.782 [debug] Executing bend with initial: 4
11:28:08.782 [debug] Executing fun with value: 4
11:28:08.782 [debug] Evaluating bend block with value: 4
11:28:08.782 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.782 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.782 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.782 [debug] Executing bend with initial: 5
11:28:08.782 [debug] Executing fun with value: 5
11:28:08.782 [debug] Evaluating bend block with value: 5
11:28:08.782 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.782 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.782 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.782 [debug] Executing bend with initial: 6
11:28:08.783 [debug] Executing fun with value: 6
11:28:08.783 [debug] Evaluating bend block with value: 6
11:28:08.783 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.783 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.783 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.783 [debug] Executing bend with initial: 7
11:28:08.783 [debug] Executing fun with value: 7
11:28:08.783 [debug] Evaluating bend block with value: 7
11:28:08.783 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.783 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.783 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.783 [debug] Executing bend with initial: 8
11:28:08.783 [debug] Executing fun with value: 8
11:28:08.783 [debug] Evaluating bend block with value: 8
11:28:08.783 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.783 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.783 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.783 [debug] Executing bend with initial: 9
11:28:08.783 [debug] Executing fun with value: 9
11:28:08.783 [debug] Evaluating bend block with value: 9
11:28:08.783 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.783 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.783 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.783 [debug] Executing bend with initial: 10
11:28:08.783 [debug] Executing fun with value: 10
11:28:08.783 [debug] Evaluating bend block with value: 10
11:28:08.783 [debug] Block returned: %{variant: :leaf}
11:28:08.784 [debug] Fun returned result: %{variant: :leaf}
11:28:08.784 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.784 [debug] do_bend final result: %{variant: :leaf}
11:28:08.784 [debug] Executing bend with initial: 10
11:28:08.784 [debug] Executing fun with value: 10
11:28:08.784 [debug] Evaluating bend block with value: 10
11:28:08.784 [debug] Block returned: %{variant: :leaf}
11:28:08.784 [debug] Fun returned result: %{variant: :leaf}
11:28:08.784 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.784 [debug] do_bend final result: %{variant: :leaf}
11:28:08.784 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.784 [debug] Executing bend with initial: 9
11:28:08.784 [debug] Executing fun with value: 9
11:28:08.784 [debug] Evaluating bend block with value: 9
11:28:08.784 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.784 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.784 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.784 [debug] Executing bend with initial: 10
11:28:08.784 [debug] Executing fun with value: 10
11:28:08.784 [debug] Evaluating bend block with value: 10
11:28:08.784 [debug] Block returned: %{variant: :leaf}
11:28:08.784 [debug] Fun returned result: %{variant: :leaf}
11:28:08.784 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.784 [debug] do_bend final result: %{variant: :leaf}
11:28:08.784 [debug] Executing bend with initial: 10
11:28:08.784 [debug] Executing fun with value: 10
11:28:08.784 [debug] Evaluating bend block with value: 10
11:28:08.784 [debug] Block returned: %{variant: :leaf}
11:28:08.784 [debug] Fun returned result: %{variant: :leaf}
11:28:08.784 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.784 [debug] do_bend final result: %{variant: :leaf}
11:28:08.784 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.784 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.784 [debug] Executing bend with initial: 8
11:28:08.784 [debug] Executing fun with value: 8
11:28:08.784 [debug] Evaluating bend block with value: 8
11:28:08.784 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.784 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.784 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 9
11:28:08.785 [debug] Executing fun with value: 9
11:28:08.785 [debug] Evaluating bend block with value: 9
11:28:08.785 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 10
11:28:08.785 [debug] Executing fun with value: 10
11:28:08.785 [debug] Evaluating bend block with value: 10
11:28:08.785 [debug] Block returned: %{variant: :leaf}
11:28:08.785 [debug] Fun returned result: %{variant: :leaf}
11:28:08.785 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{variant: :leaf}
11:28:08.785 [debug] Executing bend with initial: 10
11:28:08.785 [debug] Executing fun with value: 10
11:28:08.785 [debug] Evaluating bend block with value: 10
11:28:08.785 [debug] Block returned: %{variant: :leaf}
11:28:08.785 [debug] Fun returned result: %{variant: :leaf}
11:28:08.785 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 9
11:28:08.785 [debug] Executing fun with value: 9
11:28:08.785 [debug] Evaluating bend block with value: 9
11:28:08.785 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 10
11:28:08.785 [debug] Executing fun with value: 10
11:28:08.785 [debug] Evaluating bend block with value: 10
11:28:08.785 [debug] Block returned: %{variant: :leaf}
11:28:08.785 [debug] Fun returned result: %{variant: :leaf}
11:28:08.785 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{variant: :leaf}
11:28:08.785 [debug] Executing bend with initial: 10
11:28:08.785 [debug] Executing fun with value: 10
11:28:08.785 [debug] Evaluating bend block with value: 10
11:28:08.785 [debug] Block returned: %{variant: :leaf}
11:28:08.785 [debug] Fun returned result: %{variant: :leaf}
11:28:08.785 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.785 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.785 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 7
11:28:08.785 [debug] Executing fun with value: 7
11:28:08.785 [debug] Evaluating bend block with value: 7
11:28:08.785 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.785 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.785 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 8
11:28:08.785 [debug] Executing fun with value: 8
11:28:08.785 [debug] Evaluating bend block with value: 8
11:28:08.785 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.785 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.785 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 9
11:28:08.785 [debug] Executing fun with value: 9
11:28:08.785 [debug] Evaluating bend block with value: 9
11:28:08.785 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.785 [debug] Executing bend with initial: 10
11:28:08.785 [debug] Executing fun with value: 10
11:28:08.785 [debug] Evaluating bend block with value: 10
11:28:08.785 [debug] Block returned: %{variant: :leaf}
11:28:08.785 [debug] Fun returned result: %{variant: :leaf}
11:28:08.785 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{variant: :leaf}
11:28:08.785 [debug] Executing bend with initial: 10
11:28:08.785 [debug] Executing fun with value: 10
11:28:08.785 [debug] Evaluating bend block with value: 10
11:28:08.785 [debug] Block returned: %{variant: :leaf}
11:28:08.785 [debug] Fun returned result: %{variant: :leaf}
11:28:08.785 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.785 [debug] do_bend final result: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.786 [debug] Executing bend with initial: 9
11:28:08.786 [debug] Executing fun with value: 9
11:28:08.786 [debug] Evaluating bend block with value: 9
11:28:08.786 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Executing bend with initial: 10
11:28:08.786 [debug] Executing fun with value: 10
11:28:08.786 [debug] Evaluating bend block with value: 10
11:28:08.786 [debug] Block returned: %{variant: :leaf}
11:28:08.786 [debug] Fun returned result: %{variant: :leaf}
11:28:08.786 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{variant: :leaf}
11:28:08.786 [debug] Executing bend with initial: 10
11:28:08.786 [debug] Executing fun with value: 10
11:28:08.786 [debug] Evaluating bend block with value: 10
11:28:08.786 [debug] Block returned: %{variant: :leaf}
11:28:08.786 [debug] Fun returned result: %{variant: :leaf}
11:28:08.786 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.786 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.786 [debug] Executing bend with initial: 8
11:28:08.786 [debug] Executing fun with value: 8
11:28:08.786 [debug] Evaluating bend block with value: 8
11:28:08.786 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.786 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.786 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.786 [debug] Executing bend with initial: 9
11:28:08.786 [debug] Executing fun with value: 9
11:28:08.786 [debug] Evaluating bend block with value: 9
11:28:08.786 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Executing bend with initial: 10
11:28:08.786 [debug] Executing fun with value: 10
11:28:08.786 [debug] Evaluating bend block with value: 10
11:28:08.786 [debug] Block returned: %{variant: :leaf}
11:28:08.786 [debug] Fun returned result: %{variant: :leaf}
11:28:08.786 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{variant: :leaf}
11:28:08.786 [debug] Executing bend with initial: 10
11:28:08.786 [debug] Executing fun with value: 10
11:28:08.786 [debug] Evaluating bend block with value: 10
11:28:08.786 [debug] Block returned: %{variant: :leaf}
11:28:08.786 [debug] Fun returned result: %{variant: :leaf}
11:28:08.786 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.786 [debug] Executing bend with initial: 9
11:28:08.786 [debug] Executing fun with value: 9
11:28:08.786 [debug] Evaluating bend block with value: 9
11:28:08.786 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.786 [debug] Executing bend with initial: 10
11:28:08.786 [debug] Executing fun with value: 10
11:28:08.786 [debug] Evaluating bend block with value: 10
11:28:08.786 [debug] Block returned: %{variant: :leaf}
11:28:08.786 [debug] Fun returned result: %{variant: :leaf}
11:28:08.786 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.786 [debug] do_bend final result: %{variant: :leaf}
11:28:08.786 [debug] Executing bend with initial: 10
11:28:08.786 [debug] Executing fun with value: 10
11:28:08.786 [debug] Evaluating bend block with value: 10
11:28:08.786 [debug] Block returned: %{variant: :leaf}
11:28:08.786 [debug] Fun returned result: %{variant: :leaf}
11:28:08.787 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.787 [debug] do_bend final result: %{variant: :leaf}
11:28:08.787 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.787 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.787 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.787 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.787 [debug] Executing bend with initial: 6
11:28:08.787 [debug] Executing fun with value: 6
11:28:08.787 [debug] Evaluating bend block with value: 6
11:28:08.787 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.787 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.787 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.787 [debug] Executing bend with initial: 7
11:28:08.787 [debug] Executing fun with value: 7
11:28:08.787 [debug] Evaluating bend block with value: 7
11:28:08.787 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.787 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.787 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.787 [debug] Executing bend with initial: 8
11:28:08.787 [debug] Executing fun with value: 8
11:28:08.787 [debug] Evaluating bend block with value: 8
11:28:08.787 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.787 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.787 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.787 [debug] Executing bend with initial: 9
11:28:08.787 [debug] Executing fun with value: 9
11:28:08.787 [debug] Evaluating bend block with value: 9
11:28:08.787 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.787 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.787 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.787 [debug] Executing bend with initial: 10
11:28:08.787 [debug] Executing fun with value: 10
11:28:08.787 [debug] Evaluating bend block with value: 10
11:28:08.787 [debug] Block returned: %{variant: :leaf}
11:28:08.787 [debug] Fun returned result: %{variant: :leaf}
11:28:08.787 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.787 [debug] do_bend final result: %{variant: :leaf}
11:28:08.787 [debug] Executing bend with initial: 10
11:28:08.787 [debug] Executing fun with value: 10
11:28:08.787 [debug] Evaluating bend block with value: 10
11:28:08.787 [debug] Block returned: %{variant: :leaf}
11:28:08.787 [debug] Fun returned result: %{variant: :leaf}
11:28:08.787 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.787 [debug] do_bend final result: %{variant: :leaf}
11:28:08.787 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.787 [debug] Executing bend with initial: 9
11:28:08.787 [debug] Executing fun with value: 9
11:28:08.787 [debug] Evaluating bend block with value: 9
11:28:08.787 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.787 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.787 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.787 [debug] Executing bend with initial: 10
11:28:08.787 [debug] Executing fun with value: 10
11:28:08.787 [debug] Evaluating bend block with value: 10
11:28:08.787 [debug] Block returned: %{variant: :leaf}
11:28:08.787 [debug] Fun returned result: %{variant: :leaf}
11:28:08.787 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.787 [debug] do_bend final result: %{variant: :leaf}
11:28:08.787 [debug] Executing bend with initial: 10
11:28:08.787 [debug] Executing fun with value: 10
11:28:08.787 [debug] Evaluating bend block with value: 10
11:28:08.788 [debug] Block returned: %{variant: :leaf}
11:28:08.788 [debug] Fun returned result: %{variant: :leaf}
11:28:08.788 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.788 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.788 [debug] Executing bend with initial: 8
11:28:08.788 [debug] Executing fun with value: 8
11:28:08.788 [debug] Evaluating bend block with value: 8
11:28:08.788 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.788 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.788 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.788 [debug] Executing bend with initial: 9
11:28:08.788 [debug] Executing fun with value: 9
11:28:08.788 [debug] Evaluating bend block with value: 9
11:28:08.788 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.788 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.788 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.788 [debug] Executing bend with initial: 10
11:28:08.788 [debug] Executing fun with value: 10
11:28:08.788 [debug] Evaluating bend block with value: 10
11:28:08.788 [debug] Block returned: %{variant: :leaf}
11:28:08.788 [debug] Fun returned result: %{variant: :leaf}
11:28:08.788 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{variant: :leaf}
11:28:08.788 [debug] Executing bend with initial: 10
11:28:08.788 [debug] Executing fun with value: 10
11:28:08.788 [debug] Evaluating bend block with value: 10
11:28:08.788 [debug] Block returned: %{variant: :leaf}
11:28:08.788 [debug] Fun returned result: %{variant: :leaf}
11:28:08.788 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.788 [debug] Executing bend with initial: 9
11:28:08.788 [debug] Executing fun with value: 9
11:28:08.788 [debug] Evaluating bend block with value: 9
11:28:08.788 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.788 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.788 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.788 [debug] Executing bend with initial: 10
11:28:08.788 [debug] Executing fun with value: 10
11:28:08.788 [debug] Evaluating bend block with value: 10
11:28:08.788 [debug] Block returned: %{variant: :leaf}
11:28:08.788 [debug] Fun returned result: %{variant: :leaf}
11:28:08.788 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{variant: :leaf}
11:28:08.788 [debug] Executing bend with initial: 10
11:28:08.788 [debug] Executing fun with value: 10
11:28:08.788 [debug] Evaluating bend block with value: 10
11:28:08.788 [debug] Block returned: %{variant: :leaf}
11:28:08.788 [debug] Fun returned result: %{variant: :leaf}
11:28:08.788 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{variant: :leaf}
11:28:08.788 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.788 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.788 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.788 [debug] Executing bend with initial: 7
11:28:08.788 [debug] Executing fun with value: 7
11:28:08.788 [debug] Evaluating bend block with value: 7
11:28:08.788 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.788 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.788 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.788 [debug] Executing bend with initial: 8
11:28:08.789 [debug] Executing fun with value: 8
11:28:08.789 [debug] Evaluating bend block with value: 8
11:28:08.789 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.789 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.789 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 9
11:28:08.789 [debug] Executing fun with value: 9
11:28:08.789 [debug] Evaluating bend block with value: 9
11:28:08.789 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 9
11:28:08.789 [debug] Executing fun with value: 9
11:28:08.789 [debug] Evaluating bend block with value: 9
11:28:08.789 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.789 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 8
11:28:08.789 [debug] Executing fun with value: 8
11:28:08.789 [debug] Evaluating bend block with value: 8
11:28:08.789 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.789 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.789 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 9
11:28:08.789 [debug] Executing fun with value: 9
11:28:08.789 [debug] Evaluating bend block with value: 9
11:28:08.789 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 9
11:28:08.789 [debug] Executing fun with value: 9
11:28:08.789 [debug] Evaluating bend block with value: 9
11:28:08.789 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.789 [debug] Executing bend with initial: 10
11:28:08.789 [debug] Executing fun with value: 10
11:28:08.789 [debug] Evaluating bend block with value: 10
11:28:08.789 [debug] Block returned: %{variant: :leaf}
11:28:08.789 [debug] Fun returned result: %{variant: :leaf}
11:28:08.789 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.789 [debug] do_bend final result: %{variant: :leaf}
11:28:08.790 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.790 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.790 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.790 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.790 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 5
11:28:08.790 [debug] Executing fun with value: 5
11:28:08.790 [debug] Evaluating bend block with value: 5
11:28:08.790 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.790 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.790 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 6
11:28:08.790 [debug] Executing fun with value: 6
11:28:08.790 [debug] Evaluating bend block with value: 6
11:28:08.790 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.790 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.790 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 7
11:28:08.790 [debug] Executing fun with value: 7
11:28:08.790 [debug] Evaluating bend block with value: 7
11:28:08.790 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.790 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.790 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 8
11:28:08.790 [debug] Executing fun with value: 8
11:28:08.790 [debug] Evaluating bend block with value: 8
11:28:08.790 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.790 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.790 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 9
11:28:08.790 [debug] Executing fun with value: 9
11:28:08.790 [debug] Evaluating bend block with value: 9
11:28:08.790 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.790 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.790 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 10
11:28:08.790 [debug] Executing fun with value: 10
11:28:08.790 [debug] Evaluating bend block with value: 10
11:28:08.790 [debug] Block returned: %{variant: :leaf}
11:28:08.790 [debug] Fun returned result: %{variant: :leaf}
11:28:08.790 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.790 [debug] do_bend final result: %{variant: :leaf}
11:28:08.790 [debug] Executing bend with initial: 10
11:28:08.790 [debug] Executing fun with value: 10
11:28:08.790 [debug] Evaluating bend block with value: 10
11:28:08.790 [debug] Block returned: %{variant: :leaf}
11:28:08.790 [debug] Fun returned result: %{variant: :leaf}
11:28:08.790 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.790 [debug] do_bend final result: %{variant: :leaf}
11:28:08.790 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 9
11:28:08.790 [debug] Executing fun with value: 9
11:28:08.790 [debug] Evaluating bend block with value: 9
11:28:08.790 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.790 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.790 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.790 [debug] Executing bend with initial: 10
11:28:08.790 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.791 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 8
11:28:08.791 [debug] Executing fun with value: 8
11:28:08.791 [debug] Evaluating bend block with value: 8
11:28:08.791 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.791 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.791 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 9
11:28:08.791 [debug] Executing fun with value: 9
11:28:08.791 [debug] Evaluating bend block with value: 9
11:28:08.791 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 9
11:28:08.791 [debug] Executing fun with value: 9
11:28:08.791 [debug] Evaluating bend block with value: 9
11:28:08.791 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.791 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.791 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 7
11:28:08.791 [debug] Executing fun with value: 7
11:28:08.791 [debug] Evaluating bend block with value: 7
11:28:08.791 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.791 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.791 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 8
11:28:08.791 [debug] Executing fun with value: 8
11:28:08.791 [debug] Evaluating bend block with value: 8
11:28:08.791 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.791 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.791 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 9
11:28:08.791 [debug] Executing fun with value: 9
11:28:08.791 [debug] Evaluating bend block with value: 9
11:28:08.791 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 9
11:28:08.791 [debug] Executing fun with value: 9
11:28:08.791 [debug] Evaluating bend block with value: 9
11:28:08.791 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.791 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.791 [debug] do_bend final result: %{variant: :leaf}
11:28:08.791 [debug] Executing bend with initial: 10
11:28:08.791 [debug] Executing fun with value: 10
11:28:08.791 [debug] Evaluating bend block with value: 10
11:28:08.791 [debug] Block returned: %{variant: :leaf}
11:28:08.791 [debug] Fun returned result: %{variant: :leaf}
11:28:08.793 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.793 [debug] do_bend final result: %{variant: :leaf}
11:28:08.793 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.793 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.793 [debug] Executing bend with initial: 8
11:28:08.793 [debug] Executing fun with value: 8
11:28:08.793 [debug] Evaluating bend block with value: 8
11:28:08.793 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.793 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.793 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.793 [debug] Executing bend with initial: 9
11:28:08.793 [debug] Executing fun with value: 9
11:28:08.793 [debug] Evaluating bend block with value: 9
11:28:08.793 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.793 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 9
11:28:08.794 [debug] Executing fun with value: 9
11:28:08.794 [debug] Evaluating bend block with value: 9
11:28:08.794 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.794 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.794 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.794 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 6
11:28:08.794 [debug] Executing fun with value: 6
11:28:08.794 [debug] Evaluating bend block with value: 6
11:28:08.794 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 7
11:28:08.794 [debug] Executing fun with value: 7
11:28:08.794 [debug] Evaluating bend block with value: 7
11:28:08.794 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 8
11:28:08.794 [debug] Executing fun with value: 8
11:28:08.794 [debug] Evaluating bend block with value: 8
11:28:08.794 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 9
11:28:08.794 [debug] Executing fun with value: 9
11:28:08.794 [debug] Evaluating bend block with value: 9
11:28:08.794 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 9
11:28:08.794 [debug] Executing fun with value: 9
11:28:08.794 [debug] Evaluating bend block with value: 9
11:28:08.794 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] Executing bend with initial: 10
11:28:08.794 [debug] Executing fun with value: 10
11:28:08.794 [debug] Evaluating bend block with value: 10
11:28:08.794 [debug] Block returned: %{variant: :leaf}
11:28:08.794 [debug] Fun returned result: %{variant: :leaf}
11:28:08.794 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{variant: :leaf}
11:28:08.794 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.794 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 8
11:28:08.794 [debug] Executing fun with value: 8
11:28:08.794 [debug] Evaluating bend block with value: 8
11:28:08.794 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.794 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.794 [debug] Executing bend with initial: 9
11:28:08.794 [debug] Executing fun with value: 9
11:28:08.794 [debug] Evaluating bend block with value: 9
11:28:08.794 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.794 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.796 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.796 [debug] Executing bend with initial: 10
11:28:08.796 [debug] Executing fun with value: 10
11:28:08.796 [debug] Evaluating bend block with value: 10
11:28:08.796 [debug] Block returned: %{variant: :leaf}
11:28:08.796 [debug] Fun returned result: %{variant: :leaf}
11:28:08.796 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.796 [debug] do_bend final result: %{variant: :leaf}
11:28:08.796 [debug] Executing bend with initial: 10
11:28:08.796 [debug] Executing fun with value: 10
11:28:08.796 [debug] Evaluating bend block with value: 10
11:28:08.796 [debug] Block returned: %{variant: :leaf}
11:28:08.796 [debug] Fun returned result: %{variant: :leaf}
11:28:08.796 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.796 [debug] do_bend final result: %{variant: :leaf}
11:28:08.796 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.796 [debug] Executing bend with initial: 9
11:28:08.796 [debug] Executing fun with value: 9
11:28:08.796 [debug] Evaluating bend block with value: 9
11:28:08.796 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.796 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.796 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.796 [debug] Executing bend with initial: 10
11:28:08.796 [debug] Executing fun with value: 10
11:28:08.796 [debug] Evaluating bend block with value: 10
11:28:08.796 [debug] Block returned: %{variant: :leaf}
11:28:08.796 [debug] Fun returned result: %{variant: :leaf}
11:28:08.796 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.796 [debug] do_bend final result: %{variant: :leaf}
11:28:08.796 [debug] Executing bend with initial: 10
11:28:08.796 [debug] Executing fun with value: 10
11:28:08.796 [debug] Evaluating bend block with value: 10
11:28:08.796 [debug] Block returned: %{variant: :leaf}
11:28:08.796 [debug] Fun returned result: %{variant: :leaf}
11:28:08.796 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.796 [debug] do_bend final result: %{variant: :leaf}
11:28:08.796 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.797 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.797 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 7
11:28:08.797 [debug] Executing fun with value: 7
11:28:08.797 [debug] Evaluating bend block with value: 7
11:28:08.797 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.797 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.797 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 8
11:28:08.797 [debug] Executing fun with value: 8
11:28:08.797 [debug] Evaluating bend block with value: 8
11:28:08.797 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.797 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.797 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 9
11:28:08.797 [debug] Executing fun with value: 9
11:28:08.797 [debug] Evaluating bend block with value: 9
11:28:08.797 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 9
11:28:08.797 [debug] Executing fun with value: 9
11:28:08.797 [debug] Evaluating bend block with value: 9
11:28:08.797 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.797 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 8
11:28:08.797 [debug] Executing fun with value: 8
11:28:08.797 [debug] Evaluating bend block with value: 8
11:28:08.797 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.797 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.797 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 9
11:28:08.797 [debug] Executing fun with value: 9
11:28:08.797 [debug] Evaluating bend block with value: 9
11:28:08.797 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 9
11:28:08.797 [debug] Executing fun with value: 9
11:28:08.797 [debug] Evaluating bend block with value: 9
11:28:08.797 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] Executing bend with initial: 10
11:28:08.797 [debug] Executing fun with value: 10
11:28:08.797 [debug] Evaluating bend block with value: 10
11:28:08.797 [debug] Block returned: %{variant: :leaf}
11:28:08.797 [debug] Fun returned result: %{variant: :leaf}
11:28:08.797 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{variant: :leaf}
11:28:08.797 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.797 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.798 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.798 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.798 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.798 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.798 [debug] Executing bend with initial: 4
11:28:08.798 [debug] Executing fun with value: 4
11:28:08.798 [debug] Evaluating bend block with value: 4
11:28:08.798 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.798 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.798 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.798 [debug] Executing bend with initial: 5
11:28:08.798 [debug] Executing fun with value: 5
11:28:08.798 [debug] Evaluating bend block with value: 5
11:28:08.798 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.798 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.798 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.798 [debug] Executing bend with initial: 6
11:28:08.798 [debug] Executing fun with value: 6
11:28:08.798 [debug] Evaluating bend block with value: 6
11:28:08.798 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.798 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.798 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.798 [debug] Executing bend with initial: 7
11:28:08.798 [debug] Executing fun with value: 7
11:28:08.798 [debug] Evaluating bend block with value: 7
11:28:08.798 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.798 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.798 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.798 [debug] Executing bend with initial: 8
11:28:08.798 [debug] Executing fun with value: 8
11:28:08.798 [debug] Evaluating bend block with value: 8
11:28:08.798 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.798 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.798 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.798 [debug] Executing bend with initial: 9
11:28:08.798 [debug] Executing fun with value: 9
11:28:08.798 [debug] Evaluating bend block with value: 9
11:28:08.798 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.798 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.798 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.798 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.799 [debug] Evaluating bend block with value: 10
11:28:08.799 [debug] Block returned: %{variant: :leaf}
11:28:08.799 [debug] Fun returned result: %{variant: :leaf}
11:28:08.799 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{variant: :leaf}
11:28:08.799 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.799 [debug] Evaluating bend block with value: 10
11:28:08.799 [debug] Block returned: %{variant: :leaf}
11:28:08.799 [debug] Fun returned result: %{variant: :leaf}
11:28:08.799 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.799 [debug] Executing bend with initial: 9
11:28:08.799 [debug] Executing fun with value: 9
11:28:08.799 [debug] Evaluating bend block with value: 9
11:28:08.799 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.799 [debug] Evaluating bend block with value: 10
11:28:08.799 [debug] Block returned: %{variant: :leaf}
11:28:08.799 [debug] Fun returned result: %{variant: :leaf}
11:28:08.799 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{variant: :leaf}
11:28:08.799 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.799 [debug] Evaluating bend block with value: 10
11:28:08.799 [debug] Block returned: %{variant: :leaf}
11:28:08.799 [debug] Fun returned result: %{variant: :leaf}
11:28:08.799 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.799 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.799 [debug] Executing bend with initial: 8
11:28:08.799 [debug] Executing fun with value: 8
11:28:08.799 [debug] Evaluating bend block with value: 8
11:28:08.799 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.799 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.799 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.799 [debug] Executing bend with initial: 9
11:28:08.799 [debug] Executing fun with value: 9
11:28:08.799 [debug] Evaluating bend block with value: 9
11:28:08.799 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.799 [debug] Evaluating bend block with value: 10
11:28:08.799 [debug] Block returned: %{variant: :leaf}
11:28:08.799 [debug] Fun returned result: %{variant: :leaf}
11:28:08.799 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{variant: :leaf}
11:28:08.799 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.799 [debug] Evaluating bend block with value: 10
11:28:08.799 [debug] Block returned: %{variant: :leaf}
11:28:08.799 [debug] Fun returned result: %{variant: :leaf}
11:28:08.799 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.799 [debug] Executing bend with initial: 9
11:28:08.799 [debug] Executing fun with value: 9
11:28:08.799 [debug] Evaluating bend block with value: 9
11:28:08.799 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.799 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.799 [debug] Evaluating bend block with value: 10
11:28:08.799 [debug] Block returned: %{variant: :leaf}
11:28:08.799 [debug] Fun returned result: %{variant: :leaf}
11:28:08.799 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.799 [debug] do_bend final result: %{variant: :leaf}
11:28:08.799 [debug] Executing bend with initial: 10
11:28:08.799 [debug] Executing fun with value: 10
11:28:08.800 [debug] Evaluating bend block with value: 10
11:28:08.800 [debug] Block returned: %{variant: :leaf}
11:28:08.800 [debug] Fun returned result: %{variant: :leaf}
11:28:08.800 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.800 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.800 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 7
11:28:08.800 [debug] Executing fun with value: 7
11:28:08.800 [debug] Evaluating bend block with value: 7
11:28:08.800 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.800 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.800 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 8
11:28:08.800 [debug] Executing fun with value: 8
11:28:08.800 [debug] Evaluating bend block with value: 8
11:28:08.800 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.800 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.800 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 9
11:28:08.800 [debug] Executing fun with value: 9
11:28:08.800 [debug] Evaluating bend block with value: 9
11:28:08.800 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 10
11:28:08.800 [debug] Executing fun with value: 10
11:28:08.800 [debug] Evaluating bend block with value: 10
11:28:08.800 [debug] Block returned: %{variant: :leaf}
11:28:08.800 [debug] Fun returned result: %{variant: :leaf}
11:28:08.800 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{variant: :leaf}
11:28:08.800 [debug] Executing bend with initial: 10
11:28:08.800 [debug] Executing fun with value: 10
11:28:08.800 [debug] Evaluating bend block with value: 10
11:28:08.800 [debug] Block returned: %{variant: :leaf}
11:28:08.800 [debug] Fun returned result: %{variant: :leaf}
11:28:08.800 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 9
11:28:08.800 [debug] Executing fun with value: 9
11:28:08.800 [debug] Evaluating bend block with value: 9
11:28:08.800 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 10
11:28:08.800 [debug] Executing fun with value: 10
11:28:08.800 [debug] Evaluating bend block with value: 10
11:28:08.800 [debug] Block returned: %{variant: :leaf}
11:28:08.800 [debug] Fun returned result: %{variant: :leaf}
11:28:08.800 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{variant: :leaf}
11:28:08.800 [debug] Executing bend with initial: 10
11:28:08.800 [debug] Executing fun with value: 10
11:28:08.800 [debug] Evaluating bend block with value: 10
11:28:08.800 [debug] Block returned: %{variant: :leaf}
11:28:08.800 [debug] Fun returned result: %{variant: :leaf}
11:28:08.800 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{variant: :leaf}
11:28:08.800 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.800 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 8
11:28:08.800 [debug] Executing fun with value: 8
11:28:08.800 [debug] Evaluating bend block with value: 8
11:28:08.800 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.800 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.800 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 9
11:28:08.800 [debug] Executing fun with value: 9
11:28:08.800 [debug] Evaluating bend block with value: 9
11:28:08.800 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.800 [debug] Executing bend with initial: 10
11:28:08.800 [debug] Executing fun with value: 10
11:28:08.800 [debug] Evaluating bend block with value: 10
11:28:08.800 [debug] Block returned: %{variant: :leaf}
11:28:08.800 [debug] Fun returned result: %{variant: :leaf}
11:28:08.800 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.801 [debug] do_bend final result: %{variant: :leaf}
11:28:08.801 [debug] Executing bend with initial: 10
11:28:08.801 [debug] Executing fun with value: 10
11:28:08.801 [debug] Evaluating bend block with value: 10
11:28:08.801 [debug] Block returned: %{variant: :leaf}
11:28:08.801 [debug] Fun returned result: %{variant: :leaf}
11:28:08.801 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.801 [debug] do_bend final result: %{variant: :leaf}
11:28:08.801 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.801 [debug] Executing bend with initial: 9
11:28:08.801 [debug] Executing fun with value: 9
11:28:08.801 [debug] Evaluating bend block with value: 9
11:28:08.801 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.801 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.801 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.801 [debug] Executing bend with initial: 10
11:28:08.801 [debug] Executing fun with value: 10
11:28:08.801 [debug] Evaluating bend block with value: 10
11:28:08.801 [debug] Block returned: %{variant: :leaf}
11:28:08.801 [debug] Fun returned result: %{variant: :leaf}
11:28:08.801 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.801 [debug] do_bend final result: %{variant: :leaf}
11:28:08.801 [debug] Executing bend with initial: 10
11:28:08.801 [debug] Executing fun with value: 10
11:28:08.801 [debug] Evaluating bend block with value: 10
11:28:08.801 [debug] Block returned: %{variant: :leaf}
11:28:08.801 [debug] Fun returned result: %{variant: :leaf}
11:28:08.801 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.801 [debug] do_bend final result: %{variant: :leaf}
11:28:08.801 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.801 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.801 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.801 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.801 [debug] Executing bend with initial: 6
11:28:08.801 [debug] Executing fun with value: 6
11:28:08.801 [debug] Evaluating bend block with value: 6
11:28:08.801 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.801 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.801 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.801 [debug] Executing bend with initial: 7
11:28:08.801 [debug] Executing fun with value: 7
11:28:08.801 [debug] Evaluating bend block with value: 7
11:28:08.801 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.801 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.801 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.801 [debug] Executing bend with initial: 8
11:28:08.801 [debug] Executing fun with value: 8
11:28:08.801 [debug] Evaluating bend block with value: 8
11:28:08.801 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.801 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.801 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.801 [debug] Executing bend with initial: 9
11:28:08.801 [debug] Executing fun with value: 9
11:28:08.801 [debug] Evaluating bend block with value: 9
11:28:08.801 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.801 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.801 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.801 [debug] Executing bend with initial: 10
11:28:08.801 [debug] Executing fun with value: 10
11:28:08.801 [debug] Evaluating bend block with value: 10
11:28:08.801 [debug] Block returned: %{variant: :leaf}
11:28:08.801 [debug] Fun returned result: %{variant: :leaf}
11:28:08.801 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.801 [debug] do_bend final result: %{variant: :leaf}
11:28:08.802 [debug] Executing bend with initial: 10
11:28:08.802 [debug] Executing fun with value: 10
11:28:08.802 [debug] Evaluating bend block with value: 10
11:28:08.802 [debug] Block returned: %{variant: :leaf}
11:28:08.802 [debug] Fun returned result: %{variant: :leaf}
11:28:08.802 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.802 [debug] Executing bend with initial: 9
11:28:08.802 [debug] Executing fun with value: 9
11:28:08.802 [debug] Evaluating bend block with value: 9
11:28:08.802 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Executing bend with initial: 10
11:28:08.802 [debug] Executing fun with value: 10
11:28:08.802 [debug] Evaluating bend block with value: 10
11:28:08.802 [debug] Block returned: %{variant: :leaf}
11:28:08.802 [debug] Fun returned result: %{variant: :leaf}
11:28:08.802 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{variant: :leaf}
11:28:08.802 [debug] Executing bend with initial: 10
11:28:08.802 [debug] Executing fun with value: 10
11:28:08.802 [debug] Evaluating bend block with value: 10
11:28:08.802 [debug] Block returned: %{variant: :leaf}
11:28:08.802 [debug] Fun returned result: %{variant: :leaf}
11:28:08.802 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.802 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.802 [debug] Executing bend with initial: 8
11:28:08.802 [debug] Executing fun with value: 8
11:28:08.802 [debug] Evaluating bend block with value: 8
11:28:08.802 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.802 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.802 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.802 [debug] Executing bend with initial: 9
11:28:08.802 [debug] Executing fun with value: 9
11:28:08.802 [debug] Evaluating bend block with value: 9
11:28:08.802 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Executing bend with initial: 10
11:28:08.802 [debug] Executing fun with value: 10
11:28:08.802 [debug] Evaluating bend block with value: 10
11:28:08.802 [debug] Block returned: %{variant: :leaf}
11:28:08.802 [debug] Fun returned result: %{variant: :leaf}
11:28:08.802 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{variant: :leaf}
11:28:08.802 [debug] Executing bend with initial: 10
11:28:08.802 [debug] Executing fun with value: 10
11:28:08.802 [debug] Evaluating bend block with value: 10
11:28:08.802 [debug] Block returned: %{variant: :leaf}
11:28:08.802 [debug] Fun returned result: %{variant: :leaf}
11:28:08.802 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{variant: :leaf}
11:28:08.802 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.802 [debug] Executing bend with initial: 9
11:28:08.802 [debug] Executing fun with value: 9
11:28:08.802 [debug] Evaluating bend block with value: 9
11:28:08.802 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.802 [debug] Executing bend with initial: 10
11:28:08.802 [debug] Executing fun with value: 10
11:28:08.802 [debug] Evaluating bend block with value: 10
11:28:08.802 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] Executing bend with initial: 10
11:28:08.803 [debug] Executing fun with value: 10
11:28:08.803 [debug] Evaluating bend block with value: 10
11:28:08.803 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.803 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.803 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 7
11:28:08.803 [debug] Executing fun with value: 7
11:28:08.803 [debug] Evaluating bend block with value: 7
11:28:08.803 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.803 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.803 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 8
11:28:08.803 [debug] Executing fun with value: 8
11:28:08.803 [debug] Evaluating bend block with value: 8
11:28:08.803 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.803 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.803 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 9
11:28:08.803 [debug] Executing fun with value: 9
11:28:08.803 [debug] Evaluating bend block with value: 9
11:28:08.803 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 10
11:28:08.803 [debug] Executing fun with value: 10
11:28:08.803 [debug] Evaluating bend block with value: 10
11:28:08.803 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] Executing bend with initial: 10
11:28:08.803 [debug] Executing fun with value: 10
11:28:08.803 [debug] Evaluating bend block with value: 10
11:28:08.803 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 9
11:28:08.803 [debug] Executing fun with value: 9
11:28:08.803 [debug] Evaluating bend block with value: 9
11:28:08.803 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 10
11:28:08.803 [debug] Executing fun with value: 10
11:28:08.803 [debug] Evaluating bend block with value: 10
11:28:08.803 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] Executing bend with initial: 10
11:28:08.803 [debug] Executing fun with value: 10
11:28:08.803 [debug] Evaluating bend block with value: 10
11:28:08.803 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.803 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 8
11:28:08.803 [debug] Executing fun with value: 8
11:28:08.803 [debug] Evaluating bend block with value: 8
11:28:08.803 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.803 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.803 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 9
11:28:08.803 [debug] Executing fun with value: 9
11:28:08.803 [debug] Evaluating bend block with value: 9
11:28:08.803 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 10
11:28:08.803 [debug] Executing fun with value: 10
11:28:08.803 [debug] Evaluating bend block with value: 10
11:28:08.803 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] Executing bend with initial: 10
11:28:08.803 [debug] Executing fun with value: 10
11:28:08.803 [debug] Evaluating bend block with value: 10
11:28:08.803 [debug] Block returned: %{variant: :leaf}
11:28:08.803 [debug] Fun returned result: %{variant: :leaf}
11:28:08.803 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{variant: :leaf}
11:28:08.803 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.803 [debug] Executing bend with initial: 9
11:28:08.803 [debug] Executing fun with value: 9
11:28:08.804 [debug] Evaluating bend block with value: 9
11:28:08.804 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.804 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.804 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.804 [debug] Executing bend with initial: 10
11:28:08.804 [debug] Executing fun with value: 10
11:28:08.804 [debug] Evaluating bend block with value: 10
11:28:08.804 [debug] Block returned: %{variant: :leaf}
11:28:08.804 [debug] Fun returned result: %{variant: :leaf}
11:28:08.804 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.804 [debug] do_bend final result: %{variant: :leaf}
11:28:08.804 [debug] Executing bend with initial: 10
11:28:08.804 [debug] Executing fun with value: 10
11:28:08.804 [debug] Evaluating bend block with value: 10
11:28:08.804 [debug] Block returned: %{variant: :leaf}
11:28:08.804 [debug] Fun returned result: %{variant: :leaf}
11:28:08.804 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.804 [debug] do_bend final result: %{variant: :leaf}
11:28:08.804 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.804 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.804 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.804 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.804 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.804 [debug] Executing bend with initial: 5
11:28:08.804 [debug] Executing fun with value: 5
11:28:08.804 [debug] Evaluating bend block with value: 5
11:28:08.804 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.804 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.804 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.804 [debug] Executing bend with initial: 6
11:28:08.804 [debug] Executing fun with value: 6
11:28:08.804 [debug] Evaluating bend block with value: 6
11:28:08.804 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.804 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.805 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.805 [debug] Executing bend with initial: 7
11:28:08.805 [debug] Executing fun with value: 7
11:28:08.805 [debug] Evaluating bend block with value: 7
11:28:08.805 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.805 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.805 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.805 [debug] Executing bend with initial: 8
11:28:08.805 [debug] Executing fun with value: 8
11:28:08.805 [debug] Evaluating bend block with value: 8
11:28:08.805 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.805 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.805 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.805 [debug] Executing bend with initial: 9
11:28:08.805 [debug] Executing fun with value: 9
11:28:08.805 [debug] Evaluating bend block with value: 9
11:28:08.805 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.805 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.805 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.805 [debug] Executing bend with initial: 10
11:28:08.805 [debug] Executing fun with value: 10
11:28:08.805 [debug] Evaluating bend block with value: 10
11:28:08.805 [debug] Block returned: %{variant: :leaf}
11:28:08.805 [debug] Fun returned result: %{variant: :leaf}
11:28:08.805 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.805 [debug] do_bend final result: %{variant: :leaf}
11:28:08.805 [debug] Executing bend with initial: 10
11:28:08.805 [debug] Executing fun with value: 10
11:28:08.805 [debug] Evaluating bend block with value: 10
11:28:08.805 [debug] Block returned: %{variant: :leaf}
11:28:08.805 [debug] Fun returned result: %{variant: :leaf}
11:28:08.805 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.805 [debug] do_bend final result: %{variant: :leaf}
11:28:08.805 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.805 [debug] Executing bend with initial: 9
11:28:08.805 [debug] Executing fun with value: 9
11:28:08.805 [debug] Evaluating bend block with value: 9
11:28:08.805 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.805 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.805 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.805 [debug] Executing bend with initial: 10
11:28:08.805 [debug] Executing fun with value: 10
11:28:08.807 [debug] Evaluating bend block with value: 10
11:28:08.807 [debug] Block returned: %{variant: :leaf}
11:28:08.807 [debug] Fun returned result: %{variant: :leaf}
11:28:08.807 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.807 [debug] do_bend final result: %{variant: :leaf}
11:28:08.807 [debug] Executing bend with initial: 10
11:28:08.807 [debug] Executing fun with value: 10
11:28:08.807 [debug] Evaluating bend block with value: 10
11:28:08.807 [debug] Block returned: %{variant: :leaf}
11:28:08.807 [debug] Fun returned result: %{variant: :leaf}
11:28:08.807 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.807 [debug] do_bend final result: %{variant: :leaf}
11:28:08.807 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.807 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.807 [debug] Executing bend with initial: 8
11:28:08.807 [debug] Executing fun with value: 8
11:28:08.807 [debug] Evaluating bend block with value: 8
11:28:08.807 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.807 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.807 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.807 [debug] Executing bend with initial: 9
11:28:08.807 [debug] Executing fun with value: 9
11:28:08.807 [debug] Evaluating bend block with value: 9
11:28:08.807 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.807 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.807 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.807 [debug] Executing bend with initial: 10
11:28:08.807 [debug] Executing fun with value: 10
11:28:08.807 [debug] Evaluating bend block with value: 10
11:28:08.807 [debug] Block returned: %{variant: :leaf}
11:28:08.807 [debug] Fun returned result: %{variant: :leaf}
11:28:08.807 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.807 [debug] do_bend final result: %{variant: :leaf}
11:28:08.807 [debug] Executing bend with initial: 10
11:28:08.807 [debug] Executing fun with value: 10
11:28:08.807 [debug] Evaluating bend block with value: 10
11:28:08.807 [debug] Block returned: %{variant: :leaf}
11:28:08.807 [debug] Fun returned result: %{variant: :leaf}
11:28:08.807 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.807 [debug] do_bend final result: %{variant: :leaf}
11:28:08.807 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.807 [debug] Executing bend with initial: 9
11:28:08.807 [debug] Executing fun with value: 9
11:28:08.807 [debug] Evaluating bend block with value: 9
11:28:08.807 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 10
11:28:08.808 [debug] Executing fun with value: 10
11:28:08.808 [debug] Evaluating bend block with value: 10
11:28:08.808 [debug] Block returned: %{variant: :leaf}
11:28:08.808 [debug] Fun returned result: %{variant: :leaf}
11:28:08.808 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{variant: :leaf}
11:28:08.808 [debug] Executing bend with initial: 10
11:28:08.808 [debug] Executing fun with value: 10
11:28:08.808 [debug] Evaluating bend block with value: 10
11:28:08.808 [debug] Block returned: %{variant: :leaf}
11:28:08.808 [debug] Fun returned result: %{variant: :leaf}
11:28:08.808 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.808 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.808 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 7
11:28:08.808 [debug] Executing fun with value: 7
11:28:08.808 [debug] Evaluating bend block with value: 7
11:28:08.808 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.808 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.808 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 8
11:28:08.808 [debug] Executing fun with value: 8
11:28:08.808 [debug] Evaluating bend block with value: 8
11:28:08.808 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.808 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.808 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 9
11:28:08.808 [debug] Executing fun with value: 9
11:28:08.808 [debug] Evaluating bend block with value: 9
11:28:08.808 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 10
11:28:08.808 [debug] Executing fun with value: 10
11:28:08.808 [debug] Evaluating bend block with value: 10
11:28:08.808 [debug] Block returned: %{variant: :leaf}
11:28:08.808 [debug] Fun returned result: %{variant: :leaf}
11:28:08.808 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{variant: :leaf}
11:28:08.808 [debug] Executing bend with initial: 10
11:28:08.808 [debug] Executing fun with value: 10
11:28:08.808 [debug] Evaluating bend block with value: 10
11:28:08.808 [debug] Block returned: %{variant: :leaf}
11:28:08.808 [debug] Fun returned result: %{variant: :leaf}
11:28:08.808 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 9
11:28:08.808 [debug] Executing fun with value: 9
11:28:08.808 [debug] Evaluating bend block with value: 9
11:28:08.808 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 10
11:28:08.808 [debug] Executing fun with value: 10
11:28:08.808 [debug] Evaluating bend block with value: 10
11:28:08.808 [debug] Block returned: %{variant: :leaf}
11:28:08.808 [debug] Fun returned result: %{variant: :leaf}
11:28:08.808 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{variant: :leaf}
11:28:08.808 [debug] Executing bend with initial: 10
11:28:08.808 [debug] Executing fun with value: 10
11:28:08.808 [debug] Evaluating bend block with value: 10
11:28:08.808 [debug] Block returned: %{variant: :leaf}
11:28:08.808 [debug] Fun returned result: %{variant: :leaf}
11:28:08.808 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{variant: :leaf}
11:28:08.808 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.808 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.808 [debug] Executing bend with initial: 8
11:28:08.809 [debug] Executing fun with value: 8
11:28:08.809 [debug] Evaluating bend block with value: 8
11:28:08.809 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.809 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.809 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.809 [debug] Executing bend with initial: 9
11:28:08.809 [debug] Executing fun with value: 9
11:28:08.809 [debug] Evaluating bend block with value: 9
11:28:08.809 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.809 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.809 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.809 [debug] Executing bend with initial: 10
11:28:08.809 [debug] Executing fun with value: 10
11:28:08.809 [debug] Evaluating bend block with value: 10
11:28:08.809 [debug] Block returned: %{variant: :leaf}
11:28:08.809 [debug] Fun returned result: %{variant: :leaf}
11:28:08.809 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.809 [debug] do_bend final result: %{variant: :leaf}
11:28:08.809 [debug] Executing bend with initial: 10
11:28:08.809 [debug] Executing fun with value: 10
11:28:08.809 [debug] Evaluating bend block with value: 10
11:28:08.809 [debug] Block returned: %{variant: :leaf}
11:28:08.809 [debug] Fun returned result: %{variant: :leaf}
11:28:08.809 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.809 [debug] do_bend final result: %{variant: :leaf}
11:28:08.809 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.809 [debug] Executing bend with initial: 9
11:28:08.809 [debug] Executing fun with value: 9
11:28:08.809 [debug] Evaluating bend block with value: 9
11:28:08.809 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.809 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.809 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.809 [debug] Executing bend with initial: 10
11:28:08.809 [debug] Executing fun with value: 10
11:28:08.809 [debug] Evaluating bend block with value: 10
11:28:08.809 [debug] Block returned: %{variant: :leaf}
11:28:08.809 [debug] Fun returned result: %{variant: :leaf}
11:28:08.809 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.809 [debug] do_bend final result: %{variant: :leaf}
11:28:08.809 [debug] Executing bend with initial: 10
11:28:08.809 [debug] Executing fun with value: 10
11:28:08.809 [debug] Evaluating bend block with value: 10
11:28:08.809 [debug] Block returned: %{variant: :leaf}
11:28:08.809 [debug] Fun returned result: %{variant: :leaf}
11:28:08.809 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.809 [debug] do_bend final result: %{variant: :leaf}
11:28:08.809 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.809 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.809 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.809 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.809 [debug] Executing bend with initial: 6
11:28:08.809 [debug] Executing fun with value: 6
11:28:08.809 [debug] Evaluating bend block with value: 6
11:28:08.809 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.809 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.809 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.809 [debug] Executing bend with initial: 7
11:28:08.809 [debug] Executing fun with value: 7
11:28:08.809 [debug] Evaluating bend block with value: 7
11:28:08.809 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.809 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.810 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.810 [debug] Executing bend with initial: 8
11:28:08.810 [debug] Executing fun with value: 8
11:28:08.810 [debug] Evaluating bend block with value: 8
11:28:08.810 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.810 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.810 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.810 [debug] Executing bend with initial: 9
11:28:08.810 [debug] Executing fun with value: 9
11:28:08.810 [debug] Evaluating bend block with value: 9
11:28:08.810 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.810 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.810 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.810 [debug] Executing bend with initial: 10
11:28:08.810 [debug] Executing fun with value: 10
11:28:08.810 [debug] Evaluating bend block with value: 10
11:28:08.810 [debug] Block returned: %{variant: :leaf}
11:28:08.810 [debug] Fun returned result: %{variant: :leaf}
11:28:08.810 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.810 [debug] do_bend final result: %{variant: :leaf}
11:28:08.810 [debug] Executing bend with initial: 10
11:28:08.810 [debug] Executing fun with value: 10
11:28:08.810 [debug] Evaluating bend block with value: 10
11:28:08.810 [debug] Block returned: %{variant: :leaf}
11:28:08.810 [debug] Fun returned result: %{variant: :leaf}
11:28:08.810 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.810 [debug] do_bend final result: %{variant: :leaf}
11:28:08.810 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.810 [debug] Executing bend with initial: 9
11:28:08.810 [debug] Executing fun with value: 9
11:28:08.810 [debug] Evaluating bend block with value: 9
11:28:08.810 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.810 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.810 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.810 [debug] Executing bend with initial: 10
11:28:08.810 [debug] Executing fun with value: 10
11:28:08.810 [debug] Evaluating bend block with value: 10
11:28:08.810 [debug] Block returned: %{variant: :leaf}
11:28:08.810 [debug] Fun returned result: %{variant: :leaf}
11:28:08.810 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.810 [debug] do_bend final result: %{variant: :leaf}
11:28:08.810 [debug] Executing bend with initial: 10
11:28:08.810 [debug] Executing fun with value: 10
11:28:08.810 [debug] Evaluating bend block with value: 10
11:28:08.810 [debug] Block returned: %{variant: :leaf}
11:28:08.810 [debug] Fun returned result: %{variant: :leaf}
11:28:08.810 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.810 [debug] do_bend final result: %{variant: :leaf}
11:28:08.810 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.810 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 8
11:28:08.811 [debug] Executing fun with value: 8
11:28:08.811 [debug] Evaluating bend block with value: 8
11:28:08.811 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.811 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.811 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 9
11:28:08.811 [debug] Executing fun with value: 9
11:28:08.811 [debug] Evaluating bend block with value: 9
11:28:08.811 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.811 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.811 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 10
11:28:08.811 [debug] Executing fun with value: 10
11:28:08.811 [debug] Evaluating bend block with value: 10
11:28:08.811 [debug] Block returned: %{variant: :leaf}
11:28:08.811 [debug] Fun returned result: %{variant: :leaf}
11:28:08.811 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.811 [debug] do_bend final result: %{variant: :leaf}
11:28:08.811 [debug] Executing bend with initial: 10
11:28:08.811 [debug] Executing fun with value: 10
11:28:08.811 [debug] Evaluating bend block with value: 10
11:28:08.811 [debug] Block returned: %{variant: :leaf}
11:28:08.811 [debug] Fun returned result: %{variant: :leaf}
11:28:08.811 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.811 [debug] do_bend final result: %{variant: :leaf}
11:28:08.811 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 9
11:28:08.811 [debug] Executing fun with value: 9
11:28:08.811 [debug] Evaluating bend block with value: 9
11:28:08.811 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.811 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.811 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 10
11:28:08.811 [debug] Executing fun with value: 10
11:28:08.811 [debug] Evaluating bend block with value: 10
11:28:08.811 [debug] Block returned: %{variant: :leaf}
11:28:08.811 [debug] Fun returned result: %{variant: :leaf}
11:28:08.811 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.811 [debug] do_bend final result: %{variant: :leaf}
11:28:08.811 [debug] Executing bend with initial: 10
11:28:08.811 [debug] Executing fun with value: 10
11:28:08.811 [debug] Evaluating bend block with value: 10
11:28:08.811 [debug] Block returned: %{variant: :leaf}
11:28:08.811 [debug] Fun returned result: %{variant: :leaf}
11:28:08.811 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.811 [debug] do_bend final result: %{variant: :leaf}
11:28:08.811 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.811 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.811 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 7
11:28:08.811 [debug] Executing fun with value: 7
11:28:08.811 [debug] Evaluating bend block with value: 7
11:28:08.811 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.811 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.811 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 8
11:28:08.811 [debug] Executing fun with value: 8
11:28:08.811 [debug] Evaluating bend block with value: 8
11:28:08.811 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.811 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.811 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.811 [debug] Executing bend with initial: 9
11:28:08.811 [debug] Executing fun with value: 9
11:28:08.811 [debug] Evaluating bend block with value: 9
11:28:08.811 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 9
11:28:08.812 [debug] Executing fun with value: 9
11:28:08.812 [debug] Evaluating bend block with value: 9
11:28:08.812 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.812 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 8
11:28:08.812 [debug] Executing fun with value: 8
11:28:08.812 [debug] Evaluating bend block with value: 8
11:28:08.812 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.812 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.812 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 9
11:28:08.812 [debug] Executing fun with value: 9
11:28:08.812 [debug] Evaluating bend block with value: 9
11:28:08.812 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 9
11:28:08.812 [debug] Executing fun with value: 9
11:28:08.812 [debug] Evaluating bend block with value: 9
11:28:08.812 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] Executing bend with initial: 10
11:28:08.812 [debug] Executing fun with value: 10
11:28:08.812 [debug] Evaluating bend block with value: 10
11:28:08.812 [debug] Block returned: %{variant: :leaf}
11:28:08.812 [debug] Fun returned result: %{variant: :leaf}
11:28:08.812 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{variant: :leaf}
11:28:08.812 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.812 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.812 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.813 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.813 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.813 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.814 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.816 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
11:28:08.816 [debug] Executing bend with initial: 2
11:28:08.816 [debug] Executing fun with value: 2
11:28:08.816 [debug] Evaluating bend block with value: 2
11:28:08.816 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 3
11:28:08.816 [debug] Executing fun with value: 3
11:28:08.816 [debug] Evaluating bend block with value: 3
11:28:08.816 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 4
11:28:08.816 [debug] Executing fun with value: 4
11:28:08.816 [debug] Evaluating bend block with value: 4
11:28:08.816 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 5
11:28:08.816 [debug] Executing fun with value: 5
11:28:08.816 [debug] Evaluating bend block with value: 5
11:28:08.816 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 6
11:28:08.816 [debug] Executing fun with value: 6
11:28:08.816 [debug] Evaluating bend block with value: 6
11:28:08.816 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 7
11:28:08.816 [debug] Executing fun with value: 7
11:28:08.816 [debug] Evaluating bend block with value: 7
11:28:08.816 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 8
11:28:08.816 [debug] Executing fun with value: 8
11:28:08.816 [debug] Evaluating bend block with value: 8
11:28:08.816 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 9
11:28:08.816 [debug] Executing fun with value: 9
11:28:08.816 [debug] Evaluating bend block with value: 9
11:28:08.816 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.816 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.816 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.816 [debug] Executing bend with initial: 10
11:28:08.816 [debug] Executing fun with value: 10
11:28:08.816 [debug] Evaluating bend block with value: 10
11:28:08.816 [debug] Block returned: %{variant: :leaf}
11:28:08.816 [debug] Fun returned result: %{variant: :leaf}
11:28:08.816 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.817 [debug] Executing bend with initial: 10
11:28:08.817 [debug] Executing fun with value: 10
11:28:08.817 [debug] Evaluating bend block with value: 10
11:28:08.817 [debug] Block returned: %{variant: :leaf}
11:28:08.817 [debug] Fun returned result: %{variant: :leaf}
11:28:08.817 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.817 [debug] Executing bend with initial: 9
11:28:08.817 [debug] Executing fun with value: 9
11:28:08.817 [debug] Evaluating bend block with value: 9
11:28:08.817 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Executing bend with initial: 10
11:28:08.817 [debug] Executing fun with value: 10
11:28:08.817 [debug] Evaluating bend block with value: 10
11:28:08.817 [debug] Block returned: %{variant: :leaf}
11:28:08.817 [debug] Fun returned result: %{variant: :leaf}
11:28:08.817 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.817 [debug] Executing bend with initial: 10
11:28:08.817 [debug] Executing fun with value: 10
11:28:08.817 [debug] Evaluating bend block with value: 10
11:28:08.817 [debug] Block returned: %{variant: :leaf}
11:28:08.817 [debug] Fun returned result: %{variant: :leaf}
11:28:08.817 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.817 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.817 [debug] Executing bend with initial: 8
11:28:08.817 [debug] Executing fun with value: 8
11:28:08.817 [debug] Evaluating bend block with value: 8
11:28:08.817 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.817 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.817 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.817 [debug] Executing bend with initial: 9
11:28:08.817 [debug] Executing fun with value: 9
11:28:08.817 [debug] Evaluating bend block with value: 9
11:28:08.817 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Executing bend with initial: 10
11:28:08.817 [debug] Executing fun with value: 10
11:28:08.817 [debug] Evaluating bend block with value: 10
11:28:08.817 [debug] Block returned: %{variant: :leaf}
11:28:08.817 [debug] Fun returned result: %{variant: :leaf}
11:28:08.817 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.817 [debug] Executing bend with initial: 10
11:28:08.817 [debug] Executing fun with value: 10
11:28:08.817 [debug] Evaluating bend block with value: 10
11:28:08.817 [debug] Block returned: %{variant: :leaf}
11:28:08.817 [debug] Fun returned result: %{variant: :leaf}
11:28:08.817 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.817 [debug] Executing bend with initial: 9
11:28:08.817 [debug] Executing fun with value: 9
11:28:08.817 [debug] Evaluating bend block with value: 9
11:28:08.817 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.817 [debug] Executing bend with initial: 10
11:28:08.817 [debug] Executing fun with value: 10
11:28:08.817 [debug] Evaluating bend block with value: 10
11:28:08.817 [debug] Block returned: %{variant: :leaf}
11:28:08.817 [debug] Fun returned result: %{variant: :leaf}
11:28:08.817 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.817 [debug] Executing bend with initial: 10
11:28:08.817 [debug] Executing fun with value: 10
11:28:08.817 [debug] Evaluating bend block with value: 10
11:28:08.817 [debug] Block returned: %{variant: :leaf}
11:28:08.817 [debug] Fun returned result: %{variant: :leaf}
11:28:08.817 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.817 [debug] do_bend final result: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.818 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.818 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 7
11:28:08.818 [debug] Executing fun with value: 7
11:28:08.818 [debug] Evaluating bend block with value: 7
11:28:08.818 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.818 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.818 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 8
11:28:08.818 [debug] Executing fun with value: 8
11:28:08.818 [debug] Evaluating bend block with value: 8
11:28:08.818 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.818 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.818 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 9
11:28:08.818 [debug] Executing fun with value: 9
11:28:08.818 [debug] Evaluating bend block with value: 9
11:28:08.818 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 10
11:28:08.818 [debug] Executing fun with value: 10
11:28:08.818 [debug] Evaluating bend block with value: 10
11:28:08.818 [debug] Block returned: %{variant: :leaf}
11:28:08.818 [debug] Fun returned result: %{variant: :leaf}
11:28:08.818 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{variant: :leaf}
11:28:08.818 [debug] Executing bend with initial: 10
11:28:08.818 [debug] Executing fun with value: 10
11:28:08.818 [debug] Evaluating bend block with value: 10
11:28:08.818 [debug] Block returned: %{variant: :leaf}
11:28:08.818 [debug] Fun returned result: %{variant: :leaf}
11:28:08.818 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 9
11:28:08.818 [debug] Executing fun with value: 9
11:28:08.818 [debug] Evaluating bend block with value: 9
11:28:08.818 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 10
11:28:08.818 [debug] Executing fun with value: 10
11:28:08.818 [debug] Evaluating bend block with value: 10
11:28:08.818 [debug] Block returned: %{variant: :leaf}
11:28:08.818 [debug] Fun returned result: %{variant: :leaf}
11:28:08.818 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{variant: :leaf}
11:28:08.818 [debug] Executing bend with initial: 10
11:28:08.818 [debug] Executing fun with value: 10
11:28:08.818 [debug] Evaluating bend block with value: 10
11:28:08.818 [debug] Block returned: %{variant: :leaf}
11:28:08.818 [debug] Fun returned result: %{variant: :leaf}
11:28:08.818 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.818 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 8
11:28:08.818 [debug] Executing fun with value: 8
11:28:08.818 [debug] Evaluating bend block with value: 8
11:28:08.818 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.818 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.818 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 9
11:28:08.818 [debug] Executing fun with value: 9
11:28:08.818 [debug] Evaluating bend block with value: 9
11:28:08.818 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 10
11:28:08.818 [debug] Executing fun with value: 10
11:28:08.818 [debug] Evaluating bend block with value: 10
11:28:08.818 [debug] Block returned: %{variant: :leaf}
11:28:08.818 [debug] Fun returned result: %{variant: :leaf}
11:28:08.818 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{variant: :leaf}
11:28:08.818 [debug] Executing bend with initial: 10
11:28:08.818 [debug] Executing fun with value: 10
11:28:08.818 [debug] Evaluating bend block with value: 10
11:28:08.818 [debug] Block returned: %{variant: :leaf}
11:28:08.818 [debug] Fun returned result: %{variant: :leaf}
11:28:08.818 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{variant: :leaf}
11:28:08.818 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.818 [debug] Executing bend with initial: 9
11:28:08.818 [debug] Executing fun with value: 9
11:28:08.818 [debug] Evaluating bend block with value: 9
11:28:08.818 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Executing bend with initial: 10
11:28:08.819 [debug] Executing fun with value: 10
11:28:08.819 [debug] Evaluating bend block with value: 10
11:28:08.819 [debug] Block returned: %{variant: :leaf}
11:28:08.819 [debug] Fun returned result: %{variant: :leaf}
11:28:08.819 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.819 [debug] do_bend final result: %{variant: :leaf}
11:28:08.819 [debug] Executing bend with initial: 10
11:28:08.819 [debug] Executing fun with value: 10
11:28:08.819 [debug] Evaluating bend block with value: 10
11:28:08.819 [debug] Block returned: %{variant: :leaf}
11:28:08.819 [debug] Fun returned result: %{variant: :leaf}
11:28:08.819 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.819 [debug] do_bend final result: %{variant: :leaf}
11:28:08.819 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.819 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.819 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.819 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.819 [debug] Executing bend with initial: 6
11:28:08.819 [debug] Executing fun with value: 6
11:28:08.819 [debug] Evaluating bend block with value: 6
11:28:08.819 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.819 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.819 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.819 [debug] Executing bend with initial: 7
11:28:08.819 [debug] Executing fun with value: 7
11:28:08.819 [debug] Evaluating bend block with value: 7
11:28:08.819 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.819 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.819 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.819 [debug] Executing bend with initial: 8
11:28:08.819 [debug] Executing fun with value: 8
11:28:08.819 [debug] Evaluating bend block with value: 8
11:28:08.819 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.819 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.819 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.819 [debug] Executing bend with initial: 9
11:28:08.819 [debug] Executing fun with value: 9
11:28:08.819 [debug] Evaluating bend block with value: 9
11:28:08.819 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Executing bend with initial: 10
11:28:08.819 [debug] Executing fun with value: 10
11:28:08.819 [debug] Evaluating bend block with value: 10
11:28:08.819 [debug] Block returned: %{variant: :leaf}
11:28:08.819 [debug] Fun returned result: %{variant: :leaf}
11:28:08.819 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.819 [debug] do_bend final result: %{variant: :leaf}
11:28:08.819 [debug] Executing bend with initial: 10
11:28:08.819 [debug] Executing fun with value: 10
11:28:08.819 [debug] Evaluating bend block with value: 10
11:28:08.819 [debug] Block returned: %{variant: :leaf}
11:28:08.819 [debug] Fun returned result: %{variant: :leaf}
11:28:08.819 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.819 [debug] do_bend final result: %{variant: :leaf}
11:28:08.819 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.819 [debug] Executing bend with initial: 9
11:28:08.819 [debug] Executing fun with value: 9
11:28:08.819 [debug] Evaluating bend block with value: 9
11:28:08.819 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.819 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.820 [debug] Executing bend with initial: 10
11:28:08.820 [debug] Executing fun with value: 10
11:28:08.820 [debug] Evaluating bend block with value: 10
11:28:08.820 [debug] Block returned: %{variant: :leaf}
11:28:08.820 [debug] Fun returned result: %{variant: :leaf}
11:28:08.820 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{variant: :leaf}
11:28:08.820 [debug] Executing bend with initial: 10
11:28:08.820 [debug] Executing fun with value: 10
11:28:08.820 [debug] Evaluating bend block with value: 10
11:28:08.820 [debug] Block returned: %{variant: :leaf}
11:28:08.820 [debug] Fun returned result: %{variant: :leaf}
11:28:08.820 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.820 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.820 [debug] Executing bend with initial: 8
11:28:08.820 [debug] Executing fun with value: 8
11:28:08.820 [debug] Evaluating bend block with value: 8
11:28:08.820 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.820 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.820 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.820 [debug] Executing bend with initial: 9
11:28:08.820 [debug] Executing fun with value: 9
11:28:08.820 [debug] Evaluating bend block with value: 9
11:28:08.820 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.820 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.820 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.820 [debug] Executing bend with initial: 10
11:28:08.820 [debug] Executing fun with value: 10
11:28:08.820 [debug] Evaluating bend block with value: 10
11:28:08.820 [debug] Block returned: %{variant: :leaf}
11:28:08.820 [debug] Fun returned result: %{variant: :leaf}
11:28:08.820 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{variant: :leaf}
11:28:08.820 [debug] Executing bend with initial: 10
11:28:08.820 [debug] Executing fun with value: 10
11:28:08.820 [debug] Evaluating bend block with value: 10
11:28:08.820 [debug] Block returned: %{variant: :leaf}
11:28:08.820 [debug] Fun returned result: %{variant: :leaf}
11:28:08.820 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.820 [debug] Executing bend with initial: 9
11:28:08.820 [debug] Executing fun with value: 9
11:28:08.820 [debug] Evaluating bend block with value: 9
11:28:08.820 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.820 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.820 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.820 [debug] Executing bend with initial: 10
11:28:08.820 [debug] Executing fun with value: 10
11:28:08.820 [debug] Evaluating bend block with value: 10
11:28:08.820 [debug] Block returned: %{variant: :leaf}
11:28:08.820 [debug] Fun returned result: %{variant: :leaf}
11:28:08.820 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{variant: :leaf}
11:28:08.820 [debug] Executing bend with initial: 10
11:28:08.820 [debug] Executing fun with value: 10
11:28:08.820 [debug] Evaluating bend block with value: 10
11:28:08.820 [debug] Block returned: %{variant: :leaf}
11:28:08.820 [debug] Fun returned result: %{variant: :leaf}
11:28:08.820 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{variant: :leaf}
11:28:08.820 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.821 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.821 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 7
11:28:08.821 [debug] Executing fun with value: 7
11:28:08.821 [debug] Evaluating bend block with value: 7
11:28:08.821 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.821 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.821 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 8
11:28:08.821 [debug] Executing fun with value: 8
11:28:08.821 [debug] Evaluating bend block with value: 8
11:28:08.821 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.821 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.821 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 9
11:28:08.821 [debug] Executing fun with value: 9
11:28:08.821 [debug] Evaluating bend block with value: 9
11:28:08.821 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 10
11:28:08.821 [debug] Executing fun with value: 10
11:28:08.821 [debug] Evaluating bend block with value: 10
11:28:08.821 [debug] Block returned: %{variant: :leaf}
11:28:08.821 [debug] Fun returned result: %{variant: :leaf}
11:28:08.821 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.821 [debug] do_bend final result: %{variant: :leaf}
11:28:08.821 [debug] Executing bend with initial: 10
11:28:08.821 [debug] Executing fun with value: 10
11:28:08.821 [debug] Evaluating bend block with value: 10
11:28:08.821 [debug] Block returned: %{variant: :leaf}
11:28:08.821 [debug] Fun returned result: %{variant: :leaf}
11:28:08.821 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.821 [debug] do_bend final result: %{variant: :leaf}
11:28:08.821 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 9
11:28:08.821 [debug] Executing fun with value: 9
11:28:08.821 [debug] Evaluating bend block with value: 9
11:28:08.821 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 10
11:28:08.821 [debug] Executing fun with value: 10
11:28:08.821 [debug] Evaluating bend block with value: 10
11:28:08.821 [debug] Block returned: %{variant: :leaf}
11:28:08.821 [debug] Fun returned result: %{variant: :leaf}
11:28:08.821 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.821 [debug] do_bend final result: %{variant: :leaf}
11:28:08.821 [debug] Executing bend with initial: 10
11:28:08.821 [debug] Executing fun with value: 10
11:28:08.821 [debug] Evaluating bend block with value: 10
11:28:08.821 [debug] Block returned: %{variant: :leaf}
11:28:08.821 [debug] Fun returned result: %{variant: :leaf}
11:28:08.821 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.821 [debug] do_bend final result: %{variant: :leaf}
11:28:08.821 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.821 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 8
11:28:08.821 [debug] Executing fun with value: 8
11:28:08.821 [debug] Evaluating bend block with value: 8
11:28:08.821 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.821 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.821 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 9
11:28:08.821 [debug] Executing fun with value: 9
11:28:08.821 [debug] Evaluating bend block with value: 9
11:28:08.821 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.821 [debug] Executing bend with initial: 10
11:28:08.822 [debug] Executing fun with value: 10
11:28:08.822 [debug] Evaluating bend block with value: 10
11:28:08.822 [debug] Block returned: %{variant: :leaf}
11:28:08.822 [debug] Fun returned result: %{variant: :leaf}
11:28:08.822 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.822 [debug] do_bend final result: %{variant: :leaf}
11:28:08.822 [debug] Executing bend with initial: 10
11:28:08.822 [debug] Executing fun with value: 10
11:28:08.822 [debug] Evaluating bend block with value: 10
11:28:08.822 [debug] Block returned: %{variant: :leaf}
11:28:08.822 [debug] Fun returned result: %{variant: :leaf}
11:28:08.822 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.822 [debug] do_bend final result: %{variant: :leaf}
11:28:08.822 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 9
11:28:08.822 [debug] Executing fun with value: 9
11:28:08.822 [debug] Evaluating bend block with value: 9
11:28:08.822 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.822 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.822 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 10
11:28:08.822 [debug] Executing fun with value: 10
11:28:08.822 [debug] Evaluating bend block with value: 10
11:28:08.822 [debug] Block returned: %{variant: :leaf}
11:28:08.822 [debug] Fun returned result: %{variant: :leaf}
11:28:08.822 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.822 [debug] do_bend final result: %{variant: :leaf}
11:28:08.822 [debug] Executing bend with initial: 10
11:28:08.822 [debug] Executing fun with value: 10
11:28:08.822 [debug] Evaluating bend block with value: 10
11:28:08.822 [debug] Block returned: %{variant: :leaf}
11:28:08.822 [debug] Fun returned result: %{variant: :leaf}
11:28:08.822 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.822 [debug] do_bend final result: %{variant: :leaf}
11:28:08.822 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.822 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.822 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.822 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.822 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 5
11:28:08.822 [debug] Executing fun with value: 5
11:28:08.822 [debug] Evaluating bend block with value: 5
11:28:08.822 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.822 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.822 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 6
11:28:08.822 [debug] Executing fun with value: 6
11:28:08.822 [debug] Evaluating bend block with value: 6
11:28:08.822 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.822 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.822 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 7
11:28:08.822 [debug] Executing fun with value: 7
11:28:08.822 [debug] Evaluating bend block with value: 7
11:28:08.822 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.822 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.822 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 8
11:28:08.822 [debug] Executing fun with value: 8
11:28:08.822 [debug] Evaluating bend block with value: 8
11:28:08.822 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.822 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.822 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 9
11:28:08.822 [debug] Executing fun with value: 9
11:28:08.822 [debug] Evaluating bend block with value: 9
11:28:08.822 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.822 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.822 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.822 [debug] Executing bend with initial: 10
11:28:08.823 [debug] Executing fun with value: 10
11:28:08.823 [debug] Evaluating bend block with value: 10
11:28:08.823 [debug] Block returned: %{variant: :leaf}
11:28:08.823 [debug] Fun returned result: %{variant: :leaf}
11:28:08.823 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{variant: :leaf}
11:28:08.823 [debug] Executing bend with initial: 10
11:28:08.823 [debug] Executing fun with value: 10
11:28:08.823 [debug] Evaluating bend block with value: 10
11:28:08.823 [debug] Block returned: %{variant: :leaf}
11:28:08.823 [debug] Fun returned result: %{variant: :leaf}
11:28:08.823 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.823 [debug] Executing bend with initial: 9
11:28:08.823 [debug] Executing fun with value: 9
11:28:08.823 [debug] Evaluating bend block with value: 9
11:28:08.823 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.823 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.823 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.823 [debug] Executing bend with initial: 10
11:28:08.823 [debug] Executing fun with value: 10
11:28:08.823 [debug] Evaluating bend block with value: 10
11:28:08.823 [debug] Block returned: %{variant: :leaf}
11:28:08.823 [debug] Fun returned result: %{variant: :leaf}
11:28:08.823 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{variant: :leaf}
11:28:08.823 [debug] Executing bend with initial: 10
11:28:08.823 [debug] Executing fun with value: 10
11:28:08.823 [debug] Evaluating bend block with value: 10
11:28:08.823 [debug] Block returned: %{variant: :leaf}
11:28:08.823 [debug] Fun returned result: %{variant: :leaf}
11:28:08.823 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.823 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.823 [debug] Executing bend with initial: 8
11:28:08.823 [debug] Executing fun with value: 8
11:28:08.823 [debug] Evaluating bend block with value: 8
11:28:08.823 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.823 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.823 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.823 [debug] Executing bend with initial: 9
11:28:08.823 [debug] Executing fun with value: 9
11:28:08.823 [debug] Evaluating bend block with value: 9
11:28:08.823 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.823 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.823 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.823 [debug] Executing bend with initial: 10
11:28:08.823 [debug] Executing fun with value: 10
11:28:08.823 [debug] Evaluating bend block with value: 10
11:28:08.823 [debug] Block returned: %{variant: :leaf}
11:28:08.823 [debug] Fun returned result: %{variant: :leaf}
11:28:08.823 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{variant: :leaf}
11:28:08.823 [debug] Executing bend with initial: 10
11:28:08.823 [debug] Executing fun with value: 10
11:28:08.823 [debug] Evaluating bend block with value: 10
11:28:08.823 [debug] Block returned: %{variant: :leaf}
11:28:08.823 [debug] Fun returned result: %{variant: :leaf}
11:28:08.823 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{variant: :leaf}
11:28:08.823 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.823 [debug] Executing bend with initial: 9
11:28:08.824 [debug] Executing fun with value: 9
11:28:08.824 [debug] Evaluating bend block with value: 9
11:28:08.824 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Executing bend with initial: 10
11:28:08.824 [debug] Executing fun with value: 10
11:28:08.824 [debug] Evaluating bend block with value: 10
11:28:08.824 [debug] Block returned: %{variant: :leaf}
11:28:08.824 [debug] Fun returned result: %{variant: :leaf}
11:28:08.824 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{variant: :leaf}
11:28:08.824 [debug] Executing bend with initial: 10
11:28:08.824 [debug] Executing fun with value: 10
11:28:08.824 [debug] Evaluating bend block with value: 10
11:28:08.824 [debug] Block returned: %{variant: :leaf}
11:28:08.824 [debug] Fun returned result: %{variant: :leaf}
11:28:08.824 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.824 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.824 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.824 [debug] Executing bend with initial: 7
11:28:08.824 [debug] Executing fun with value: 7
11:28:08.824 [debug] Evaluating bend block with value: 7
11:28:08.824 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.824 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.824 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.824 [debug] Executing bend with initial: 8
11:28:08.824 [debug] Executing fun with value: 8
11:28:08.824 [debug] Evaluating bend block with value: 8
11:28:08.824 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.824 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.824 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.824 [debug] Executing bend with initial: 9
11:28:08.824 [debug] Executing fun with value: 9
11:28:08.824 [debug] Evaluating bend block with value: 9
11:28:08.824 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Executing bend with initial: 10
11:28:08.824 [debug] Executing fun with value: 10
11:28:08.824 [debug] Evaluating bend block with value: 10
11:28:08.824 [debug] Block returned: %{variant: :leaf}
11:28:08.824 [debug] Fun returned result: %{variant: :leaf}
11:28:08.824 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{variant: :leaf}
11:28:08.824 [debug] Executing bend with initial: 10
11:28:08.824 [debug] Executing fun with value: 10
11:28:08.824 [debug] Evaluating bend block with value: 10
11:28:08.824 [debug] Block returned: %{variant: :leaf}
11:28:08.824 [debug] Fun returned result: %{variant: :leaf}
11:28:08.824 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.824 [debug] Executing bend with initial: 9
11:28:08.824 [debug] Executing fun with value: 9
11:28:08.824 [debug] Evaluating bend block with value: 9
11:28:08.824 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.824 [debug] Executing bend with initial: 10
11:28:08.824 [debug] Executing fun with value: 10
11:28:08.824 [debug] Evaluating bend block with value: 10
11:28:08.824 [debug] Block returned: %{variant: :leaf}
11:28:08.824 [debug] Fun returned result: %{variant: :leaf}
11:28:08.824 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{variant: :leaf}
11:28:08.824 [debug] Executing bend with initial: 10
11:28:08.824 [debug] Executing fun with value: 10
11:28:08.824 [debug] Evaluating bend block with value: 10
11:28:08.824 [debug] Block returned: %{variant: :leaf}
11:28:08.824 [debug] Fun returned result: %{variant: :leaf}
11:28:08.824 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{variant: :leaf}
11:28:08.824 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.825 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 8
11:28:08.825 [debug] Executing fun with value: 8
11:28:08.825 [debug] Evaluating bend block with value: 8
11:28:08.825 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.825 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.825 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 9
11:28:08.825 [debug] Executing fun with value: 9
11:28:08.825 [debug] Evaluating bend block with value: 9
11:28:08.825 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 10
11:28:08.825 [debug] Executing fun with value: 10
11:28:08.825 [debug] Evaluating bend block with value: 10
11:28:08.825 [debug] Block returned: %{variant: :leaf}
11:28:08.825 [debug] Fun returned result: %{variant: :leaf}
11:28:08.825 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{variant: :leaf}
11:28:08.825 [debug] Executing bend with initial: 10
11:28:08.825 [debug] Executing fun with value: 10
11:28:08.825 [debug] Evaluating bend block with value: 10
11:28:08.825 [debug] Block returned: %{variant: :leaf}
11:28:08.825 [debug] Fun returned result: %{variant: :leaf}
11:28:08.825 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 9
11:28:08.825 [debug] Executing fun with value: 9
11:28:08.825 [debug] Evaluating bend block with value: 9
11:28:08.825 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 10
11:28:08.825 [debug] Executing fun with value: 10
11:28:08.825 [debug] Evaluating bend block with value: 10
11:28:08.825 [debug] Block returned: %{variant: :leaf}
11:28:08.825 [debug] Fun returned result: %{variant: :leaf}
11:28:08.825 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{variant: :leaf}
11:28:08.825 [debug] Executing bend with initial: 10
11:28:08.825 [debug] Executing fun with value: 10
11:28:08.825 [debug] Evaluating bend block with value: 10
11:28:08.825 [debug] Block returned: %{variant: :leaf}
11:28:08.825 [debug] Fun returned result: %{variant: :leaf}
11:28:08.825 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.825 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.825 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.825 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 6
11:28:08.825 [debug] Executing fun with value: 6
11:28:08.825 [debug] Evaluating bend block with value: 6
11:28:08.825 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.825 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.825 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 7
11:28:08.825 [debug] Executing fun with value: 7
11:28:08.825 [debug] Evaluating bend block with value: 7
11:28:08.825 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.825 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.825 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 8
11:28:08.825 [debug] Executing fun with value: 8
11:28:08.825 [debug] Evaluating bend block with value: 8
11:28:08.825 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.825 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.825 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 9
11:28:08.825 [debug] Executing fun with value: 9
11:28:08.825 [debug] Evaluating bend block with value: 9
11:28:08.825 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.825 [debug] Executing bend with initial: 10
11:28:08.825 [debug] Executing fun with value: 10
11:28:08.825 [debug] Evaluating bend block with value: 10
11:28:08.825 [debug] Block returned: %{variant: :leaf}
11:28:08.825 [debug] Fun returned result: %{variant: :leaf}
11:28:08.825 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{variant: :leaf}
11:28:08.825 [debug] Executing bend with initial: 10
11:28:08.825 [debug] Executing fun with value: 10
11:28:08.825 [debug] Evaluating bend block with value: 10
11:28:08.825 [debug] Block returned: %{variant: :leaf}
11:28:08.825 [debug] Fun returned result: %{variant: :leaf}
11:28:08.825 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.825 [debug] do_bend final result: %{variant: :leaf}
11:28:08.826 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.826 [debug] Executing bend with initial: 9
11:28:08.826 [debug] Executing fun with value: 9
11:28:08.826 [debug] Evaluating bend block with value: 9
11:28:08.826 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.826 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.826 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.826 [debug] Executing bend with initial: 10
11:28:08.826 [debug] Executing fun with value: 10
11:28:08.826 [debug] Evaluating bend block with value: 10
11:28:08.826 [debug] Block returned: %{variant: :leaf}
11:28:08.826 [debug] Fun returned result: %{variant: :leaf}
11:28:08.826 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.826 [debug] do_bend final result: %{variant: :leaf}
11:28:08.826 [debug] Executing bend with initial: 10
11:28:08.826 [debug] Executing fun with value: 10
11:28:08.826 [debug] Evaluating bend block with value: 10
11:28:08.826 [debug] Block returned: %{variant: :leaf}
11:28:08.826 [debug] Fun returned result: %{variant: :leaf}
11:28:08.827 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.827 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 8
11:28:08.827 [debug] Executing fun with value: 8
11:28:08.827 [debug] Evaluating bend block with value: 8
11:28:08.827 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.827 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.827 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 9
11:28:08.827 [debug] Executing fun with value: 9
11:28:08.827 [debug] Evaluating bend block with value: 9
11:28:08.827 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 10
11:28:08.827 [debug] Executing fun with value: 10
11:28:08.827 [debug] Evaluating bend block with value: 10
11:28:08.827 [debug] Block returned: %{variant: :leaf}
11:28:08.827 [debug] Fun returned result: %{variant: :leaf}
11:28:08.827 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{variant: :leaf}
11:28:08.827 [debug] Executing bend with initial: 10
11:28:08.827 [debug] Executing fun with value: 10
11:28:08.827 [debug] Evaluating bend block with value: 10
11:28:08.827 [debug] Block returned: %{variant: :leaf}
11:28:08.827 [debug] Fun returned result: %{variant: :leaf}
11:28:08.827 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 9
11:28:08.827 [debug] Executing fun with value: 9
11:28:08.827 [debug] Evaluating bend block with value: 9
11:28:08.827 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 10
11:28:08.827 [debug] Executing fun with value: 10
11:28:08.827 [debug] Evaluating bend block with value: 10
11:28:08.827 [debug] Block returned: %{variant: :leaf}
11:28:08.827 [debug] Fun returned result: %{variant: :leaf}
11:28:08.827 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{variant: :leaf}
11:28:08.827 [debug] Executing bend with initial: 10
11:28:08.827 [debug] Executing fun with value: 10
11:28:08.827 [debug] Evaluating bend block with value: 10
11:28:08.827 [debug] Block returned: %{variant: :leaf}
11:28:08.827 [debug] Fun returned result: %{variant: :leaf}
11:28:08.827 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.827 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.827 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 7
11:28:08.827 [debug] Executing fun with value: 7
11:28:08.827 [debug] Evaluating bend block with value: 7
11:28:08.827 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.827 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.827 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 8
11:28:08.827 [debug] Executing fun with value: 8
11:28:08.827 [debug] Evaluating bend block with value: 8
11:28:08.827 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.827 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.827 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 9
11:28:08.827 [debug] Executing fun with value: 9
11:28:08.827 [debug] Evaluating bend block with value: 9
11:28:08.827 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.827 [debug] Executing bend with initial: 10
11:28:08.827 [debug] Executing fun with value: 10
11:28:08.827 [debug] Evaluating bend block with value: 10
11:28:08.827 [debug] Block returned: %{variant: :leaf}
11:28:08.827 [debug] Fun returned result: %{variant: :leaf}
11:28:08.827 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.827 [debug] do_bend final result: %{variant: :leaf}
11:28:08.827 [debug] Executing bend with initial: 10
11:28:08.828 [debug] Executing fun with value: 10
11:28:08.828 [debug] Evaluating bend block with value: 10
11:28:08.828 [debug] Block returned: %{variant: :leaf}
11:28:08.828 [debug] Fun returned result: %{variant: :leaf}
11:28:08.828 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.828 [debug] Executing bend with initial: 9
11:28:08.828 [debug] Executing fun with value: 9
11:28:08.828 [debug] Evaluating bend block with value: 9
11:28:08.828 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Executing bend with initial: 10
11:28:08.828 [debug] Executing fun with value: 10
11:28:08.828 [debug] Evaluating bend block with value: 10
11:28:08.828 [debug] Block returned: %{variant: :leaf}
11:28:08.828 [debug] Fun returned result: %{variant: :leaf}
11:28:08.828 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{variant: :leaf}
11:28:08.828 [debug] Executing bend with initial: 10
11:28:08.828 [debug] Executing fun with value: 10
11:28:08.828 [debug] Evaluating bend block with value: 10
11:28:08.828 [debug] Block returned: %{variant: :leaf}
11:28:08.828 [debug] Fun returned result: %{variant: :leaf}
11:28:08.828 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.828 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.828 [debug] Executing bend with initial: 8
11:28:08.828 [debug] Executing fun with value: 8
11:28:08.828 [debug] Evaluating bend block with value: 8
11:28:08.828 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.828 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.828 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.828 [debug] Executing bend with initial: 9
11:28:08.828 [debug] Executing fun with value: 9
11:28:08.828 [debug] Evaluating bend block with value: 9
11:28:08.828 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Executing bend with initial: 10
11:28:08.828 [debug] Executing fun with value: 10
11:28:08.828 [debug] Evaluating bend block with value: 10
11:28:08.828 [debug] Block returned: %{variant: :leaf}
11:28:08.828 [debug] Fun returned result: %{variant: :leaf}
11:28:08.828 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{variant: :leaf}
11:28:08.828 [debug] Executing bend with initial: 10
11:28:08.828 [debug] Executing fun with value: 10
11:28:08.828 [debug] Evaluating bend block with value: 10
11:28:08.828 [debug] Block returned: %{variant: :leaf}
11:28:08.828 [debug] Fun returned result: %{variant: :leaf}
11:28:08.828 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.828 [debug] Executing bend with initial: 9
11:28:08.828 [debug] Executing fun with value: 9
11:28:08.828 [debug] Evaluating bend block with value: 9
11:28:08.828 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.828 [debug] Executing bend with initial: 10
11:28:08.828 [debug] Executing fun with value: 10
11:28:08.828 [debug] Evaluating bend block with value: 10
11:28:08.828 [debug] Block returned: %{variant: :leaf}
11:28:08.828 [debug] Fun returned result: %{variant: :leaf}
11:28:08.828 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{variant: :leaf}
11:28:08.828 [debug] Executing bend with initial: 10
11:28:08.828 [debug] Executing fun with value: 10
11:28:08.828 [debug] Evaluating bend block with value: 10
11:28:08.828 [debug] Block returned: %{variant: :leaf}
11:28:08.828 [debug] Fun returned result: %{variant: :leaf}
11:28:08.828 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{variant: :leaf}
11:28:08.828 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.828 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.828 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.828 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.829 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.829 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.829 [debug] Executing bend with initial: 4
11:28:08.829 [debug] Executing fun with value: 4
11:28:08.829 [debug] Evaluating bend block with value: 4
11:28:08.829 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.829 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.829 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.829 [debug] Executing bend with initial: 5
11:28:08.829 [debug] Executing fun with value: 5
11:28:08.829 [debug] Evaluating bend block with value: 5
11:28:08.829 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.829 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.829 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.829 [debug] Executing bend with initial: 6
11:28:08.829 [debug] Executing fun with value: 6
11:28:08.829 [debug] Evaluating bend block with value: 6
11:28:08.829 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.829 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.829 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.829 [debug] Executing bend with initial: 7
11:28:08.829 [debug] Executing fun with value: 7
11:28:08.829 [debug] Evaluating bend block with value: 7
11:28:08.829 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.829 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.829 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.829 [debug] Executing bend with initial: 8
11:28:08.829 [debug] Executing fun with value: 8
11:28:08.829 [debug] Evaluating bend block with value: 8
11:28:08.829 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.829 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.829 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.829 [debug] Executing bend with initial: 9
11:28:08.829 [debug] Executing fun with value: 9
11:28:08.829 [debug] Evaluating bend block with value: 9
11:28:08.829 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.829 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.829 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.829 [debug] Executing bend with initial: 10
11:28:08.829 [debug] Executing fun with value: 10
11:28:08.829 [debug] Evaluating bend block with value: 10
11:28:08.829 [debug] Block returned: %{variant: :leaf}
11:28:08.829 [debug] Fun returned result: %{variant: :leaf}
11:28:08.829 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.829 [debug] do_bend final result: %{variant: :leaf}
11:28:08.829 [debug] Executing bend with initial: 10
11:28:08.829 [debug] Executing fun with value: 10
11:28:08.829 [debug] Evaluating bend block with value: 10
11:28:08.829 [debug] Block returned: %{variant: :leaf}
11:28:08.829 [debug] Fun returned result: %{variant: :leaf}
11:28:08.829 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.829 [debug] do_bend final result: %{variant: :leaf}
11:28:08.830 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.830 [debug] Executing bend with initial: 9
11:28:08.830 [debug] Executing fun with value: 9
11:28:08.830 [debug] Evaluating bend block with value: 9
11:28:08.830 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.830 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.831 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.831 [debug] Executing bend with initial: 10
11:28:08.831 [debug] Executing fun with value: 10
11:28:08.831 [debug] Evaluating bend block with value: 10
11:28:08.831 [debug] Block returned: %{variant: :leaf}
11:28:08.831 [debug] Fun returned result: %{variant: :leaf}
11:28:08.831 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.831 [debug] do_bend final result: %{variant: :leaf}
11:28:08.831 [debug] Executing bend with initial: 10
11:28:08.831 [debug] Executing fun with value: 10
11:28:08.831 [debug] Evaluating bend block with value: 10
11:28:08.831 [debug] Block returned: %{variant: :leaf}
11:28:08.831 [debug] Fun returned result: %{variant: :leaf}
11:28:08.831 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.831 [debug] do_bend final result: %{variant: :leaf}
11:28:08.831 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.831 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.831 [debug] Executing bend with initial: 8
11:28:08.831 [debug] Executing fun with value: 8
11:28:08.831 [debug] Evaluating bend block with value: 8
11:28:08.831 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.831 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.831 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.831 [debug] Executing bend with initial: 9
11:28:08.831 [debug] Executing fun with value: 9
11:28:08.831 [debug] Evaluating bend block with value: 9
11:28:08.831 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.831 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.831 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.831 [debug] Executing bend with initial: 10
11:28:08.831 [debug] Executing fun with value: 10
11:28:08.831 [debug] Evaluating bend block with value: 10
11:28:08.831 [debug] Block returned: %{variant: :leaf}
11:28:08.831 [debug] Fun returned result: %{variant: :leaf}
11:28:08.831 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.831 [debug] do_bend final result: %{variant: :leaf}
11:28:08.831 [debug] Executing bend with initial: 10
11:28:08.831 [debug] Executing fun with value: 10
11:28:08.831 [debug] Evaluating bend block with value: 10
11:28:08.831 [debug] Block returned: %{variant: :leaf}
11:28:08.832 [debug] Fun returned result: %{variant: :leaf}
11:28:08.832 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 9
11:28:08.832 [debug] Executing fun with value: 9
11:28:08.832 [debug] Evaluating bend block with value: 9
11:28:08.832 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 10
11:28:08.832 [debug] Executing fun with value: 10
11:28:08.832 [debug] Evaluating bend block with value: 10
11:28:08.832 [debug] Block returned: %{variant: :leaf}
11:28:08.832 [debug] Fun returned result: %{variant: :leaf}
11:28:08.832 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{variant: :leaf}
11:28:08.832 [debug] Executing bend with initial: 10
11:28:08.832 [debug] Executing fun with value: 10
11:28:08.832 [debug] Evaluating bend block with value: 10
11:28:08.832 [debug] Block returned: %{variant: :leaf}
11:28:08.832 [debug] Fun returned result: %{variant: :leaf}
11:28:08.832 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.832 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.832 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 7
11:28:08.832 [debug] Executing fun with value: 7
11:28:08.832 [debug] Evaluating bend block with value: 7
11:28:08.832 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.832 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.832 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 8
11:28:08.832 [debug] Executing fun with value: 8
11:28:08.832 [debug] Evaluating bend block with value: 8
11:28:08.832 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.832 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.832 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 9
11:28:08.832 [debug] Executing fun with value: 9
11:28:08.832 [debug] Evaluating bend block with value: 9
11:28:08.832 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 10
11:28:08.832 [debug] Executing fun with value: 10
11:28:08.832 [debug] Evaluating bend block with value: 10
11:28:08.832 [debug] Block returned: %{variant: :leaf}
11:28:08.832 [debug] Fun returned result: %{variant: :leaf}
11:28:08.832 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{variant: :leaf}
11:28:08.832 [debug] Executing bend with initial: 10
11:28:08.832 [debug] Executing fun with value: 10
11:28:08.832 [debug] Evaluating bend block with value: 10
11:28:08.832 [debug] Block returned: %{variant: :leaf}
11:28:08.832 [debug] Fun returned result: %{variant: :leaf}
11:28:08.832 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 9
11:28:08.832 [debug] Executing fun with value: 9
11:28:08.832 [debug] Evaluating bend block with value: 9
11:28:08.832 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.832 [debug] Executing bend with initial: 10
11:28:08.832 [debug] Executing fun with value: 10
11:28:08.832 [debug] Evaluating bend block with value: 10
11:28:08.832 [debug] Block returned: %{variant: :leaf}
11:28:08.832 [debug] Fun returned result: %{variant: :leaf}
11:28:08.832 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{variant: :leaf}
11:28:08.832 [debug] Executing bend with initial: 10
11:28:08.832 [debug] Executing fun with value: 10
11:28:08.832 [debug] Evaluating bend block with value: 10
11:28:08.832 [debug] Block returned: %{variant: :leaf}
11:28:08.832 [debug] Fun returned result: %{variant: :leaf}
11:28:08.832 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{variant: :leaf}
11:28:08.832 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.833 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.833 [debug] Executing bend with initial: 8
11:28:08.833 [debug] Executing fun with value: 8
11:28:08.833 [debug] Evaluating bend block with value: 8
11:28:08.833 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.833 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.833 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.833 [debug] Executing bend with initial: 9
11:28:08.833 [debug] Executing fun with value: 9
11:28:08.833 [debug] Evaluating bend block with value: 9
11:28:08.833 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.833 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.833 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.833 [debug] Executing bend with initial: 10
11:28:08.833 [debug] Executing fun with value: 10
11:28:08.833 [debug] Evaluating bend block with value: 10
11:28:08.833 [debug] Block returned: %{variant: :leaf}
11:28:08.833 [debug] Fun returned result: %{variant: :leaf}
11:28:08.833 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.833 [debug] do_bend final result: %{variant: :leaf}
11:28:08.833 [debug] Executing bend with initial: 10
11:28:08.834 [debug] Executing fun with value: 10
11:28:08.834 [debug] Evaluating bend block with value: 10
11:28:08.834 [debug] Block returned: %{variant: :leaf}
11:28:08.834 [debug] Fun returned result: %{variant: :leaf}
11:28:08.834 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.834 [debug] do_bend final result: %{variant: :leaf}
11:28:08.834 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.834 [debug] Executing bend with initial: 9
11:28:08.834 [debug] Executing fun with value: 9
11:28:08.834 [debug] Evaluating bend block with value: 9
11:28:08.834 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.834 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.834 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.834 [debug] Executing bend with initial: 10
11:28:08.834 [debug] Executing fun with value: 10
11:28:08.834 [debug] Evaluating bend block with value: 10
11:28:08.834 [debug] Block returned: %{variant: :leaf}
11:28:08.834 [debug] Fun returned result: %{variant: :leaf}
11:28:08.834 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.834 [debug] do_bend final result: %{variant: :leaf}
11:28:08.834 [debug] Executing bend with initial: 10
11:28:08.834 [debug] Executing fun with value: 10
11:28:08.834 [debug] Evaluating bend block with value: 10
11:28:08.834 [debug] Block returned: %{variant: :leaf}
11:28:08.834 [debug] Fun returned result: %{variant: :leaf}
11:28:08.834 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.834 [debug] do_bend final result: %{variant: :leaf}
11:28:08.834 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.834 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.834 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.834 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.834 [debug] Executing bend with initial: 6
11:28:08.835 [debug] Executing fun with value: 6
11:28:08.835 [debug] Evaluating bend block with value: 6
11:28:08.835 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 7
11:28:08.835 [debug] Executing fun with value: 7
11:28:08.835 [debug] Evaluating bend block with value: 7
11:28:08.835 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 8
11:28:08.835 [debug] Executing fun with value: 8
11:28:08.835 [debug] Evaluating bend block with value: 8
11:28:08.835 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 9
11:28:08.835 [debug] Executing fun with value: 9
11:28:08.835 [debug] Evaluating bend block with value: 9
11:28:08.835 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.835 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{variant: :leaf}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.835 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 9
11:28:08.835 [debug] Executing fun with value: 9
11:28:08.835 [debug] Evaluating bend block with value: 9
11:28:08.835 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.835 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{variant: :leaf}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.835 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.835 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 8
11:28:08.835 [debug] Executing fun with value: 8
11:28:08.835 [debug] Evaluating bend block with value: 8
11:28:08.835 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 9
11:28:08.835 [debug] Executing fun with value: 9
11:28:08.835 [debug] Evaluating bend block with value: 9
11:28:08.835 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.835 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{variant: :leaf}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.835 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 9
11:28:08.835 [debug] Executing fun with value: 9
11:28:08.835 [debug] Evaluating bend block with value: 9
11:28:08.835 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.835 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.835 [debug] do_bend final result: %{variant: :leaf}
11:28:08.835 [debug] Executing bend with initial: 10
11:28:08.835 [debug] Executing fun with value: 10
11:28:08.835 [debug] Evaluating bend block with value: 10
11:28:08.835 [debug] Block returned: %{variant: :leaf}
11:28:08.835 [debug] Fun returned result: %{variant: :leaf}
11:28:08.836 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.836 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.836 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 7
11:28:08.836 [debug] Executing fun with value: 7
11:28:08.836 [debug] Evaluating bend block with value: 7
11:28:08.836 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.836 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.836 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 8
11:28:08.836 [debug] Executing fun with value: 8
11:28:08.836 [debug] Evaluating bend block with value: 8
11:28:08.836 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.836 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.836 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 9
11:28:08.836 [debug] Executing fun with value: 9
11:28:08.836 [debug] Evaluating bend block with value: 9
11:28:08.836 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 10
11:28:08.836 [debug] Executing fun with value: 10
11:28:08.836 [debug] Evaluating bend block with value: 10
11:28:08.836 [debug] Block returned: %{variant: :leaf}
11:28:08.836 [debug] Fun returned result: %{variant: :leaf}
11:28:08.836 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{variant: :leaf}
11:28:08.836 [debug] Executing bend with initial: 10
11:28:08.836 [debug] Executing fun with value: 10
11:28:08.836 [debug] Evaluating bend block with value: 10
11:28:08.836 [debug] Block returned: %{variant: :leaf}
11:28:08.836 [debug] Fun returned result: %{variant: :leaf}
11:28:08.836 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 9
11:28:08.836 [debug] Executing fun with value: 9
11:28:08.836 [debug] Evaluating bend block with value: 9
11:28:08.836 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 10
11:28:08.836 [debug] Executing fun with value: 10
11:28:08.836 [debug] Evaluating bend block with value: 10
11:28:08.836 [debug] Block returned: %{variant: :leaf}
11:28:08.836 [debug] Fun returned result: %{variant: :leaf}
11:28:08.836 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{variant: :leaf}
11:28:08.836 [debug] Executing bend with initial: 10
11:28:08.836 [debug] Executing fun with value: 10
11:28:08.836 [debug] Evaluating bend block with value: 10
11:28:08.836 [debug] Block returned: %{variant: :leaf}
11:28:08.836 [debug] Fun returned result: %{variant: :leaf}
11:28:08.836 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.836 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 8
11:28:08.836 [debug] Executing fun with value: 8
11:28:08.836 [debug] Evaluating bend block with value: 8
11:28:08.836 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.836 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.836 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 9
11:28:08.836 [debug] Executing fun with value: 9
11:28:08.836 [debug] Evaluating bend block with value: 9
11:28:08.836 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.836 [debug] Executing bend with initial: 10
11:28:08.836 [debug] Executing fun with value: 10
11:28:08.836 [debug] Evaluating bend block with value: 10
11:28:08.836 [debug] Block returned: %{variant: :leaf}
11:28:08.836 [debug] Fun returned result: %{variant: :leaf}
11:28:08.836 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{variant: :leaf}
11:28:08.836 [debug] Executing bend with initial: 10
11:28:08.836 [debug] Executing fun with value: 10
11:28:08.836 [debug] Evaluating bend block with value: 10
11:28:08.836 [debug] Block returned: %{variant: :leaf}
11:28:08.836 [debug] Fun returned result: %{variant: :leaf}
11:28:08.836 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{variant: :leaf}
11:28:08.836 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.837 [debug] Executing bend with initial: 9
11:28:08.837 [debug] Executing fun with value: 9
11:28:08.837 [debug] Evaluating bend block with value: 9
11:28:08.837 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.837 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.837 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.837 [debug] Executing bend with initial: 10
11:28:08.837 [debug] Executing fun with value: 10
11:28:08.837 [debug] Evaluating bend block with value: 10
11:28:08.837 [debug] Block returned: %{variant: :leaf}
11:28:08.837 [debug] Fun returned result: %{variant: :leaf}
11:28:08.837 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.837 [debug] do_bend final result: %{variant: :leaf}
11:28:08.837 [debug] Executing bend with initial: 10
11:28:08.837 [debug] Executing fun with value: 10
11:28:08.837 [debug] Evaluating bend block with value: 10
11:28:08.837 [debug] Block returned: %{variant: :leaf}
11:28:08.837 [debug] Fun returned result: %{variant: :leaf}
11:28:08.837 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.837 [debug] do_bend final result: %{variant: :leaf}
11:28:08.837 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.837 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.837 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.837 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.837 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.837 [debug] Executing bend with initial: 5
11:28:08.837 [debug] Executing fun with value: 5
11:28:08.837 [debug] Evaluating bend block with value: 5
11:28:08.837 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.837 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.837 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.837 [debug] Executing bend with initial: 6
11:28:08.837 [debug] Executing fun with value: 6
11:28:08.837 [debug] Evaluating bend block with value: 6
11:28:08.837 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.837 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.837 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.837 [debug] Executing bend with initial: 7
11:28:08.837 [debug] Executing fun with value: 7
11:28:08.837 [debug] Evaluating bend block with value: 7
11:28:08.837 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.837 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.837 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.837 [debug] Executing bend with initial: 8
11:28:08.837 [debug] Executing fun with value: 8
11:28:08.837 [debug] Evaluating bend block with value: 8
11:28:08.837 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.839 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.839 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 9
11:28:08.839 [debug] Executing fun with value: 9
11:28:08.839 [debug] Evaluating bend block with value: 9
11:28:08.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 9
11:28:08.839 [debug] Executing fun with value: 9
11:28:08.839 [debug] Evaluating bend block with value: 9
11:28:08.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.839 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 8
11:28:08.839 [debug] Executing fun with value: 8
11:28:08.839 [debug] Evaluating bend block with value: 8
11:28:08.839 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.839 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.839 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 9
11:28:08.839 [debug] Executing fun with value: 9
11:28:08.839 [debug] Evaluating bend block with value: 9
11:28:08.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 9
11:28:08.839 [debug] Executing fun with value: 9
11:28:08.839 [debug] Evaluating bend block with value: 9
11:28:08.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] Executing bend with initial: 10
11:28:08.839 [debug] Executing fun with value: 10
11:28:08.839 [debug] Evaluating bend block with value: 10
11:28:08.839 [debug] Block returned: %{variant: :leaf}
11:28:08.839 [debug] Fun returned result: %{variant: :leaf}
11:28:08.839 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{variant: :leaf}
11:28:08.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.840 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.840 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 7
11:28:08.840 [debug] Executing fun with value: 7
11:28:08.840 [debug] Evaluating bend block with value: 7
11:28:08.840 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.840 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.840 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 8
11:28:08.840 [debug] Executing fun with value: 8
11:28:08.840 [debug] Evaluating bend block with value: 8
11:28:08.840 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.840 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.840 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 9
11:28:08.840 [debug] Executing fun with value: 9
11:28:08.840 [debug] Evaluating bend block with value: 9
11:28:08.840 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.840 [debug] Fun returned result: %{variant: :leaf}
11:28:08.840 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{variant: :leaf}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.840 [debug] Fun returned result: %{variant: :leaf}
11:28:08.840 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 9
11:28:08.840 [debug] Executing fun with value: 9
11:28:08.840 [debug] Evaluating bend block with value: 9
11:28:08.840 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.840 [debug] Fun returned result: %{variant: :leaf}
11:28:08.840 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{variant: :leaf}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.840 [debug] Fun returned result: %{variant: :leaf}
11:28:08.840 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.840 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 8
11:28:08.840 [debug] Executing fun with value: 8
11:28:08.840 [debug] Evaluating bend block with value: 8
11:28:08.840 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.840 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.840 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 9
11:28:08.840 [debug] Executing fun with value: 9
11:28:08.840 [debug] Evaluating bend block with value: 9
11:28:08.840 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.840 [debug] Fun returned result: %{variant: :leaf}
11:28:08.840 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{variant: :leaf}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.840 [debug] Fun returned result: %{variant: :leaf}
11:28:08.840 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 9
11:28:08.840 [debug] Executing fun with value: 9
11:28:08.840 [debug] Evaluating bend block with value: 9
11:28:08.840 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.840 [debug] Fun returned result: %{variant: :leaf}
11:28:08.840 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.840 [debug] do_bend final result: %{variant: :leaf}
11:28:08.840 [debug] Executing bend with initial: 10
11:28:08.840 [debug] Executing fun with value: 10
11:28:08.840 [debug] Evaluating bend block with value: 10
11:28:08.840 [debug] Block returned: %{variant: :leaf}
11:28:08.841 [debug] Fun returned result: %{variant: :leaf}
11:28:08.841 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.841 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.841 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.841 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.841 [debug] Executing bend with initial: 6
11:28:08.841 [debug] Executing fun with value: 6
11:28:08.841 [debug] Evaluating bend block with value: 6
11:28:08.841 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.841 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.841 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.841 [debug] Executing bend with initial: 7
11:28:08.841 [debug] Executing fun with value: 7
11:28:08.841 [debug] Evaluating bend block with value: 7
11:28:08.841 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.841 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.841 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.841 [debug] Executing bend with initial: 8
11:28:08.841 [debug] Executing fun with value: 8
11:28:08.841 [debug] Evaluating bend block with value: 8
11:28:08.841 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.841 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.841 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.841 [debug] Executing bend with initial: 9
11:28:08.841 [debug] Executing fun with value: 9
11:28:08.841 [debug] Evaluating bend block with value: 9
11:28:08.841 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.841 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.841 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.841 [debug] Executing bend with initial: 10
11:28:08.841 [debug] Executing fun with value: 10
11:28:08.841 [debug] Evaluating bend block with value: 10
11:28:08.841 [debug] Block returned: %{variant: :leaf}
11:28:08.841 [debug] Fun returned result: %{variant: :leaf}
11:28:08.841 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{variant: :leaf}
11:28:08.841 [debug] Executing bend with initial: 10
11:28:08.841 [debug] Executing fun with value: 10
11:28:08.841 [debug] Evaluating bend block with value: 10
11:28:08.841 [debug] Block returned: %{variant: :leaf}
11:28:08.841 [debug] Fun returned result: %{variant: :leaf}
11:28:08.841 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.841 [debug] Executing bend with initial: 9
11:28:08.841 [debug] Executing fun with value: 9
11:28:08.841 [debug] Evaluating bend block with value: 9
11:28:08.841 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.841 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.841 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.841 [debug] Executing bend with initial: 10
11:28:08.841 [debug] Executing fun with value: 10
11:28:08.841 [debug] Evaluating bend block with value: 10
11:28:08.841 [debug] Block returned: %{variant: :leaf}
11:28:08.841 [debug] Fun returned result: %{variant: :leaf}
11:28:08.841 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{variant: :leaf}
11:28:08.841 [debug] Executing bend with initial: 10
11:28:08.841 [debug] Executing fun with value: 10
11:28:08.841 [debug] Evaluating bend block with value: 10
11:28:08.841 [debug] Block returned: %{variant: :leaf}
11:28:08.841 [debug] Fun returned result: %{variant: :leaf}
11:28:08.841 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{variant: :leaf}
11:28:08.841 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.842 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 8
11:28:08.842 [debug] Executing fun with value: 8
11:28:08.842 [debug] Evaluating bend block with value: 8
11:28:08.842 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.842 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.842 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 9
11:28:08.842 [debug] Executing fun with value: 9
11:28:08.842 [debug] Evaluating bend block with value: 9
11:28:08.842 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 10
11:28:08.842 [debug] Executing fun with value: 10
11:28:08.842 [debug] Evaluating bend block with value: 10
11:28:08.842 [debug] Block returned: %{variant: :leaf}
11:28:08.842 [debug] Fun returned result: %{variant: :leaf}
11:28:08.842 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.842 [debug] do_bend final result: %{variant: :leaf}
11:28:08.842 [debug] Executing bend with initial: 10
11:28:08.842 [debug] Executing fun with value: 10
11:28:08.842 [debug] Evaluating bend block with value: 10
11:28:08.842 [debug] Block returned: %{variant: :leaf}
11:28:08.842 [debug] Fun returned result: %{variant: :leaf}
11:28:08.842 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.842 [debug] do_bend final result: %{variant: :leaf}
11:28:08.842 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 9
11:28:08.842 [debug] Executing fun with value: 9
11:28:08.842 [debug] Evaluating bend block with value: 9
11:28:08.842 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 10
11:28:08.842 [debug] Executing fun with value: 10
11:28:08.842 [debug] Evaluating bend block with value: 10
11:28:08.842 [debug] Block returned: %{variant: :leaf}
11:28:08.842 [debug] Fun returned result: %{variant: :leaf}
11:28:08.842 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.842 [debug] do_bend final result: %{variant: :leaf}
11:28:08.842 [debug] Executing bend with initial: 10
11:28:08.842 [debug] Executing fun with value: 10
11:28:08.842 [debug] Evaluating bend block with value: 10
11:28:08.842 [debug] Block returned: %{variant: :leaf}
11:28:08.842 [debug] Fun returned result: %{variant: :leaf}
11:28:08.842 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.842 [debug] do_bend final result: %{variant: :leaf}
11:28:08.842 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.842 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.842 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 7
11:28:08.842 [debug] Executing fun with value: 7
11:28:08.842 [debug] Evaluating bend block with value: 7
11:28:08.842 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.842 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.842 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 8
11:28:08.842 [debug] Executing fun with value: 8
11:28:08.842 [debug] Evaluating bend block with value: 8
11:28:08.842 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.842 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.842 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 9
11:28:08.842 [debug] Executing fun with value: 9
11:28:08.842 [debug] Evaluating bend block with value: 9
11:28:08.842 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.842 [debug] Executing bend with initial: 10
11:28:08.842 [debug] Executing fun with value: 10
11:28:08.842 [debug] Evaluating bend block with value: 10
11:28:08.842 [debug] Block returned: %{variant: :leaf}
11:28:08.842 [debug] Fun returned result: %{variant: :leaf}
11:28:08.843 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{variant: :leaf}
11:28:08.843 [debug] Executing bend with initial: 10
11:28:08.843 [debug] Executing fun with value: 10
11:28:08.843 [debug] Evaluating bend block with value: 10
11:28:08.843 [debug] Block returned: %{variant: :leaf}
11:28:08.843 [debug] Fun returned result: %{variant: :leaf}
11:28:08.843 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.843 [debug] Executing bend with initial: 9
11:28:08.843 [debug] Executing fun with value: 9
11:28:08.843 [debug] Evaluating bend block with value: 9
11:28:08.843 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Executing bend with initial: 10
11:28:08.843 [debug] Executing fun with value: 10
11:28:08.843 [debug] Evaluating bend block with value: 10
11:28:08.843 [debug] Block returned: %{variant: :leaf}
11:28:08.843 [debug] Fun returned result: %{variant: :leaf}
11:28:08.843 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{variant: :leaf}
11:28:08.843 [debug] Executing bend with initial: 10
11:28:08.843 [debug] Executing fun with value: 10
11:28:08.843 [debug] Evaluating bend block with value: 10
11:28:08.843 [debug] Block returned: %{variant: :leaf}
11:28:08.843 [debug] Fun returned result: %{variant: :leaf}
11:28:08.843 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.843 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.843 [debug] Executing bend with initial: 8
11:28:08.843 [debug] Executing fun with value: 8
11:28:08.843 [debug] Evaluating bend block with value: 8
11:28:08.843 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.843 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.843 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.843 [debug] Executing bend with initial: 9
11:28:08.843 [debug] Executing fun with value: 9
11:28:08.843 [debug] Evaluating bend block with value: 9
11:28:08.843 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Executing bend with initial: 10
11:28:08.843 [debug] Executing fun with value: 10
11:28:08.843 [debug] Evaluating bend block with value: 10
11:28:08.843 [debug] Block returned: %{variant: :leaf}
11:28:08.843 [debug] Fun returned result: %{variant: :leaf}
11:28:08.843 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{variant: :leaf}
11:28:08.843 [debug] Executing bend with initial: 10
11:28:08.843 [debug] Executing fun with value: 10
11:28:08.843 [debug] Evaluating bend block with value: 10
11:28:08.843 [debug] Block returned: %{variant: :leaf}
11:28:08.843 [debug] Fun returned result: %{variant: :leaf}
11:28:08.843 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{variant: :leaf}
11:28:08.843 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.843 [debug] Executing bend with initial: 9
11:28:08.843 [debug] Executing fun with value: 9
11:28:08.843 [debug] Evaluating bend block with value: 9
11:28:08.843 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.843 [debug] Executing bend with initial: 10
11:28:08.843 [debug] Executing fun with value: 10
11:28:08.843 [debug] Evaluating bend block with value: 10
11:28:08.843 [debug] Block returned: %{variant: :leaf}
11:28:08.843 [debug] Fun returned result: %{variant: :leaf}
11:28:08.843 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.844 [debug] do_bend final result: %{variant: :leaf}
11:28:08.844 [debug] Executing bend with initial: 10
11:28:08.844 [debug] Executing fun with value: 10
11:28:08.844 [debug] Evaluating bend block with value: 10
11:28:08.844 [debug] Block returned: %{variant: :leaf}
11:28:08.844 [debug] Fun returned result: %{variant: :leaf}
11:28:08.844 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.844 [debug] do_bend final result: %{variant: :leaf}
11:28:08.844 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.844 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.844 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.844 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.844 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.844 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.845 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.845 [debug] Executing bend with initial: 3
11:28:08.845 [debug] Executing fun with value: 3
11:28:08.845 [debug] Evaluating bend block with value: 3
11:28:08.845 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.845 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.845 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
11:28:08.845 [debug] Executing bend with initial: 4
11:28:08.845 [debug] Executing fun with value: 4
11:28:08.845 [debug] Evaluating bend block with value: 4
11:28:08.845 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.845 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.845 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.845 [debug] Executing bend with initial: 5
11:28:08.845 [debug] Executing fun with value: 5
11:28:08.845 [debug] Evaluating bend block with value: 5
11:28:08.845 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.845 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.845 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.845 [debug] Executing bend with initial: 6
11:28:08.845 [debug] Executing fun with value: 6
11:28:08.845 [debug] Evaluating bend block with value: 6
11:28:08.845 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.845 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.845 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.845 [debug] Executing bend with initial: 7
11:28:08.845 [debug] Executing fun with value: 7
11:28:08.845 [debug] Evaluating bend block with value: 7
11:28:08.846 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.846 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.846 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 8
11:28:08.846 [debug] Executing fun with value: 8
11:28:08.846 [debug] Evaluating bend block with value: 8
11:28:08.846 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.846 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.846 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 9
11:28:08.846 [debug] Executing fun with value: 9
11:28:08.846 [debug] Evaluating bend block with value: 9
11:28:08.846 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 10
11:28:08.846 [debug] Executing fun with value: 10
11:28:08.846 [debug] Evaluating bend block with value: 10
11:28:08.846 [debug] Block returned: %{variant: :leaf}
11:28:08.846 [debug] Fun returned result: %{variant: :leaf}
11:28:08.846 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{variant: :leaf}
11:28:08.846 [debug] Executing bend with initial: 10
11:28:08.846 [debug] Executing fun with value: 10
11:28:08.846 [debug] Evaluating bend block with value: 10
11:28:08.846 [debug] Block returned: %{variant: :leaf}
11:28:08.846 [debug] Fun returned result: %{variant: :leaf}
11:28:08.846 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 9
11:28:08.846 [debug] Executing fun with value: 9
11:28:08.846 [debug] Evaluating bend block with value: 9
11:28:08.846 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 10
11:28:08.846 [debug] Executing fun with value: 10
11:28:08.846 [debug] Evaluating bend block with value: 10
11:28:08.846 [debug] Block returned: %{variant: :leaf}
11:28:08.846 [debug] Fun returned result: %{variant: :leaf}
11:28:08.846 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{variant: :leaf}
11:28:08.846 [debug] Executing bend with initial: 10
11:28:08.846 [debug] Executing fun with value: 10
11:28:08.846 [debug] Evaluating bend block with value: 10
11:28:08.846 [debug] Block returned: %{variant: :leaf}
11:28:08.846 [debug] Fun returned result: %{variant: :leaf}
11:28:08.846 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.846 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 8
11:28:08.846 [debug] Executing fun with value: 8
11:28:08.846 [debug] Evaluating bend block with value: 8
11:28:08.846 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.846 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.846 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 9
11:28:08.846 [debug] Executing fun with value: 9
11:28:08.846 [debug] Evaluating bend block with value: 9
11:28:08.846 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 10
11:28:08.846 [debug] Executing fun with value: 10
11:28:08.846 [debug] Evaluating bend block with value: 10
11:28:08.846 [debug] Block returned: %{variant: :leaf}
11:28:08.846 [debug] Fun returned result: %{variant: :leaf}
11:28:08.846 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{variant: :leaf}
11:28:08.846 [debug] Executing bend with initial: 10
11:28:08.846 [debug] Executing fun with value: 10
11:28:08.846 [debug] Evaluating bend block with value: 10
11:28:08.846 [debug] Block returned: %{variant: :leaf}
11:28:08.846 [debug] Fun returned result: %{variant: :leaf}
11:28:08.846 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{variant: :leaf}
11:28:08.846 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 9
11:28:08.846 [debug] Executing fun with value: 9
11:28:08.846 [debug] Evaluating bend block with value: 9
11:28:08.846 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.846 [debug] Executing bend with initial: 10
11:28:08.847 [debug] Executing fun with value: 10
11:28:08.847 [debug] Evaluating bend block with value: 10
11:28:08.847 [debug] Block returned: %{variant: :leaf}
11:28:08.847 [debug] Fun returned result: %{variant: :leaf}
11:28:08.847 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.847 [debug] do_bend final result: %{variant: :leaf}
11:28:08.847 [debug] Executing bend with initial: 10
11:28:08.847 [debug] Executing fun with value: 10
11:28:08.847 [debug] Evaluating bend block with value: 10
11:28:08.847 [debug] Block returned: %{variant: :leaf}
11:28:08.847 [debug] Fun returned result: %{variant: :leaf}
11:28:08.847 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.847 [debug] do_bend final result: %{variant: :leaf}
11:28:08.847 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.847 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.847 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.847 [debug] Executing bend with initial: 7
11:28:08.847 [debug] Executing fun with value: 7
11:28:08.847 [debug] Evaluating bend block with value: 7
11:28:08.847 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.847 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.847 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.847 [debug] Executing bend with initial: 8
11:28:08.847 [debug] Executing fun with value: 8
11:28:08.847 [debug] Evaluating bend block with value: 8
11:28:08.847 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.847 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.847 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.847 [debug] Executing bend with initial: 9
11:28:08.847 [debug] Executing fun with value: 9
11:28:08.847 [debug] Evaluating bend block with value: 9
11:28:08.847 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.847 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.847 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.847 [debug] Executing bend with initial: 10
11:28:08.847 [debug] Executing fun with value: 10
11:28:08.847 [debug] Evaluating bend block with value: 10
11:28:08.847 [debug] Block returned: %{variant: :leaf}
11:28:08.847 [debug] Fun returned result: %{variant: :leaf}
11:28:08.847 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.847 [debug] do_bend final result: %{variant: :leaf}
11:28:08.847 [debug] Executing bend with initial: 10
11:28:08.847 [debug] Executing fun with value: 10
11:28:08.847 [debug] Evaluating bend block with value: 10
11:28:08.847 [debug] Block returned: %{variant: :leaf}
11:28:08.847 [debug] Fun returned result: %{variant: :leaf}
11:28:08.847 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.847 [debug] do_bend final result: %{variant: :leaf}
11:28:08.847 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.847 [debug] Executing bend with initial: 9
11:28:08.847 [debug] Executing fun with value: 9
11:28:08.847 [debug] Evaluating bend block with value: 9
11:28:08.847 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.847 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.847 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.847 [debug] Executing bend with initial: 10
11:28:08.847 [debug] Executing fun with value: 10
11:28:08.847 [debug] Evaluating bend block with value: 10
11:28:08.847 [debug] Block returned: %{variant: :leaf}
11:28:08.847 [debug] Fun returned result: %{variant: :leaf}
11:28:08.847 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.847 [debug] do_bend final result: %{variant: :leaf}
11:28:08.847 [debug] Executing bend with initial: 10
11:28:08.847 [debug] Executing fun with value: 10
11:28:08.847 [debug] Evaluating bend block with value: 10
11:28:08.849 [debug] Block returned: %{variant: :leaf}
11:28:08.849 [debug] Fun returned result: %{variant: :leaf}
11:28:08.849 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.849 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.849 [debug] Executing bend with initial: 8
11:28:08.849 [debug] Executing fun with value: 8
11:28:08.849 [debug] Evaluating bend block with value: 8
11:28:08.849 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.849 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.849 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.849 [debug] Executing bend with initial: 9
11:28:08.849 [debug] Executing fun with value: 9
11:28:08.849 [debug] Evaluating bend block with value: 9
11:28:08.849 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.849 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.849 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.849 [debug] Executing bend with initial: 10
11:28:08.849 [debug] Executing fun with value: 10
11:28:08.849 [debug] Evaluating bend block with value: 10
11:28:08.849 [debug] Block returned: %{variant: :leaf}
11:28:08.849 [debug] Fun returned result: %{variant: :leaf}
11:28:08.849 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{variant: :leaf}
11:28:08.849 [debug] Executing bend with initial: 10
11:28:08.849 [debug] Executing fun with value: 10
11:28:08.849 [debug] Evaluating bend block with value: 10
11:28:08.849 [debug] Block returned: %{variant: :leaf}
11:28:08.849 [debug] Fun returned result: %{variant: :leaf}
11:28:08.849 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.849 [debug] Executing bend with initial: 9
11:28:08.849 [debug] Executing fun with value: 9
11:28:08.849 [debug] Evaluating bend block with value: 9
11:28:08.849 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.849 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.849 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.849 [debug] Executing bend with initial: 10
11:28:08.849 [debug] Executing fun with value: 10
11:28:08.849 [debug] Evaluating bend block with value: 10
11:28:08.849 [debug] Block returned: %{variant: :leaf}
11:28:08.849 [debug] Fun returned result: %{variant: :leaf}
11:28:08.849 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{variant: :leaf}
11:28:08.849 [debug] Executing bend with initial: 10
11:28:08.849 [debug] Executing fun with value: 10
11:28:08.849 [debug] Evaluating bend block with value: 10
11:28:08.849 [debug] Block returned: %{variant: :leaf}
11:28:08.849 [debug] Fun returned result: %{variant: :leaf}
11:28:08.849 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{variant: :leaf}
11:28:08.849 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.849 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.849 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.850 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 6
11:28:08.850 [debug] Executing fun with value: 6
11:28:08.850 [debug] Evaluating bend block with value: 6
11:28:08.850 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.850 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.850 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 7
11:28:08.850 [debug] Executing fun with value: 7
11:28:08.850 [debug] Evaluating bend block with value: 7
11:28:08.850 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.850 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.850 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 8
11:28:08.850 [debug] Executing fun with value: 8
11:28:08.850 [debug] Evaluating bend block with value: 8
11:28:08.850 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.850 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.850 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 9
11:28:08.850 [debug] Executing fun with value: 9
11:28:08.850 [debug] Evaluating bend block with value: 9
11:28:08.850 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 10
11:28:08.850 [debug] Executing fun with value: 10
11:28:08.850 [debug] Evaluating bend block with value: 10
11:28:08.850 [debug] Block returned: %{variant: :leaf}
11:28:08.850 [debug] Fun returned result: %{variant: :leaf}
11:28:08.850 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.850 [debug] do_bend final result: %{variant: :leaf}
11:28:08.850 [debug] Executing bend with initial: 10
11:28:08.850 [debug] Executing fun with value: 10
11:28:08.850 [debug] Evaluating bend block with value: 10
11:28:08.850 [debug] Block returned: %{variant: :leaf}
11:28:08.850 [debug] Fun returned result: %{variant: :leaf}
11:28:08.850 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.850 [debug] do_bend final result: %{variant: :leaf}
11:28:08.850 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 9
11:28:08.850 [debug] Executing fun with value: 9
11:28:08.850 [debug] Evaluating bend block with value: 9
11:28:08.850 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 10
11:28:08.850 [debug] Executing fun with value: 10
11:28:08.850 [debug] Evaluating bend block with value: 10
11:28:08.850 [debug] Block returned: %{variant: :leaf}
11:28:08.850 [debug] Fun returned result: %{variant: :leaf}
11:28:08.850 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.850 [debug] do_bend final result: %{variant: :leaf}
11:28:08.850 [debug] Executing bend with initial: 10
11:28:08.850 [debug] Executing fun with value: 10
11:28:08.850 [debug] Evaluating bend block with value: 10
11:28:08.850 [debug] Block returned: %{variant: :leaf}
11:28:08.850 [debug] Fun returned result: %{variant: :leaf}
11:28:08.850 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.850 [debug] do_bend final result: %{variant: :leaf}
11:28:08.850 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.850 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 8
11:28:08.850 [debug] Executing fun with value: 8
11:28:08.850 [debug] Evaluating bend block with value: 8
11:28:08.850 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.850 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.850 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 9
11:28:08.850 [debug] Executing fun with value: 9
11:28:08.850 [debug] Evaluating bend block with value: 9
11:28:08.850 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.850 [debug] Executing bend with initial: 10
11:28:08.850 [debug] Executing fun with value: 10
11:28:08.850 [debug] Evaluating bend block with value: 10
11:28:08.850 [debug] Block returned: %{variant: :leaf}
11:28:08.850 [debug] Fun returned result: %{variant: :leaf}
11:28:08.850 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.850 [debug] do_bend final result: %{variant: :leaf}
11:28:08.850 [debug] Executing bend with initial: 10
11:28:08.850 [debug] Executing fun with value: 10
11:28:08.850 [debug] Evaluating bend block with value: 10
11:28:08.851 [debug] Block returned: %{variant: :leaf}
11:28:08.851 [debug] Fun returned result: %{variant: :leaf}
11:28:08.851 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 9
11:28:08.851 [debug] Executing fun with value: 9
11:28:08.851 [debug] Evaluating bend block with value: 9
11:28:08.851 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 10
11:28:08.851 [debug] Executing fun with value: 10
11:28:08.851 [debug] Evaluating bend block with value: 10
11:28:08.851 [debug] Block returned: %{variant: :leaf}
11:28:08.851 [debug] Fun returned result: %{variant: :leaf}
11:28:08.851 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{variant: :leaf}
11:28:08.851 [debug] Executing bend with initial: 10
11:28:08.851 [debug] Executing fun with value: 10
11:28:08.851 [debug] Evaluating bend block with value: 10
11:28:08.851 [debug] Block returned: %{variant: :leaf}
11:28:08.851 [debug] Fun returned result: %{variant: :leaf}
11:28:08.851 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.851 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.851 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 7
11:28:08.851 [debug] Executing fun with value: 7
11:28:08.851 [debug] Evaluating bend block with value: 7
11:28:08.851 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.851 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.851 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 8
11:28:08.851 [debug] Executing fun with value: 8
11:28:08.851 [debug] Evaluating bend block with value: 8
11:28:08.851 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.851 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.851 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 9
11:28:08.851 [debug] Executing fun with value: 9
11:28:08.851 [debug] Evaluating bend block with value: 9
11:28:08.851 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 10
11:28:08.851 [debug] Executing fun with value: 10
11:28:08.851 [debug] Evaluating bend block with value: 10
11:28:08.851 [debug] Block returned: %{variant: :leaf}
11:28:08.851 [debug] Fun returned result: %{variant: :leaf}
11:28:08.851 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{variant: :leaf}
11:28:08.851 [debug] Executing bend with initial: 10
11:28:08.851 [debug] Executing fun with value: 10
11:28:08.851 [debug] Evaluating bend block with value: 10
11:28:08.851 [debug] Block returned: %{variant: :leaf}
11:28:08.851 [debug] Fun returned result: %{variant: :leaf}
11:28:08.851 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 9
11:28:08.851 [debug] Executing fun with value: 9
11:28:08.851 [debug] Evaluating bend block with value: 9
11:28:08.851 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 10
11:28:08.851 [debug] Executing fun with value: 10
11:28:08.851 [debug] Evaluating bend block with value: 10
11:28:08.851 [debug] Block returned: %{variant: :leaf}
11:28:08.851 [debug] Fun returned result: %{variant: :leaf}
11:28:08.851 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{variant: :leaf}
11:28:08.851 [debug] Executing bend with initial: 10
11:28:08.851 [debug] Executing fun with value: 10
11:28:08.851 [debug] Evaluating bend block with value: 10
11:28:08.851 [debug] Block returned: %{variant: :leaf}
11:28:08.851 [debug] Fun returned result: %{variant: :leaf}
11:28:08.851 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{variant: :leaf}
11:28:08.851 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.851 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 8
11:28:08.851 [debug] Executing fun with value: 8
11:28:08.851 [debug] Evaluating bend block with value: 8
11:28:08.851 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.851 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.851 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.851 [debug] Executing bend with initial: 9
11:28:08.851 [debug] Executing fun with value: 9
11:28:08.851 [debug] Evaluating bend block with value: 9
11:28:08.852 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.852 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.852 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.852 [debug] Executing bend with initial: 10
11:28:08.852 [debug] Executing fun with value: 10
11:28:08.852 [debug] Evaluating bend block with value: 10
11:28:08.852 [debug] Block returned: %{variant: :leaf}
11:28:08.852 [debug] Fun returned result: %{variant: :leaf}
11:28:08.852 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.852 [debug] do_bend final result: %{variant: :leaf}
11:28:08.852 [debug] Executing bend with initial: 10
11:28:08.852 [debug] Executing fun with value: 10
11:28:08.852 [debug] Evaluating bend block with value: 10
11:28:08.852 [debug] Block returned: %{variant: :leaf}
11:28:08.852 [debug] Fun returned result: %{variant: :leaf}
11:28:08.852 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.852 [debug] do_bend final result: %{variant: :leaf}
11:28:08.852 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.852 [debug] Executing bend with initial: 9
11:28:08.852 [debug] Executing fun with value: 9
11:28:08.852 [debug] Evaluating bend block with value: 9
11:28:08.852 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.852 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.852 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.852 [debug] Executing bend with initial: 10
11:28:08.852 [debug] Executing fun with value: 10
11:28:08.852 [debug] Evaluating bend block with value: 10
11:28:08.852 [debug] Block returned: %{variant: :leaf}
11:28:08.852 [debug] Fun returned result: %{variant: :leaf}
11:28:08.852 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.852 [debug] do_bend final result: %{variant: :leaf}
11:28:08.852 [debug] Executing bend with initial: 10
11:28:08.852 [debug] Executing fun with value: 10
11:28:08.852 [debug] Evaluating bend block with value: 10
11:28:08.852 [debug] Block returned: %{variant: :leaf}
11:28:08.852 [debug] Fun returned result: %{variant: :leaf}
11:28:08.852 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.852 [debug] do_bend final result: %{variant: :leaf}
11:28:08.852 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.852 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.852 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.853 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.853 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.853 [debug] Executing bend with initial: 5
11:28:08.853 [debug] Executing fun with value: 5
11:28:08.853 [debug] Evaluating bend block with value: 5
11:28:08.853 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.853 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.853 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.853 [debug] Executing bend with initial: 6
11:28:08.853 [debug] Executing fun with value: 6
11:28:08.853 [debug] Evaluating bend block with value: 6
11:28:08.853 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.853 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.853 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.853 [debug] Executing bend with initial: 7
11:28:08.853 [debug] Executing fun with value: 7
11:28:08.853 [debug] Evaluating bend block with value: 7
11:28:08.853 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.853 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.853 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.853 [debug] Executing bend with initial: 8
11:28:08.853 [debug] Executing fun with value: 8
11:28:08.853 [debug] Evaluating bend block with value: 8
11:28:08.853 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.853 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.853 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.853 [debug] Executing bend with initial: 9
11:28:08.853 [debug] Executing fun with value: 9
11:28:08.853 [debug] Evaluating bend block with value: 9
11:28:08.853 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.853 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.853 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.853 [debug] Executing bend with initial: 10
11:28:08.853 [debug] Executing fun with value: 10
11:28:08.853 [debug] Evaluating bend block with value: 10
11:28:08.853 [debug] Block returned: %{variant: :leaf}
11:28:08.853 [debug] Fun returned result: %{variant: :leaf}
11:28:08.853 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.853 [debug] do_bend final result: %{variant: :leaf}
11:28:08.853 [debug] Executing bend with initial: 10
11:28:08.853 [debug] Executing fun with value: 10
11:28:08.853 [debug] Evaluating bend block with value: 10
11:28:08.853 [debug] Block returned: %{variant: :leaf}
11:28:08.853 [debug] Fun returned result: %{variant: :leaf}
11:28:08.853 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.853 [debug] do_bend final result: %{variant: :leaf}
11:28:08.853 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.853 [debug] Executing bend with initial: 9
11:28:08.853 [debug] Executing fun with value: 9
11:28:08.853 [debug] Evaluating bend block with value: 9
11:28:08.853 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.853 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.854 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.854 [debug] Executing bend with initial: 10
11:28:08.854 [debug] Executing fun with value: 10
11:28:08.855 [debug] Evaluating bend block with value: 10
11:28:08.855 [debug] Block returned: %{variant: :leaf}
11:28:08.855 [debug] Fun returned result: %{variant: :leaf}
11:28:08.855 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.855 [debug] do_bend final result: %{variant: :leaf}
11:28:08.855 [debug] Executing bend with initial: 10
11:28:08.855 [debug] Executing fun with value: 10
11:28:08.855 [debug] Evaluating bend block with value: 10
11:28:08.855 [debug] Block returned: %{variant: :leaf}
11:28:08.855 [debug] Fun returned result: %{variant: :leaf}
11:28:08.855 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.855 [debug] do_bend final result: %{variant: :leaf}
11:28:08.855 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.855 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.855 [debug] Executing bend with initial: 8
11:28:08.855 [debug] Executing fun with value: 8
11:28:08.855 [debug] Evaluating bend block with value: 8
11:28:08.855 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.855 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.855 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.855 [debug] Executing bend with initial: 9
11:28:08.855 [debug] Executing fun with value: 9
11:28:08.855 [debug] Evaluating bend block with value: 9
11:28:08.855 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.855 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.855 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.855 [debug] Executing bend with initial: 10
11:28:08.855 [debug] Executing fun with value: 10
11:28:08.855 [debug] Evaluating bend block with value: 10
11:28:08.855 [debug] Block returned: %{variant: :leaf}
11:28:08.855 [debug] Fun returned result: %{variant: :leaf}
11:28:08.855 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.855 [debug] do_bend final result: %{variant: :leaf}
11:28:08.855 [debug] Executing bend with initial: 10
11:28:08.855 [debug] Executing fun with value: 10
11:28:08.855 [debug] Evaluating bend block with value: 10
11:28:08.855 [debug] Block returned: %{variant: :leaf}
11:28:08.855 [debug] Fun returned result: %{variant: :leaf}
11:28:08.855 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.855 [debug] do_bend final result: %{variant: :leaf}
11:28:08.855 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.855 [debug] Executing bend with initial: 9
11:28:08.855 [debug] Executing fun with value: 9
11:28:08.855 [debug] Evaluating bend block with value: 9
11:28:08.855 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.855 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.855 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.855 [debug] Executing bend with initial: 10
11:28:08.855 [debug] Executing fun with value: 10
11:28:08.855 [debug] Evaluating bend block with value: 10
11:28:08.855 [debug] Block returned: %{variant: :leaf}
11:28:08.855 [debug] Fun returned result: %{variant: :leaf}
11:28:08.855 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.855 [debug] do_bend final result: %{variant: :leaf}
11:28:08.855 [debug] Executing bend with initial: 10
11:28:08.855 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.856 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.856 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 7
11:28:08.856 [debug] Executing fun with value: 7
11:28:08.856 [debug] Evaluating bend block with value: 7
11:28:08.856 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.856 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.856 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 8
11:28:08.856 [debug] Executing fun with value: 8
11:28:08.856 [debug] Evaluating bend block with value: 8
11:28:08.856 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.856 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.856 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 9
11:28:08.856 [debug] Executing fun with value: 9
11:28:08.856 [debug] Evaluating bend block with value: 9
11:28:08.856 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 9
11:28:08.856 [debug] Executing fun with value: 9
11:28:08.856 [debug] Evaluating bend block with value: 9
11:28:08.856 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.856 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 8
11:28:08.856 [debug] Executing fun with value: 8
11:28:08.856 [debug] Evaluating bend block with value: 8
11:28:08.856 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.856 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.856 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 9
11:28:08.856 [debug] Executing fun with value: 9
11:28:08.856 [debug] Evaluating bend block with value: 9
11:28:08.856 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 9
11:28:08.856 [debug] Executing fun with value: 9
11:28:08.856 [debug] Evaluating bend block with value: 9
11:28:08.856 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] Executing bend with initial: 10
11:28:08.856 [debug] Executing fun with value: 10
11:28:08.856 [debug] Evaluating bend block with value: 10
11:28:08.856 [debug] Block returned: %{variant: :leaf}
11:28:08.856 [debug] Fun returned result: %{variant: :leaf}
11:28:08.856 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{variant: :leaf}
11:28:08.856 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.857 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.857 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.857 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 6
11:28:08.857 [debug] Executing fun with value: 6
11:28:08.857 [debug] Evaluating bend block with value: 6
11:28:08.857 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.857 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.857 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 7
11:28:08.857 [debug] Executing fun with value: 7
11:28:08.857 [debug] Evaluating bend block with value: 7
11:28:08.857 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.857 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.857 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 8
11:28:08.857 [debug] Executing fun with value: 8
11:28:08.857 [debug] Evaluating bend block with value: 8
11:28:08.857 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.857 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.857 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 9
11:28:08.857 [debug] Executing fun with value: 9
11:28:08.857 [debug] Evaluating bend block with value: 9
11:28:08.857 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 10
11:28:08.857 [debug] Executing fun with value: 10
11:28:08.857 [debug] Evaluating bend block with value: 10
11:28:08.857 [debug] Block returned: %{variant: :leaf}
11:28:08.857 [debug] Fun returned result: %{variant: :leaf}
11:28:08.857 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{variant: :leaf}
11:28:08.857 [debug] Executing bend with initial: 10
11:28:08.857 [debug] Executing fun with value: 10
11:28:08.857 [debug] Evaluating bend block with value: 10
11:28:08.857 [debug] Block returned: %{variant: :leaf}
11:28:08.857 [debug] Fun returned result: %{variant: :leaf}
11:28:08.857 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 9
11:28:08.857 [debug] Executing fun with value: 9
11:28:08.857 [debug] Evaluating bend block with value: 9
11:28:08.857 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 10
11:28:08.857 [debug] Executing fun with value: 10
11:28:08.857 [debug] Evaluating bend block with value: 10
11:28:08.857 [debug] Block returned: %{variant: :leaf}
11:28:08.857 [debug] Fun returned result: %{variant: :leaf}
11:28:08.857 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{variant: :leaf}
11:28:08.857 [debug] Executing bend with initial: 10
11:28:08.857 [debug] Executing fun with value: 10
11:28:08.857 [debug] Evaluating bend block with value: 10
11:28:08.857 [debug] Block returned: %{variant: :leaf}
11:28:08.857 [debug] Fun returned result: %{variant: :leaf}
11:28:08.857 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.857 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 8
11:28:08.857 [debug] Executing fun with value: 8
11:28:08.857 [debug] Evaluating bend block with value: 8
11:28:08.857 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.857 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.857 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 9
11:28:08.857 [debug] Executing fun with value: 9
11:28:08.857 [debug] Evaluating bend block with value: 9
11:28:08.857 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 10
11:28:08.857 [debug] Executing fun with value: 10
11:28:08.857 [debug] Evaluating bend block with value: 10
11:28:08.857 [debug] Block returned: %{variant: :leaf}
11:28:08.857 [debug] Fun returned result: %{variant: :leaf}
11:28:08.857 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{variant: :leaf}
11:28:08.857 [debug] Executing bend with initial: 10
11:28:08.857 [debug] Executing fun with value: 10
11:28:08.857 [debug] Evaluating bend block with value: 10
11:28:08.857 [debug] Block returned: %{variant: :leaf}
11:28:08.857 [debug] Fun returned result: %{variant: :leaf}
11:28:08.857 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{variant: :leaf}
11:28:08.857 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.857 [debug] Executing bend with initial: 9
11:28:08.857 [debug] Executing fun with value: 9
11:28:08.857 [debug] Evaluating bend block with value: 9
11:28:08.857 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 10
11:28:08.858 [debug] Executing fun with value: 10
11:28:08.858 [debug] Evaluating bend block with value: 10
11:28:08.858 [debug] Block returned: %{variant: :leaf}
11:28:08.858 [debug] Fun returned result: %{variant: :leaf}
11:28:08.858 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{variant: :leaf}
11:28:08.858 [debug] Executing bend with initial: 10
11:28:08.858 [debug] Executing fun with value: 10
11:28:08.858 [debug] Evaluating bend block with value: 10
11:28:08.858 [debug] Block returned: %{variant: :leaf}
11:28:08.858 [debug] Fun returned result: %{variant: :leaf}
11:28:08.858 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.858 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.858 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 7
11:28:08.858 [debug] Executing fun with value: 7
11:28:08.858 [debug] Evaluating bend block with value: 7
11:28:08.858 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.858 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.858 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 8
11:28:08.858 [debug] Executing fun with value: 8
11:28:08.858 [debug] Evaluating bend block with value: 8
11:28:08.858 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.858 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.858 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 9
11:28:08.858 [debug] Executing fun with value: 9
11:28:08.858 [debug] Evaluating bend block with value: 9
11:28:08.858 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 10
11:28:08.858 [debug] Executing fun with value: 10
11:28:08.858 [debug] Evaluating bend block with value: 10
11:28:08.858 [debug] Block returned: %{variant: :leaf}
11:28:08.858 [debug] Fun returned result: %{variant: :leaf}
11:28:08.858 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{variant: :leaf}
11:28:08.858 [debug] Executing bend with initial: 10
11:28:08.858 [debug] Executing fun with value: 10
11:28:08.858 [debug] Evaluating bend block with value: 10
11:28:08.858 [debug] Block returned: %{variant: :leaf}
11:28:08.858 [debug] Fun returned result: %{variant: :leaf}
11:28:08.858 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 9
11:28:08.858 [debug] Executing fun with value: 9
11:28:08.858 [debug] Evaluating bend block with value: 9
11:28:08.858 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 10
11:28:08.858 [debug] Executing fun with value: 10
11:28:08.858 [debug] Evaluating bend block with value: 10
11:28:08.858 [debug] Block returned: %{variant: :leaf}
11:28:08.858 [debug] Fun returned result: %{variant: :leaf}
11:28:08.858 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{variant: :leaf}
11:28:08.858 [debug] Executing bend with initial: 10
11:28:08.858 [debug] Executing fun with value: 10
11:28:08.858 [debug] Evaluating bend block with value: 10
11:28:08.858 [debug] Block returned: %{variant: :leaf}
11:28:08.858 [debug] Fun returned result: %{variant: :leaf}
11:28:08.858 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{variant: :leaf}
11:28:08.858 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.858 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 8
11:28:08.858 [debug] Executing fun with value: 8
11:28:08.858 [debug] Evaluating bend block with value: 8
11:28:08.858 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.858 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.858 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.858 [debug] Executing bend with initial: 9
11:28:08.858 [debug] Executing fun with value: 9
11:28:08.858 [debug] Evaluating bend block with value: 9
11:28:08.858 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.859 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.859 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.859 [debug] Executing bend with initial: 10
11:28:08.859 [debug] Executing fun with value: 10
11:28:08.859 [debug] Evaluating bend block with value: 10
11:28:08.859 [debug] Block returned: %{variant: :leaf}
11:28:08.859 [debug] Fun returned result: %{variant: :leaf}
11:28:08.859 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.859 [debug] do_bend final result: %{variant: :leaf}
11:28:08.859 [debug] Executing bend with initial: 10
11:28:08.859 [debug] Executing fun with value: 10
11:28:08.859 [debug] Evaluating bend block with value: 10
11:28:08.859 [debug] Block returned: %{variant: :leaf}
11:28:08.859 [debug] Fun returned result: %{variant: :leaf}
11:28:08.859 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.859 [debug] do_bend final result: %{variant: :leaf}
11:28:08.859 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.859 [debug] Executing bend with initial: 9
11:28:08.859 [debug] Executing fun with value: 9
11:28:08.859 [debug] Evaluating bend block with value: 9
11:28:08.859 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.859 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.859 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.859 [debug] Executing bend with initial: 10
11:28:08.861 [debug] Executing fun with value: 10
11:28:08.861 [debug] Evaluating bend block with value: 10
11:28:08.861 [debug] Block returned: %{variant: :leaf}
11:28:08.861 [debug] Fun returned result: %{variant: :leaf}
11:28:08.861 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.861 [debug] do_bend final result: %{variant: :leaf}
11:28:08.861 [debug] Executing bend with initial: 10
11:28:08.861 [debug] Executing fun with value: 10
11:28:08.861 [debug] Evaluating bend block with value: 10
11:28:08.861 [debug] Block returned: %{variant: :leaf}
11:28:08.861 [debug] Fun returned result: %{variant: :leaf}
11:28:08.861 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.861 [debug] do_bend final result: %{variant: :leaf}
11:28:08.861 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.861 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.861 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.861 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.861 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.861 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.861 [debug] Executing bend with initial: 4
11:28:08.861 [debug] Executing fun with value: 4
11:28:08.861 [debug] Evaluating bend block with value: 4
11:28:08.861 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.861 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.861 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
11:28:08.861 [debug] Executing bend with initial: 5
11:28:08.861 [debug] Executing fun with value: 5
11:28:08.861 [debug] Evaluating bend block with value: 5
11:28:08.861 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.861 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.861 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.861 [debug] Executing bend with initial: 6
11:28:08.861 [debug] Executing fun with value: 6
11:28:08.861 [debug] Evaluating bend block with value: 6
11:28:08.861 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.861 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.861 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.861 [debug] Executing bend with initial: 7
11:28:08.861 [debug] Executing fun with value: 7
11:28:08.861 [debug] Evaluating bend block with value: 7
11:28:08.861 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.861 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.861 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.861 [debug] Executing bend with initial: 8
11:28:08.861 [debug] Executing fun with value: 8
11:28:08.861 [debug] Evaluating bend block with value: 8
11:28:08.861 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.861 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.861 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.861 [debug] Executing bend with initial: 9
11:28:08.861 [debug] Executing fun with value: 9
11:28:08.861 [debug] Evaluating bend block with value: 9
11:28:08.861 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.861 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.861 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.861 [debug] Executing bend with initial: 10
11:28:08.861 [debug] Executing fun with value: 10
11:28:08.861 [debug] Evaluating bend block with value: 10
11:28:08.861 [debug] Block returned: %{variant: :leaf}
11:28:08.861 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.862 [debug] Executing bend with initial: 10
11:28:08.862 [debug] Executing fun with value: 10
11:28:08.862 [debug] Evaluating bend block with value: 10
11:28:08.862 [debug] Block returned: %{variant: :leaf}
11:28:08.862 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.862 [debug] Executing bend with initial: 9
11:28:08.862 [debug] Executing fun with value: 9
11:28:08.862 [debug] Evaluating bend block with value: 9
11:28:08.862 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Executing bend with initial: 10
11:28:08.862 [debug] Executing fun with value: 10
11:28:08.862 [debug] Evaluating bend block with value: 10
11:28:08.862 [debug] Block returned: %{variant: :leaf}
11:28:08.862 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.862 [debug] Executing bend with initial: 10
11:28:08.862 [debug] Executing fun with value: 10
11:28:08.862 [debug] Evaluating bend block with value: 10
11:28:08.862 [debug] Block returned: %{variant: :leaf}
11:28:08.862 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.862 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.862 [debug] Executing bend with initial: 8
11:28:08.862 [debug] Executing fun with value: 8
11:28:08.862 [debug] Evaluating bend block with value: 8
11:28:08.862 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.862 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.862 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.862 [debug] Executing bend with initial: 9
11:28:08.862 [debug] Executing fun with value: 9
11:28:08.862 [debug] Evaluating bend block with value: 9
11:28:08.862 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Executing bend with initial: 10
11:28:08.862 [debug] Executing fun with value: 10
11:28:08.862 [debug] Evaluating bend block with value: 10
11:28:08.862 [debug] Block returned: %{variant: :leaf}
11:28:08.862 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.862 [debug] Executing bend with initial: 10
11:28:08.862 [debug] Executing fun with value: 10
11:28:08.862 [debug] Evaluating bend block with value: 10
11:28:08.862 [debug] Block returned: %{variant: :leaf}
11:28:08.862 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.862 [debug] Executing bend with initial: 9
11:28:08.862 [debug] Executing fun with value: 9
11:28:08.862 [debug] Evaluating bend block with value: 9
11:28:08.862 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.862 [debug] Executing bend with initial: 10
11:28:08.862 [debug] Executing fun with value: 10
11:28:08.862 [debug] Evaluating bend block with value: 10
11:28:08.862 [debug] Block returned: %{variant: :leaf}
11:28:08.862 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.862 [debug] Executing bend with initial: 10
11:28:08.862 [debug] Executing fun with value: 10
11:28:08.862 [debug] Evaluating bend block with value: 10
11:28:08.862 [debug] Block returned: %{variant: :leaf}
11:28:08.862 [debug] Fun returned result: %{variant: :leaf}
11:28:08.862 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.862 [debug] do_bend final result: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.863 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.863 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 7
11:28:08.863 [debug] Executing fun with value: 7
11:28:08.863 [debug] Evaluating bend block with value: 7
11:28:08.863 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.863 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.863 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 8
11:28:08.863 [debug] Executing fun with value: 8
11:28:08.863 [debug] Evaluating bend block with value: 8
11:28:08.863 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.863 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.863 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 9
11:28:08.863 [debug] Executing fun with value: 9
11:28:08.863 [debug] Evaluating bend block with value: 9
11:28:08.863 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 10
11:28:08.863 [debug] Executing fun with value: 10
11:28:08.863 [debug] Evaluating bend block with value: 10
11:28:08.863 [debug] Block returned: %{variant: :leaf}
11:28:08.863 [debug] Fun returned result: %{variant: :leaf}
11:28:08.863 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{variant: :leaf}
11:28:08.863 [debug] Executing bend with initial: 10
11:28:08.863 [debug] Executing fun with value: 10
11:28:08.863 [debug] Evaluating bend block with value: 10
11:28:08.863 [debug] Block returned: %{variant: :leaf}
11:28:08.863 [debug] Fun returned result: %{variant: :leaf}
11:28:08.863 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 9
11:28:08.863 [debug] Executing fun with value: 9
11:28:08.863 [debug] Evaluating bend block with value: 9
11:28:08.863 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 10
11:28:08.863 [debug] Executing fun with value: 10
11:28:08.863 [debug] Evaluating bend block with value: 10
11:28:08.863 [debug] Block returned: %{variant: :leaf}
11:28:08.863 [debug] Fun returned result: %{variant: :leaf}
11:28:08.863 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{variant: :leaf}
11:28:08.863 [debug] Executing bend with initial: 10
11:28:08.863 [debug] Executing fun with value: 10
11:28:08.863 [debug] Evaluating bend block with value: 10
11:28:08.863 [debug] Block returned: %{variant: :leaf}
11:28:08.863 [debug] Fun returned result: %{variant: :leaf}
11:28:08.863 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.863 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 8
11:28:08.863 [debug] Executing fun with value: 8
11:28:08.863 [debug] Evaluating bend block with value: 8
11:28:08.863 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.863 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.863 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 9
11:28:08.863 [debug] Executing fun with value: 9
11:28:08.863 [debug] Evaluating bend block with value: 9
11:28:08.863 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 10
11:28:08.863 [debug] Executing fun with value: 10
11:28:08.863 [debug] Evaluating bend block with value: 10
11:28:08.863 [debug] Block returned: %{variant: :leaf}
11:28:08.863 [debug] Fun returned result: %{variant: :leaf}
11:28:08.863 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{variant: :leaf}
11:28:08.863 [debug] Executing bend with initial: 10
11:28:08.863 [debug] Executing fun with value: 10
11:28:08.863 [debug] Evaluating bend block with value: 10
11:28:08.863 [debug] Block returned: %{variant: :leaf}
11:28:08.863 [debug] Fun returned result: %{variant: :leaf}
11:28:08.863 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{variant: :leaf}
11:28:08.863 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 9
11:28:08.863 [debug] Executing fun with value: 9
11:28:08.863 [debug] Evaluating bend block with value: 9
11:28:08.863 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.863 [debug] Executing bend with initial: 10
11:28:08.863 [debug] Executing fun with value: 10
11:28:08.864 [debug] Evaluating bend block with value: 10
11:28:08.864 [debug] Block returned: %{variant: :leaf}
11:28:08.864 [debug] Fun returned result: %{variant: :leaf}
11:28:08.864 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{variant: :leaf}
11:28:08.864 [debug] Executing bend with initial: 10
11:28:08.864 [debug] Executing fun with value: 10
11:28:08.864 [debug] Evaluating bend block with value: 10
11:28:08.864 [debug] Block returned: %{variant: :leaf}
11:28:08.864 [debug] Fun returned result: %{variant: :leaf}
11:28:08.864 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.864 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.864 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.864 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 6
11:28:08.864 [debug] Executing fun with value: 6
11:28:08.864 [debug] Evaluating bend block with value: 6
11:28:08.864 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.864 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.864 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 7
11:28:08.864 [debug] Executing fun with value: 7
11:28:08.864 [debug] Evaluating bend block with value: 7
11:28:08.864 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.864 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.864 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 8
11:28:08.864 [debug] Executing fun with value: 8
11:28:08.864 [debug] Evaluating bend block with value: 8
11:28:08.864 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.864 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.864 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 9
11:28:08.864 [debug] Executing fun with value: 9
11:28:08.864 [debug] Evaluating bend block with value: 9
11:28:08.864 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.864 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.864 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 10
11:28:08.864 [debug] Executing fun with value: 10
11:28:08.864 [debug] Evaluating bend block with value: 10
11:28:08.864 [debug] Block returned: %{variant: :leaf}
11:28:08.864 [debug] Fun returned result: %{variant: :leaf}
11:28:08.864 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{variant: :leaf}
11:28:08.864 [debug] Executing bend with initial: 10
11:28:08.864 [debug] Executing fun with value: 10
11:28:08.864 [debug] Evaluating bend block with value: 10
11:28:08.864 [debug] Block returned: %{variant: :leaf}
11:28:08.864 [debug] Fun returned result: %{variant: :leaf}
11:28:08.864 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 9
11:28:08.864 [debug] Executing fun with value: 9
11:28:08.864 [debug] Evaluating bend block with value: 9
11:28:08.864 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.864 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.864 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 10
11:28:08.864 [debug] Executing fun with value: 10
11:28:08.864 [debug] Evaluating bend block with value: 10
11:28:08.864 [debug] Block returned: %{variant: :leaf}
11:28:08.864 [debug] Fun returned result: %{variant: :leaf}
11:28:08.864 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{variant: :leaf}
11:28:08.864 [debug] Executing bend with initial: 10
11:28:08.864 [debug] Executing fun with value: 10
11:28:08.864 [debug] Evaluating bend block with value: 10
11:28:08.864 [debug] Block returned: %{variant: :leaf}
11:28:08.864 [debug] Fun returned result: %{variant: :leaf}
11:28:08.864 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{variant: :leaf}
11:28:08.864 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.864 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 8
11:28:08.864 [debug] Executing fun with value: 8
11:28:08.864 [debug] Evaluating bend block with value: 8
11:28:08.864 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.864 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.864 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.864 [debug] Executing bend with initial: 9
11:28:08.864 [debug] Executing fun with value: 9
11:28:08.864 [debug] Evaluating bend block with value: 9
11:28:08.864 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.865 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.865 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.865 [debug] Executing bend with initial: 10
11:28:08.865 [debug] Executing fun with value: 10
11:28:08.865 [debug] Evaluating bend block with value: 10
11:28:08.865 [debug] Block returned: %{variant: :leaf}
11:28:08.865 [debug] Fun returned result: %{variant: :leaf}
11:28:08.870 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.870 [debug] do_bend final result: %{variant: :leaf}
11:28:08.870 [debug] Executing bend with initial: 10
11:28:08.870 [debug] Executing fun with value: 10
11:28:08.870 [debug] Evaluating bend block with value: 10
11:28:08.870 [debug] Block returned: %{variant: :leaf}
11:28:08.870 [debug] Fun returned result: %{variant: :leaf}
11:28:08.870 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.870 [debug] do_bend final result: %{variant: :leaf}
11:28:08.870 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.870 [debug] Executing bend with initial: 9
11:28:08.870 [debug] Executing fun with value: 9
11:28:08.870 [debug] Evaluating bend block with value: 9
11:28:08.870 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.870 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.870 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.870 [debug] Executing bend with initial: 10
11:28:08.870 [debug] Executing fun with value: 10
11:28:08.870 [debug] Evaluating bend block with value: 10
11:28:08.870 [debug] Block returned: %{variant: :leaf}
11:28:08.870 [debug] Fun returned result: %{variant: :leaf}
11:28:08.870 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.870 [debug] do_bend final result: %{variant: :leaf}
11:28:08.870 [debug] Executing bend with initial: 10
11:28:08.870 [debug] Executing fun with value: 10
11:28:08.870 [debug] Evaluating bend block with value: 10
11:28:08.870 [debug] Block returned: %{variant: :leaf}
11:28:08.870 [debug] Fun returned result: %{variant: :leaf}
11:28:08.870 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.870 [debug] do_bend final result: %{variant: :leaf}
11:28:08.870 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.870 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.870 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.870 [debug] Executing bend with initial: 7
11:28:08.870 [debug] Executing fun with value: 7
11:28:08.870 [debug] Evaluating bend block with value: 7
11:28:08.870 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.870 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.870 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.870 [debug] Executing bend with initial: 8
11:28:08.870 [debug] Executing fun with value: 8
11:28:08.870 [debug] Evaluating bend block with value: 8
11:28:08.870 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.870 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.870 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.870 [debug] Executing bend with initial: 9
11:28:08.870 [debug] Executing fun with value: 9
11:28:08.870 [debug] Evaluating bend block with value: 9
11:28:08.870 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.870 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.870 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.870 [debug] Executing bend with initial: 10
11:28:08.870 [debug] Executing fun with value: 10
11:28:08.870 [debug] Evaluating bend block with value: 10
11:28:08.870 [debug] Block returned: %{variant: :leaf}
11:28:08.870 [debug] Fun returned result: %{variant: :leaf}
11:28:08.870 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.870 [debug] do_bend final result: %{variant: :leaf}
11:28:08.870 [debug] Executing bend with initial: 10
11:28:08.870 [debug] Executing fun with value: 10
11:28:08.870 [debug] Evaluating bend block with value: 10
11:28:08.871 [debug] Block returned: %{variant: :leaf}
11:28:08.871 [debug] Fun returned result: %{variant: :leaf}
11:28:08.871 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 9
11:28:08.871 [debug] Executing fun with value: 9
11:28:08.871 [debug] Evaluating bend block with value: 9
11:28:08.871 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 10
11:28:08.871 [debug] Executing fun with value: 10
11:28:08.871 [debug] Evaluating bend block with value: 10
11:28:08.871 [debug] Block returned: %{variant: :leaf}
11:28:08.871 [debug] Fun returned result: %{variant: :leaf}
11:28:08.871 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{variant: :leaf}
11:28:08.871 [debug] Executing bend with initial: 10
11:28:08.871 [debug] Executing fun with value: 10
11:28:08.871 [debug] Evaluating bend block with value: 10
11:28:08.871 [debug] Block returned: %{variant: :leaf}
11:28:08.871 [debug] Fun returned result: %{variant: :leaf}
11:28:08.871 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.871 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 8
11:28:08.871 [debug] Executing fun with value: 8
11:28:08.871 [debug] Evaluating bend block with value: 8
11:28:08.871 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 9
11:28:08.871 [debug] Executing fun with value: 9
11:28:08.871 [debug] Evaluating bend block with value: 9
11:28:08.871 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 10
11:28:08.871 [debug] Executing fun with value: 10
11:28:08.871 [debug] Evaluating bend block with value: 10
11:28:08.871 [debug] Block returned: %{variant: :leaf}
11:28:08.871 [debug] Fun returned result: %{variant: :leaf}
11:28:08.871 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{variant: :leaf}
11:28:08.871 [debug] Executing bend with initial: 10
11:28:08.871 [debug] Executing fun with value: 10
11:28:08.871 [debug] Evaluating bend block with value: 10
11:28:08.871 [debug] Block returned: %{variant: :leaf}
11:28:08.871 [debug] Fun returned result: %{variant: :leaf}
11:28:08.871 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 9
11:28:08.871 [debug] Executing fun with value: 9
11:28:08.871 [debug] Evaluating bend block with value: 9
11:28:08.871 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 10
11:28:08.871 [debug] Executing fun with value: 10
11:28:08.871 [debug] Evaluating bend block with value: 10
11:28:08.871 [debug] Block returned: %{variant: :leaf}
11:28:08.871 [debug] Fun returned result: %{variant: :leaf}
11:28:08.871 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{variant: :leaf}
11:28:08.871 [debug] Executing bend with initial: 10
11:28:08.871 [debug] Executing fun with value: 10
11:28:08.871 [debug] Evaluating bend block with value: 10
11:28:08.871 [debug] Block returned: %{variant: :leaf}
11:28:08.871 [debug] Fun returned result: %{variant: :leaf}
11:28:08.871 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{variant: :leaf}
11:28:08.871 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.871 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.871 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.871 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.871 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 5
11:28:08.871 [debug] Executing fun with value: 5
11:28:08.871 [debug] Evaluating bend block with value: 5
11:28:08.871 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 6
11:28:08.871 [debug] Executing fun with value: 6
11:28:08.871 [debug] Evaluating bend block with value: 6
11:28:08.871 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 7
11:28:08.871 [debug] Executing fun with value: 7
11:28:08.871 [debug] Evaluating bend block with value: 7
11:28:08.871 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 8
11:28:08.871 [debug] Executing fun with value: 8
11:28:08.871 [debug] Evaluating bend block with value: 8
11:28:08.871 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.871 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.871 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.871 [debug] Executing bend with initial: 9
11:28:08.871 [debug] Executing fun with value: 9
11:28:08.871 [debug] Evaluating bend block with value: 9
11:28:08.872 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Executing bend with initial: 10
11:28:08.872 [debug] Executing fun with value: 10
11:28:08.872 [debug] Evaluating bend block with value: 10
11:28:08.872 [debug] Block returned: %{variant: :leaf}
11:28:08.872 [debug] Fun returned result: %{variant: :leaf}
11:28:08.872 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.872 [debug] do_bend final result: %{variant: :leaf}
11:28:08.872 [debug] Executing bend with initial: 10
11:28:08.872 [debug] Executing fun with value: 10
11:28:08.872 [debug] Evaluating bend block with value: 10
11:28:08.872 [debug] Block returned: %{variant: :leaf}
11:28:08.872 [debug] Fun returned result: %{variant: :leaf}
11:28:08.872 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.872 [debug] do_bend final result: %{variant: :leaf}
11:28:08.872 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.872 [debug] Executing bend with initial: 9
11:28:08.872 [debug] Executing fun with value: 9
11:28:08.872 [debug] Evaluating bend block with value: 9
11:28:08.872 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Executing bend with initial: 10
11:28:08.872 [debug] Executing fun with value: 10
11:28:08.872 [debug] Evaluating bend block with value: 10
11:28:08.872 [debug] Block returned: %{variant: :leaf}
11:28:08.872 [debug] Fun returned result: %{variant: :leaf}
11:28:08.872 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.872 [debug] do_bend final result: %{variant: :leaf}
11:28:08.872 [debug] Executing bend with initial: 10
11:28:08.872 [debug] Executing fun with value: 10
11:28:08.872 [debug] Evaluating bend block with value: 10
11:28:08.872 [debug] Block returned: %{variant: :leaf}
11:28:08.872 [debug] Fun returned result: %{variant: :leaf}
11:28:08.872 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.872 [debug] do_bend final result: %{variant: :leaf}
11:28:08.872 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.872 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.872 [debug] Executing bend with initial: 8
11:28:08.872 [debug] Executing fun with value: 8
11:28:08.872 [debug] Evaluating bend block with value: 8
11:28:08.872 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.872 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.872 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.872 [debug] Executing bend with initial: 9
11:28:08.872 [debug] Executing fun with value: 9
11:28:08.872 [debug] Evaluating bend block with value: 9
11:28:08.872 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.872 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.874 [debug] Executing bend with initial: 10
11:28:08.874 [debug] Executing fun with value: 10
11:28:08.874 [debug] Evaluating bend block with value: 10
11:28:08.874 [debug] Block returned: %{variant: :leaf}
11:28:08.874 [debug] Fun returned result: %{variant: :leaf}
11:28:08.874 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.874 [debug] do_bend final result: %{variant: :leaf}
11:28:08.874 [debug] Executing bend with initial: 10
11:28:08.874 [debug] Executing fun with value: 10
11:28:08.874 [debug] Evaluating bend block with value: 10
11:28:08.874 [debug] Block returned: %{variant: :leaf}
11:28:08.874 [debug] Fun returned result: %{variant: :leaf}
11:28:08.874 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.874 [debug] do_bend final result: %{variant: :leaf}
11:28:08.874 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.874 [debug] Executing bend with initial: 9
11:28:08.874 [debug] Executing fun with value: 9
11:28:08.874 [debug] Evaluating bend block with value: 9
11:28:08.874 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.874 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.874 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.874 [debug] Executing bend with initial: 10
11:28:08.874 [debug] Executing fun with value: 10
11:28:08.874 [debug] Evaluating bend block with value: 10
11:28:08.874 [debug] Block returned: %{variant: :leaf}
11:28:08.874 [debug] Fun returned result: %{variant: :leaf}
11:28:08.874 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.874 [debug] do_bend final result: %{variant: :leaf}
11:28:08.874 [debug] Executing bend with initial: 10
11:28:08.874 [debug] Executing fun with value: 10
11:28:08.874 [debug] Evaluating bend block with value: 10
11:28:08.874 [debug] Block returned: %{variant: :leaf}
11:28:08.874 [debug] Fun returned result: %{variant: :leaf}
11:28:08.874 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.874 [debug] do_bend final result: %{variant: :leaf}
11:28:08.874 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.874 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.874 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.874 [debug] Executing bend with initial: 7
11:28:08.874 [debug] Executing fun with value: 7
11:28:08.874 [debug] Evaluating bend block with value: 7
11:28:08.874 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.874 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.874 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.874 [debug] Executing bend with initial: 8
11:28:08.874 [debug] Executing fun with value: 8
11:28:08.874 [debug] Evaluating bend block with value: 8
11:28:08.874 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.875 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.875 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 9
11:28:08.875 [debug] Executing fun with value: 9
11:28:08.875 [debug] Evaluating bend block with value: 9
11:28:08.875 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 9
11:28:08.875 [debug] Executing fun with value: 9
11:28:08.875 [debug] Evaluating bend block with value: 9
11:28:08.875 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.875 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 8
11:28:08.875 [debug] Executing fun with value: 8
11:28:08.875 [debug] Evaluating bend block with value: 8
11:28:08.875 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.875 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.875 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 9
11:28:08.875 [debug] Executing fun with value: 9
11:28:08.875 [debug] Evaluating bend block with value: 9
11:28:08.875 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 9
11:28:08.875 [debug] Executing fun with value: 9
11:28:08.875 [debug] Evaluating bend block with value: 9
11:28:08.875 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] Executing bend with initial: 10
11:28:08.875 [debug] Executing fun with value: 10
11:28:08.875 [debug] Evaluating bend block with value: 10
11:28:08.875 [debug] Block returned: %{variant: :leaf}
11:28:08.875 [debug] Fun returned result: %{variant: :leaf}
11:28:08.875 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{variant: :leaf}
11:28:08.875 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.875 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.875 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.875 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.875 [debug] Executing bend with initial: 6
11:28:08.875 [debug] Executing fun with value: 6
11:28:08.875 [debug] Evaluating bend block with value: 6
11:28:08.875 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 7
11:28:08.876 [debug] Executing fun with value: 7
11:28:08.876 [debug] Evaluating bend block with value: 7
11:28:08.876 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 8
11:28:08.876 [debug] Executing fun with value: 8
11:28:08.876 [debug] Evaluating bend block with value: 8
11:28:08.876 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 9
11:28:08.876 [debug] Executing fun with value: 9
11:28:08.876 [debug] Evaluating bend block with value: 9
11:28:08.876 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 9
11:28:08.876 [debug] Executing fun with value: 9
11:28:08.876 [debug] Evaluating bend block with value: 9
11:28:08.876 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.876 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 8
11:28:08.876 [debug] Executing fun with value: 8
11:28:08.876 [debug] Evaluating bend block with value: 8
11:28:08.876 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 9
11:28:08.876 [debug] Executing fun with value: 9
11:28:08.876 [debug] Evaluating bend block with value: 9
11:28:08.876 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 9
11:28:08.876 [debug] Executing fun with value: 9
11:28:08.876 [debug] Evaluating bend block with value: 9
11:28:08.876 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] Executing bend with initial: 10
11:28:08.876 [debug] Executing fun with value: 10
11:28:08.876 [debug] Evaluating bend block with value: 10
11:28:08.876 [debug] Block returned: %{variant: :leaf}
11:28:08.876 [debug] Fun returned result: %{variant: :leaf}
11:28:08.876 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{variant: :leaf}
11:28:08.876 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.876 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.876 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.876 [debug] Executing bend with initial: 7
11:28:08.876 [debug] Executing fun with value: 7
11:28:08.876 [debug] Evaluating bend block with value: 7
11:28:08.876 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.876 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.877 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
11:28:08.877 [debug] Executing bend with initial: 8
11:28:08.877 [debug] Executing fun with value: 8
11:28:08.877 [debug] Evaluating bend block with value: 8
11:28:08.877 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.877 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.877 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.877 [debug] Executing bend with initial: 9
11:28:08.877 [debug] Executing fun with value: 9
11:28:08.877 [debug] Evaluating bend block with value: 9
11:28:08.877 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.877 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.877 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.877 [debug] Executing bend with initial: 10
11:28:08.877 [debug] Executing fun with value: 10
11:28:08.877 [debug] Evaluating bend block with value: 10
11:28:08.877 [debug] Block returned: %{variant: :leaf}
11:28:08.877 [debug] Fun returned result: %{variant: :leaf}
11:28:08.877 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.877 [debug] do_bend final result: %{variant: :leaf}
11:28:08.877 [debug] Executing bend with initial: 10
11:28:08.877 [debug] Executing fun with value: 10
11:28:08.877 [debug] Evaluating bend block with value: 10
11:28:08.877 [debug] Block returned: %{variant: :leaf}
11:28:08.877 [debug] Fun returned result: %{variant: :leaf}
11:28:08.877 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.877 [debug] do_bend final result: %{variant: :leaf}
11:28:08.877 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.877 [debug] Executing bend with initial: 9
11:28:08.877 [debug] Executing fun with value: 9
11:28:08.877 [debug] Evaluating bend block with value: 9
11:28:08.877 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.877 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.877 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.877 [debug] Executing bend with initial: 10
11:28:08.877 [debug] Executing fun with value: 10
11:28:08.877 [debug] Evaluating bend block with value: 10
11:28:08.877 [debug] Block returned: %{variant: :leaf}
11:28:08.879 [debug] Fun returned result: %{variant: :leaf}
11:28:08.879 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.879 [debug] do_bend final result: %{variant: :leaf}
11:28:08.879 [debug] Executing bend with initial: 10
11:28:08.879 [debug] Executing fun with value: 10
11:28:08.879 [debug] Evaluating bend block with value: 10
11:28:08.879 [debug] Block returned: %{variant: :leaf}
11:28:08.879 [debug] Fun returned result: %{variant: :leaf}
11:28:08.879 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.879 [debug] do_bend final result: %{variant: :leaf}
11:28:08.879 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.879 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.879 [debug] Executing bend with initial: 8
11:28:08.879 [debug] Executing fun with value: 8
11:28:08.879 [debug] Evaluating bend block with value: 8
11:28:08.879 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.879 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.879 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
11:28:08.879 [debug] Executing bend with initial: 9
11:28:08.879 [debug] Executing fun with value: 9
11:28:08.879 [debug] Evaluating bend block with value: 9
11:28:08.879 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.879 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.879 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.879 [debug] Executing bend with initial: 10
11:28:08.879 [debug] Executing fun with value: 10
11:28:08.879 [debug] Evaluating bend block with value: 10
11:28:08.879 [debug] Block returned: %{variant: :leaf}
11:28:08.879 [debug] Fun returned result: %{variant: :leaf}
11:28:08.879 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.879 [debug] do_bend final result: %{variant: :leaf}
11:28:08.879 [debug] Executing bend with initial: 10
11:28:08.879 [debug] Executing fun with value: 10
11:28:08.879 [debug] Evaluating bend block with value: 10
11:28:08.879 [debug] Block returned: %{variant: :leaf}
11:28:08.879 [debug] Fun returned result: %{variant: :leaf}
11:28:08.879 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.879 [debug] do_bend final result: %{variant: :leaf}
11:28:08.879 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.879 [debug] Executing bend with initial: 9
11:28:08.879 [debug] Executing fun with value: 9
11:28:08.879 [debug] Evaluating bend block with value: 9
11:28:08.879 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.879 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.879 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
11:28:08.879 [debug] Executing bend with initial: 10
11:28:08.879 [debug] Executing fun with value: 10
11:28:08.879 [debug] Evaluating bend block with value: 10
11:28:08.879 [debug] Block returned: %{variant: :leaf}
11:28:08.879 [debug] Fun returned result: %{variant: :leaf}
11:28:08.879 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.879 [debug] do_bend final result: %{variant: :leaf}
11:28:08.880 [debug] Executing bend with initial: 10
11:28:08.880 [debug] Executing fun with value: 10
11:28:08.880 [debug] Evaluating bend block with value: 10
11:28:08.880 [debug] Block returned: %{variant: :leaf}
11:28:08.880 [debug] Fun returned result: %{variant: :leaf}
11:28:08.880 [debug] Processing constructed value: %{variant: :leaf}
11:28:08.880 [debug] do_bend final result: %{variant: :leaf}
11:28:08.880 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.880 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.880 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.880 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.880 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.881 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.881 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.883 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
11:28:08.888 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, (truncated)
11:28:08.898 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: (truncated)
11:28:08.907 [debug] Final bend result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :l (truncated)
11:28:08.917 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{vari (truncated)
11:28:08.927 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right:  (truncated)
11:28:08.931 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :le (truncated)
11:28:08.936 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{varian (truncated)
11:28:08.938 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
11:28:08.941 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
11:28:08.942 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:08.943 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.943 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:08.943 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.944 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.944 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.944 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.944 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.944 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.944 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.944 [debug] Recursive field result for left: 0
11:28:08.944 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.944 [debug] Recursive field result for right: 0
11:28:08.944 [debug] do_fold called with non-variant data: 0
11:28:08.944 [debug] do_fold called with non-variant data: 0
11:28:08.944 [debug] Recursive field result for left: 9
11:28:08.944 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.944 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.944 [debug] Recursive field result for left: 0
11:28:08.944 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.944 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.944 [debug] Recursive field result for right: 0
11:28:08.944 [debug] do_fold called with non-variant data: 0
11:28:08.944 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] Recursive field result for right: 9
11:28:08.945 [debug] do_fold called with non-variant data: 9
11:28:08.945 [debug] do_fold called with non-variant data: 9
11:28:08.945 [debug] Recursive field result for left: 26
11:28:08.945 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for left: 0
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for right: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] Recursive field result for left: 9
11:28:08.945 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for left: 0
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for right: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] Recursive field result for right: 9
11:28:08.945 [debug] do_fold called with non-variant data: 9
11:28:08.945 [debug] do_fold called with non-variant data: 9
11:28:08.945 [debug] Recursive field result for right: 26
11:28:08.945 [debug] do_fold called with non-variant data: 26
11:28:08.945 [debug] do_fold called with non-variant data: 26
11:28:08.945 [debug] Recursive field result for left: 59
11:28:08.945 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for left: 0
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for right: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] Recursive field result for left: 9
11:28:08.945 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for left: 0
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.945 [debug] Recursive field result for right: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] do_fold called with non-variant data: 0
11:28:08.945 [debug] Recursive field result for right: 9
11:28:08.945 [debug] do_fold called with non-variant data: 9
11:28:08.945 [debug] do_fold called with non-variant data: 9
11:28:08.945 [debug] Recursive field result for left: 26
11:28:08.945 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.945 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.945 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for left: 0
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for right: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] Recursive field result for left: 9
11:28:08.946 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for left: 0
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for right: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] Recursive field result for right: 9
11:28:08.946 [debug] do_fold called with non-variant data: 9
11:28:08.946 [debug] do_fold called with non-variant data: 9
11:28:08.946 [debug] Recursive field result for right: 26
11:28:08.946 [debug] do_fold called with non-variant data: 26
11:28:08.946 [debug] do_fold called with non-variant data: 26
11:28:08.946 [debug] Recursive field result for right: 59
11:28:08.946 [debug] do_fold called with non-variant data: 59
11:28:08.946 [debug] do_fold called with non-variant data: 59
11:28:08.946 [debug] Recursive field result for left: 124
11:28:08.946 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for left: 0
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for right: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] Recursive field result for left: 9
11:28:08.946 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for left: 0
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for right: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] do_fold called with non-variant data: 0
11:28:08.946 [debug] Recursive field result for right: 9
11:28:08.946 [debug] do_fold called with non-variant data: 9
11:28:08.946 [debug] do_fold called with non-variant data: 9
11:28:08.946 [debug] Recursive field result for left: 26
11:28:08.946 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.946 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.946 [debug] Recursive field result for left: 0
11:28:08.946 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.947 [debug] Recursive field result for right: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] Recursive field result for left: 9
11:28:08.947 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.947 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.947 [debug] Recursive field result for left: 0
11:28:08.947 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.947 [debug] Recursive field result for right: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] Recursive field result for right: 9
11:28:08.947 [debug] do_fold called with non-variant data: 9
11:28:08.947 [debug] do_fold called with non-variant data: 9
11:28:08.947 [debug] Recursive field result for right: 26
11:28:08.947 [debug] do_fold called with non-variant data: 26
11:28:08.947 [debug] do_fold called with non-variant data: 26
11:28:08.947 [debug] Recursive field result for left: 59
11:28:08.947 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.947 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.947 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.947 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.947 [debug] Recursive field result for left: 0
11:28:08.947 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.947 [debug] Recursive field result for right: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] Recursive field result for left: 9
11:28:08.947 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.947 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.947 [debug] Recursive field result for left: 0
11:28:08.947 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.947 [debug] Recursive field result for right: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] do_fold called with non-variant data: 0
11:28:08.947 [debug] Recursive field result for right: 9
11:28:08.947 [debug] do_fold called with non-variant data: 9
11:28:08.947 [debug] do_fold called with non-variant data: 9
11:28:08.947 [debug] Recursive field result for left: 26
11:28:08.947 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.947 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.947 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.948 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.948 [debug] Recursive field result for left: 0
11:28:08.948 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.948 [debug] Recursive field result for right: 0
11:28:08.948 [debug] do_fold called with non-variant data: 0
11:28:08.948 [debug] do_fold called with non-variant data: 0
11:28:08.948 [debug] Recursive field result for left: 9
11:28:08.948 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.948 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.948 [debug] Recursive field result for left: 0
11:28:08.948 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.948 [debug] Recursive field result for right: 0
11:28:08.948 [debug] do_fold called with non-variant data: 0
11:28:08.948 [debug] do_fold called with non-variant data: 0
11:28:08.948 [debug] Recursive field result for right: 9
11:28:08.948 [debug] do_fold called with non-variant data: 9
11:28:08.948 [debug] do_fold called with non-variant data: 9
11:28:08.948 [debug] Recursive field result for right: 26
11:28:08.948 [debug] do_fold called with non-variant data: 26
11:28:08.948 [debug] do_fold called with non-variant data: 26
11:28:08.948 [debug] Recursive field result for right: 59
11:28:08.948 [debug] do_fold called with non-variant data: 59
11:28:08.948 [debug] do_fold called with non-variant data: 59
11:28:08.948 [debug] Recursive field result for right: 124
11:28:08.948 [debug] do_fold called with non-variant data: 124
11:28:08.948 [debug] do_fold called with non-variant data: 124
11:28:08.948 [debug] Recursive field result for left: 253
11:28:08.948 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.948 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.948 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.948 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for left: 0
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for right: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] Recursive field result for left: 9
11:28:08.949 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for left: 0
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for right: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] Recursive field result for right: 9
11:28:08.949 [debug] do_fold called with non-variant data: 9
11:28:08.949 [debug] do_fold called with non-variant data: 9
11:28:08.949 [debug] Recursive field result for left: 26
11:28:08.949 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for left: 0
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for right: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] Recursive field result for left: 9
11:28:08.949 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for left: 0
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for right: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] Recursive field result for right: 9
11:28:08.949 [debug] do_fold called with non-variant data: 9
11:28:08.949 [debug] do_fold called with non-variant data: 9
11:28:08.949 [debug] Recursive field result for right: 26
11:28:08.949 [debug] do_fold called with non-variant data: 26
11:28:08.949 [debug] do_fold called with non-variant data: 26
11:28:08.949 [debug] Recursive field result for left: 59
11:28:08.949 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for left: 0
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for right: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] do_fold called with non-variant data: 0
11:28:08.949 [debug] Recursive field result for left: 9
11:28:08.949 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.949 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.949 [debug] Recursive field result for left: 0
11:28:08.949 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for right: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] Recursive field result for right: 9
11:28:08.950 [debug] do_fold called with non-variant data: 9
11:28:08.950 [debug] do_fold called with non-variant data: 9
11:28:08.950 [debug] Recursive field result for left: 26
11:28:08.950 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for left: 0
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for right: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] Recursive field result for left: 9
11:28:08.950 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for left: 0
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for right: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] Recursive field result for right: 9
11:28:08.950 [debug] do_fold called with non-variant data: 9
11:28:08.950 [debug] do_fold called with non-variant data: 9
11:28:08.950 [debug] Recursive field result for right: 26
11:28:08.950 [debug] do_fold called with non-variant data: 26
11:28:08.950 [debug] do_fold called with non-variant data: 26
11:28:08.950 [debug] Recursive field result for right: 59
11:28:08.950 [debug] do_fold called with non-variant data: 59
11:28:08.950 [debug] do_fold called with non-variant data: 59
11:28:08.950 [debug] Recursive field result for left: 124
11:28:08.950 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for left: 0
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for right: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] Recursive field result for left: 9
11:28:08.950 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for left: 0
11:28:08.950 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.950 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.950 [debug] Recursive field result for right: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] do_fold called with non-variant data: 0
11:28:08.950 [debug] Recursive field result for right: 9
11:28:08.950 [debug] do_fold called with non-variant data: 9
11:28:08.950 [debug] do_fold called with non-variant data: 9
11:28:08.950 [debug] Recursive field result for left: 26
11:28:08.951 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for left: 0
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for right: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] Recursive field result for left: 9
11:28:08.951 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for left: 0
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for right: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] Recursive field result for right: 9
11:28:08.951 [debug] do_fold called with non-variant data: 9
11:28:08.951 [debug] do_fold called with non-variant data: 9
11:28:08.951 [debug] Recursive field result for right: 26
11:28:08.951 [debug] do_fold called with non-variant data: 26
11:28:08.951 [debug] do_fold called with non-variant data: 26
11:28:08.951 [debug] Recursive field result for left: 59
11:28:08.951 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for left: 0
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for right: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] Recursive field result for left: 9
11:28:08.951 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for left: 0
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for right: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] Recursive field result for right: 9
11:28:08.951 [debug] do_fold called with non-variant data: 9
11:28:08.951 [debug] do_fold called with non-variant data: 9
11:28:08.951 [debug] Recursive field result for left: 26
11:28:08.951 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for left: 0
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for right: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] do_fold called with non-variant data: 0
11:28:08.951 [debug] Recursive field result for left: 9
11:28:08.951 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.951 [debug] Recursive field result for left: 0
11:28:08.951 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.951 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.952 [debug] Recursive field result for right: 0
11:28:08.952 [debug] do_fold called with non-variant data: 0
11:28:08.952 [debug] do_fold called with non-variant data: 0
11:28:08.952 [debug] Recursive field result for right: 9
11:28:08.952 [debug] do_fold called with non-variant data: 9
11:28:08.952 [debug] do_fold called with non-variant data: 9
11:28:08.952 [debug] Recursive field result for right: 26
11:28:08.952 [debug] do_fold called with non-variant data: 26
11:28:08.952 [debug] do_fold called with non-variant data: 26
11:28:08.952 [debug] Recursive field result for right: 59
11:28:08.952 [debug] do_fold called with non-variant data: 59
11:28:08.952 [debug] do_fold called with non-variant data: 59
11:28:08.952 [debug] Recursive field result for right: 124
11:28:08.952 [debug] do_fold called with non-variant data: 124
11:28:08.952 [debug] do_fold called with non-variant data: 124
11:28:08.952 [debug] Recursive field result for right: 253
11:28:08.952 [debug] do_fold called with non-variant data: 253
11:28:08.952 [debug] do_fold called with non-variant data: 253
11:28:08.952 [debug] Recursive field result for left: 510
11:28:08.952 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:08.952 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.953 [debug] Recursive field result for left: 0
11:28:08.953 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.953 [debug] Recursive field result for right: 0
11:28:08.953 [debug] do_fold called with non-variant data: 0
11:28:08.953 [debug] do_fold called with non-variant data: 0
11:28:08.953 [debug] Recursive field result for left: 9
11:28:08.953 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.953 [debug] Recursive field result for left: 0
11:28:08.953 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.953 [debug] Recursive field result for right: 0
11:28:08.953 [debug] do_fold called with non-variant data: 0
11:28:08.953 [debug] do_fold called with non-variant data: 0
11:28:08.953 [debug] Recursive field result for right: 9
11:28:08.953 [debug] do_fold called with non-variant data: 9
11:28:08.953 [debug] do_fold called with non-variant data: 9
11:28:08.953 [debug] Recursive field result for left: 26
11:28:08.953 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.953 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.953 [debug] Recursive field result for left: 0
11:28:08.953 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.953 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.953 [debug] Recursive field result for right: 0
11:28:08.953 [debug] do_fold called with non-variant data: 0
11:28:08.953 [debug] do_fold called with non-variant data: 0
11:28:08.953 [debug] Recursive field result for left: 9
11:28:08.954 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.954 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.954 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.954 [debug] Recursive field result for left: 0
11:28:08.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.954 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.954 [debug] Recursive field result for right: 0
11:28:08.954 [debug] do_fold called with non-variant data: 0
11:28:08.954 [debug] do_fold called with non-variant data: 0
11:28:08.954 [debug] Recursive field result for right: 9
11:28:08.954 [debug] do_fold called with non-variant data: 9
11:28:08.954 [debug] do_fold called with non-variant data: 9
11:28:08.954 [debug] Recursive field result for right: 26
11:28:08.954 [debug] do_fold called with non-variant data: 26
11:28:08.954 [debug] do_fold called with non-variant data: 26
11:28:08.954 [debug] Recursive field result for left: 59
11:28:08.954 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.954 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.954 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.954 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.954 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.954 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.954 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.954 [debug] Recursive field result for left: 0
11:28:08.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.955 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.955 [debug] Recursive field result for right: 0
11:28:08.955 [debug] do_fold called with non-variant data: 0
11:28:08.955 [debug] do_fold called with non-variant data: 0
11:28:08.955 [debug] Recursive field result for left: 9
11:28:08.955 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.955 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.955 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.955 [debug] Recursive field result for left: 0
11:28:08.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.955 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.955 [debug] Recursive field result for right: 0
11:28:08.955 [debug] do_fold called with non-variant data: 0
11:28:08.955 [debug] do_fold called with non-variant data: 0
11:28:08.955 [debug] Recursive field result for right: 9
11:28:08.955 [debug] do_fold called with non-variant data: 9
11:28:08.955 [debug] do_fold called with non-variant data: 9
11:28:08.955 [debug] Recursive field result for left: 26
11:28:08.955 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for left: 0
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for right: 0
11:28:08.956 [debug] do_fold called with non-variant data: 0
11:28:08.956 [debug] do_fold called with non-variant data: 0
11:28:08.956 [debug] Recursive field result for left: 9
11:28:08.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for left: 0
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for right: 0
11:28:08.956 [debug] do_fold called with non-variant data: 0
11:28:08.956 [debug] do_fold called with non-variant data: 0
11:28:08.956 [debug] Recursive field result for right: 9
11:28:08.956 [debug] do_fold called with non-variant data: 9
11:28:08.956 [debug] do_fold called with non-variant data: 9
11:28:08.956 [debug] Recursive field result for right: 26
11:28:08.956 [debug] do_fold called with non-variant data: 26
11:28:08.956 [debug] do_fold called with non-variant data: 26
11:28:08.956 [debug] Recursive field result for right: 59
11:28:08.956 [debug] do_fold called with non-variant data: 59
11:28:08.956 [debug] do_fold called with non-variant data: 59
11:28:08.956 [debug] Recursive field result for left: 124
11:28:08.956 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for left: 0
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for right: 0
11:28:08.956 [debug] do_fold called with non-variant data: 0
11:28:08.956 [debug] do_fold called with non-variant data: 0
11:28:08.956 [debug] Recursive field result for left: 9
11:28:08.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for left: 0
11:28:08.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.956 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.956 [debug] Recursive field result for right: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] Recursive field result for right: 9
11:28:08.957 [debug] do_fold called with non-variant data: 9
11:28:08.957 [debug] do_fold called with non-variant data: 9
11:28:08.957 [debug] Recursive field result for left: 26
11:28:08.957 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.957 [debug] Recursive field result for left: 0
11:28:08.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.957 [debug] Recursive field result for right: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] Recursive field result for left: 9
11:28:08.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.957 [debug] Recursive field result for left: 0
11:28:08.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.957 [debug] Recursive field result for right: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] Recursive field result for right: 9
11:28:08.957 [debug] do_fold called with non-variant data: 9
11:28:08.957 [debug] do_fold called with non-variant data: 9
11:28:08.957 [debug] Recursive field result for right: 26
11:28:08.957 [debug] do_fold called with non-variant data: 26
11:28:08.957 [debug] do_fold called with non-variant data: 26
11:28:08.957 [debug] Recursive field result for left: 59
11:28:08.957 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.957 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.957 [debug] Recursive field result for left: 0
11:28:08.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.957 [debug] Recursive field result for right: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] do_fold called with non-variant data: 0
11:28:08.957 [debug] Recursive field result for left: 9
11:28:08.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.957 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.957 [debug] Recursive field result for left: 0
11:28:08.958 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.958 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.958 [debug] Recursive field result for right: 0
11:28:08.958 [debug] do_fold called with non-variant data: 0
11:28:08.958 [debug] do_fold called with non-variant data: 0
11:28:08.958 [debug] Recursive field result for right: 9
11:28:08.958 [debug] do_fold called with non-variant data: 9
11:28:08.958 [debug] do_fold called with non-variant data: 9
11:28:08.958 [debug] Recursive field result for left: 26
11:28:08.958 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.958 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.958 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.958 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.958 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.958 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.958 [debug] Recursive field result for left: 0
11:28:08.958 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.958 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.958 [debug] Recursive field result for right: 0
11:28:08.959 [debug] do_fold called with non-variant data: 0
11:28:08.959 [debug] do_fold called with non-variant data: 0
11:28:08.959 [debug] Recursive field result for left: 9
11:28:08.959 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.959 [debug] Recursive field result for left: 0
11:28:08.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.959 [debug] Recursive field result for right: 0
11:28:08.959 [debug] do_fold called with non-variant data: 0
11:28:08.959 [debug] do_fold called with non-variant data: 0
11:28:08.959 [debug] Recursive field result for right: 9
11:28:08.959 [debug] do_fold called with non-variant data: 9
11:28:08.959 [debug] do_fold called with non-variant data: 9
11:28:08.959 [debug] Recursive field result for right: 26
11:28:08.959 [debug] do_fold called with non-variant data: 26
11:28:08.959 [debug] do_fold called with non-variant data: 26
11:28:08.959 [debug] Recursive field result for right: 59
11:28:08.959 [debug] do_fold called with non-variant data: 59
11:28:08.959 [debug] do_fold called with non-variant data: 59
11:28:08.959 [debug] Recursive field result for right: 124
11:28:08.959 [debug] do_fold called with non-variant data: 124
11:28:08.959 [debug] do_fold called with non-variant data: 124
11:28:08.959 [debug] Recursive field result for left: 253
11:28:08.959 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.959 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.959 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.959 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.959 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.959 [debug] Recursive field result for left: 0
11:28:08.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.959 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.959 [debug] Recursive field result for right: 0
11:28:08.959 [debug] do_fold called with non-variant data: 0
11:28:08.959 [debug] do_fold called with non-variant data: 0
11:28:08.960 [debug] Recursive field result for left: 9
11:28:08.960 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.960 [debug] Recursive field result for left: 0
11:28:08.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.960 [debug] Recursive field result for right: 0
11:28:08.960 [debug] do_fold called with non-variant data: 0
11:28:08.960 [debug] do_fold called with non-variant data: 0
11:28:08.960 [debug] Recursive field result for right: 9
11:28:08.960 [debug] do_fold called with non-variant data: 9
11:28:08.960 [debug] do_fold called with non-variant data: 9
11:28:08.960 [debug] Recursive field result for left: 26
11:28:08.960 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.960 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.960 [debug] Recursive field result for left: 0
11:28:08.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.960 [debug] Recursive field result for right: 0
11:28:08.960 [debug] do_fold called with non-variant data: 0
11:28:08.960 [debug] do_fold called with non-variant data: 0
11:28:08.960 [debug] Recursive field result for left: 9
11:28:08.960 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.960 [debug] Recursive field result for left: 0
11:28:08.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.960 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.960 [debug] Recursive field result for right: 0
11:28:08.960 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] Recursive field result for right: 9
11:28:08.964 [debug] do_fold called with non-variant data: 9
11:28:08.964 [debug] do_fold called with non-variant data: 9
11:28:08.964 [debug] Recursive field result for right: 26
11:28:08.964 [debug] do_fold called with non-variant data: 26
11:28:08.964 [debug] do_fold called with non-variant data: 26
11:28:08.964 [debug] Recursive field result for left: 59
11:28:08.964 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.964 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.964 [debug] Recursive field result for left: 0
11:28:08.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.964 [debug] Recursive field result for right: 0
11:28:08.964 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] Recursive field result for left: 9
11:28:08.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.964 [debug] Recursive field result for left: 0
11:28:08.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.964 [debug] Recursive field result for right: 0
11:28:08.964 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] Recursive field result for right: 9
11:28:08.964 [debug] do_fold called with non-variant data: 9
11:28:08.964 [debug] do_fold called with non-variant data: 9
11:28:08.964 [debug] Recursive field result for left: 26
11:28:08.964 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.964 [debug] Recursive field result for left: 0
11:28:08.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.964 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.964 [debug] Recursive field result for right: 0
11:28:08.964 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] do_fold called with non-variant data: 0
11:28:08.964 [debug] Recursive field result for left: 9
11:28:08.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.965 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.965 [debug] Recursive field result for left: 0
11:28:08.965 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.965 [debug] Recursive field result for right: 0
11:28:08.965 [debug] do_fold called with non-variant data: 0
11:28:08.965 [debug] do_fold called with non-variant data: 0
11:28:08.965 [debug] Recursive field result for right: 9
11:28:08.965 [debug] do_fold called with non-variant data: 9
11:28:08.965 [debug] do_fold called with non-variant data: 9
11:28:08.965 [debug] Recursive field result for right: 26
11:28:08.965 [debug] do_fold called with non-variant data: 26
11:28:08.965 [debug] do_fold called with non-variant data: 26
11:28:08.965 [debug] Recursive field result for right: 59
11:28:08.965 [debug] do_fold called with non-variant data: 59
11:28:08.965 [debug] do_fold called with non-variant data: 59
11:28:08.965 [debug] Recursive field result for left: 124
11:28:08.965 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.965 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.965 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.965 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.965 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.965 [debug] Recursive field result for left: 0
11:28:08.965 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.965 [debug] Recursive field result for right: 0
11:28:08.965 [debug] do_fold called with non-variant data: 0
11:28:08.965 [debug] do_fold called with non-variant data: 0
11:28:08.965 [debug] Recursive field result for left: 9
11:28:08.965 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.965 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.965 [debug] Recursive field result for left: 0
11:28:08.965 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.965 [debug] Recursive field result for right: 0
11:28:08.965 [debug] do_fold called with non-variant data: 0
11:28:08.965 [debug] do_fold called with non-variant data: 0
11:28:08.965 [debug] Recursive field result for right: 9
11:28:08.965 [debug] do_fold called with non-variant data: 9
11:28:08.965 [debug] do_fold called with non-variant data: 9
11:28:08.965 [debug] Recursive field result for left: 26
11:28:08.965 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.965 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.965 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.966 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.966 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.966 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.966 [debug] Recursive field result for left: 0
11:28:08.966 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.966 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.966 [debug] Recursive field result for right: 0
11:28:08.966 [debug] do_fold called with non-variant data: 0
11:28:08.966 [debug] do_fold called with non-variant data: 0
11:28:08.966 [debug] Recursive field result for left: 9
11:28:08.966 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.966 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.966 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.966 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.966 [debug] Recursive field result for left: 0
11:28:08.966 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.966 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.966 [debug] Recursive field result for right: 0
11:28:08.966 [debug] do_fold called with non-variant data: 0
11:28:08.966 [debug] do_fold called with non-variant data: 0
11:28:08.966 [debug] Recursive field result for right: 9
11:28:08.966 [debug] do_fold called with non-variant data: 9
11:28:08.967 [debug] do_fold called with non-variant data: 9
11:28:08.967 [debug] Recursive field result for right: 26
11:28:08.967 [debug] do_fold called with non-variant data: 26
11:28:08.967 [debug] do_fold called with non-variant data: 26
11:28:08.967 [debug] Recursive field result for left: 59
11:28:08.967 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.967 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.967 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.967 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.967 [debug] Recursive field result for left: 0
11:28:08.967 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.967 [debug] Recursive field result for right: 0
11:28:08.967 [debug] do_fold called with non-variant data: 0
11:28:08.967 [debug] do_fold called with non-variant data: 0
11:28:08.967 [debug] Recursive field result for left: 9
11:28:08.967 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.967 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.967 [debug] Recursive field result for left: 0
11:28:08.967 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.967 [debug] Recursive field result for right: 0
11:28:08.967 [debug] do_fold called with non-variant data: 0
11:28:08.967 [debug] do_fold called with non-variant data: 0
11:28:08.967 [debug] Recursive field result for right: 9
11:28:08.967 [debug] do_fold called with non-variant data: 9
11:28:08.967 [debug] do_fold called with non-variant data: 9
11:28:08.967 [debug] Recursive field result for left: 26
11:28:08.967 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.967 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.967 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.967 [debug] Recursive field result for left: 0
11:28:08.967 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.967 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.967 [debug] Recursive field result for right: 0
11:28:08.967 [debug] do_fold called with non-variant data: 0
11:28:08.967 [debug] do_fold called with non-variant data: 0
11:28:08.967 [debug] Recursive field result for left: 9
11:28:08.967 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.968 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.968 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.968 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.968 [debug] Recursive field result for left: 0
11:28:08.968 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.968 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.968 [debug] Recursive field result for right: 0
11:28:08.968 [debug] do_fold called with non-variant data: 0
11:28:08.968 [debug] do_fold called with non-variant data: 0
11:28:08.968 [debug] Recursive field result for right: 9
11:28:08.968 [debug] do_fold called with non-variant data: 9
11:28:08.968 [debug] do_fold called with non-variant data: 9
11:28:08.968 [debug] Recursive field result for right: 26
11:28:08.968 [debug] do_fold called with non-variant data: 26
11:28:08.968 [debug] do_fold called with non-variant data: 26
11:28:08.968 [debug] Recursive field result for right: 59
11:28:08.968 [debug] do_fold called with non-variant data: 59
11:28:08.968 [debug] do_fold called with non-variant data: 59
11:28:08.968 [debug] Recursive field result for right: 124
11:28:08.968 [debug] do_fold called with non-variant data: 124
11:28:08.968 [debug] do_fold called with non-variant data: 124
11:28:08.968 [debug] Recursive field result for right: 253
11:28:08.968 [debug] do_fold called with non-variant data: 253
11:28:08.968 [debug] do_fold called with non-variant data: 253
11:28:08.968 [debug] Recursive field result for right: 510
11:28:08.968 [debug] do_fold called with non-variant data: 510
11:28:08.968 [debug] do_fold called with non-variant data: 510
11:28:08.968 [debug] Recursive field result for left: 1023
11:28:08.969 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:08.970 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:08.971 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:08.971 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.972 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.972 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.972 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.972 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.972 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.972 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.972 [debug] Recursive field result for left: 0
11:28:08.972 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.972 [debug] Recursive field result for right: 0
11:28:08.972 [debug] do_fold called with non-variant data: 0
11:28:08.972 [debug] do_fold called with non-variant data: 0
11:28:08.972 [debug] Recursive field result for left: 9
11:28:08.972 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.972 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.972 [debug] Recursive field result for left: 0
11:28:08.972 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.972 [debug] Recursive field result for right: 0
11:28:08.972 [debug] do_fold called with non-variant data: 0
11:28:08.972 [debug] do_fold called with non-variant data: 0
11:28:08.972 [debug] Recursive field result for right: 9
11:28:08.972 [debug] do_fold called with non-variant data: 9
11:28:08.972 [debug] do_fold called with non-variant data: 9
11:28:08.972 [debug] Recursive field result for left: 26
11:28:08.972 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.972 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.973 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.973 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.973 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.973 [debug] Recursive field result for left: 0
11:28:08.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.973 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.973 [debug] Recursive field result for right: 0
11:28:08.973 [debug] do_fold called with non-variant data: 0
11:28:08.973 [debug] do_fold called with non-variant data: 0
11:28:08.973 [debug] Recursive field result for left: 9
11:28:08.973 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.973 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.973 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.973 [debug] Recursive field result for left: 0
11:28:08.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.973 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.973 [debug] Recursive field result for right: 0
11:28:08.973 [debug] do_fold called with non-variant data: 0
11:28:08.973 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] Recursive field result for right: 9
11:28:08.975 [debug] do_fold called with non-variant data: 9
11:28:08.975 [debug] do_fold called with non-variant data: 9
11:28:08.975 [debug] Recursive field result for right: 26
11:28:08.975 [debug] do_fold called with non-variant data: 26
11:28:08.975 [debug] do_fold called with non-variant data: 26
11:28:08.975 [debug] Recursive field result for left: 59
11:28:08.975 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.975 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for left: 0
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for right: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] Recursive field result for left: 9
11:28:08.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for left: 0
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for right: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] Recursive field result for right: 9
11:28:08.975 [debug] do_fold called with non-variant data: 9
11:28:08.975 [debug] do_fold called with non-variant data: 9
11:28:08.975 [debug] Recursive field result for left: 26
11:28:08.975 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for left: 0
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for right: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] Recursive field result for left: 9
11:28:08.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for left: 0
11:28:08.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.975 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.975 [debug] Recursive field result for right: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] do_fold called with non-variant data: 0
11:28:08.975 [debug] Recursive field result for right: 9
11:28:08.975 [debug] do_fold called with non-variant data: 9
11:28:08.975 [debug] do_fold called with non-variant data: 9
11:28:08.975 [debug] Recursive field result for right: 26
11:28:08.975 [debug] do_fold called with non-variant data: 26
11:28:08.975 [debug] do_fold called with non-variant data: 26
11:28:08.975 [debug] Recursive field result for right: 59
11:28:08.975 [debug] do_fold called with non-variant data: 59
11:28:08.975 [debug] do_fold called with non-variant data: 59
11:28:08.975 [debug] Recursive field result for left: 124
11:28:08.975 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for left: 0
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for right: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] Recursive field result for left: 9
11:28:08.976 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for left: 0
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for right: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] Recursive field result for right: 9
11:28:08.976 [debug] do_fold called with non-variant data: 9
11:28:08.976 [debug] do_fold called with non-variant data: 9
11:28:08.976 [debug] Recursive field result for left: 26
11:28:08.976 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for left: 0
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for right: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] Recursive field result for left: 9
11:28:08.976 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for left: 0
11:28:08.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.976 [debug] Recursive field result for right: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] do_fold called with non-variant data: 0
11:28:08.976 [debug] Recursive field result for right: 9
11:28:08.976 [debug] do_fold called with non-variant data: 9
11:28:08.976 [debug] do_fold called with non-variant data: 9
11:28:08.976 [debug] Recursive field result for right: 26
11:28:08.976 [debug] do_fold called with non-variant data: 26
11:28:08.976 [debug] do_fold called with non-variant data: 26
11:28:08.976 [debug] Recursive field result for left: 59
11:28:08.976 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.976 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.979 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.979 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.979 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.979 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.979 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for left: 0
11:28:08.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for right: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] Recursive field result for left: 9
11:28:08.980 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for left: 0
11:28:08.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for right: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] Recursive field result for right: 9
11:28:08.980 [debug] do_fold called with non-variant data: 9
11:28:08.980 [debug] do_fold called with non-variant data: 9
11:28:08.980 [debug] Recursive field result for left: 26
11:28:08.980 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.980 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for left: 0
11:28:08.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for right: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] Recursive field result for left: 9
11:28:08.980 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for left: 0
11:28:08.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.980 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.980 [debug] Recursive field result for right: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] do_fold called with non-variant data: 0
11:28:08.980 [debug] Recursive field result for right: 9
11:28:08.980 [debug] do_fold called with non-variant data: 9
11:28:08.980 [debug] do_fold called with non-variant data: 9
11:28:08.980 [debug] Recursive field result for right: 26
11:28:08.980 [debug] do_fold called with non-variant data: 26
11:28:08.980 [debug] do_fold called with non-variant data: 26
11:28:08.980 [debug] Recursive field result for right: 59
11:28:08.980 [debug] do_fold called with non-variant data: 59
11:28:08.980 [debug] do_fold called with non-variant data: 59
11:28:08.980 [debug] Recursive field result for right: 124
11:28:08.980 [debug] do_fold called with non-variant data: 124
11:28:08.981 [debug] do_fold called with non-variant data: 124
11:28:08.981 [debug] Recursive field result for left: 253
11:28:08.981 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.981 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.981 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.981 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.981 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.981 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.981 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.981 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.981 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.981 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.981 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for left: 0
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for right: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] Recursive field result for left: 9
11:28:08.982 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for left: 0
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for right: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] Recursive field result for right: 9
11:28:08.982 [debug] do_fold called with non-variant data: 9
11:28:08.982 [debug] do_fold called with non-variant data: 9
11:28:08.982 [debug] Recursive field result for left: 26
11:28:08.982 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for left: 0
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for right: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] Recursive field result for left: 9
11:28:08.982 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for left: 0
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for right: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] Recursive field result for right: 9
11:28:08.982 [debug] do_fold called with non-variant data: 9
11:28:08.982 [debug] do_fold called with non-variant data: 9
11:28:08.982 [debug] Recursive field result for right: 26
11:28:08.982 [debug] do_fold called with non-variant data: 26
11:28:08.982 [debug] do_fold called with non-variant data: 26
11:28:08.982 [debug] Recursive field result for left: 59
11:28:08.982 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for left: 0
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.982 [debug] Recursive field result for right: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] do_fold called with non-variant data: 0
11:28:08.982 [debug] Recursive field result for left: 9
11:28:08.982 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.982 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.982 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.983 [debug] Recursive field result for left: 0
11:28:08.983 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.983 [debug] Recursive field result for right: 0
11:28:08.983 [debug] do_fold called with non-variant data: 0
11:28:08.983 [debug] do_fold called with non-variant data: 0
11:28:08.983 [debug] Recursive field result for right: 9
11:28:08.983 [debug] do_fold called with non-variant data: 9
11:28:08.983 [debug] do_fold called with non-variant data: 9
11:28:08.983 [debug] Recursive field result for left: 26
11:28:08.983 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.983 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.983 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.983 [debug] Recursive field result for left: 0
11:28:08.983 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.983 [debug] Recursive field result for right: 0
11:28:08.983 [debug] do_fold called with non-variant data: 0
11:28:08.983 [debug] do_fold called with non-variant data: 0
11:28:08.983 [debug] Recursive field result for left: 9
11:28:08.983 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.983 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.983 [debug] Recursive field result for left: 0
11:28:08.983 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.983 [debug] Recursive field result for right: 0
11:28:08.983 [debug] do_fold called with non-variant data: 0
11:28:08.983 [debug] do_fold called with non-variant data: 0
11:28:08.983 [debug] Recursive field result for right: 9
11:28:08.983 [debug] do_fold called with non-variant data: 9
11:28:08.983 [debug] do_fold called with non-variant data: 9
11:28:08.983 [debug] Recursive field result for right: 26
11:28:08.983 [debug] do_fold called with non-variant data: 26
11:28:08.983 [debug] do_fold called with non-variant data: 26
11:28:08.983 [debug] Recursive field result for right: 59
11:28:08.983 [debug] do_fold called with non-variant data: 59
11:28:08.983 [debug] do_fold called with non-variant data: 59
11:28:08.983 [debug] Recursive field result for left: 124
11:28:08.983 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.983 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.983 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.983 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for left: 0
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for right: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] Recursive field result for left: 9
11:28:08.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for left: 0
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for right: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] Recursive field result for right: 9
11:28:08.984 [debug] do_fold called with non-variant data: 9
11:28:08.984 [debug] do_fold called with non-variant data: 9
11:28:08.984 [debug] Recursive field result for left: 26
11:28:08.984 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for left: 0
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for right: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] Recursive field result for left: 9
11:28:08.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for left: 0
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for right: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] Recursive field result for right: 9
11:28:08.984 [debug] do_fold called with non-variant data: 9
11:28:08.984 [debug] do_fold called with non-variant data: 9
11:28:08.984 [debug] Recursive field result for right: 26
11:28:08.984 [debug] do_fold called with non-variant data: 26
11:28:08.984 [debug] do_fold called with non-variant data: 26
11:28:08.984 [debug] Recursive field result for left: 59
11:28:08.984 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for left: 0
11:28:08.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.984 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.984 [debug] Recursive field result for right: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] do_fold called with non-variant data: 0
11:28:08.984 [debug] Recursive field result for left: 9
11:28:08.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.985 [debug] Recursive field result for left: 0
11:28:08.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.985 [debug] Recursive field result for right: 0
11:28:08.985 [debug] do_fold called with non-variant data: 0
11:28:08.985 [debug] do_fold called with non-variant data: 0
11:28:08.985 [debug] Recursive field result for right: 9
11:28:08.985 [debug] do_fold called with non-variant data: 9
11:28:08.985 [debug] do_fold called with non-variant data: 9
11:28:08.985 [debug] Recursive field result for left: 26
11:28:08.985 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.985 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.985 [debug] Recursive field result for left: 0
11:28:08.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.985 [debug] Recursive field result for right: 0
11:28:08.985 [debug] do_fold called with non-variant data: 0
11:28:08.985 [debug] do_fold called with non-variant data: 0
11:28:08.985 [debug] Recursive field result for left: 9
11:28:08.985 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.985 [debug] Recursive field result for left: 0
11:28:08.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.985 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.985 [debug] Recursive field result for right: 0
11:28:08.985 [debug] do_fold called with non-variant data: 0
11:28:08.985 [debug] do_fold called with non-variant data: 0
11:28:08.985 [debug] Recursive field result for right: 9
11:28:08.985 [debug] do_fold called with non-variant data: 9
11:28:08.985 [debug] do_fold called with non-variant data: 9
11:28:08.985 [debug] Recursive field result for right: 26
11:28:08.985 [debug] do_fold called with non-variant data: 26
11:28:08.985 [debug] do_fold called with non-variant data: 26
11:28:08.985 [debug] Recursive field result for right: 59
11:28:08.985 [debug] do_fold called with non-variant data: 59
11:28:08.985 [debug] do_fold called with non-variant data: 59
11:28:08.985 [debug] Recursive field result for right: 124
11:28:08.985 [debug] do_fold called with non-variant data: 124
11:28:08.985 [debug] do_fold called with non-variant data: 124
11:28:08.985 [debug] Recursive field result for right: 253
11:28:08.985 [debug] do_fold called with non-variant data: 253
11:28:08.985 [debug] do_fold called with non-variant data: 253
11:28:08.985 [debug] Recursive field result for left: 510
11:28:08.986 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:08.986 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:08.986 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.986 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.986 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for left: 0
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for right: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] Recursive field result for left: 9
11:28:08.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for left: 0
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for right: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] Recursive field result for right: 9
11:28:08.987 [debug] do_fold called with non-variant data: 9
11:28:08.987 [debug] do_fold called with non-variant data: 9
11:28:08.987 [debug] Recursive field result for left: 26
11:28:08.987 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for left: 0
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for right: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] Recursive field result for left: 9
11:28:08.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for left: 0
11:28:08.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.987 [debug] Recursive field result for right: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] do_fold called with non-variant data: 0
11:28:08.987 [debug] Recursive field result for right: 9
11:28:08.987 [debug] do_fold called with non-variant data: 9
11:28:08.987 [debug] do_fold called with non-variant data: 9
11:28:08.987 [debug] Recursive field result for right: 26
11:28:08.987 [debug] do_fold called with non-variant data: 26
11:28:08.987 [debug] do_fold called with non-variant data: 26
11:28:08.987 [debug] Recursive field result for left: 59
11:28:08.987 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.988 [debug] Recursive field result for left: 0
11:28:08.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.988 [debug] Recursive field result for right: 0
11:28:08.988 [debug] do_fold called with non-variant data: 0
11:28:08.988 [debug] do_fold called with non-variant data: 0
11:28:08.988 [debug] Recursive field result for left: 9
11:28:08.988 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.988 [debug] Recursive field result for left: 0
11:28:08.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.988 [debug] Recursive field result for right: 0
11:28:08.988 [debug] do_fold called with non-variant data: 0
11:28:08.988 [debug] do_fold called with non-variant data: 0
11:28:08.988 [debug] Recursive field result for right: 9
11:28:08.988 [debug] do_fold called with non-variant data: 9
11:28:08.988 [debug] do_fold called with non-variant data: 9
11:28:08.988 [debug] Recursive field result for left: 26
11:28:08.988 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.988 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.988 [debug] Recursive field result for left: 0
11:28:08.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.988 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.989 [debug] Recursive field result for right: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] Recursive field result for left: 9
11:28:08.989 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.989 [debug] Recursive field result for left: 0
11:28:08.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.989 [debug] Recursive field result for right: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] Recursive field result for right: 9
11:28:08.989 [debug] do_fold called with non-variant data: 9
11:28:08.989 [debug] do_fold called with non-variant data: 9
11:28:08.989 [debug] Recursive field result for right: 26
11:28:08.989 [debug] do_fold called with non-variant data: 26
11:28:08.989 [debug] do_fold called with non-variant data: 26
11:28:08.989 [debug] Recursive field result for right: 59
11:28:08.989 [debug] do_fold called with non-variant data: 59
11:28:08.989 [debug] do_fold called with non-variant data: 59
11:28:08.989 [debug] Recursive field result for left: 124
11:28:08.989 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.989 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.989 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.989 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.989 [debug] Recursive field result for left: 0
11:28:08.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.989 [debug] Recursive field result for right: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] Recursive field result for left: 9
11:28:08.989 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.989 [debug] Recursive field result for left: 0
11:28:08.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.989 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.989 [debug] Recursive field result for right: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] do_fold called with non-variant data: 0
11:28:08.989 [debug] Recursive field result for right: 9
11:28:08.989 [debug] do_fold called with non-variant data: 9
11:28:08.989 [debug] do_fold called with non-variant data: 9
11:28:08.989 [debug] Recursive field result for left: 26
11:28:08.990 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.990 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.990 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.990 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.990 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.990 [debug] Recursive field result for left: 0
11:28:08.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.990 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.990 [debug] Recursive field result for right: 0
11:28:08.990 [debug] do_fold called with non-variant data: 0
11:28:08.990 [debug] do_fold called with non-variant data: 0
11:28:08.990 [debug] Recursive field result for left: 9
11:28:08.990 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.990 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.990 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.990 [debug] Recursive field result for left: 0
11:28:08.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.990 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.990 [debug] Recursive field result for right: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] Recursive field result for right: 9
11:28:08.992 [debug] do_fold called with non-variant data: 9
11:28:08.992 [debug] do_fold called with non-variant data: 9
11:28:08.992 [debug] Recursive field result for right: 26
11:28:08.992 [debug] do_fold called with non-variant data: 26
11:28:08.992 [debug] do_fold called with non-variant data: 26
11:28:08.992 [debug] Recursive field result for left: 59
11:28:08.992 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.992 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.992 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for left: 0
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for right: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] Recursive field result for left: 9
11:28:08.992 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for left: 0
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for right: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] Recursive field result for right: 9
11:28:08.992 [debug] do_fold called with non-variant data: 9
11:28:08.992 [debug] do_fold called with non-variant data: 9
11:28:08.992 [debug] Recursive field result for left: 26
11:28:08.992 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.992 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for left: 0
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for right: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] Recursive field result for left: 9
11:28:08.992 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for left: 0
11:28:08.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.992 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.992 [debug] Recursive field result for right: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.992 [debug] do_fold called with non-variant data: 0
11:28:08.993 [debug] Recursive field result for right: 9
11:28:08.993 [debug] do_fold called with non-variant data: 9
11:28:08.994 [debug] do_fold called with non-variant data: 9
11:28:08.994 [debug] Recursive field result for right: 26
11:28:08.994 [debug] do_fold called with non-variant data: 26
11:28:08.994 [debug] do_fold called with non-variant data: 26
11:28:08.994 [debug] Recursive field result for right: 59
11:28:08.994 [debug] do_fold called with non-variant data: 59
11:28:08.994 [debug] do_fold called with non-variant data: 59
11:28:08.994 [debug] Recursive field result for right: 124
11:28:08.994 [debug] do_fold called with non-variant data: 124
11:28:08.994 [debug] do_fold called with non-variant data: 124
11:28:08.994 [debug] Recursive field result for left: 253
11:28:08.994 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.995 [debug] Recursive field result for left: 0
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.995 [debug] Recursive field result for right: 0
11:28:08.995 [debug] do_fold called with non-variant data: 0
11:28:08.995 [debug] do_fold called with non-variant data: 0
11:28:08.995 [debug] Recursive field result for left: 9
11:28:08.995 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.995 [debug] Recursive field result for left: 0
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.995 [debug] Recursive field result for right: 0
11:28:08.995 [debug] do_fold called with non-variant data: 0
11:28:08.995 [debug] do_fold called with non-variant data: 0
11:28:08.995 [debug] Recursive field result for right: 9
11:28:08.995 [debug] do_fold called with non-variant data: 9
11:28:08.995 [debug] do_fold called with non-variant data: 9
11:28:08.995 [debug] Recursive field result for left: 26
11:28:08.995 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.995 [debug] Recursive field result for left: 0
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.995 [debug] Recursive field result for right: 0
11:28:08.995 [debug] do_fold called with non-variant data: 0
11:28:08.995 [debug] do_fold called with non-variant data: 0
11:28:08.995 [debug] Recursive field result for left: 9
11:28:08.995 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.995 [debug] Recursive field result for left: 0
11:28:08.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.995 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for right: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] Recursive field result for right: 9
11:28:08.996 [debug] do_fold called with non-variant data: 9
11:28:08.996 [debug] do_fold called with non-variant data: 9
11:28:08.996 [debug] Recursive field result for right: 26
11:28:08.996 [debug] do_fold called with non-variant data: 26
11:28:08.996 [debug] do_fold called with non-variant data: 26
11:28:08.996 [debug] Recursive field result for left: 59
11:28:08.996 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.996 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.996 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for left: 0
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for right: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] Recursive field result for left: 9
11:28:08.996 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for left: 0
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for right: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] Recursive field result for right: 9
11:28:08.996 [debug] do_fold called with non-variant data: 9
11:28:08.996 [debug] do_fold called with non-variant data: 9
11:28:08.996 [debug] Recursive field result for left: 26
11:28:08.996 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.996 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for left: 0
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for right: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] Recursive field result for left: 9
11:28:08.996 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for left: 0
11:28:08.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.996 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.996 [debug] Recursive field result for right: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] do_fold called with non-variant data: 0
11:28:08.996 [debug] Recursive field result for right: 9
11:28:08.996 [debug] do_fold called with non-variant data: 9
11:28:08.996 [debug] do_fold called with non-variant data: 9
11:28:08.996 [debug] Recursive field result for right: 26
11:28:08.996 [debug] do_fold called with non-variant data: 26
11:28:08.996 [debug] do_fold called with non-variant data: 26
11:28:08.996 [debug] Recursive field result for right: 59
11:28:08.997 [debug] do_fold called with non-variant data: 59
11:28:08.997 [debug] do_fold called with non-variant data: 59
11:28:08.997 [debug] Recursive field result for left: 124
11:28:08.997 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:08.997 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:08.997 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for left: 0
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for right: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] Recursive field result for left: 9
11:28:08.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for left: 0
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for right: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] Recursive field result for right: 9
11:28:08.998 [debug] do_fold called with non-variant data: 9
11:28:08.998 [debug] do_fold called with non-variant data: 9
11:28:08.998 [debug] Recursive field result for left: 26
11:28:08.998 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for left: 0
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for right: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] Recursive field result for left: 9
11:28:08.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for left: 0
11:28:08.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.998 [debug] Recursive field result for right: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] do_fold called with non-variant data: 0
11:28:08.998 [debug] Recursive field result for right: 9
11:28:08.998 [debug] do_fold called with non-variant data: 9
11:28:08.998 [debug] do_fold called with non-variant data: 9
11:28:08.998 [debug] Recursive field result for right: 26
11:28:08.998 [debug] do_fold called with non-variant data: 26
11:28:08.998 [debug] do_fold called with non-variant data: 26
11:28:08.998 [debug] Recursive field result for left: 59
11:28:08.998 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:08.998 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.998 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.999 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for left: 0
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for right: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] Recursive field result for left: 9
11:28:08.999 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for left: 0
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for right: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] Recursive field result for right: 9
11:28:08.999 [debug] do_fold called with non-variant data: 9
11:28:08.999 [debug] do_fold called with non-variant data: 9
11:28:08.999 [debug] Recursive field result for left: 26
11:28:08.999 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:08.999 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for left: 0
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for right: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] Recursive field result for left: 9
11:28:08.999 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for left: 0
11:28:08.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:08.999 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:08.999 [debug] Recursive field result for right: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] do_fold called with non-variant data: 0
11:28:08.999 [debug] Recursive field result for right: 9
11:28:09.000 [debug] do_fold called with non-variant data: 9
11:28:09.000 [debug] do_fold called with non-variant data: 9
11:28:09.000 [debug] Recursive field result for right: 26
11:28:09.000 [debug] do_fold called with non-variant data: 26
11:28:09.000 [debug] do_fold called with non-variant data: 26
11:28:09.000 [debug] Recursive field result for right: 59
11:28:09.000 [debug] do_fold called with non-variant data: 59
11:28:09.000 [debug] do_fold called with non-variant data: 59
11:28:09.000 [debug] Recursive field result for right: 124
11:28:09.000 [debug] do_fold called with non-variant data: 124
11:28:09.000 [debug] do_fold called with non-variant data: 124
11:28:09.000 [debug] Recursive field result for right: 253
11:28:09.000 [debug] do_fold called with non-variant data: 253
11:28:09.000 [debug] do_fold called with non-variant data: 253
11:28:09.000 [debug] Recursive field result for right: 510
11:28:09.000 [debug] do_fold called with non-variant data: 510
11:28:09.000 [debug] do_fold called with non-variant data: 510
11:28:09.000 [debug] Recursive field result for right: 1023
11:28:09.000 [debug] do_fold called with non-variant data: 1023
11:28:09.000 [debug] do_fold called with non-variant data: 1023
11:28:09.000 [debug] Recursive field result for left: 2048
11:28:09.002 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
11:28:09.004 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
11:28:09.004 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:09.005 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:09.006 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.006 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.006 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.006 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.006 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.006 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.007 [debug] Recursive field result for left: 0
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.007 [debug] Recursive field result for right: 0
11:28:09.007 [debug] do_fold called with non-variant data: 0
11:28:09.007 [debug] do_fold called with non-variant data: 0
11:28:09.007 [debug] Recursive field result for left: 9
11:28:09.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.007 [debug] Recursive field result for left: 0
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.007 [debug] Recursive field result for right: 0
11:28:09.007 [debug] do_fold called with non-variant data: 0
11:28:09.007 [debug] do_fold called with non-variant data: 0
11:28:09.007 [debug] Recursive field result for right: 9
11:28:09.007 [debug] do_fold called with non-variant data: 9
11:28:09.007 [debug] do_fold called with non-variant data: 9
11:28:09.007 [debug] Recursive field result for left: 26
11:28:09.007 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.007 [debug] Recursive field result for left: 0
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.007 [debug] Recursive field result for right: 0
11:28:09.007 [debug] do_fold called with non-variant data: 0
11:28:09.007 [debug] do_fold called with non-variant data: 0
11:28:09.007 [debug] Recursive field result for left: 9
11:28:09.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.007 [debug] Recursive field result for left: 0
11:28:09.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.007 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for right: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] Recursive field result for right: 9
11:28:09.010 [debug] do_fold called with non-variant data: 9
11:28:09.010 [debug] do_fold called with non-variant data: 9
11:28:09.010 [debug] Recursive field result for right: 26
11:28:09.010 [debug] do_fold called with non-variant data: 26
11:28:09.010 [debug] do_fold called with non-variant data: 26
11:28:09.010 [debug] Recursive field result for left: 59
11:28:09.010 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.010 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for left: 0
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for right: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] Recursive field result for left: 9
11:28:09.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for left: 0
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for right: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] Recursive field result for right: 9
11:28:09.010 [debug] do_fold called with non-variant data: 9
11:28:09.010 [debug] do_fold called with non-variant data: 9
11:28:09.010 [debug] Recursive field result for left: 26
11:28:09.010 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for left: 0
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for right: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] Recursive field result for left: 9
11:28:09.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for left: 0
11:28:09.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.010 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.010 [debug] Recursive field result for right: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] do_fold called with non-variant data: 0
11:28:09.010 [debug] Recursive field result for right: 9
11:28:09.012 [debug] do_fold called with non-variant data: 9
11:28:09.012 [debug] do_fold called with non-variant data: 9
11:28:09.012 [debug] Recursive field result for right: 26
11:28:09.012 [debug] do_fold called with non-variant data: 26
11:28:09.012 [debug] do_fold called with non-variant data: 26
11:28:09.012 [debug] Recursive field result for right: 59
11:28:09.012 [debug] do_fold called with non-variant data: 59
11:28:09.012 [debug] do_fold called with non-variant data: 59
11:28:09.012 [debug] Recursive field result for left: 124
11:28:09.012 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.012 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.012 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.012 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.012 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.012 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for left: 0
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for right: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] Recursive field result for left: 9
11:28:09.013 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for left: 0
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for right: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] Recursive field result for right: 9
11:28:09.013 [debug] do_fold called with non-variant data: 9
11:28:09.013 [debug] do_fold called with non-variant data: 9
11:28:09.013 [debug] Recursive field result for left: 26
11:28:09.013 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for left: 0
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for right: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] Recursive field result for left: 9
11:28:09.013 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for left: 0
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for right: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] Recursive field result for right: 9
11:28:09.013 [debug] do_fold called with non-variant data: 9
11:28:09.013 [debug] do_fold called with non-variant data: 9
11:28:09.013 [debug] Recursive field result for right: 26
11:28:09.013 [debug] do_fold called with non-variant data: 26
11:28:09.013 [debug] do_fold called with non-variant data: 26
11:28:09.013 [debug] Recursive field result for left: 59
11:28:09.013 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for left: 0
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for right: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] Recursive field result for left: 9
11:28:09.013 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for left: 0
11:28:09.013 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.013 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.013 [debug] Recursive field result for right: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] do_fold called with non-variant data: 0
11:28:09.013 [debug] Recursive field result for right: 9
11:28:09.013 [debug] do_fold called with non-variant data: 9
11:28:09.015 [debug] do_fold called with non-variant data: 9
11:28:09.015 [debug] Recursive field result for left: 26
11:28:09.015 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.015 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.015 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.015 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.015 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.015 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.015 [debug] Recursive field result for left: 0
11:28:09.015 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.015 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.015 [debug] Recursive field result for right: 0
11:28:09.015 [debug] do_fold called with non-variant data: 0
11:28:09.015 [debug] do_fold called with non-variant data: 0
11:28:09.015 [debug] Recursive field result for left: 9
11:28:09.015 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.015 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.015 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.015 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.015 [debug] Recursive field result for left: 0
11:28:09.015 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.015 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.015 [debug] Recursive field result for right: 0
11:28:09.015 [debug] do_fold called with non-variant data: 0
11:28:09.015 [debug] do_fold called with non-variant data: 0
11:28:09.015 [debug] Recursive field result for right: 9
11:28:09.015 [debug] do_fold called with non-variant data: 9
11:28:09.015 [debug] do_fold called with non-variant data: 9
11:28:09.015 [debug] Recursive field result for right: 26
11:28:09.015 [debug] do_fold called with non-variant data: 26
11:28:09.015 [debug] do_fold called with non-variant data: 26
11:28:09.015 [debug] Recursive field result for right: 59
11:28:09.015 [debug] do_fold called with non-variant data: 59
11:28:09.015 [debug] do_fold called with non-variant data: 59
11:28:09.015 [debug] Recursive field result for right: 124
11:28:09.015 [debug] do_fold called with non-variant data: 124
11:28:09.015 [debug] do_fold called with non-variant data: 124
11:28:09.015 [debug] Recursive field result for left: 253
11:28:09.015 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for left: 0
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for right: 0
11:28:09.016 [debug] do_fold called with non-variant data: 0
11:28:09.016 [debug] do_fold called with non-variant data: 0
11:28:09.016 [debug] Recursive field result for left: 9
11:28:09.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for left: 0
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for right: 0
11:28:09.016 [debug] do_fold called with non-variant data: 0
11:28:09.016 [debug] do_fold called with non-variant data: 0
11:28:09.016 [debug] Recursive field result for right: 9
11:28:09.016 [debug] do_fold called with non-variant data: 9
11:28:09.016 [debug] do_fold called with non-variant data: 9
11:28:09.016 [debug] Recursive field result for left: 26
11:28:09.016 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for left: 0
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for right: 0
11:28:09.016 [debug] do_fold called with non-variant data: 0
11:28:09.016 [debug] do_fold called with non-variant data: 0
11:28:09.016 [debug] Recursive field result for left: 9
11:28:09.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for left: 0
11:28:09.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.016 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.016 [debug] Recursive field result for right: 0
11:28:09.016 [debug] do_fold called with non-variant data: 0
11:28:09.018 [debug] do_fold called with non-variant data: 0
11:28:09.018 [debug] Recursive field result for right: 9
11:28:09.018 [debug] do_fold called with non-variant data: 9
11:28:09.018 [debug] do_fold called with non-variant data: 9
11:28:09.018 [debug] Recursive field result for right: 26
11:28:09.018 [debug] do_fold called with non-variant data: 26
11:28:09.018 [debug] do_fold called with non-variant data: 26
11:28:09.018 [debug] Recursive field result for left: 59
11:28:09.018 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.018 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.018 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.018 [debug] Recursive field result for left: 0
11:28:09.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.018 [debug] Recursive field result for right: 0
11:28:09.018 [debug] do_fold called with non-variant data: 0
11:28:09.018 [debug] do_fold called with non-variant data: 0
11:28:09.018 [debug] Recursive field result for left: 9
11:28:09.018 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.018 [debug] Recursive field result for left: 0
11:28:09.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.018 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.018 [debug] Recursive field result for right: 0
11:28:09.018 [debug] do_fold called with non-variant data: 0
11:28:09.018 [debug] do_fold called with non-variant data: 0
11:28:09.018 [debug] Recursive field result for right: 9
11:28:09.018 [debug] do_fold called with non-variant data: 9
11:28:09.018 [debug] do_fold called with non-variant data: 9
11:28:09.018 [debug] Recursive field result for left: 26
11:28:09.018 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for left: 0
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for right: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] Recursive field result for left: 9
11:28:09.019 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for left: 0
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for right: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] Recursive field result for right: 9
11:28:09.019 [debug] do_fold called with non-variant data: 9
11:28:09.019 [debug] do_fold called with non-variant data: 9
11:28:09.019 [debug] Recursive field result for right: 26
11:28:09.019 [debug] do_fold called with non-variant data: 26
11:28:09.019 [debug] do_fold called with non-variant data: 26
11:28:09.019 [debug] Recursive field result for right: 59
11:28:09.019 [debug] do_fold called with non-variant data: 59
11:28:09.019 [debug] do_fold called with non-variant data: 59
11:28:09.019 [debug] Recursive field result for left: 124
11:28:09.019 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for left: 0
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for right: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] Recursive field result for left: 9
11:28:09.019 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for left: 0
11:28:09.019 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.019 [debug] Recursive field result for right: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] do_fold called with non-variant data: 0
11:28:09.019 [debug] Recursive field result for right: 9
11:28:09.019 [debug] do_fold called with non-variant data: 9
11:28:09.019 [debug] do_fold called with non-variant data: 9
11:28:09.019 [debug] Recursive field result for left: 26
11:28:09.019 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.019 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.019 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.020 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.020 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.020 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.020 [debug] Recursive field result for left: 0
11:28:09.020 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.020 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.020 [debug] Recursive field result for right: 0
11:28:09.020 [debug] do_fold called with non-variant data: 0
11:28:09.020 [debug] do_fold called with non-variant data: 0
11:28:09.020 [debug] Recursive field result for left: 9
11:28:09.020 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.020 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.020 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.020 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.020 [debug] Recursive field result for left: 0
11:28:09.020 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.020 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.020 [debug] Recursive field result for right: 0
11:28:09.020 [debug] do_fold called with non-variant data: 0
11:28:09.020 [debug] do_fold called with non-variant data: 0
11:28:09.020 [debug] Recursive field result for right: 9
11:28:09.020 [debug] do_fold called with non-variant data: 9
11:28:09.020 [debug] do_fold called with non-variant data: 9
11:28:09.020 [debug] Recursive field result for right: 26
11:28:09.020 [debug] do_fold called with non-variant data: 26
11:28:09.020 [debug] do_fold called with non-variant data: 26
11:28:09.021 [debug] Recursive field result for left: 59
11:28:09.021 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.021 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for left: 0
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for right: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] Recursive field result for left: 9
11:28:09.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for left: 0
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for right: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] Recursive field result for right: 9
11:28:09.021 [debug] do_fold called with non-variant data: 9
11:28:09.021 [debug] do_fold called with non-variant data: 9
11:28:09.021 [debug] Recursive field result for left: 26
11:28:09.021 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for left: 0
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for right: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] Recursive field result for left: 9
11:28:09.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for left: 0
11:28:09.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.021 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.021 [debug] Recursive field result for right: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] do_fold called with non-variant data: 0
11:28:09.021 [debug] Recursive field result for right: 9
11:28:09.021 [debug] do_fold called with non-variant data: 9
11:28:09.021 [debug] do_fold called with non-variant data: 9
11:28:09.021 [debug] Recursive field result for right: 26
11:28:09.021 [debug] do_fold called with non-variant data: 26
11:28:09.021 [debug] do_fold called with non-variant data: 26
11:28:09.021 [debug] Recursive field result for right: 59
11:28:09.021 [debug] do_fold called with non-variant data: 59
11:28:09.021 [debug] do_fold called with non-variant data: 59
11:28:09.022 [debug] Recursive field result for right: 124
11:28:09.022 [debug] do_fold called with non-variant data: 124
11:28:09.022 [debug] do_fold called with non-variant data: 124
11:28:09.022 [debug] Recursive field result for right: 253
11:28:09.022 [debug] do_fold called with non-variant data: 253
11:28:09.022 [debug] do_fold called with non-variant data: 253
11:28:09.022 [debug] Recursive field result for left: 510
11:28:09.022 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.022 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.023 [debug] Recursive field result for left: 0
11:28:09.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.023 [debug] Recursive field result for right: 0
11:28:09.023 [debug] do_fold called with non-variant data: 0
11:28:09.023 [debug] do_fold called with non-variant data: 0
11:28:09.023 [debug] Recursive field result for left: 9
11:28:09.023 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.023 [debug] Recursive field result for left: 0
11:28:09.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.023 [debug] Recursive field result for right: 0
11:28:09.023 [debug] do_fold called with non-variant data: 0
11:28:09.023 [debug] do_fold called with non-variant data: 0
11:28:09.023 [debug] Recursive field result for right: 9
11:28:09.023 [debug] do_fold called with non-variant data: 9
11:28:09.023 [debug] do_fold called with non-variant data: 9
11:28:09.023 [debug] Recursive field result for left: 26
11:28:09.023 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.023 [debug] Recursive field result for left: 0
11:28:09.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.023 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.023 [debug] Recursive field result for right: 0
11:28:09.023 [debug] do_fold called with non-variant data: 0
11:28:09.023 [debug] do_fold called with non-variant data: 0
11:28:09.023 [debug] Recursive field result for left: 9
11:28:09.023 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.024 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.024 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.024 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.024 [debug] Recursive field result for left: 0
11:28:09.024 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.024 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.024 [debug] Recursive field result for right: 0
11:28:09.024 [debug] do_fold called with non-variant data: 0
11:28:09.024 [debug] do_fold called with non-variant data: 0
11:28:09.024 [debug] Recursive field result for right: 9
11:28:09.024 [debug] do_fold called with non-variant data: 9
11:28:09.024 [debug] do_fold called with non-variant data: 9
11:28:09.024 [debug] Recursive field result for right: 26
11:28:09.024 [debug] do_fold called with non-variant data: 26
11:28:09.024 [debug] do_fold called with non-variant data: 26
11:28:09.024 [debug] Recursive field result for left: 59
11:28:09.024 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.024 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.025 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for left: 0
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for right: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] Recursive field result for left: 9
11:28:09.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for left: 0
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for right: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] Recursive field result for right: 9
11:28:09.025 [debug] do_fold called with non-variant data: 9
11:28:09.025 [debug] do_fold called with non-variant data: 9
11:28:09.025 [debug] Recursive field result for left: 26
11:28:09.025 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for left: 0
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for right: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] Recursive field result for left: 9
11:28:09.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for left: 0
11:28:09.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.025 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.025 [debug] Recursive field result for right: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] do_fold called with non-variant data: 0
11:28:09.025 [debug] Recursive field result for right: 9
11:28:09.025 [debug] do_fold called with non-variant data: 9
11:28:09.028 [debug] do_fold called with non-variant data: 9
11:28:09.028 [debug] Recursive field result for right: 26
11:28:09.028 [debug] do_fold called with non-variant data: 26
11:28:09.028 [debug] do_fold called with non-variant data: 26
11:28:09.028 [debug] Recursive field result for right: 59
11:28:09.028 [debug] do_fold called with non-variant data: 59
11:28:09.028 [debug] do_fold called with non-variant data: 59
11:28:09.028 [debug] Recursive field result for left: 124
11:28:09.028 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.028 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.028 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.028 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.029 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.029 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for left: 0
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for right: 0
11:28:09.029 [debug] do_fold called with non-variant data: 0
11:28:09.029 [debug] do_fold called with non-variant data: 0
11:28:09.029 [debug] Recursive field result for left: 9
11:28:09.029 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for left: 0
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for right: 0
11:28:09.029 [debug] do_fold called with non-variant data: 0
11:28:09.029 [debug] do_fold called with non-variant data: 0
11:28:09.029 [debug] Recursive field result for right: 9
11:28:09.029 [debug] do_fold called with non-variant data: 9
11:28:09.029 [debug] do_fold called with non-variant data: 9
11:28:09.029 [debug] Recursive field result for left: 26
11:28:09.029 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.029 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for left: 0
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for right: 0
11:28:09.029 [debug] do_fold called with non-variant data: 0
11:28:09.029 [debug] do_fold called with non-variant data: 0
11:28:09.029 [debug] Recursive field result for left: 9
11:28:09.029 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for left: 0
11:28:09.029 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.029 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.029 [debug] Recursive field result for right: 0
11:28:09.029 [debug] do_fold called with non-variant data: 0
11:28:09.031 [debug] do_fold called with non-variant data: 0
11:28:09.031 [debug] Recursive field result for right: 9
11:28:09.031 [debug] do_fold called with non-variant data: 9
11:28:09.031 [debug] do_fold called with non-variant data: 9
11:28:09.031 [debug] Recursive field result for right: 26
11:28:09.031 [debug] do_fold called with non-variant data: 26
11:28:09.031 [debug] do_fold called with non-variant data: 26
11:28:09.031 [debug] Recursive field result for left: 59
11:28:09.031 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.031 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.031 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.031 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.031 [debug] Recursive field result for left: 0
11:28:09.031 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.031 [debug] Recursive field result for right: 0
11:28:09.031 [debug] do_fold called with non-variant data: 0
11:28:09.031 [debug] do_fold called with non-variant data: 0
11:28:09.031 [debug] Recursive field result for left: 9
11:28:09.031 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.031 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.031 [debug] Recursive field result for left: 0
11:28:09.031 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.031 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.031 [debug] Recursive field result for right: 0
11:28:09.031 [debug] do_fold called with non-variant data: 0
11:28:09.031 [debug] do_fold called with non-variant data: 0
11:28:09.031 [debug] Recursive field result for right: 9
11:28:09.031 [debug] do_fold called with non-variant data: 9
11:28:09.032 [debug] do_fold called with non-variant data: 9
11:28:09.032 [debug] Recursive field result for left: 26
11:28:09.032 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for left: 0
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for right: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] Recursive field result for left: 9
11:28:09.032 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for left: 0
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for right: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] Recursive field result for right: 9
11:28:09.032 [debug] do_fold called with non-variant data: 9
11:28:09.032 [debug] do_fold called with non-variant data: 9
11:28:09.032 [debug] Recursive field result for right: 26
11:28:09.032 [debug] do_fold called with non-variant data: 26
11:28:09.032 [debug] do_fold called with non-variant data: 26
11:28:09.032 [debug] Recursive field result for right: 59
11:28:09.032 [debug] do_fold called with non-variant data: 59
11:28:09.032 [debug] do_fold called with non-variant data: 59
11:28:09.032 [debug] Recursive field result for right: 124
11:28:09.032 [debug] do_fold called with non-variant data: 124
11:28:09.032 [debug] do_fold called with non-variant data: 124
11:28:09.032 [debug] Recursive field result for left: 253
11:28:09.032 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for left: 0
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for right: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] Recursive field result for left: 9
11:28:09.032 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for left: 0
11:28:09.032 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.032 [debug] Recursive field result for right: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] do_fold called with non-variant data: 0
11:28:09.032 [debug] Recursive field result for right: 9
11:28:09.032 [debug] do_fold called with non-variant data: 9
11:28:09.032 [debug] do_fold called with non-variant data: 9
11:28:09.032 [debug] Recursive field result for left: 26
11:28:09.032 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.032 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.032 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.033 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.033 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.033 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.033 [debug] Recursive field result for left: 0
11:28:09.033 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.033 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.033 [debug] Recursive field result for right: 0
11:28:09.033 [debug] do_fold called with non-variant data: 0
11:28:09.033 [debug] do_fold called with non-variant data: 0
11:28:09.033 [debug] Recursive field result for left: 9
11:28:09.033 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.033 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.033 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.033 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.033 [debug] Recursive field result for left: 0
11:28:09.033 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.033 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.033 [debug] Recursive field result for right: 0
11:28:09.033 [debug] do_fold called with non-variant data: 0
11:28:09.034 [debug] do_fold called with non-variant data: 0
11:28:09.034 [debug] Recursive field result for right: 9
11:28:09.034 [debug] do_fold called with non-variant data: 9
11:28:09.034 [debug] do_fold called with non-variant data: 9
11:28:09.034 [debug] Recursive field result for right: 26
11:28:09.034 [debug] do_fold called with non-variant data: 26
11:28:09.034 [debug] do_fold called with non-variant data: 26
11:28:09.034 [debug] Recursive field result for left: 59
11:28:09.034 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.034 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.034 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for left: 0
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for right: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] Recursive field result for left: 9
11:28:09.035 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for left: 0
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for right: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] Recursive field result for right: 9
11:28:09.035 [debug] do_fold called with non-variant data: 9
11:28:09.035 [debug] do_fold called with non-variant data: 9
11:28:09.035 [debug] Recursive field result for left: 26
11:28:09.035 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for left: 0
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for right: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] Recursive field result for left: 9
11:28:09.035 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for left: 0
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for right: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] Recursive field result for right: 9
11:28:09.035 [debug] do_fold called with non-variant data: 9
11:28:09.035 [debug] do_fold called with non-variant data: 9
11:28:09.035 [debug] Recursive field result for right: 26
11:28:09.035 [debug] do_fold called with non-variant data: 26
11:28:09.035 [debug] do_fold called with non-variant data: 26
11:28:09.035 [debug] Recursive field result for right: 59
11:28:09.035 [debug] do_fold called with non-variant data: 59
11:28:09.035 [debug] do_fold called with non-variant data: 59
11:28:09.035 [debug] Recursive field result for left: 124
11:28:09.035 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for left: 0
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for right: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] Recursive field result for left: 9
11:28:09.035 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for left: 0
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.035 [debug] Recursive field result for right: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] do_fold called with non-variant data: 0
11:28:09.035 [debug] Recursive field result for right: 9
11:28:09.035 [debug] do_fold called with non-variant data: 9
11:28:09.035 [debug] do_fold called with non-variant data: 9
11:28:09.035 [debug] Recursive field result for left: 26
11:28:09.035 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.035 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.035 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for left: 0
11:28:09.036 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for right: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] Recursive field result for left: 9
11:28:09.036 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.036 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for left: 0
11:28:09.036 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for right: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] Recursive field result for right: 9
11:28:09.036 [debug] do_fold called with non-variant data: 9
11:28:09.036 [debug] do_fold called with non-variant data: 9
11:28:09.036 [debug] Recursive field result for right: 26
11:28:09.036 [debug] do_fold called with non-variant data: 26
11:28:09.036 [debug] do_fold called with non-variant data: 26
11:28:09.036 [debug] Recursive field result for left: 59
11:28:09.036 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.036 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.036 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.036 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for left: 0
11:28:09.036 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for right: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] Recursive field result for left: 9
11:28:09.036 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.036 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for left: 0
11:28:09.036 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.036 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.036 [debug] Recursive field result for right: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] do_fold called with non-variant data: 0
11:28:09.036 [debug] Recursive field result for right: 9
11:28:09.036 [debug] do_fold called with non-variant data: 9
11:28:09.036 [debug] do_fold called with non-variant data: 9
11:28:09.036 [debug] Recursive field result for left: 26
11:28:09.036 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.037 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.037 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.037 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.037 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.037 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.037 [debug] Recursive field result for left: 0
11:28:09.037 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.037 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.037 [debug] Recursive field result for right: 0
11:28:09.037 [debug] do_fold called with non-variant data: 0
11:28:09.037 [debug] do_fold called with non-variant data: 0
11:28:09.037 [debug] Recursive field result for left: 9
11:28:09.037 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.037 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.037 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.037 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.037 [debug] Recursive field result for left: 0
11:28:09.037 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.037 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.037 [debug] Recursive field result for right: 0
11:28:09.037 [debug] do_fold called with non-variant data: 0
11:28:09.037 [debug] do_fold called with non-variant data: 0
11:28:09.037 [debug] Recursive field result for right: 9
11:28:09.037 [debug] do_fold called with non-variant data: 9
11:28:09.037 [debug] do_fold called with non-variant data: 9
11:28:09.037 [debug] Recursive field result for right: 26
11:28:09.037 [debug] do_fold called with non-variant data: 26
11:28:09.037 [debug] do_fold called with non-variant data: 26
11:28:09.037 [debug] Recursive field result for right: 59
11:28:09.037 [debug] do_fold called with non-variant data: 59
11:28:09.037 [debug] do_fold called with non-variant data: 59
11:28:09.037 [debug] Recursive field result for right: 124
11:28:09.037 [debug] do_fold called with non-variant data: 124
11:28:09.037 [debug] do_fold called with non-variant data: 124
11:28:09.037 [debug] Recursive field result for right: 253
11:28:09.037 [debug] do_fold called with non-variant data: 253
11:28:09.037 [debug] do_fold called with non-variant data: 253
11:28:09.037 [debug] Recursive field result for right: 510
11:28:09.037 [debug] do_fold called with non-variant data: 510
11:28:09.037 [debug] do_fold called with non-variant data: 510
11:28:09.037 [debug] Recursive field result for left: 1023
11:28:09.038 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:09.039 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:09.039 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.040 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.040 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.040 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.040 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.040 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.040 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.040 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.040 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.040 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.040 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.040 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.040 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for left: 0
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for right: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] Recursive field result for left: 9
11:28:09.041 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for left: 0
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for right: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] Recursive field result for right: 9
11:28:09.041 [debug] do_fold called with non-variant data: 9
11:28:09.041 [debug] do_fold called with non-variant data: 9
11:28:09.041 [debug] Recursive field result for left: 26
11:28:09.041 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for left: 0
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for right: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] Recursive field result for left: 9
11:28:09.041 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for left: 0
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for right: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] Recursive field result for right: 9
11:28:09.041 [debug] do_fold called with non-variant data: 9
11:28:09.041 [debug] do_fold called with non-variant data: 9
11:28:09.041 [debug] Recursive field result for right: 26
11:28:09.041 [debug] do_fold called with non-variant data: 26
11:28:09.041 [debug] do_fold called with non-variant data: 26
11:28:09.041 [debug] Recursive field result for left: 59
11:28:09.041 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for left: 0
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for right: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] Recursive field result for left: 9
11:28:09.041 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for left: 0
11:28:09.041 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.041 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.041 [debug] Recursive field result for right: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] do_fold called with non-variant data: 0
11:28:09.041 [debug] Recursive field result for right: 9
11:28:09.041 [debug] do_fold called with non-variant data: 9
11:28:09.041 [debug] do_fold called with non-variant data: 9
11:28:09.041 [debug] Recursive field result for left: 26
11:28:09.042 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.042 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.042 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.042 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.042 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.042 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.042 [debug] Recursive field result for left: 0
11:28:09.044 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.044 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.044 [debug] Recursive field result for right: 0
11:28:09.044 [debug] do_fold called with non-variant data: 0
11:28:09.044 [debug] do_fold called with non-variant data: 0
11:28:09.044 [debug] Recursive field result for left: 9
11:28:09.044 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.044 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.044 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.044 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.044 [debug] Recursive field result for left: 0
11:28:09.044 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.044 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.044 [debug] Recursive field result for right: 0
11:28:09.044 [debug] do_fold called with non-variant data: 0
11:28:09.044 [debug] do_fold called with non-variant data: 0
11:28:09.044 [debug] Recursive field result for right: 9
11:28:09.044 [debug] do_fold called with non-variant data: 9
11:28:09.044 [debug] do_fold called with non-variant data: 9
11:28:09.044 [debug] Recursive field result for right: 26
11:28:09.044 [debug] do_fold called with non-variant data: 26
11:28:09.044 [debug] do_fold called with non-variant data: 26
11:28:09.044 [debug] Recursive field result for right: 59
11:28:09.044 [debug] do_fold called with non-variant data: 59
11:28:09.044 [debug] do_fold called with non-variant data: 59
11:28:09.044 [debug] Recursive field result for left: 124
11:28:09.045 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.045 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.045 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.045 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.045 [debug] Recursive field result for left: 0
11:28:09.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.045 [debug] Recursive field result for right: 0
11:28:09.045 [debug] do_fold called with non-variant data: 0
11:28:09.045 [debug] do_fold called with non-variant data: 0
11:28:09.045 [debug] Recursive field result for left: 9
11:28:09.045 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.045 [debug] Recursive field result for left: 0
11:28:09.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.045 [debug] Recursive field result for right: 0
11:28:09.045 [debug] do_fold called with non-variant data: 0
11:28:09.045 [debug] do_fold called with non-variant data: 0
11:28:09.045 [debug] Recursive field result for right: 9
11:28:09.045 [debug] do_fold called with non-variant data: 9
11:28:09.045 [debug] do_fold called with non-variant data: 9
11:28:09.045 [debug] Recursive field result for left: 26
11:28:09.045 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.045 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.045 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for left: 0
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for right: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] Recursive field result for left: 9
11:28:09.047 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for left: 0
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for right: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] Recursive field result for right: 9
11:28:09.047 [debug] do_fold called with non-variant data: 9
11:28:09.047 [debug] do_fold called with non-variant data: 9
11:28:09.047 [debug] Recursive field result for right: 26
11:28:09.047 [debug] do_fold called with non-variant data: 26
11:28:09.047 [debug] do_fold called with non-variant data: 26
11:28:09.047 [debug] Recursive field result for left: 59
11:28:09.047 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.047 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.047 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for left: 0
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for right: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] Recursive field result for left: 9
11:28:09.047 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for left: 0
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for right: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.047 [debug] Recursive field result for right: 9
11:28:09.047 [debug] do_fold called with non-variant data: 9
11:28:09.047 [debug] do_fold called with non-variant data: 9
11:28:09.047 [debug] Recursive field result for left: 26
11:28:09.047 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.047 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for left: 0
11:28:09.047 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.047 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.047 [debug] Recursive field result for right: 0
11:28:09.047 [debug] do_fold called with non-variant data: 0
11:28:09.048 [debug] do_fold called with non-variant data: 0
11:28:09.048 [debug] Recursive field result for left: 9
11:28:09.048 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.048 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.048 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.048 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.048 [debug] Recursive field result for left: 0
11:28:09.048 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.048 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.048 [debug] Recursive field result for right: 0
11:28:09.048 [debug] do_fold called with non-variant data: 0
11:28:09.048 [debug] do_fold called with non-variant data: 0
11:28:09.048 [debug] Recursive field result for right: 9
11:28:09.048 [debug] do_fold called with non-variant data: 9
11:28:09.048 [debug] do_fold called with non-variant data: 9
11:28:09.048 [debug] Recursive field result for right: 26
11:28:09.048 [debug] do_fold called with non-variant data: 26
11:28:09.048 [debug] do_fold called with non-variant data: 26
11:28:09.048 [debug] Recursive field result for right: 59
11:28:09.048 [debug] do_fold called with non-variant data: 59
11:28:09.048 [debug] do_fold called with non-variant data: 59
11:28:09.048 [debug] Recursive field result for right: 124
11:28:09.048 [debug] do_fold called with non-variant data: 124
11:28:09.048 [debug] do_fold called with non-variant data: 124
11:28:09.049 [debug] Recursive field result for left: 253
11:28:09.049 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.049 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.049 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.049 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.049 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.049 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.049 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.049 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.049 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.049 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.049 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.049 [debug] Recursive field result for left: 0
11:28:09.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.049 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.049 [debug] Recursive field result for right: 0
11:28:09.049 [debug] do_fold called with non-variant data: 0
11:28:09.049 [debug] do_fold called with non-variant data: 0
11:28:09.049 [debug] Recursive field result for left: 9
11:28:09.049 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.050 [debug] Recursive field result for left: 0
11:28:09.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.050 [debug] Recursive field result for right: 0
11:28:09.050 [debug] do_fold called with non-variant data: 0
11:28:09.050 [debug] do_fold called with non-variant data: 0
11:28:09.050 [debug] Recursive field result for right: 9
11:28:09.050 [debug] do_fold called with non-variant data: 9
11:28:09.050 [debug] do_fold called with non-variant data: 9
11:28:09.050 [debug] Recursive field result for left: 26
11:28:09.050 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.050 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.050 [debug] Recursive field result for left: 0
11:28:09.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.050 [debug] Recursive field result for right: 0
11:28:09.050 [debug] do_fold called with non-variant data: 0
11:28:09.050 [debug] do_fold called with non-variant data: 0
11:28:09.050 [debug] Recursive field result for left: 9
11:28:09.050 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.050 [debug] Recursive field result for left: 0
11:28:09.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.050 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.050 [debug] Recursive field result for right: 0
11:28:09.051 [debug] do_fold called with non-variant data: 0
11:28:09.051 [debug] do_fold called with non-variant data: 0
11:28:09.051 [debug] Recursive field result for right: 9
11:28:09.051 [debug] do_fold called with non-variant data: 9
11:28:09.051 [debug] do_fold called with non-variant data: 9
11:28:09.051 [debug] Recursive field result for right: 26
11:28:09.051 [debug] do_fold called with non-variant data: 26
11:28:09.051 [debug] do_fold called with non-variant data: 26
11:28:09.051 [debug] Recursive field result for left: 59
11:28:09.051 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.051 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.051 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.052 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for left: 0
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for right: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] Recursive field result for left: 9
11:28:09.052 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for left: 0
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for right: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] Recursive field result for right: 9
11:28:09.052 [debug] do_fold called with non-variant data: 9
11:28:09.052 [debug] do_fold called with non-variant data: 9
11:28:09.052 [debug] Recursive field result for left: 26
11:28:09.052 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.052 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for left: 0
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for right: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] Recursive field result for left: 9
11:28:09.052 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for left: 0
11:28:09.052 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.052 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.052 [debug] Recursive field result for right: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] do_fold called with non-variant data: 0
11:28:09.052 [debug] Recursive field result for right: 9
11:28:09.052 [debug] do_fold called with non-variant data: 9
11:28:09.053 [debug] do_fold called with non-variant data: 9
11:28:09.053 [debug] Recursive field result for right: 26
11:28:09.053 [debug] do_fold called with non-variant data: 26
11:28:09.053 [debug] do_fold called with non-variant data: 26
11:28:09.053 [debug] Recursive field result for right: 59
11:28:09.053 [debug] do_fold called with non-variant data: 59
11:28:09.053 [debug] do_fold called with non-variant data: 59
11:28:09.053 [debug] Recursive field result for left: 124
11:28:09.053 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.053 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.053 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.053 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.053 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.053 [debug] Recursive field result for left: 0
11:28:09.053 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.053 [debug] Recursive field result for right: 0
11:28:09.053 [debug] do_fold called with non-variant data: 0
11:28:09.053 [debug] do_fold called with non-variant data: 0
11:28:09.053 [debug] Recursive field result for left: 9
11:28:09.053 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.053 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.053 [debug] Recursive field result for left: 0
11:28:09.053 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.053 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.053 [debug] Recursive field result for right: 0
11:28:09.053 [debug] do_fold called with non-variant data: 0
11:28:09.053 [debug] do_fold called with non-variant data: 0
11:28:09.053 [debug] Recursive field result for right: 9
11:28:09.053 [debug] do_fold called with non-variant data: 9
11:28:09.053 [debug] do_fold called with non-variant data: 9
11:28:09.053 [debug] Recursive field result for left: 26
11:28:09.054 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.054 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for left: 0
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for right: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] Recursive field result for left: 9
11:28:09.054 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for left: 0
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for right: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] Recursive field result for right: 9
11:28:09.054 [debug] do_fold called with non-variant data: 9
11:28:09.054 [debug] do_fold called with non-variant data: 9
11:28:09.054 [debug] Recursive field result for right: 26
11:28:09.054 [debug] do_fold called with non-variant data: 26
11:28:09.054 [debug] do_fold called with non-variant data: 26
11:28:09.054 [debug] Recursive field result for left: 59
11:28:09.054 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.054 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.054 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for left: 0
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for right: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] Recursive field result for left: 9
11:28:09.054 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for left: 0
11:28:09.054 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.054 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.054 [debug] Recursive field result for right: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] do_fold called with non-variant data: 0
11:28:09.054 [debug] Recursive field result for right: 9
11:28:09.054 [debug] do_fold called with non-variant data: 9
11:28:09.056 [debug] do_fold called with non-variant data: 9
11:28:09.056 [debug] Recursive field result for left: 26
11:28:09.056 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.056 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.056 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.056 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.056 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.056 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.056 [debug] Recursive field result for left: 0
11:28:09.056 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.056 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.056 [debug] Recursive field result for right: 0
11:28:09.056 [debug] do_fold called with non-variant data: 0
11:28:09.056 [debug] do_fold called with non-variant data: 0
11:28:09.056 [debug] Recursive field result for left: 9
11:28:09.056 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.056 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.056 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.056 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.056 [debug] Recursive field result for left: 0
11:28:09.056 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.056 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.056 [debug] Recursive field result for right: 0
11:28:09.056 [debug] do_fold called with non-variant data: 0
11:28:09.056 [debug] do_fold called with non-variant data: 0
11:28:09.056 [debug] Recursive field result for right: 9
11:28:09.056 [debug] do_fold called with non-variant data: 9
11:28:09.056 [debug] do_fold called with non-variant data: 9
11:28:09.056 [debug] Recursive field result for right: 26
11:28:09.056 [debug] do_fold called with non-variant data: 26
11:28:09.056 [debug] do_fold called with non-variant data: 26
11:28:09.056 [debug] Recursive field result for right: 59
11:28:09.056 [debug] do_fold called with non-variant data: 59
11:28:09.056 [debug] do_fold called with non-variant data: 59
11:28:09.056 [debug] Recursive field result for right: 124
11:28:09.056 [debug] do_fold called with non-variant data: 124
11:28:09.056 [debug] do_fold called with non-variant data: 124
11:28:09.056 [debug] Recursive field result for right: 253
11:28:09.056 [debug] do_fold called with non-variant data: 253
11:28:09.056 [debug] do_fold called with non-variant data: 253
11:28:09.056 [debug] Recursive field result for left: 510
11:28:09.056 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.057 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.057 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.057 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.057 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.057 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.057 [debug] Recursive field result for left: 0
11:28:09.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.057 [debug] Recursive field result for right: 0
11:28:09.057 [debug] do_fold called with non-variant data: 0
11:28:09.057 [debug] do_fold called with non-variant data: 0
11:28:09.057 [debug] Recursive field result for left: 9
11:28:09.057 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.057 [debug] Recursive field result for left: 0
11:28:09.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.057 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.057 [debug] Recursive field result for right: 0
11:28:09.057 [debug] do_fold called with non-variant data: 0
11:28:09.057 [debug] do_fold called with non-variant data: 0
11:28:09.057 [debug] Recursive field result for right: 9
11:28:09.057 [debug] do_fold called with non-variant data: 9
11:28:09.058 [debug] do_fold called with non-variant data: 9
11:28:09.058 [debug] Recursive field result for left: 26
11:28:09.058 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.058 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.058 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.058 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.058 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.058 [debug] Recursive field result for left: 0
11:28:09.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.058 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.058 [debug] Recursive field result for right: 0
11:28:09.058 [debug] do_fold called with non-variant data: 0
11:28:09.058 [debug] do_fold called with non-variant data: 0
11:28:09.058 [debug] Recursive field result for left: 9
11:28:09.058 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.058 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.058 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.058 [debug] Recursive field result for left: 0
11:28:09.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.059 [debug] Recursive field result for right: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] Recursive field result for right: 9
11:28:09.059 [debug] do_fold called with non-variant data: 9
11:28:09.059 [debug] do_fold called with non-variant data: 9
11:28:09.059 [debug] Recursive field result for right: 26
11:28:09.059 [debug] do_fold called with non-variant data: 26
11:28:09.059 [debug] do_fold called with non-variant data: 26
11:28:09.059 [debug] Recursive field result for left: 59
11:28:09.059 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.059 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.059 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.059 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.059 [debug] Recursive field result for left: 0
11:28:09.059 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.059 [debug] Recursive field result for right: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] Recursive field result for left: 9
11:28:09.059 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.059 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.059 [debug] Recursive field result for left: 0
11:28:09.059 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.059 [debug] Recursive field result for right: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] Recursive field result for right: 9
11:28:09.059 [debug] do_fold called with non-variant data: 9
11:28:09.059 [debug] do_fold called with non-variant data: 9
11:28:09.059 [debug] Recursive field result for left: 26
11:28:09.059 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.059 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.059 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.059 [debug] Recursive field result for left: 0
11:28:09.059 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.059 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.059 [debug] Recursive field result for right: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] do_fold called with non-variant data: 0
11:28:09.059 [debug] Recursive field result for left: 9
11:28:09.060 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.060 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for left: 0
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for right: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] Recursive field result for right: 9
11:28:09.063 [debug] do_fold called with non-variant data: 9
11:28:09.063 [debug] do_fold called with non-variant data: 9
11:28:09.063 [debug] Recursive field result for right: 26
11:28:09.063 [debug] do_fold called with non-variant data: 26
11:28:09.063 [debug] do_fold called with non-variant data: 26
11:28:09.063 [debug] Recursive field result for right: 59
11:28:09.063 [debug] do_fold called with non-variant data: 59
11:28:09.063 [debug] do_fold called with non-variant data: 59
11:28:09.063 [debug] Recursive field result for left: 124
11:28:09.063 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for left: 0
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for right: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] Recursive field result for left: 9
11:28:09.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for left: 0
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for right: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] Recursive field result for right: 9
11:28:09.063 [debug] do_fold called with non-variant data: 9
11:28:09.063 [debug] do_fold called with non-variant data: 9
11:28:09.063 [debug] Recursive field result for left: 26
11:28:09.063 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for left: 0
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for right: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] Recursive field result for left: 9
11:28:09.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for left: 0
11:28:09.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.063 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.063 [debug] Recursive field result for right: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] do_fold called with non-variant data: 0
11:28:09.063 [debug] Recursive field result for right: 9
11:28:09.066 [debug] do_fold called with non-variant data: 9
11:28:09.066 [debug] do_fold called with non-variant data: 9
11:28:09.066 [debug] Recursive field result for right: 26
11:28:09.066 [debug] do_fold called with non-variant data: 26
11:28:09.066 [debug] do_fold called with non-variant data: 26
11:28:09.066 [debug] Recursive field result for left: 59
11:28:09.066 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.066 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.066 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for left: 0
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for right: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] Recursive field result for left: 9
11:28:09.066 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for left: 0
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for right: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] Recursive field result for right: 9
11:28:09.066 [debug] do_fold called with non-variant data: 9
11:28:09.066 [debug] do_fold called with non-variant data: 9
11:28:09.066 [debug] Recursive field result for left: 26
11:28:09.066 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.066 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for left: 0
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for right: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] Recursive field result for left: 9
11:28:09.066 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for left: 0
11:28:09.066 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.066 [debug] Recursive field result for right: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] do_fold called with non-variant data: 0
11:28:09.066 [debug] Recursive field result for right: 9
11:28:09.066 [debug] do_fold called with non-variant data: 9
11:28:09.066 [debug] do_fold called with non-variant data: 9
11:28:09.066 [debug] Recursive field result for right: 26
11:28:09.066 [debug] do_fold called with non-variant data: 26
11:28:09.066 [debug] do_fold called with non-variant data: 26
11:28:09.066 [debug] Recursive field result for right: 59
11:28:09.066 [debug] do_fold called with non-variant data: 59
11:28:09.066 [debug] do_fold called with non-variant data: 59
11:28:09.066 [debug] Recursive field result for right: 124
11:28:09.066 [debug] do_fold called with non-variant data: 124
11:28:09.066 [debug] do_fold called with non-variant data: 124
11:28:09.066 [debug] Recursive field result for left: 253
11:28:09.066 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.066 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for left: 0
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for right: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] Recursive field result for left: 9
11:28:09.067 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for left: 0
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for right: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] Recursive field result for right: 9
11:28:09.067 [debug] do_fold called with non-variant data: 9
11:28:09.067 [debug] do_fold called with non-variant data: 9
11:28:09.067 [debug] Recursive field result for left: 26
11:28:09.067 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for left: 0
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for right: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] Recursive field result for left: 9
11:28:09.067 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for left: 0
11:28:09.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.067 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.067 [debug] Recursive field result for right: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] do_fold called with non-variant data: 0
11:28:09.067 [debug] Recursive field result for right: 9
11:28:09.067 [debug] do_fold called with non-variant data: 9
11:28:09.067 [debug] do_fold called with non-variant data: 9
11:28:09.067 [debug] Recursive field result for right: 26
11:28:09.067 [debug] do_fold called with non-variant data: 26
11:28:09.067 [debug] do_fold called with non-variant data: 26
11:28:09.067 [debug] Recursive field result for left: 59
11:28:09.068 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.068 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for left: 0
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for right: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] Recursive field result for left: 9
11:28:09.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for left: 0
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for right: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] Recursive field result for right: 9
11:28:09.068 [debug] do_fold called with non-variant data: 9
11:28:09.068 [debug] do_fold called with non-variant data: 9
11:28:09.068 [debug] Recursive field result for left: 26
11:28:09.068 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for left: 0
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for right: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] Recursive field result for left: 9
11:28:09.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for left: 0
11:28:09.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.068 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.068 [debug] Recursive field result for right: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] do_fold called with non-variant data: 0
11:28:09.068 [debug] Recursive field result for right: 9
11:28:09.068 [debug] do_fold called with non-variant data: 9
11:28:09.070 [debug] do_fold called with non-variant data: 9
11:28:09.070 [debug] Recursive field result for right: 26
11:28:09.070 [debug] do_fold called with non-variant data: 26
11:28:09.070 [debug] do_fold called with non-variant data: 26
11:28:09.070 [debug] Recursive field result for right: 59
11:28:09.070 [debug] do_fold called with non-variant data: 59
11:28:09.070 [debug] do_fold called with non-variant data: 59
11:28:09.070 [debug] Recursive field result for left: 124
11:28:09.071 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for left: 0
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for right: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] Recursive field result for left: 9
11:28:09.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for left: 0
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for right: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] Recursive field result for right: 9
11:28:09.071 [debug] do_fold called with non-variant data: 9
11:28:09.071 [debug] do_fold called with non-variant data: 9
11:28:09.071 [debug] Recursive field result for left: 26
11:28:09.071 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for left: 0
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for right: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] Recursive field result for left: 9
11:28:09.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for left: 0
11:28:09.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.071 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.071 [debug] Recursive field result for right: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] do_fold called with non-variant data: 0
11:28:09.071 [debug] Recursive field result for right: 9
11:28:09.071 [debug] do_fold called with non-variant data: 9
11:28:09.071 [debug] do_fold called with non-variant data: 9
11:28:09.071 [debug] Recursive field result for right: 26
11:28:09.071 [debug] do_fold called with non-variant data: 26
11:28:09.071 [debug] do_fold called with non-variant data: 26
11:28:09.072 [debug] Recursive field result for left: 59
11:28:09.072 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.072 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.072 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for left: 0
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for right: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] Recursive field result for left: 9
11:28:09.072 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for left: 0
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for right: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] Recursive field result for right: 9
11:28:09.072 [debug] do_fold called with non-variant data: 9
11:28:09.072 [debug] do_fold called with non-variant data: 9
11:28:09.072 [debug] Recursive field result for left: 26
11:28:09.072 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.072 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for left: 0
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for right: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] Recursive field result for left: 9
11:28:09.072 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for left: 0
11:28:09.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.072 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.072 [debug] Recursive field result for right: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] do_fold called with non-variant data: 0
11:28:09.072 [debug] Recursive field result for right: 9
11:28:09.072 [debug] do_fold called with non-variant data: 9
11:28:09.073 [debug] do_fold called with non-variant data: 9
11:28:09.073 [debug] Recursive field result for right: 26
11:28:09.073 [debug] do_fold called with non-variant data: 26
11:28:09.073 [debug] do_fold called with non-variant data: 26
11:28:09.073 [debug] Recursive field result for right: 59
11:28:09.073 [debug] do_fold called with non-variant data: 59
11:28:09.073 [debug] do_fold called with non-variant data: 59
11:28:09.073 [debug] Recursive field result for right: 124
11:28:09.073 [debug] do_fold called with non-variant data: 124
11:28:09.073 [debug] do_fold called with non-variant data: 124
11:28:09.073 [debug] Recursive field result for right: 253
11:28:09.073 [debug] do_fold called with non-variant data: 253
11:28:09.073 [debug] do_fold called with non-variant data: 253
11:28:09.073 [debug] Recursive field result for right: 510
11:28:09.073 [debug] do_fold called with non-variant data: 510
11:28:09.073 [debug] do_fold called with non-variant data: 510
11:28:09.073 [debug] Recursive field result for right: 1023
11:28:09.073 [debug] do_fold called with non-variant data: 1023
11:28:09.073 [debug] do_fold called with non-variant data: 1023
11:28:09.073 [debug] Recursive field result for right: 2048
11:28:09.073 [debug] do_fold called with non-variant data: 2048
11:28:09.073 [debug] do_fold called with non-variant data: 2048
11:28:09.073 [debug] Recursive field result for left: 4097
11:28:09.076 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :le (truncated)
11:28:09.079 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{varian (truncated)
11:28:09.080 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
11:28:09.081 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
11:28:09.081 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:09.082 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:09.083 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.083 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.084 [debug] Recursive field result for left: 0
11:28:09.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.084 [debug] Recursive field result for right: 0
11:28:09.084 [debug] do_fold called with non-variant data: 0
11:28:09.084 [debug] do_fold called with non-variant data: 0
11:28:09.084 [debug] Recursive field result for left: 9
11:28:09.084 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.084 [debug] Recursive field result for left: 0
11:28:09.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.084 [debug] Recursive field result for right: 0
11:28:09.084 [debug] do_fold called with non-variant data: 0
11:28:09.084 [debug] do_fold called with non-variant data: 0
11:28:09.084 [debug] Recursive field result for right: 9
11:28:09.084 [debug] do_fold called with non-variant data: 9
11:28:09.084 [debug] do_fold called with non-variant data: 9
11:28:09.084 [debug] Recursive field result for left: 26
11:28:09.084 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.084 [debug] Recursive field result for left: 0
11:28:09.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.084 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.084 [debug] Recursive field result for right: 0
11:28:09.084 [debug] do_fold called with non-variant data: 0
11:28:09.084 [debug] do_fold called with non-variant data: 0
11:28:09.084 [debug] Recursive field result for left: 9
11:28:09.084 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for left: 0
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for right: 0
11:28:09.085 [debug] do_fold called with non-variant data: 0
11:28:09.085 [debug] do_fold called with non-variant data: 0
11:28:09.085 [debug] Recursive field result for right: 9
11:28:09.085 [debug] do_fold called with non-variant data: 9
11:28:09.085 [debug] do_fold called with non-variant data: 9
11:28:09.085 [debug] Recursive field result for right: 26
11:28:09.085 [debug] do_fold called with non-variant data: 26
11:28:09.085 [debug] do_fold called with non-variant data: 26
11:28:09.085 [debug] Recursive field result for left: 59
11:28:09.085 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.085 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.085 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for left: 0
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for right: 0
11:28:09.085 [debug] do_fold called with non-variant data: 0
11:28:09.085 [debug] do_fold called with non-variant data: 0
11:28:09.085 [debug] Recursive field result for left: 9
11:28:09.085 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for left: 0
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for right: 0
11:28:09.085 [debug] do_fold called with non-variant data: 0
11:28:09.085 [debug] do_fold called with non-variant data: 0
11:28:09.085 [debug] Recursive field result for right: 9
11:28:09.085 [debug] do_fold called with non-variant data: 9
11:28:09.085 [debug] do_fold called with non-variant data: 9
11:28:09.085 [debug] Recursive field result for left: 26
11:28:09.085 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.085 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for left: 0
11:28:09.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.085 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.085 [debug] Recursive field result for right: 0
11:28:09.085 [debug] do_fold called with non-variant data: 0
11:28:09.087 [debug] do_fold called with non-variant data: 0
11:28:09.087 [debug] Recursive field result for left: 9
11:28:09.087 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.087 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.087 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.087 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.087 [debug] Recursive field result for left: 0
11:28:09.087 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.087 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.087 [debug] Recursive field result for right: 0
11:28:09.087 [debug] do_fold called with non-variant data: 0
11:28:09.087 [debug] do_fold called with non-variant data: 0
11:28:09.087 [debug] Recursive field result for right: 9
11:28:09.087 [debug] do_fold called with non-variant data: 9
11:28:09.088 [debug] do_fold called with non-variant data: 9
11:28:09.088 [debug] Recursive field result for right: 26
11:28:09.088 [debug] do_fold called with non-variant data: 26
11:28:09.088 [debug] do_fold called with non-variant data: 26
11:28:09.088 [debug] Recursive field result for right: 59
11:28:09.088 [debug] do_fold called with non-variant data: 59
11:28:09.088 [debug] do_fold called with non-variant data: 59
11:28:09.088 [debug] Recursive field result for left: 124
11:28:09.088 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.088 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.088 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.088 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.088 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.088 [debug] Recursive field result for left: 0
11:28:09.088 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.088 [debug] Recursive field result for right: 0
11:28:09.088 [debug] do_fold called with non-variant data: 0
11:28:09.088 [debug] do_fold called with non-variant data: 0
11:28:09.088 [debug] Recursive field result for left: 9
11:28:09.088 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.088 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.088 [debug] Recursive field result for left: 0
11:28:09.088 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.088 [debug] Recursive field result for right: 0
11:28:09.088 [debug] do_fold called with non-variant data: 0
11:28:09.088 [debug] do_fold called with non-variant data: 0
11:28:09.088 [debug] Recursive field result for right: 9
11:28:09.088 [debug] do_fold called with non-variant data: 9
11:28:09.088 [debug] do_fold called with non-variant data: 9
11:28:09.088 [debug] Recursive field result for left: 26
11:28:09.088 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.088 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.088 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.088 [debug] Recursive field result for left: 0
11:28:09.088 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.088 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.088 [debug] Recursive field result for right: 0
11:28:09.088 [debug] do_fold called with non-variant data: 0
11:28:09.089 [debug] do_fold called with non-variant data: 0
11:28:09.089 [debug] Recursive field result for left: 9
11:28:09.089 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.089 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.089 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.089 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.089 [debug] Recursive field result for left: 0
11:28:09.089 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.089 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.089 [debug] Recursive field result for right: 0
11:28:09.089 [debug] do_fold called with non-variant data: 0
11:28:09.089 [debug] do_fold called with non-variant data: 0
11:28:09.089 [debug] Recursive field result for right: 9
11:28:09.093 [debug] do_fold called with non-variant data: 9
11:28:09.093 [debug] do_fold called with non-variant data: 9
11:28:09.093 [debug] Recursive field result for right: 26
11:28:09.093 [debug] do_fold called with non-variant data: 26
11:28:09.093 [debug] do_fold called with non-variant data: 26
11:28:09.093 [debug] Recursive field result for left: 59
11:28:09.093 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.093 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.093 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for left: 0
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for right: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] Recursive field result for left: 9
11:28:09.093 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for left: 0
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for right: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] Recursive field result for right: 9
11:28:09.093 [debug] do_fold called with non-variant data: 9
11:28:09.093 [debug] do_fold called with non-variant data: 9
11:28:09.093 [debug] Recursive field result for left: 26
11:28:09.093 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.093 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for left: 0
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for right: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] Recursive field result for left: 9
11:28:09.093 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for left: 0
11:28:09.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.093 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.093 [debug] Recursive field result for right: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] do_fold called with non-variant data: 0
11:28:09.093 [debug] Recursive field result for right: 9
11:28:09.093 [debug] do_fold called with non-variant data: 9
11:28:09.093 [debug] do_fold called with non-variant data: 9
11:28:09.093 [debug] Recursive field result for right: 26
11:28:09.093 [debug] do_fold called with non-variant data: 26
11:28:09.093 [debug] do_fold called with non-variant data: 26
11:28:09.093 [debug] Recursive field result for right: 59
11:28:09.093 [debug] do_fold called with non-variant data: 59
11:28:09.093 [debug] do_fold called with non-variant data: 59
11:28:09.093 [debug] Recursive field result for right: 124
11:28:09.093 [debug] do_fold called with non-variant data: 124
11:28:09.093 [debug] do_fold called with non-variant data: 124
11:28:09.093 [debug] Recursive field result for left: 253
11:28:09.094 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.094 [debug] Recursive field result for left: 0
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.094 [debug] Recursive field result for right: 0
11:28:09.094 [debug] do_fold called with non-variant data: 0
11:28:09.094 [debug] do_fold called with non-variant data: 0
11:28:09.094 [debug] Recursive field result for left: 9
11:28:09.094 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.094 [debug] Recursive field result for left: 0
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.094 [debug] Recursive field result for right: 0
11:28:09.094 [debug] do_fold called with non-variant data: 0
11:28:09.094 [debug] do_fold called with non-variant data: 0
11:28:09.094 [debug] Recursive field result for right: 9
11:28:09.094 [debug] do_fold called with non-variant data: 9
11:28:09.094 [debug] do_fold called with non-variant data: 9
11:28:09.094 [debug] Recursive field result for left: 26
11:28:09.094 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.094 [debug] Recursive field result for left: 0
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.094 [debug] Recursive field result for right: 0
11:28:09.094 [debug] do_fold called with non-variant data: 0
11:28:09.094 [debug] do_fold called with non-variant data: 0
11:28:09.094 [debug] Recursive field result for left: 9
11:28:09.094 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.094 [debug] Recursive field result for left: 0
11:28:09.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.094 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.095 [debug] Recursive field result for right: 0
11:28:09.095 [debug] do_fold called with non-variant data: 0
11:28:09.095 [debug] do_fold called with non-variant data: 0
11:28:09.095 [debug] Recursive field result for right: 9
11:28:09.095 [debug] do_fold called with non-variant data: 9
11:28:09.095 [debug] do_fold called with non-variant data: 9
11:28:09.095 [debug] Recursive field result for right: 26
11:28:09.095 [debug] do_fold called with non-variant data: 26
11:28:09.095 [debug] do_fold called with non-variant data: 26
11:28:09.095 [debug] Recursive field result for left: 59
11:28:09.096 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.096 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.096 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for left: 0
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for right: 0
11:28:09.096 [debug] do_fold called with non-variant data: 0
11:28:09.096 [debug] do_fold called with non-variant data: 0
11:28:09.096 [debug] Recursive field result for left: 9
11:28:09.096 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for left: 0
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for right: 0
11:28:09.096 [debug] do_fold called with non-variant data: 0
11:28:09.096 [debug] do_fold called with non-variant data: 0
11:28:09.096 [debug] Recursive field result for right: 9
11:28:09.096 [debug] do_fold called with non-variant data: 9
11:28:09.096 [debug] do_fold called with non-variant data: 9
11:28:09.096 [debug] Recursive field result for left: 26
11:28:09.096 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.096 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for left: 0
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for right: 0
11:28:09.096 [debug] do_fold called with non-variant data: 0
11:28:09.096 [debug] do_fold called with non-variant data: 0
11:28:09.096 [debug] Recursive field result for left: 9
11:28:09.096 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for left: 0
11:28:09.096 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.096 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.096 [debug] Recursive field result for right: 0
11:28:09.096 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] Recursive field result for right: 9
11:28:09.097 [debug] do_fold called with non-variant data: 9
11:28:09.097 [debug] do_fold called with non-variant data: 9
11:28:09.097 [debug] Recursive field result for right: 26
11:28:09.097 [debug] do_fold called with non-variant data: 26
11:28:09.097 [debug] do_fold called with non-variant data: 26
11:28:09.097 [debug] Recursive field result for right: 59
11:28:09.097 [debug] do_fold called with non-variant data: 59
11:28:09.097 [debug] do_fold called with non-variant data: 59
11:28:09.097 [debug] Recursive field result for left: 124
11:28:09.097 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for left: 0
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for right: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] Recursive field result for left: 9
11:28:09.097 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for left: 0
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for right: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] Recursive field result for right: 9
11:28:09.097 [debug] do_fold called with non-variant data: 9
11:28:09.097 [debug] do_fold called with non-variant data: 9
11:28:09.097 [debug] Recursive field result for left: 26
11:28:09.097 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for left: 0
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for right: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] Recursive field result for left: 9
11:28:09.097 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for left: 0
11:28:09.097 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.097 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.097 [debug] Recursive field result for right: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] do_fold called with non-variant data: 0
11:28:09.097 [debug] Recursive field result for right: 9
11:28:09.100 [debug] do_fold called with non-variant data: 9
11:28:09.100 [debug] do_fold called with non-variant data: 9
11:28:09.100 [debug] Recursive field result for right: 26
11:28:09.100 [debug] do_fold called with non-variant data: 26
11:28:09.100 [debug] do_fold called with non-variant data: 26
11:28:09.100 [debug] Recursive field result for left: 59
11:28:09.100 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.100 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.100 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for left: 0
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for right: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] Recursive field result for left: 9
11:28:09.100 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for left: 0
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for right: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] Recursive field result for right: 9
11:28:09.100 [debug] do_fold called with non-variant data: 9
11:28:09.100 [debug] do_fold called with non-variant data: 9
11:28:09.100 [debug] Recursive field result for left: 26
11:28:09.100 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.100 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for left: 0
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for right: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] Recursive field result for left: 9
11:28:09.100 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for left: 0
11:28:09.100 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.100 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.100 [debug] Recursive field result for right: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] do_fold called with non-variant data: 0
11:28:09.100 [debug] Recursive field result for right: 9
11:28:09.100 [debug] do_fold called with non-variant data: 9
11:28:09.100 [debug] do_fold called with non-variant data: 9
11:28:09.100 [debug] Recursive field result for right: 26
11:28:09.100 [debug] do_fold called with non-variant data: 26
11:28:09.100 [debug] do_fold called with non-variant data: 26
11:28:09.100 [debug] Recursive field result for right: 59
11:28:09.100 [debug] do_fold called with non-variant data: 59
11:28:09.100 [debug] do_fold called with non-variant data: 59
11:28:09.100 [debug] Recursive field result for right: 124
11:28:09.100 [debug] do_fold called with non-variant data: 124
11:28:09.100 [debug] do_fold called with non-variant data: 124
11:28:09.100 [debug] Recursive field result for right: 253
11:28:09.100 [debug] do_fold called with non-variant data: 253
11:28:09.100 [debug] do_fold called with non-variant data: 253
11:28:09.100 [debug] Recursive field result for left: 510
11:28:09.101 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.101 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.101 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for left: 0
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for right: 0
11:28:09.102 [debug] do_fold called with non-variant data: 0
11:28:09.102 [debug] do_fold called with non-variant data: 0
11:28:09.102 [debug] Recursive field result for left: 9
11:28:09.102 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for left: 0
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for right: 0
11:28:09.102 [debug] do_fold called with non-variant data: 0
11:28:09.102 [debug] do_fold called with non-variant data: 0
11:28:09.102 [debug] Recursive field result for right: 9
11:28:09.102 [debug] do_fold called with non-variant data: 9
11:28:09.102 [debug] do_fold called with non-variant data: 9
11:28:09.102 [debug] Recursive field result for left: 26
11:28:09.102 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for left: 0
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for right: 0
11:28:09.102 [debug] do_fold called with non-variant data: 0
11:28:09.102 [debug] do_fold called with non-variant data: 0
11:28:09.102 [debug] Recursive field result for left: 9
11:28:09.102 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for left: 0
11:28:09.102 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.102 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.102 [debug] Recursive field result for right: 0
11:28:09.102 [debug] do_fold called with non-variant data: 0
11:28:09.103 [debug] do_fold called with non-variant data: 0
11:28:09.103 [debug] Recursive field result for right: 9
11:28:09.103 [debug] do_fold called with non-variant data: 9
11:28:09.103 [debug] do_fold called with non-variant data: 9
11:28:09.103 [debug] Recursive field result for right: 26
11:28:09.103 [debug] do_fold called with non-variant data: 26
11:28:09.103 [debug] do_fold called with non-variant data: 26
11:28:09.103 [debug] Recursive field result for left: 59
11:28:09.103 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.103 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.103 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.103 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.103 [debug] Recursive field result for left: 0
11:28:09.103 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.103 [debug] Recursive field result for right: 0
11:28:09.103 [debug] do_fold called with non-variant data: 0
11:28:09.103 [debug] do_fold called with non-variant data: 0
11:28:09.103 [debug] Recursive field result for left: 9
11:28:09.103 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.103 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.103 [debug] Recursive field result for left: 0
11:28:09.103 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.103 [debug] Recursive field result for right: 0
11:28:09.103 [debug] do_fold called with non-variant data: 0
11:28:09.103 [debug] do_fold called with non-variant data: 0
11:28:09.103 [debug] Recursive field result for right: 9
11:28:09.103 [debug] do_fold called with non-variant data: 9
11:28:09.103 [debug] do_fold called with non-variant data: 9
11:28:09.103 [debug] Recursive field result for left: 26
11:28:09.103 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.103 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.103 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.103 [debug] Recursive field result for left: 0
11:28:09.103 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.103 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.104 [debug] Recursive field result for right: 0
11:28:09.104 [debug] do_fold called with non-variant data: 0
11:28:09.104 [debug] do_fold called with non-variant data: 0
11:28:09.104 [debug] Recursive field result for left: 9
11:28:09.104 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.104 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.104 [debug] Recursive field result for left: 0
11:28:09.104 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.104 [debug] Recursive field result for right: 0
11:28:09.104 [debug] do_fold called with non-variant data: 0
11:28:09.104 [debug] do_fold called with non-variant data: 0
11:28:09.104 [debug] Recursive field result for right: 9
11:28:09.104 [debug] do_fold called with non-variant data: 9
11:28:09.104 [debug] do_fold called with non-variant data: 9
11:28:09.104 [debug] Recursive field result for right: 26
11:28:09.104 [debug] do_fold called with non-variant data: 26
11:28:09.104 [debug] do_fold called with non-variant data: 26
11:28:09.104 [debug] Recursive field result for right: 59
11:28:09.104 [debug] do_fold called with non-variant data: 59
11:28:09.104 [debug] do_fold called with non-variant data: 59
11:28:09.104 [debug] Recursive field result for left: 124
11:28:09.104 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.104 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.104 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.104 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.104 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.104 [debug] Recursive field result for left: 0
11:28:09.104 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.104 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.104 [debug] Recursive field result for right: 0
11:28:09.104 [debug] do_fold called with non-variant data: 0
11:28:09.104 [debug] do_fold called with non-variant data: 0
11:28:09.104 [debug] Recursive field result for left: 9
11:28:09.104 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.105 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.105 [debug] Recursive field result for left: 0
11:28:09.105 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.105 [debug] Recursive field result for right: 0
11:28:09.105 [debug] do_fold called with non-variant data: 0
11:28:09.105 [debug] do_fold called with non-variant data: 0
11:28:09.105 [debug] Recursive field result for right: 9
11:28:09.105 [debug] do_fold called with non-variant data: 9
11:28:09.105 [debug] do_fold called with non-variant data: 9
11:28:09.105 [debug] Recursive field result for left: 26
11:28:09.105 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.105 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.105 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.105 [debug] Recursive field result for left: 0
11:28:09.105 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.105 [debug] Recursive field result for right: 0
11:28:09.105 [debug] do_fold called with non-variant data: 0
11:28:09.105 [debug] do_fold called with non-variant data: 0
11:28:09.105 [debug] Recursive field result for left: 9
11:28:09.105 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.105 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.105 [debug] Recursive field result for left: 0
11:28:09.105 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.105 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.105 [debug] Recursive field result for right: 0
11:28:09.105 [debug] do_fold called with non-variant data: 0
11:28:09.105 [debug] do_fold called with non-variant data: 0
11:28:09.107 [debug] Recursive field result for right: 9
11:28:09.107 [debug] do_fold called with non-variant data: 9
11:28:09.107 [debug] do_fold called with non-variant data: 9
11:28:09.108 [debug] Recursive field result for right: 26
11:28:09.108 [debug] do_fold called with non-variant data: 26
11:28:09.108 [debug] do_fold called with non-variant data: 26
11:28:09.108 [debug] Recursive field result for left: 59
11:28:09.108 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.108 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.108 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for left: 0
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for right: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] Recursive field result for left: 9
11:28:09.108 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for left: 0
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for right: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] Recursive field result for right: 9
11:28:09.108 [debug] do_fold called with non-variant data: 9
11:28:09.108 [debug] do_fold called with non-variant data: 9
11:28:09.108 [debug] Recursive field result for left: 26
11:28:09.108 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.108 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for left: 0
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for right: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] Recursive field result for left: 9
11:28:09.108 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for left: 0
11:28:09.108 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.108 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.108 [debug] Recursive field result for right: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] do_fold called with non-variant data: 0
11:28:09.108 [debug] Recursive field result for right: 9
11:28:09.108 [debug] do_fold called with non-variant data: 9
11:28:09.108 [debug] do_fold called with non-variant data: 9
11:28:09.108 [debug] Recursive field result for right: 26
11:28:09.108 [debug] do_fold called with non-variant data: 26
11:28:09.108 [debug] do_fold called with non-variant data: 26
11:28:09.108 [debug] Recursive field result for right: 59
11:28:09.108 [debug] do_fold called with non-variant data: 59
11:28:09.108 [debug] do_fold called with non-variant data: 59
11:28:09.108 [debug] Recursive field result for right: 124
11:28:09.108 [debug] do_fold called with non-variant data: 124
11:28:09.108 [debug] do_fold called with non-variant data: 124
11:28:09.108 [debug] Recursive field result for left: 253
11:28:09.108 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.109 [debug] Recursive field result for left: 0
11:28:09.109 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.109 [debug] Recursive field result for right: 0
11:28:09.109 [debug] do_fold called with non-variant data: 0
11:28:09.109 [debug] do_fold called with non-variant data: 0
11:28:09.109 [debug] Recursive field result for left: 9
11:28:09.109 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.109 [debug] Recursive field result for left: 0
11:28:09.109 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.109 [debug] Recursive field result for right: 0
11:28:09.109 [debug] do_fold called with non-variant data: 0
11:28:09.109 [debug] do_fold called with non-variant data: 0
11:28:09.109 [debug] Recursive field result for right: 9
11:28:09.109 [debug] do_fold called with non-variant data: 9
11:28:09.109 [debug] do_fold called with non-variant data: 9
11:28:09.109 [debug] Recursive field result for left: 26
11:28:09.109 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.109 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.109 [debug] Recursive field result for left: 0
11:28:09.109 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.109 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.109 [debug] Recursive field result for right: 0
11:28:09.109 [debug] do_fold called with non-variant data: 0
11:28:09.109 [debug] do_fold called with non-variant data: 0
11:28:09.109 [debug] Recursive field result for left: 9
11:28:09.110 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.110 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.110 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.110 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.110 [debug] Recursive field result for left: 0
11:28:09.110 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.110 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.110 [debug] Recursive field result for right: 0
11:28:09.110 [debug] do_fold called with non-variant data: 0
11:28:09.110 [debug] do_fold called with non-variant data: 0
11:28:09.110 [debug] Recursive field result for right: 9
11:28:09.110 [debug] do_fold called with non-variant data: 9
11:28:09.110 [debug] do_fold called with non-variant data: 9
11:28:09.110 [debug] Recursive field result for right: 26
11:28:09.110 [debug] do_fold called with non-variant data: 26
11:28:09.110 [debug] do_fold called with non-variant data: 26
11:28:09.110 [debug] Recursive field result for left: 59
11:28:09.110 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.110 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.110 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.111 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for left: 0
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for right: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] Recursive field result for left: 9
11:28:09.111 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for left: 0
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for right: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] Recursive field result for right: 9
11:28:09.111 [debug] do_fold called with non-variant data: 9
11:28:09.111 [debug] do_fold called with non-variant data: 9
11:28:09.111 [debug] Recursive field result for left: 26
11:28:09.111 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.111 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for left: 0
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for right: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] Recursive field result for left: 9
11:28:09.111 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for left: 0
11:28:09.111 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.111 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.111 [debug] Recursive field result for right: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] do_fold called with non-variant data: 0
11:28:09.111 [debug] Recursive field result for right: 9
11:28:09.111 [debug] do_fold called with non-variant data: 9
11:28:09.111 [debug] do_fold called with non-variant data: 9
11:28:09.111 [debug] Recursive field result for right: 26
11:28:09.111 [debug] do_fold called with non-variant data: 26
11:28:09.111 [debug] do_fold called with non-variant data: 26
11:28:09.113 [debug] Recursive field result for right: 59
11:28:09.113 [debug] do_fold called with non-variant data: 59
11:28:09.113 [debug] do_fold called with non-variant data: 59
11:28:09.113 [debug] Recursive field result for left: 124
11:28:09.113 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.113 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.113 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.114 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.114 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for left: 0
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for right: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] Recursive field result for left: 9
11:28:09.114 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for left: 0
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for right: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] Recursive field result for right: 9
11:28:09.114 [debug] do_fold called with non-variant data: 9
11:28:09.114 [debug] do_fold called with non-variant data: 9
11:28:09.114 [debug] Recursive field result for left: 26
11:28:09.114 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.114 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for left: 0
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for right: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] Recursive field result for left: 9
11:28:09.114 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for left: 0
11:28:09.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.114 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.114 [debug] Recursive field result for right: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] do_fold called with non-variant data: 0
11:28:09.114 [debug] Recursive field result for right: 9
11:28:09.114 [debug] do_fold called with non-variant data: 9
11:28:09.114 [debug] do_fold called with non-variant data: 9
11:28:09.114 [debug] Recursive field result for right: 26
11:28:09.114 [debug] do_fold called with non-variant data: 26
11:28:09.114 [debug] do_fold called with non-variant data: 26
11:28:09.116 [debug] Recursive field result for left: 59
11:28:09.116 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.116 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.116 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.116 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.116 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.116 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.116 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.116 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.116 [debug] Recursive field result for left: 0
11:28:09.116 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.116 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.116 [debug] Recursive field result for right: 0
11:28:09.116 [debug] do_fold called with non-variant data: 0
11:28:09.116 [debug] do_fold called with non-variant data: 0
11:28:09.116 [debug] Recursive field result for left: 9
11:28:09.116 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.117 [debug] Recursive field result for left: 0
11:28:09.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.117 [debug] Recursive field result for right: 0
11:28:09.117 [debug] do_fold called with non-variant data: 0
11:28:09.117 [debug] do_fold called with non-variant data: 0
11:28:09.117 [debug] Recursive field result for right: 9
11:28:09.117 [debug] do_fold called with non-variant data: 9
11:28:09.117 [debug] do_fold called with non-variant data: 9
11:28:09.117 [debug] Recursive field result for left: 26
11:28:09.117 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.117 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.117 [debug] Recursive field result for left: 0
11:28:09.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.117 [debug] Recursive field result for right: 0
11:28:09.117 [debug] do_fold called with non-variant data: 0
11:28:09.117 [debug] do_fold called with non-variant data: 0
11:28:09.117 [debug] Recursive field result for left: 9
11:28:09.117 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.117 [debug] Recursive field result for left: 0
11:28:09.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.117 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.117 [debug] Recursive field result for right: 0
11:28:09.117 [debug] do_fold called with non-variant data: 0
11:28:09.117 [debug] do_fold called with non-variant data: 0
11:28:09.117 [debug] Recursive field result for right: 9
11:28:09.117 [debug] do_fold called with non-variant data: 9
11:28:09.117 [debug] do_fold called with non-variant data: 9
11:28:09.117 [debug] Recursive field result for right: 26
11:28:09.117 [debug] do_fold called with non-variant data: 26
11:28:09.117 [debug] do_fold called with non-variant data: 26
11:28:09.117 [debug] Recursive field result for right: 59
11:28:09.117 [debug] do_fold called with non-variant data: 59
11:28:09.117 [debug] do_fold called with non-variant data: 59
11:28:09.117 [debug] Recursive field result for right: 124
11:28:09.117 [debug] do_fold called with non-variant data: 124
11:28:09.117 [debug] do_fold called with non-variant data: 124
11:28:09.117 [debug] Recursive field result for right: 253
11:28:09.117 [debug] do_fold called with non-variant data: 253
11:28:09.117 [debug] do_fold called with non-variant data: 253
11:28:09.117 [debug] Recursive field result for right: 510
11:28:09.117 [debug] do_fold called with non-variant data: 510
11:28:09.117 [debug] do_fold called with non-variant data: 510
11:28:09.117 [debug] Recursive field result for left: 1023
11:28:09.118 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:09.119 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:09.120 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.121 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.121 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.121 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.121 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.121 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.121 [debug] Recursive field result for left: 0
11:28:09.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.121 [debug] Recursive field result for right: 0
11:28:09.121 [debug] do_fold called with non-variant data: 0
11:28:09.121 [debug] do_fold called with non-variant data: 0
11:28:09.121 [debug] Recursive field result for left: 9
11:28:09.121 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.121 [debug] Recursive field result for left: 0
11:28:09.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.121 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.121 [debug] Recursive field result for right: 0
11:28:09.121 [debug] do_fold called with non-variant data: 0
11:28:09.121 [debug] do_fold called with non-variant data: 0
11:28:09.121 [debug] Recursive field result for right: 9
11:28:09.121 [debug] do_fold called with non-variant data: 9
11:28:09.121 [debug] do_fold called with non-variant data: 9
11:28:09.121 [debug] Recursive field result for left: 26
11:28:09.121 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for left: 0
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for right: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] Recursive field result for left: 9
11:28:09.122 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for left: 0
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for right: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] Recursive field result for right: 9
11:28:09.122 [debug] do_fold called with non-variant data: 9
11:28:09.122 [debug] do_fold called with non-variant data: 9
11:28:09.122 [debug] Recursive field result for right: 26
11:28:09.122 [debug] do_fold called with non-variant data: 26
11:28:09.122 [debug] do_fold called with non-variant data: 26
11:28:09.122 [debug] Recursive field result for left: 59
11:28:09.122 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for left: 0
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for right: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] Recursive field result for left: 9
11:28:09.122 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for left: 0
11:28:09.122 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.122 [debug] Recursive field result for right: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] do_fold called with non-variant data: 0
11:28:09.122 [debug] Recursive field result for right: 9
11:28:09.122 [debug] do_fold called with non-variant data: 9
11:28:09.122 [debug] do_fold called with non-variant data: 9
11:28:09.122 [debug] Recursive field result for left: 26
11:28:09.122 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.122 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.122 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for left: 0
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for right: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.123 [debug] Recursive field result for left: 9
11:28:09.123 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for left: 0
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for right: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.123 [debug] Recursive field result for right: 9
11:28:09.123 [debug] do_fold called with non-variant data: 9
11:28:09.123 [debug] do_fold called with non-variant data: 9
11:28:09.123 [debug] Recursive field result for right: 26
11:28:09.123 [debug] do_fold called with non-variant data: 26
11:28:09.123 [debug] do_fold called with non-variant data: 26
11:28:09.123 [debug] Recursive field result for right: 59
11:28:09.123 [debug] do_fold called with non-variant data: 59
11:28:09.123 [debug] do_fold called with non-variant data: 59
11:28:09.123 [debug] Recursive field result for left: 124
11:28:09.123 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.123 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.123 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.123 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for left: 0
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for right: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.123 [debug] Recursive field result for left: 9
11:28:09.123 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for left: 0
11:28:09.123 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.123 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.123 [debug] Recursive field result for right: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.123 [debug] do_fold called with non-variant data: 0
11:28:09.126 [debug] Recursive field result for right: 9
11:28:09.126 [debug] do_fold called with non-variant data: 9
11:28:09.126 [debug] do_fold called with non-variant data: 9
11:28:09.126 [debug] Recursive field result for left: 26
11:28:09.126 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.126 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.126 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.126 [debug] Recursive field result for left: 0
11:28:09.126 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.126 [debug] Recursive field result for right: 0
11:28:09.126 [debug] do_fold called with non-variant data: 0
11:28:09.126 [debug] do_fold called with non-variant data: 0
11:28:09.126 [debug] Recursive field result for left: 9
11:28:09.126 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.126 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.126 [debug] Recursive field result for left: 0
11:28:09.126 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.126 [debug] Recursive field result for right: 0
11:28:09.126 [debug] do_fold called with non-variant data: 0
11:28:09.126 [debug] do_fold called with non-variant data: 0
11:28:09.126 [debug] Recursive field result for right: 9
11:28:09.126 [debug] do_fold called with non-variant data: 9
11:28:09.126 [debug] do_fold called with non-variant data: 9
11:28:09.126 [debug] Recursive field result for right: 26
11:28:09.126 [debug] do_fold called with non-variant data: 26
11:28:09.126 [debug] do_fold called with non-variant data: 26
11:28:09.126 [debug] Recursive field result for left: 59
11:28:09.126 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.126 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.126 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.126 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.126 [debug] Recursive field result for left: 0
11:28:09.126 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.126 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.127 [debug] Recursive field result for right: 0
11:28:09.127 [debug] do_fold called with non-variant data: 0
11:28:09.127 [debug] do_fold called with non-variant data: 0
11:28:09.127 [debug] Recursive field result for left: 9
11:28:09.127 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.127 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.127 [debug] Recursive field result for left: 0
11:28:09.127 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.127 [debug] Recursive field result for right: 0
11:28:09.127 [debug] do_fold called with non-variant data: 0
11:28:09.127 [debug] do_fold called with non-variant data: 0
11:28:09.127 [debug] Recursive field result for right: 9
11:28:09.127 [debug] do_fold called with non-variant data: 9
11:28:09.127 [debug] do_fold called with non-variant data: 9
11:28:09.127 [debug] Recursive field result for left: 26
11:28:09.127 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.127 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.127 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.127 [debug] Recursive field result for left: 0
11:28:09.127 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.127 [debug] Recursive field result for right: 0
11:28:09.127 [debug] do_fold called with non-variant data: 0
11:28:09.127 [debug] do_fold called with non-variant data: 0
11:28:09.127 [debug] Recursive field result for left: 9
11:28:09.127 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.127 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.128 [debug] Recursive field result for left: 0
11:28:09.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.128 [debug] Recursive field result for right: 0
11:28:09.128 [debug] do_fold called with non-variant data: 0
11:28:09.128 [debug] do_fold called with non-variant data: 0
11:28:09.128 [debug] Recursive field result for right: 9
11:28:09.128 [debug] do_fold called with non-variant data: 9
11:28:09.128 [debug] do_fold called with non-variant data: 9
11:28:09.128 [debug] Recursive field result for right: 26
11:28:09.128 [debug] do_fold called with non-variant data: 26
11:28:09.128 [debug] do_fold called with non-variant data: 26
11:28:09.128 [debug] Recursive field result for right: 59
11:28:09.128 [debug] do_fold called with non-variant data: 59
11:28:09.128 [debug] do_fold called with non-variant data: 59
11:28:09.128 [debug] Recursive field result for right: 124
11:28:09.128 [debug] do_fold called with non-variant data: 124
11:28:09.128 [debug] do_fold called with non-variant data: 124
11:28:09.128 [debug] Recursive field result for left: 253
11:28:09.128 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.128 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.128 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.128 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.128 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.128 [debug] Recursive field result for left: 0
11:28:09.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.128 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.128 [debug] Recursive field result for right: 0
11:28:09.128 [debug] do_fold called with non-variant data: 0
11:28:09.128 [debug] do_fold called with non-variant data: 0
11:28:09.128 [debug] Recursive field result for left: 9
11:28:09.128 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.129 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.129 [debug] Recursive field result for left: 0
11:28:09.129 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.129 [debug] Recursive field result for right: 0
11:28:09.129 [debug] do_fold called with non-variant data: 0
11:28:09.129 [debug] do_fold called with non-variant data: 0
11:28:09.129 [debug] Recursive field result for right: 9
11:28:09.129 [debug] do_fold called with non-variant data: 9
11:28:09.129 [debug] do_fold called with non-variant data: 9
11:28:09.129 [debug] Recursive field result for left: 26
11:28:09.129 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.129 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.129 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.129 [debug] Recursive field result for left: 0
11:28:09.129 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.129 [debug] Recursive field result for right: 0
11:28:09.129 [debug] do_fold called with non-variant data: 0
11:28:09.129 [debug] do_fold called with non-variant data: 0
11:28:09.129 [debug] Recursive field result for left: 9
11:28:09.129 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.129 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.129 [debug] Recursive field result for left: 0
11:28:09.129 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.129 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.129 [debug] Recursive field result for right: 0
11:28:09.129 [debug] do_fold called with non-variant data: 0
11:28:09.129 [debug] do_fold called with non-variant data: 0
11:28:09.130 [debug] Recursive field result for right: 9
11:28:09.130 [debug] do_fold called with non-variant data: 9
11:28:09.130 [debug] do_fold called with non-variant data: 9
11:28:09.130 [debug] Recursive field result for right: 26
11:28:09.130 [debug] do_fold called with non-variant data: 26
11:28:09.130 [debug] do_fold called with non-variant data: 26
11:28:09.130 [debug] Recursive field result for left: 59
11:28:09.130 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.130 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.130 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.130 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.130 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.130 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.130 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.130 [debug] Recursive field result for left: 0
11:28:09.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.131 [debug] Recursive field result for right: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] Recursive field result for left: 9
11:28:09.131 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.131 [debug] Recursive field result for left: 0
11:28:09.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.131 [debug] Recursive field result for right: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] Recursive field result for right: 9
11:28:09.131 [debug] do_fold called with non-variant data: 9
11:28:09.131 [debug] do_fold called with non-variant data: 9
11:28:09.131 [debug] Recursive field result for left: 26
11:28:09.131 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.131 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.131 [debug] Recursive field result for left: 0
11:28:09.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.131 [debug] Recursive field result for right: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] Recursive field result for left: 9
11:28:09.131 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.131 [debug] Recursive field result for left: 0
11:28:09.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.131 [debug] Recursive field result for right: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] do_fold called with non-variant data: 0
11:28:09.131 [debug] Recursive field result for right: 9
11:28:09.131 [debug] do_fold called with non-variant data: 9
11:28:09.131 [debug] do_fold called with non-variant data: 9
11:28:09.131 [debug] Recursive field result for right: 26
11:28:09.131 [debug] do_fold called with non-variant data: 26
11:28:09.131 [debug] do_fold called with non-variant data: 26
11:28:09.131 [debug] Recursive field result for right: 59
11:28:09.131 [debug] do_fold called with non-variant data: 59
11:28:09.131 [debug] do_fold called with non-variant data: 59
11:28:09.131 [debug] Recursive field result for left: 124
11:28:09.131 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.131 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.131 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.131 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.132 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for left: 0
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for right: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] Recursive field result for left: 9
11:28:09.132 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for left: 0
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for right: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] Recursive field result for right: 9
11:28:09.132 [debug] do_fold called with non-variant data: 9
11:28:09.132 [debug] do_fold called with non-variant data: 9
11:28:09.132 [debug] Recursive field result for left: 26
11:28:09.132 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.132 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for left: 0
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for right: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] Recursive field result for left: 9
11:28:09.132 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for left: 0
11:28:09.132 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.132 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.132 [debug] Recursive field result for right: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] do_fold called with non-variant data: 0
11:28:09.132 [debug] Recursive field result for right: 9
11:28:09.132 [debug] do_fold called with non-variant data: 9
11:28:09.133 [debug] do_fold called with non-variant data: 9
11:28:09.133 [debug] Recursive field result for right: 26
11:28:09.133 [debug] do_fold called with non-variant data: 26
11:28:09.133 [debug] do_fold called with non-variant data: 26
11:28:09.133 [debug] Recursive field result for left: 59
11:28:09.133 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.133 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.133 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.133 [debug] Recursive field result for left: 0
11:28:09.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.133 [debug] Recursive field result for right: 0
11:28:09.133 [debug] do_fold called with non-variant data: 0
11:28:09.133 [debug] do_fold called with non-variant data: 0
11:28:09.133 [debug] Recursive field result for left: 9
11:28:09.133 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.133 [debug] Recursive field result for left: 0
11:28:09.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.133 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.133 [debug] Recursive field result for right: 0
11:28:09.133 [debug] do_fold called with non-variant data: 0
11:28:09.134 [debug] do_fold called with non-variant data: 0
11:28:09.134 [debug] Recursive field result for right: 9
11:28:09.134 [debug] do_fold called with non-variant data: 9
11:28:09.134 [debug] do_fold called with non-variant data: 9
11:28:09.134 [debug] Recursive field result for left: 26
11:28:09.134 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.134 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.134 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.134 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.134 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.134 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.134 [debug] Recursive field result for left: 0
11:28:09.134 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.134 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.134 [debug] Recursive field result for right: 0
11:28:09.134 [debug] do_fold called with non-variant data: 0
11:28:09.134 [debug] do_fold called with non-variant data: 0
11:28:09.134 [debug] Recursive field result for left: 9
11:28:09.134 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.134 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.134 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.134 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.134 [debug] Recursive field result for left: 0
11:28:09.134 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.134 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.134 [debug] Recursive field result for right: 0
11:28:09.134 [debug] do_fold called with non-variant data: 0
11:28:09.134 [debug] do_fold called with non-variant data: 0
11:28:09.134 [debug] Recursive field result for right: 9
11:28:09.134 [debug] do_fold called with non-variant data: 9
11:28:09.134 [debug] do_fold called with non-variant data: 9
11:28:09.134 [debug] Recursive field result for right: 26
11:28:09.134 [debug] do_fold called with non-variant data: 26
11:28:09.134 [debug] do_fold called with non-variant data: 26
11:28:09.134 [debug] Recursive field result for right: 59
11:28:09.134 [debug] do_fold called with non-variant data: 59
11:28:09.134 [debug] do_fold called with non-variant data: 59
11:28:09.134 [debug] Recursive field result for right: 124
11:28:09.134 [debug] do_fold called with non-variant data: 124
11:28:09.134 [debug] do_fold called with non-variant data: 124
11:28:09.134 [debug] Recursive field result for right: 253
11:28:09.134 [debug] do_fold called with non-variant data: 253
11:28:09.134 [debug] do_fold called with non-variant data: 253
11:28:09.134 [debug] Recursive field result for left: 510
11:28:09.134 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.135 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.135 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.135 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.135 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.135 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.135 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.135 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for left: 0
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for right: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] Recursive field result for left: 9
11:28:09.136 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for left: 0
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for right: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] Recursive field result for right: 9
11:28:09.136 [debug] do_fold called with non-variant data: 9
11:28:09.136 [debug] do_fold called with non-variant data: 9
11:28:09.136 [debug] Recursive field result for left: 26
11:28:09.136 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for left: 0
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for right: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] Recursive field result for left: 9
11:28:09.136 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for left: 0
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for right: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] Recursive field result for right: 9
11:28:09.136 [debug] do_fold called with non-variant data: 9
11:28:09.136 [debug] do_fold called with non-variant data: 9
11:28:09.136 [debug] Recursive field result for right: 26
11:28:09.136 [debug] do_fold called with non-variant data: 26
11:28:09.136 [debug] do_fold called with non-variant data: 26
11:28:09.136 [debug] Recursive field result for left: 59
11:28:09.136 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for left: 0
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for right: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] Recursive field result for left: 9
11:28:09.136 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for left: 0
11:28:09.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.136 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.136 [debug] Recursive field result for right: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] do_fold called with non-variant data: 0
11:28:09.136 [debug] Recursive field result for right: 9
11:28:09.136 [debug] do_fold called with non-variant data: 9
11:28:09.136 [debug] do_fold called with non-variant data: 9
11:28:09.136 [debug] Recursive field result for left: 26
11:28:09.137 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.137 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.137 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.137 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.137 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.137 [debug] Recursive field result for left: 0
11:28:09.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.137 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.137 [debug] Recursive field result for right: 0
11:28:09.137 [debug] do_fold called with non-variant data: 0
11:28:09.137 [debug] do_fold called with non-variant data: 0
11:28:09.137 [debug] Recursive field result for left: 9
11:28:09.137 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.137 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.137 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.137 [debug] Recursive field result for left: 0
11:28:09.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.137 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.137 [debug] Recursive field result for right: 0
11:28:09.137 [debug] do_fold called with non-variant data: 0
11:28:09.137 [debug] do_fold called with non-variant data: 0
11:28:09.137 [debug] Recursive field result for right: 9
11:28:09.137 [debug] do_fold called with non-variant data: 9
11:28:09.138 [debug] do_fold called with non-variant data: 9
11:28:09.138 [debug] Recursive field result for right: 26
11:28:09.138 [debug] do_fold called with non-variant data: 26
11:28:09.138 [debug] do_fold called with non-variant data: 26
11:28:09.138 [debug] Recursive field result for right: 59
11:28:09.138 [debug] do_fold called with non-variant data: 59
11:28:09.138 [debug] do_fold called with non-variant data: 59
11:28:09.138 [debug] Recursive field result for left: 124
11:28:09.138 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.138 [debug] Recursive field result for left: 0
11:28:09.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.138 [debug] Recursive field result for right: 0
11:28:09.138 [debug] do_fold called with non-variant data: 0
11:28:09.138 [debug] do_fold called with non-variant data: 0
11:28:09.138 [debug] Recursive field result for left: 9
11:28:09.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.138 [debug] Recursive field result for left: 0
11:28:09.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.138 [debug] Recursive field result for right: 0
11:28:09.138 [debug] do_fold called with non-variant data: 0
11:28:09.138 [debug] do_fold called with non-variant data: 0
11:28:09.138 [debug] Recursive field result for right: 9
11:28:09.138 [debug] do_fold called with non-variant data: 9
11:28:09.138 [debug] do_fold called with non-variant data: 9
11:28:09.138 [debug] Recursive field result for left: 26
11:28:09.138 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.138 [debug] Recursive field result for left: 0
11:28:09.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.138 [debug] Recursive field result for right: 0
11:28:09.138 [debug] do_fold called with non-variant data: 0
11:28:09.138 [debug] do_fold called with non-variant data: 0
11:28:09.138 [debug] Recursive field result for left: 9
11:28:09.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.141 [debug] Recursive field result for left: 0
11:28:09.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.141 [debug] Recursive field result for right: 0
11:28:09.141 [debug] do_fold called with non-variant data: 0
11:28:09.141 [debug] do_fold called with non-variant data: 0
11:28:09.141 [debug] Recursive field result for right: 9
11:28:09.141 [debug] do_fold called with non-variant data: 9
11:28:09.141 [debug] do_fold called with non-variant data: 9
11:28:09.141 [debug] Recursive field result for right: 26
11:28:09.141 [debug] do_fold called with non-variant data: 26
11:28:09.141 [debug] do_fold called with non-variant data: 26
11:28:09.141 [debug] Recursive field result for left: 59
11:28:09.141 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.141 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.141 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.141 [debug] Recursive field result for left: 0
11:28:09.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.141 [debug] Recursive field result for right: 0
11:28:09.141 [debug] do_fold called with non-variant data: 0
11:28:09.141 [debug] do_fold called with non-variant data: 0
11:28:09.141 [debug] Recursive field result for left: 9
11:28:09.141 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.141 [debug] Recursive field result for left: 0
11:28:09.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.141 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.141 [debug] Recursive field result for right: 0
11:28:09.141 [debug] do_fold called with non-variant data: 0
11:28:09.141 [debug] do_fold called with non-variant data: 0
11:28:09.141 [debug] Recursive field result for right: 9
11:28:09.141 [debug] do_fold called with non-variant data: 9
11:28:09.141 [debug] do_fold called with non-variant data: 9
11:28:09.141 [debug] Recursive field result for left: 26
11:28:09.142 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.142 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.142 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.142 [debug] Recursive field result for left: 0
11:28:09.142 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.142 [debug] Recursive field result for right: 0
11:28:09.142 [debug] do_fold called with non-variant data: 0
11:28:09.142 [debug] do_fold called with non-variant data: 0
11:28:09.142 [debug] Recursive field result for left: 9
11:28:09.142 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.142 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.142 [debug] Recursive field result for left: 0
11:28:09.142 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.142 [debug] Recursive field result for right: 0
11:28:09.142 [debug] do_fold called with non-variant data: 0
11:28:09.142 [debug] do_fold called with non-variant data: 0
11:28:09.142 [debug] Recursive field result for right: 9
11:28:09.142 [debug] do_fold called with non-variant data: 9
11:28:09.142 [debug] do_fold called with non-variant data: 9
11:28:09.142 [debug] Recursive field result for right: 26
11:28:09.142 [debug] do_fold called with non-variant data: 26
11:28:09.142 [debug] do_fold called with non-variant data: 26
11:28:09.142 [debug] Recursive field result for right: 59
11:28:09.142 [debug] do_fold called with non-variant data: 59
11:28:09.142 [debug] do_fold called with non-variant data: 59
11:28:09.142 [debug] Recursive field result for right: 124
11:28:09.142 [debug] do_fold called with non-variant data: 124
11:28:09.142 [debug] do_fold called with non-variant data: 124
11:28:09.142 [debug] Recursive field result for left: 253
11:28:09.142 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.142 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.142 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for left: 0
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for right: 0
11:28:09.143 [debug] do_fold called with non-variant data: 0
11:28:09.143 [debug] do_fold called with non-variant data: 0
11:28:09.143 [debug] Recursive field result for left: 9
11:28:09.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for left: 0
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for right: 0
11:28:09.143 [debug] do_fold called with non-variant data: 0
11:28:09.143 [debug] do_fold called with non-variant data: 0
11:28:09.143 [debug] Recursive field result for right: 9
11:28:09.143 [debug] do_fold called with non-variant data: 9
11:28:09.143 [debug] do_fold called with non-variant data: 9
11:28:09.143 [debug] Recursive field result for left: 26
11:28:09.143 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for left: 0
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for right: 0
11:28:09.143 [debug] do_fold called with non-variant data: 0
11:28:09.143 [debug] do_fold called with non-variant data: 0
11:28:09.143 [debug] Recursive field result for left: 9
11:28:09.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for left: 0
11:28:09.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.143 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.143 [debug] Recursive field result for right: 0
11:28:09.143 [debug] do_fold called with non-variant data: 0
11:28:09.144 [debug] do_fold called with non-variant data: 0
11:28:09.144 [debug] Recursive field result for right: 9
11:28:09.144 [debug] do_fold called with non-variant data: 9
11:28:09.144 [debug] do_fold called with non-variant data: 9
11:28:09.144 [debug] Recursive field result for right: 26
11:28:09.144 [debug] do_fold called with non-variant data: 26
11:28:09.144 [debug] do_fold called with non-variant data: 26
11:28:09.144 [debug] Recursive field result for left: 59
11:28:09.144 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.144 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for left: 0
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for right: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] Recursive field result for left: 9
11:28:09.145 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for left: 0
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for right: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] Recursive field result for right: 9
11:28:09.145 [debug] do_fold called with non-variant data: 9
11:28:09.145 [debug] do_fold called with non-variant data: 9
11:28:09.145 [debug] Recursive field result for left: 26
11:28:09.145 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for left: 0
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for right: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] Recursive field result for left: 9
11:28:09.145 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for left: 0
11:28:09.145 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.145 [debug] Recursive field result for right: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] do_fold called with non-variant data: 0
11:28:09.145 [debug] Recursive field result for right: 9
11:28:09.145 [debug] do_fold called with non-variant data: 9
11:28:09.145 [debug] do_fold called with non-variant data: 9
11:28:09.145 [debug] Recursive field result for right: 26
11:28:09.145 [debug] do_fold called with non-variant data: 26
11:28:09.145 [debug] do_fold called with non-variant data: 26
11:28:09.145 [debug] Recursive field result for right: 59
11:28:09.145 [debug] do_fold called with non-variant data: 59
11:28:09.145 [debug] do_fold called with non-variant data: 59
11:28:09.145 [debug] Recursive field result for left: 124
11:28:09.145 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.145 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.145 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.146 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for left: 0
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for right: 0
11:28:09.146 [debug] do_fold called with non-variant data: 0
11:28:09.146 [debug] do_fold called with non-variant data: 0
11:28:09.146 [debug] Recursive field result for left: 9
11:28:09.146 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for left: 0
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for right: 0
11:28:09.146 [debug] do_fold called with non-variant data: 0
11:28:09.146 [debug] do_fold called with non-variant data: 0
11:28:09.146 [debug] Recursive field result for right: 9
11:28:09.146 [debug] do_fold called with non-variant data: 9
11:28:09.146 [debug] do_fold called with non-variant data: 9
11:28:09.146 [debug] Recursive field result for left: 26
11:28:09.146 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.146 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for left: 0
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for right: 0
11:28:09.146 [debug] do_fold called with non-variant data: 0
11:28:09.146 [debug] do_fold called with non-variant data: 0
11:28:09.146 [debug] Recursive field result for left: 9
11:28:09.146 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for left: 0
11:28:09.146 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.146 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.146 [debug] Recursive field result for right: 0
11:28:09.146 [debug] do_fold called with non-variant data: 0
11:28:09.148 [debug] do_fold called with non-variant data: 0
11:28:09.148 [debug] Recursive field result for right: 9
11:28:09.148 [debug] do_fold called with non-variant data: 9
11:28:09.148 [debug] do_fold called with non-variant data: 9
11:28:09.148 [debug] Recursive field result for right: 26
11:28:09.148 [debug] do_fold called with non-variant data: 26
11:28:09.148 [debug] do_fold called with non-variant data: 26
11:28:09.148 [debug] Recursive field result for left: 59
11:28:09.148 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.148 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.148 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.149 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for left: 0
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for right: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] Recursive field result for left: 9
11:28:09.149 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for left: 0
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for right: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] Recursive field result for right: 9
11:28:09.149 [debug] do_fold called with non-variant data: 9
11:28:09.149 [debug] do_fold called with non-variant data: 9
11:28:09.149 [debug] Recursive field result for left: 26
11:28:09.149 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.149 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for left: 0
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for right: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] Recursive field result for left: 9
11:28:09.149 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for left: 0
11:28:09.149 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.149 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.149 [debug] Recursive field result for right: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] do_fold called with non-variant data: 0
11:28:09.149 [debug] Recursive field result for right: 9
11:28:09.149 [debug] do_fold called with non-variant data: 9
11:28:09.149 [debug] do_fold called with non-variant data: 9
11:28:09.149 [debug] Recursive field result for right: 26
11:28:09.149 [debug] do_fold called with non-variant data: 26
11:28:09.149 [debug] do_fold called with non-variant data: 26
11:28:09.149 [debug] Recursive field result for right: 59
11:28:09.149 [debug] do_fold called with non-variant data: 59
11:28:09.149 [debug] do_fold called with non-variant data: 59
11:28:09.149 [debug] Recursive field result for right: 124
11:28:09.149 [debug] do_fold called with non-variant data: 124
11:28:09.149 [debug] do_fold called with non-variant data: 124
11:28:09.149 [debug] Recursive field result for right: 253
11:28:09.149 [debug] do_fold called with non-variant data: 253
11:28:09.149 [debug] do_fold called with non-variant data: 253
11:28:09.149 [debug] Recursive field result for right: 510
11:28:09.149 [debug] do_fold called with non-variant data: 510
11:28:09.149 [debug] do_fold called with non-variant data: 510
11:28:09.149 [debug] Recursive field result for right: 1023
11:28:09.149 [debug] do_fold called with non-variant data: 1023
11:28:09.149 [debug] do_fold called with non-variant data: 1023
11:28:09.149 [debug] Recursive field result for left: 2048
11:28:09.151 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
11:28:09.154 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
11:28:09.156 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:09.156 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:09.157 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.157 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.157 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.158 [debug] Recursive field result for left: 0
11:28:09.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.158 [debug] Recursive field result for right: 0
11:28:09.158 [debug] do_fold called with non-variant data: 0
11:28:09.158 [debug] do_fold called with non-variant data: 0
11:28:09.158 [debug] Recursive field result for left: 9
11:28:09.158 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.158 [debug] Recursive field result for left: 0
11:28:09.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.158 [debug] Recursive field result for right: 0
11:28:09.158 [debug] do_fold called with non-variant data: 0
11:28:09.158 [debug] do_fold called with non-variant data: 0
11:28:09.158 [debug] Recursive field result for right: 9
11:28:09.158 [debug] do_fold called with non-variant data: 9
11:28:09.158 [debug] do_fold called with non-variant data: 9
11:28:09.158 [debug] Recursive field result for left: 26
11:28:09.158 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.158 [debug] Recursive field result for left: 0
11:28:09.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.158 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.158 [debug] Recursive field result for right: 0
11:28:09.158 [debug] do_fold called with non-variant data: 0
11:28:09.158 [debug] do_fold called with non-variant data: 0
11:28:09.158 [debug] Recursive field result for left: 9
11:28:09.159 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for left: 0
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for right: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] Recursive field result for right: 9
11:28:09.159 [debug] do_fold called with non-variant data: 9
11:28:09.159 [debug] do_fold called with non-variant data: 9
11:28:09.159 [debug] Recursive field result for right: 26
11:28:09.159 [debug] do_fold called with non-variant data: 26
11:28:09.159 [debug] do_fold called with non-variant data: 26
11:28:09.159 [debug] Recursive field result for left: 59
11:28:09.159 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for left: 0
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for right: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] Recursive field result for left: 9
11:28:09.159 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for left: 0
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for right: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] Recursive field result for right: 9
11:28:09.159 [debug] do_fold called with non-variant data: 9
11:28:09.159 [debug] do_fold called with non-variant data: 9
11:28:09.159 [debug] Recursive field result for left: 26
11:28:09.159 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for left: 0
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.159 [debug] Recursive field result for right: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] do_fold called with non-variant data: 0
11:28:09.159 [debug] Recursive field result for left: 9
11:28:09.159 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.159 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.159 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for left: 0
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for right: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] Recursive field result for right: 9
11:28:09.160 [debug] do_fold called with non-variant data: 9
11:28:09.160 [debug] do_fold called with non-variant data: 9
11:28:09.160 [debug] Recursive field result for right: 26
11:28:09.160 [debug] do_fold called with non-variant data: 26
11:28:09.160 [debug] do_fold called with non-variant data: 26
11:28:09.160 [debug] Recursive field result for right: 59
11:28:09.160 [debug] do_fold called with non-variant data: 59
11:28:09.160 [debug] do_fold called with non-variant data: 59
11:28:09.160 [debug] Recursive field result for left: 124
11:28:09.160 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for left: 0
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for right: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] Recursive field result for left: 9
11:28:09.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for left: 0
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for right: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] Recursive field result for right: 9
11:28:09.160 [debug] do_fold called with non-variant data: 9
11:28:09.160 [debug] do_fold called with non-variant data: 9
11:28:09.160 [debug] Recursive field result for left: 26
11:28:09.160 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for left: 0
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.160 [debug] Recursive field result for right: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] do_fold called with non-variant data: 0
11:28:09.160 [debug] Recursive field result for left: 9
11:28:09.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.160 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.161 [debug] Recursive field result for left: 0
11:28:09.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.161 [debug] Recursive field result for right: 0
11:28:09.161 [debug] do_fold called with non-variant data: 0
11:28:09.161 [debug] do_fold called with non-variant data: 0
11:28:09.161 [debug] Recursive field result for right: 9
11:28:09.161 [debug] do_fold called with non-variant data: 9
11:28:09.161 [debug] do_fold called with non-variant data: 9
11:28:09.161 [debug] Recursive field result for right: 26
11:28:09.161 [debug] do_fold called with non-variant data: 26
11:28:09.161 [debug] do_fold called with non-variant data: 26
11:28:09.161 [debug] Recursive field result for left: 59
11:28:09.161 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.161 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.161 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.161 [debug] Recursive field result for left: 0
11:28:09.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.161 [debug] Recursive field result for right: 0
11:28:09.161 [debug] do_fold called with non-variant data: 0
11:28:09.161 [debug] do_fold called with non-variant data: 0
11:28:09.161 [debug] Recursive field result for left: 9
11:28:09.161 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.161 [debug] Recursive field result for left: 0
11:28:09.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.161 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.161 [debug] Recursive field result for right: 0
11:28:09.161 [debug] do_fold called with non-variant data: 0
11:28:09.161 [debug] do_fold called with non-variant data: 0
11:28:09.161 [debug] Recursive field result for right: 9
11:28:09.161 [debug] do_fold called with non-variant data: 9
11:28:09.161 [debug] do_fold called with non-variant data: 9
11:28:09.161 [debug] Recursive field result for left: 26
11:28:09.163 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.163 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.163 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.163 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.163 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.163 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.163 [debug] Recursive field result for left: 0
11:28:09.163 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.163 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.163 [debug] Recursive field result for right: 0
11:28:09.163 [debug] do_fold called with non-variant data: 0
11:28:09.163 [debug] do_fold called with non-variant data: 0
11:28:09.163 [debug] Recursive field result for left: 9
11:28:09.163 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.163 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.163 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.163 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.163 [debug] Recursive field result for left: 0
11:28:09.163 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.163 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.163 [debug] Recursive field result for right: 0
11:28:09.163 [debug] do_fold called with non-variant data: 0
11:28:09.163 [debug] do_fold called with non-variant data: 0
11:28:09.163 [debug] Recursive field result for right: 9
11:28:09.163 [debug] do_fold called with non-variant data: 9
11:28:09.163 [debug] do_fold called with non-variant data: 9
11:28:09.163 [debug] Recursive field result for right: 26
11:28:09.163 [debug] do_fold called with non-variant data: 26
11:28:09.163 [debug] do_fold called with non-variant data: 26
11:28:09.163 [debug] Recursive field result for right: 59
11:28:09.163 [debug] do_fold called with non-variant data: 59
11:28:09.163 [debug] do_fold called with non-variant data: 59
11:28:09.163 [debug] Recursive field result for right: 124
11:28:09.163 [debug] do_fold called with non-variant data: 124
11:28:09.163 [debug] do_fold called with non-variant data: 124
11:28:09.163 [debug] Recursive field result for left: 253
11:28:09.164 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.164 [debug] Recursive field result for left: 0
11:28:09.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.164 [debug] Recursive field result for right: 0
11:28:09.164 [debug] do_fold called with non-variant data: 0
11:28:09.164 [debug] do_fold called with non-variant data: 0
11:28:09.164 [debug] Recursive field result for left: 9
11:28:09.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.164 [debug] Recursive field result for left: 0
11:28:09.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.164 [debug] Recursive field result for right: 0
11:28:09.164 [debug] do_fold called with non-variant data: 0
11:28:09.164 [debug] do_fold called with non-variant data: 0
11:28:09.164 [debug] Recursive field result for right: 9
11:28:09.164 [debug] do_fold called with non-variant data: 9
11:28:09.164 [debug] do_fold called with non-variant data: 9
11:28:09.164 [debug] Recursive field result for left: 26
11:28:09.164 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.164 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.164 [debug] Recursive field result for left: 0
11:28:09.165 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.165 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.165 [debug] Recursive field result for right: 0
11:28:09.165 [debug] do_fold called with non-variant data: 0
11:28:09.165 [debug] do_fold called with non-variant data: 0
11:28:09.165 [debug] Recursive field result for left: 9
11:28:09.165 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.165 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.165 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.165 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.165 [debug] Recursive field result for left: 0
11:28:09.165 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for right: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] Recursive field result for right: 9
11:28:09.166 [debug] do_fold called with non-variant data: 9
11:28:09.166 [debug] do_fold called with non-variant data: 9
11:28:09.166 [debug] Recursive field result for right: 26
11:28:09.166 [debug] do_fold called with non-variant data: 26
11:28:09.166 [debug] do_fold called with non-variant data: 26
11:28:09.166 [debug] Recursive field result for left: 59
11:28:09.166 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.166 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.166 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for left: 0
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for right: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] Recursive field result for left: 9
11:28:09.166 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for left: 0
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for right: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] Recursive field result for right: 9
11:28:09.166 [debug] do_fold called with non-variant data: 9
11:28:09.166 [debug] do_fold called with non-variant data: 9
11:28:09.166 [debug] Recursive field result for left: 26
11:28:09.166 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.166 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for left: 0
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for right: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] Recursive field result for left: 9
11:28:09.166 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for left: 0
11:28:09.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.166 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.166 [debug] Recursive field result for right: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] do_fold called with non-variant data: 0
11:28:09.166 [debug] Recursive field result for right: 9
11:28:09.166 [debug] do_fold called with non-variant data: 9
11:28:09.166 [debug] do_fold called with non-variant data: 9
11:28:09.166 [debug] Recursive field result for right: 26
11:28:09.166 [debug] do_fold called with non-variant data: 26
11:28:09.166 [debug] do_fold called with non-variant data: 26
11:28:09.166 [debug] Recursive field result for right: 59
11:28:09.166 [debug] do_fold called with non-variant data: 59
11:28:09.167 [debug] do_fold called with non-variant data: 59
11:28:09.167 [debug] Recursive field result for left: 124
11:28:09.167 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for left: 0
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for right: 0
11:28:09.167 [debug] do_fold called with non-variant data: 0
11:28:09.167 [debug] do_fold called with non-variant data: 0
11:28:09.167 [debug] Recursive field result for left: 9
11:28:09.167 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for left: 0
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for right: 0
11:28:09.167 [debug] do_fold called with non-variant data: 0
11:28:09.167 [debug] do_fold called with non-variant data: 0
11:28:09.167 [debug] Recursive field result for right: 9
11:28:09.167 [debug] do_fold called with non-variant data: 9
11:28:09.167 [debug] do_fold called with non-variant data: 9
11:28:09.167 [debug] Recursive field result for left: 26
11:28:09.167 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for left: 0
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for right: 0
11:28:09.167 [debug] do_fold called with non-variant data: 0
11:28:09.167 [debug] do_fold called with non-variant data: 0
11:28:09.167 [debug] Recursive field result for left: 9
11:28:09.167 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for left: 0
11:28:09.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.167 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.167 [debug] Recursive field result for right: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] Recursive field result for right: 9
11:28:09.169 [debug] do_fold called with non-variant data: 9
11:28:09.169 [debug] do_fold called with non-variant data: 9
11:28:09.169 [debug] Recursive field result for right: 26
11:28:09.169 [debug] do_fold called with non-variant data: 26
11:28:09.169 [debug] do_fold called with non-variant data: 26
11:28:09.169 [debug] Recursive field result for left: 59
11:28:09.169 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.169 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.169 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for left: 0
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for right: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] Recursive field result for left: 9
11:28:09.169 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for left: 0
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for right: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] Recursive field result for right: 9
11:28:09.169 [debug] do_fold called with non-variant data: 9
11:28:09.169 [debug] do_fold called with non-variant data: 9
11:28:09.169 [debug] Recursive field result for left: 26
11:28:09.169 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.169 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for left: 0
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for right: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] Recursive field result for left: 9
11:28:09.169 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for left: 0
11:28:09.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.169 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.169 [debug] Recursive field result for right: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] do_fold called with non-variant data: 0
11:28:09.169 [debug] Recursive field result for right: 9
11:28:09.169 [debug] do_fold called with non-variant data: 9
11:28:09.169 [debug] do_fold called with non-variant data: 9
11:28:09.169 [debug] Recursive field result for right: 26
11:28:09.169 [debug] do_fold called with non-variant data: 26
11:28:09.170 [debug] do_fold called with non-variant data: 26
11:28:09.170 [debug] Recursive field result for right: 59
11:28:09.170 [debug] do_fold called with non-variant data: 59
11:28:09.170 [debug] do_fold called with non-variant data: 59
11:28:09.170 [debug] Recursive field result for right: 124
11:28:09.170 [debug] do_fold called with non-variant data: 124
11:28:09.170 [debug] do_fold called with non-variant data: 124
11:28:09.170 [debug] Recursive field result for right: 253
11:28:09.170 [debug] do_fold called with non-variant data: 253
11:28:09.170 [debug] do_fold called with non-variant data: 253
11:28:09.170 [debug] Recursive field result for left: 510
11:28:09.171 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.171 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.171 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.171 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for left: 0
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for right: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] Recursive field result for left: 9
11:28:09.172 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for left: 0
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for right: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] Recursive field result for right: 9
11:28:09.172 [debug] do_fold called with non-variant data: 9
11:28:09.172 [debug] do_fold called with non-variant data: 9
11:28:09.172 [debug] Recursive field result for left: 26
11:28:09.172 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for left: 0
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for right: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] Recursive field result for left: 9
11:28:09.172 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for left: 0
11:28:09.172 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.172 [debug] Recursive field result for right: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] do_fold called with non-variant data: 0
11:28:09.172 [debug] Recursive field result for right: 9
11:28:09.172 [debug] do_fold called with non-variant data: 9
11:28:09.172 [debug] do_fold called with non-variant data: 9
11:28:09.172 [debug] Recursive field result for right: 26
11:28:09.172 [debug] do_fold called with non-variant data: 26
11:28:09.172 [debug] do_fold called with non-variant data: 26
11:28:09.172 [debug] Recursive field result for left: 59
11:28:09.172 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.172 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.172 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.173 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for left: 0
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for right: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] Recursive field result for left: 9
11:28:09.173 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for left: 0
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for right: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] Recursive field result for right: 9
11:28:09.173 [debug] do_fold called with non-variant data: 9
11:28:09.173 [debug] do_fold called with non-variant data: 9
11:28:09.173 [debug] Recursive field result for left: 26
11:28:09.173 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.173 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for left: 0
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for right: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] Recursive field result for left: 9
11:28:09.173 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for left: 0
11:28:09.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.173 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.173 [debug] Recursive field result for right: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] do_fold called with non-variant data: 0
11:28:09.173 [debug] Recursive field result for right: 9
11:28:09.173 [debug] do_fold called with non-variant data: 9
11:28:09.176 [debug] do_fold called with non-variant data: 9
11:28:09.176 [debug] Recursive field result for right: 26
11:28:09.176 [debug] do_fold called with non-variant data: 26
11:28:09.176 [debug] do_fold called with non-variant data: 26
11:28:09.176 [debug] Recursive field result for right: 59
11:28:09.176 [debug] do_fold called with non-variant data: 59
11:28:09.176 [debug] do_fold called with non-variant data: 59
11:28:09.176 [debug] Recursive field result for left: 124
11:28:09.176 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.176 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.176 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for left: 0
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for right: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] Recursive field result for left: 9
11:28:09.177 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for left: 0
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for right: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] Recursive field result for right: 9
11:28:09.177 [debug] do_fold called with non-variant data: 9
11:28:09.177 [debug] do_fold called with non-variant data: 9
11:28:09.177 [debug] Recursive field result for left: 26
11:28:09.177 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for left: 0
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for right: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] Recursive field result for left: 9
11:28:09.177 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for left: 0
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for right: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] Recursive field result for right: 9
11:28:09.177 [debug] do_fold called with non-variant data: 9
11:28:09.177 [debug] do_fold called with non-variant data: 9
11:28:09.177 [debug] Recursive field result for right: 26
11:28:09.177 [debug] do_fold called with non-variant data: 26
11:28:09.177 [debug] do_fold called with non-variant data: 26
11:28:09.177 [debug] Recursive field result for left: 59
11:28:09.177 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for left: 0
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for right: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] do_fold called with non-variant data: 0
11:28:09.177 [debug] Recursive field result for left: 9
11:28:09.177 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.177 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.177 [debug] Recursive field result for left: 0
11:28:09.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.178 [debug] Recursive field result for right: 0
11:28:09.178 [debug] do_fold called with non-variant data: 0
11:28:09.178 [debug] do_fold called with non-variant data: 0
11:28:09.178 [debug] Recursive field result for right: 9
11:28:09.178 [debug] do_fold called with non-variant data: 9
11:28:09.178 [debug] do_fold called with non-variant data: 9
11:28:09.178 [debug] Recursive field result for left: 26
11:28:09.178 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.178 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.178 [debug] Recursive field result for left: 0
11:28:09.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.178 [debug] Recursive field result for right: 0
11:28:09.178 [debug] do_fold called with non-variant data: 0
11:28:09.178 [debug] do_fold called with non-variant data: 0
11:28:09.178 [debug] Recursive field result for left: 9
11:28:09.178 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.178 [debug] Recursive field result for left: 0
11:28:09.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.178 [debug] Recursive field result for right: 0
11:28:09.178 [debug] do_fold called with non-variant data: 0
11:28:09.178 [debug] do_fold called with non-variant data: 0
11:28:09.178 [debug] Recursive field result for right: 9
11:28:09.178 [debug] do_fold called with non-variant data: 9
11:28:09.178 [debug] do_fold called with non-variant data: 9
11:28:09.178 [debug] Recursive field result for right: 26
11:28:09.178 [debug] do_fold called with non-variant data: 26
11:28:09.178 [debug] do_fold called with non-variant data: 26
11:28:09.178 [debug] Recursive field result for right: 59
11:28:09.178 [debug] do_fold called with non-variant data: 59
11:28:09.178 [debug] do_fold called with non-variant data: 59
11:28:09.178 [debug] Recursive field result for right: 124
11:28:09.178 [debug] do_fold called with non-variant data: 124
11:28:09.178 [debug] do_fold called with non-variant data: 124
11:28:09.178 [debug] Recursive field result for left: 253
11:28:09.178 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.178 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for left: 0
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for right: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] Recursive field result for left: 9
11:28:09.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for left: 0
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for right: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] Recursive field result for right: 9
11:28:09.179 [debug] do_fold called with non-variant data: 9
11:28:09.179 [debug] do_fold called with non-variant data: 9
11:28:09.179 [debug] Recursive field result for left: 26
11:28:09.179 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for left: 0
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for right: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] Recursive field result for left: 9
11:28:09.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for left: 0
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for right: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] do_fold called with non-variant data: 0
11:28:09.179 [debug] Recursive field result for right: 9
11:28:09.179 [debug] do_fold called with non-variant data: 9
11:28:09.179 [debug] do_fold called with non-variant data: 9
11:28:09.179 [debug] Recursive field result for right: 26
11:28:09.179 [debug] do_fold called with non-variant data: 26
11:28:09.179 [debug] do_fold called with non-variant data: 26
11:28:09.179 [debug] Recursive field result for left: 59
11:28:09.179 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.179 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.179 [debug] Recursive field result for left: 0
11:28:09.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.180 [debug] Recursive field result for right: 0
11:28:09.180 [debug] do_fold called with non-variant data: 0
11:28:09.180 [debug] do_fold called with non-variant data: 0
11:28:09.180 [debug] Recursive field result for left: 9
11:28:09.180 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.180 [debug] Recursive field result for left: 0
11:28:09.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.180 [debug] Recursive field result for right: 0
11:28:09.180 [debug] do_fold called with non-variant data: 0
11:28:09.180 [debug] do_fold called with non-variant data: 0
11:28:09.180 [debug] Recursive field result for right: 9
11:28:09.180 [debug] do_fold called with non-variant data: 9
11:28:09.180 [debug] do_fold called with non-variant data: 9
11:28:09.180 [debug] Recursive field result for left: 26
11:28:09.180 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.180 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.180 [debug] Recursive field result for left: 0
11:28:09.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.180 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.180 [debug] Recursive field result for right: 0
11:28:09.180 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] Recursive field result for left: 9
11:28:09.181 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.181 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.181 [debug] Recursive field result for left: 0
11:28:09.181 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.181 [debug] Recursive field result for right: 0
11:28:09.181 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] Recursive field result for right: 9
11:28:09.181 [debug] do_fold called with non-variant data: 9
11:28:09.181 [debug] do_fold called with non-variant data: 9
11:28:09.181 [debug] Recursive field result for right: 26
11:28:09.181 [debug] do_fold called with non-variant data: 26
11:28:09.181 [debug] do_fold called with non-variant data: 26
11:28:09.181 [debug] Recursive field result for right: 59
11:28:09.181 [debug] do_fold called with non-variant data: 59
11:28:09.181 [debug] do_fold called with non-variant data: 59
11:28:09.181 [debug] Recursive field result for left: 124
11:28:09.181 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.181 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.181 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.181 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.181 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.181 [debug] Recursive field result for left: 0
11:28:09.181 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.181 [debug] Recursive field result for right: 0
11:28:09.181 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] Recursive field result for left: 9
11:28:09.181 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.181 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.181 [debug] Recursive field result for left: 0
11:28:09.181 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.181 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.181 [debug] Recursive field result for right: 0
11:28:09.181 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] do_fold called with non-variant data: 0
11:28:09.181 [debug] Recursive field result for right: 9
11:28:09.181 [debug] do_fold called with non-variant data: 9
11:28:09.181 [debug] do_fold called with non-variant data: 9
11:28:09.181 [debug] Recursive field result for left: 26
11:28:09.181 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.182 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.182 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.182 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.182 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.182 [debug] Recursive field result for left: 0
11:28:09.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.182 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.182 [debug] Recursive field result for right: 0
11:28:09.182 [debug] do_fold called with non-variant data: 0
11:28:09.182 [debug] do_fold called with non-variant data: 0
11:28:09.182 [debug] Recursive field result for left: 9
11:28:09.182 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.182 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.182 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.182 [debug] Recursive field result for left: 0
11:28:09.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.182 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.184 [debug] Recursive field result for right: 0
11:28:09.184 [debug] do_fold called with non-variant data: 0
11:28:09.184 [debug] do_fold called with non-variant data: 0
11:28:09.184 [debug] Recursive field result for right: 9
11:28:09.184 [debug] do_fold called with non-variant data: 9
11:28:09.184 [debug] do_fold called with non-variant data: 9
11:28:09.184 [debug] Recursive field result for right: 26
11:28:09.184 [debug] do_fold called with non-variant data: 26
11:28:09.184 [debug] do_fold called with non-variant data: 26
11:28:09.184 [debug] Recursive field result for left: 59
11:28:09.184 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.184 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.184 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.184 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.184 [debug] Recursive field result for left: 0
11:28:09.184 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.184 [debug] Recursive field result for right: 0
11:28:09.184 [debug] do_fold called with non-variant data: 0
11:28:09.184 [debug] do_fold called with non-variant data: 0
11:28:09.184 [debug] Recursive field result for left: 9
11:28:09.184 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.184 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.184 [debug] Recursive field result for left: 0
11:28:09.184 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.184 [debug] Recursive field result for right: 0
11:28:09.184 [debug] do_fold called with non-variant data: 0
11:28:09.184 [debug] do_fold called with non-variant data: 0
11:28:09.184 [debug] Recursive field result for right: 9
11:28:09.184 [debug] do_fold called with non-variant data: 9
11:28:09.184 [debug] do_fold called with non-variant data: 9
11:28:09.184 [debug] Recursive field result for left: 26
11:28:09.184 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.184 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.184 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.184 [debug] Recursive field result for left: 0
11:28:09.184 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.184 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.184 [debug] Recursive field result for right: 0
11:28:09.185 [debug] do_fold called with non-variant data: 0
11:28:09.185 [debug] do_fold called with non-variant data: 0
11:28:09.185 [debug] Recursive field result for left: 9
11:28:09.185 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.185 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.185 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.185 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.185 [debug] Recursive field result for left: 0
11:28:09.185 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.185 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.185 [debug] Recursive field result for right: 0
11:28:09.185 [debug] do_fold called with non-variant data: 0
11:28:09.185 [debug] do_fold called with non-variant data: 0
11:28:09.185 [debug] Recursive field result for right: 9
11:28:09.185 [debug] do_fold called with non-variant data: 9
11:28:09.185 [debug] do_fold called with non-variant data: 9
11:28:09.185 [debug] Recursive field result for right: 26
11:28:09.185 [debug] do_fold called with non-variant data: 26
11:28:09.185 [debug] do_fold called with non-variant data: 26
11:28:09.185 [debug] Recursive field result for right: 59
11:28:09.185 [debug] do_fold called with non-variant data: 59
11:28:09.185 [debug] do_fold called with non-variant data: 59
11:28:09.185 [debug] Recursive field result for right: 124
11:28:09.185 [debug] do_fold called with non-variant data: 124
11:28:09.185 [debug] do_fold called with non-variant data: 124
11:28:09.185 [debug] Recursive field result for right: 253
11:28:09.185 [debug] do_fold called with non-variant data: 253
11:28:09.185 [debug] do_fold called with non-variant data: 253
11:28:09.185 [debug] Recursive field result for right: 510
11:28:09.185 [debug] do_fold called with non-variant data: 510
11:28:09.185 [debug] do_fold called with non-variant data: 510
11:28:09.185 [debug] Recursive field result for left: 1023
11:28:09.186 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
11:28:09.186 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
11:28:09.187 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.187 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.187 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.187 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.187 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.187 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.187 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.187 [debug] Recursive field result for left: 0
11:28:09.187 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.187 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.187 [debug] Recursive field result for right: 0
11:28:09.187 [debug] do_fold called with non-variant data: 0
11:28:09.187 [debug] do_fold called with non-variant data: 0
11:28:09.188 [debug] Recursive field result for left: 9
11:28:09.188 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.188 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.188 [debug] Recursive field result for left: 0
11:28:09.188 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.188 [debug] Recursive field result for right: 0
11:28:09.188 [debug] do_fold called with non-variant data: 0
11:28:09.188 [debug] do_fold called with non-variant data: 0
11:28:09.188 [debug] Recursive field result for right: 9
11:28:09.188 [debug] do_fold called with non-variant data: 9
11:28:09.188 [debug] do_fold called with non-variant data: 9
11:28:09.188 [debug] Recursive field result for left: 26
11:28:09.188 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.188 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.188 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.188 [debug] Recursive field result for left: 0
11:28:09.188 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.188 [debug] Recursive field result for right: 0
11:28:09.188 [debug] do_fold called with non-variant data: 0
11:28:09.188 [debug] do_fold called with non-variant data: 0
11:28:09.188 [debug] Recursive field result for left: 9
11:28:09.188 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.188 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.188 [debug] Recursive field result for left: 0
11:28:09.188 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.188 [debug] Recursive field result for right: 0
11:28:09.188 [debug] do_fold called with non-variant data: 0
11:28:09.188 [debug] do_fold called with non-variant data: 0
11:28:09.188 [debug] Recursive field result for right: 9
11:28:09.188 [debug] do_fold called with non-variant data: 9
11:28:09.188 [debug] do_fold called with non-variant data: 9
11:28:09.188 [debug] Recursive field result for right: 26
11:28:09.188 [debug] do_fold called with non-variant data: 26
11:28:09.188 [debug] do_fold called with non-variant data: 26
11:28:09.188 [debug] Recursive field result for left: 59
11:28:09.188 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.188 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.188 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.188 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for left: 0
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for right: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.189 [debug] Recursive field result for left: 9
11:28:09.189 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for left: 0
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for right: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.189 [debug] Recursive field result for right: 9
11:28:09.189 [debug] do_fold called with non-variant data: 9
11:28:09.189 [debug] do_fold called with non-variant data: 9
11:28:09.189 [debug] Recursive field result for left: 26
11:28:09.189 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.189 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for left: 0
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for right: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.189 [debug] Recursive field result for left: 9
11:28:09.189 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for left: 0
11:28:09.189 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.189 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.189 [debug] Recursive field result for right: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.189 [debug] do_fold called with non-variant data: 0
11:28:09.193 [debug] Recursive field result for right: 9
11:28:09.193 [debug] do_fold called with non-variant data: 9
11:28:09.193 [debug] do_fold called with non-variant data: 9
11:28:09.193 [debug] Recursive field result for right: 26
11:28:09.193 [debug] do_fold called with non-variant data: 26
11:28:09.193 [debug] do_fold called with non-variant data: 26
11:28:09.193 [debug] Recursive field result for right: 59
11:28:09.193 [debug] do_fold called with non-variant data: 59
11:28:09.193 [debug] do_fold called with non-variant data: 59
11:28:09.193 [debug] Recursive field result for left: 124
11:28:09.193 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.193 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.193 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.193 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.193 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.193 [debug] Recursive field result for left: 0
11:28:09.193 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.193 [debug] Recursive field result for right: 0
11:28:09.193 [debug] do_fold called with non-variant data: 0
11:28:09.193 [debug] do_fold called with non-variant data: 0
11:28:09.193 [debug] Recursive field result for left: 9
11:28:09.193 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.193 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.193 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.193 [debug] Recursive field result for left: 0
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for right: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] Recursive field result for right: 9
11:28:09.194 [debug] do_fold called with non-variant data: 9
11:28:09.194 [debug] do_fold called with non-variant data: 9
11:28:09.194 [debug] Recursive field result for left: 26
11:28:09.194 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for left: 0
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for right: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] Recursive field result for left: 9
11:28:09.194 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for left: 0
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for right: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] Recursive field result for right: 9
11:28:09.194 [debug] do_fold called with non-variant data: 9
11:28:09.194 [debug] do_fold called with non-variant data: 9
11:28:09.194 [debug] Recursive field result for right: 26
11:28:09.194 [debug] do_fold called with non-variant data: 26
11:28:09.194 [debug] do_fold called with non-variant data: 26
11:28:09.194 [debug] Recursive field result for left: 59
11:28:09.194 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for left: 0
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for right: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] Recursive field result for left: 9
11:28:09.194 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for left: 0
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for right: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] Recursive field result for right: 9
11:28:09.194 [debug] do_fold called with non-variant data: 9
11:28:09.194 [debug] do_fold called with non-variant data: 9
11:28:09.194 [debug] Recursive field result for left: 26
11:28:09.194 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for left: 0
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for right: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] Recursive field result for left: 9
11:28:09.194 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for left: 0
11:28:09.194 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.194 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.194 [debug] Recursive field result for right: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] do_fold called with non-variant data: 0
11:28:09.194 [debug] Recursive field result for right: 9
11:28:09.194 [debug] do_fold called with non-variant data: 9
11:28:09.195 [debug] do_fold called with non-variant data: 9
11:28:09.195 [debug] Recursive field result for right: 26
11:28:09.195 [debug] do_fold called with non-variant data: 26
11:28:09.195 [debug] do_fold called with non-variant data: 26
11:28:09.195 [debug] Recursive field result for right: 59
11:28:09.195 [debug] do_fold called with non-variant data: 59
11:28:09.195 [debug] do_fold called with non-variant data: 59
11:28:09.196 [debug] Recursive field result for right: 124
11:28:09.196 [debug] do_fold called with non-variant data: 124
11:28:09.196 [debug] do_fold called with non-variant data: 124
11:28:09.196 [debug] Recursive field result for left: 253
11:28:09.196 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.196 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for left: 0
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for right: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] Recursive field result for left: 9
11:28:09.197 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for left: 0
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for right: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] Recursive field result for right: 9
11:28:09.197 [debug] do_fold called with non-variant data: 9
11:28:09.197 [debug] do_fold called with non-variant data: 9
11:28:09.197 [debug] Recursive field result for left: 26
11:28:09.197 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for left: 0
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for right: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] Recursive field result for left: 9
11:28:09.197 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for left: 0
11:28:09.197 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.197 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.197 [debug] Recursive field result for right: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] do_fold called with non-variant data: 0
11:28:09.197 [debug] Recursive field result for right: 9
11:28:09.197 [debug] do_fold called with non-variant data: 9
11:28:09.197 [debug] do_fold called with non-variant data: 9
11:28:09.199 [debug] Recursive field result for right: 26
11:28:09.199 [debug] do_fold called with non-variant data: 26
11:28:09.199 [debug] do_fold called with non-variant data: 26
11:28:09.199 [debug] Recursive field result for left: 59
11:28:09.199 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.199 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.199 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.199 [debug] Recursive field result for left: 0
11:28:09.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.199 [debug] Recursive field result for right: 0
11:28:09.199 [debug] do_fold called with non-variant data: 0
11:28:09.199 [debug] do_fold called with non-variant data: 0
11:28:09.199 [debug] Recursive field result for left: 9
11:28:09.199 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.199 [debug] Recursive field result for left: 0
11:28:09.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.199 [debug] Recursive field result for right: 0
11:28:09.199 [debug] do_fold called with non-variant data: 0
11:28:09.199 [debug] do_fold called with non-variant data: 0
11:28:09.199 [debug] Recursive field result for right: 9
11:28:09.199 [debug] do_fold called with non-variant data: 9
11:28:09.199 [debug] do_fold called with non-variant data: 9
11:28:09.199 [debug] Recursive field result for left: 26
11:28:09.199 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.199 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.199 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for left: 0
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for right: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] Recursive field result for left: 9
11:28:09.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for left: 0
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for right: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] Recursive field result for right: 9
11:28:09.200 [debug] do_fold called with non-variant data: 9
11:28:09.200 [debug] do_fold called with non-variant data: 9
11:28:09.200 [debug] Recursive field result for right: 26
11:28:09.200 [debug] do_fold called with non-variant data: 26
11:28:09.200 [debug] do_fold called with non-variant data: 26
11:28:09.200 [debug] Recursive field result for right: 59
11:28:09.200 [debug] do_fold called with non-variant data: 59
11:28:09.200 [debug] do_fold called with non-variant data: 59
11:28:09.200 [debug] Recursive field result for left: 124
11:28:09.200 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for left: 0
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for right: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] Recursive field result for left: 9
11:28:09.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for left: 0
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for right: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] Recursive field result for right: 9
11:28:09.200 [debug] do_fold called with non-variant data: 9
11:28:09.200 [debug] do_fold called with non-variant data: 9
11:28:09.200 [debug] Recursive field result for left: 26
11:28:09.200 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for left: 0
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for right: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] Recursive field result for left: 9
11:28:09.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for left: 0
11:28:09.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.200 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.200 [debug] Recursive field result for right: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] do_fold called with non-variant data: 0
11:28:09.200 [debug] Recursive field result for right: 9
11:28:09.200 [debug] do_fold called with non-variant data: 9
11:28:09.200 [debug] do_fold called with non-variant data: 9
11:28:09.200 [debug] Recursive field result for right: 26
11:28:09.201 [debug] do_fold called with non-variant data: 26
11:28:09.201 [debug] do_fold called with non-variant data: 26
11:28:09.201 [debug] Recursive field result for left: 59
11:28:09.202 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.202 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.202 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for left: 0
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for right: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] Recursive field result for left: 9
11:28:09.202 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for left: 0
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for right: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] Recursive field result for right: 9
11:28:09.202 [debug] do_fold called with non-variant data: 9
11:28:09.202 [debug] do_fold called with non-variant data: 9
11:28:09.202 [debug] Recursive field result for left: 26
11:28:09.202 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.202 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for left: 0
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for right: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] Recursive field result for left: 9
11:28:09.202 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for left: 0
11:28:09.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.202 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.202 [debug] Recursive field result for right: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] do_fold called with non-variant data: 0
11:28:09.202 [debug] Recursive field result for right: 9
11:28:09.202 [debug] do_fold called with non-variant data: 9
11:28:09.202 [debug] do_fold called with non-variant data: 9
11:28:09.202 [debug] Recursive field result for right: 26
11:28:09.202 [debug] do_fold called with non-variant data: 26
11:28:09.202 [debug] do_fold called with non-variant data: 26
11:28:09.202 [debug] Recursive field result for right: 59
11:28:09.202 [debug] do_fold called with non-variant data: 59
11:28:09.202 [debug] do_fold called with non-variant data: 59
11:28:09.202 [debug] Recursive field result for right: 124
11:28:09.202 [debug] do_fold called with non-variant data: 124
11:28:09.202 [debug] do_fold called with non-variant data: 124
11:28:09.202 [debug] Recursive field result for right: 253
11:28:09.202 [debug] do_fold called with non-variant data: 253
11:28:09.202 [debug] do_fold called with non-variant data: 253
11:28:09.202 [debug] Recursive field result for left: 510
11:28:09.203 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
11:28:09.203 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
11:28:09.203 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.203 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.204 [debug] Recursive field result for left: 0
11:28:09.204 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.204 [debug] Recursive field result for right: 0
11:28:09.204 [debug] do_fold called with non-variant data: 0
11:28:09.204 [debug] do_fold called with non-variant data: 0
11:28:09.204 [debug] Recursive field result for left: 9
11:28:09.204 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.204 [debug] Recursive field result for left: 0
11:28:09.204 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.204 [debug] Recursive field result for right: 0
11:28:09.204 [debug] do_fold called with non-variant data: 0
11:28:09.204 [debug] do_fold called with non-variant data: 0
11:28:09.204 [debug] Recursive field result for right: 9
11:28:09.204 [debug] do_fold called with non-variant data: 9
11:28:09.204 [debug] do_fold called with non-variant data: 9
11:28:09.204 [debug] Recursive field result for left: 26
11:28:09.204 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.204 [debug] Recursive field result for left: 0
11:28:09.204 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.204 [debug] Recursive field result for right: 0
11:28:09.204 [debug] do_fold called with non-variant data: 0
11:28:09.204 [debug] do_fold called with non-variant data: 0
11:28:09.204 [debug] Recursive field result for left: 9
11:28:09.204 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.204 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.204 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.204 [debug] Recursive field result for left: 0
11:28:09.205 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.205 [debug] Recursive field result for right: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] Recursive field result for right: 9
11:28:09.205 [debug] do_fold called with non-variant data: 9
11:28:09.205 [debug] do_fold called with non-variant data: 9
11:28:09.205 [debug] Recursive field result for right: 26
11:28:09.205 [debug] do_fold called with non-variant data: 26
11:28:09.205 [debug] do_fold called with non-variant data: 26
11:28:09.205 [debug] Recursive field result for left: 59
11:28:09.205 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.205 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.205 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.205 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.205 [debug] Recursive field result for left: 0
11:28:09.205 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.205 [debug] Recursive field result for right: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] Recursive field result for left: 9
11:28:09.205 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.205 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.205 [debug] Recursive field result for left: 0
11:28:09.205 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.205 [debug] Recursive field result for right: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] Recursive field result for right: 9
11:28:09.205 [debug] do_fold called with non-variant data: 9
11:28:09.205 [debug] do_fold called with non-variant data: 9
11:28:09.205 [debug] Recursive field result for left: 26
11:28:09.205 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.205 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.205 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.205 [debug] Recursive field result for left: 0
11:28:09.205 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.205 [debug] Recursive field result for right: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] do_fold called with non-variant data: 0
11:28:09.205 [debug] Recursive field result for left: 9
11:28:09.205 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.205 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for left: 0
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for right: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] Recursive field result for right: 9
11:28:09.207 [debug] do_fold called with non-variant data: 9
11:28:09.207 [debug] do_fold called with non-variant data: 9
11:28:09.207 [debug] Recursive field result for right: 26
11:28:09.207 [debug] do_fold called with non-variant data: 26
11:28:09.207 [debug] do_fold called with non-variant data: 26
11:28:09.207 [debug] Recursive field result for right: 59
11:28:09.207 [debug] do_fold called with non-variant data: 59
11:28:09.207 [debug] do_fold called with non-variant data: 59
11:28:09.207 [debug] Recursive field result for left: 124
11:28:09.207 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for left: 0
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for right: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] Recursive field result for left: 9
11:28:09.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for left: 0
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for right: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] Recursive field result for right: 9
11:28:09.207 [debug] do_fold called with non-variant data: 9
11:28:09.207 [debug] do_fold called with non-variant data: 9
11:28:09.207 [debug] Recursive field result for left: 26
11:28:09.207 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for left: 0
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for right: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] Recursive field result for left: 9
11:28:09.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for left: 0
11:28:09.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.207 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.207 [debug] Recursive field result for right: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] do_fold called with non-variant data: 0
11:28:09.207 [debug] Recursive field result for right: 9
11:28:09.211 [debug] do_fold called with non-variant data: 9
11:28:09.211 [debug] do_fold called with non-variant data: 9
11:28:09.211 [debug] Recursive field result for right: 26
11:28:09.211 [debug] do_fold called with non-variant data: 26
11:28:09.211 [debug] do_fold called with non-variant data: 26
11:28:09.211 [debug] Recursive field result for left: 59
11:28:09.211 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.211 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.211 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for left: 0
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for right: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] Recursive field result for left: 9
11:28:09.211 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for left: 0
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for right: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] Recursive field result for right: 9
11:28:09.211 [debug] do_fold called with non-variant data: 9
11:28:09.211 [debug] do_fold called with non-variant data: 9
11:28:09.211 [debug] Recursive field result for left: 26
11:28:09.211 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.211 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for left: 0
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for right: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] Recursive field result for left: 9
11:28:09.211 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for left: 0
11:28:09.211 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.211 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.211 [debug] Recursive field result for right: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] do_fold called with non-variant data: 0
11:28:09.211 [debug] Recursive field result for right: 9
11:28:09.211 [debug] do_fold called with non-variant data: 9
11:28:09.211 [debug] do_fold called with non-variant data: 9
11:28:09.211 [debug] Recursive field result for right: 26
11:28:09.211 [debug] do_fold called with non-variant data: 26
11:28:09.211 [debug] do_fold called with non-variant data: 26
11:28:09.211 [debug] Recursive field result for right: 59
11:28:09.211 [debug] do_fold called with non-variant data: 59
11:28:09.211 [debug] do_fold called with non-variant data: 59
11:28:09.211 [debug] Recursive field result for right: 124
11:28:09.211 [debug] do_fold called with non-variant data: 124
11:28:09.211 [debug] do_fold called with non-variant data: 124
11:28:09.211 [debug] Recursive field result for left: 253
11:28:09.212 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
11:28:09.212 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.212 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.212 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.212 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.212 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.212 [debug] Recursive field result for left: 0
11:28:09.212 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.212 [debug] Recursive field result for right: 0
11:28:09.212 [debug] do_fold called with non-variant data: 0
11:28:09.212 [debug] do_fold called with non-variant data: 0
11:28:09.212 [debug] Recursive field result for left: 9
11:28:09.212 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.212 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.212 [debug] Recursive field result for left: 0
11:28:09.212 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.212 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.212 [debug] Recursive field result for right: 0
11:28:09.212 [debug] do_fold called with non-variant data: 0
11:28:09.212 [debug] do_fold called with non-variant data: 0
11:28:09.212 [debug] Recursive field result for right: 9
11:28:09.213 [debug] do_fold called with non-variant data: 9
11:28:09.213 [debug] do_fold called with non-variant data: 9
11:28:09.213 [debug] Recursive field result for left: 26
11:28:09.213 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.213 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.213 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.213 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.213 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.213 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.213 [debug] Recursive field result for left: 0
11:28:09.213 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.213 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.213 [debug] Recursive field result for right: 0
11:28:09.213 [debug] do_fold called with non-variant data: 0
11:28:09.213 [debug] do_fold called with non-variant data: 0
11:28:09.213 [debug] Recursive field result for left: 9
11:28:09.213 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.213 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.213 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.213 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.213 [debug] Recursive field result for left: 0
11:28:09.213 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.213 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.213 [debug] Recursive field result for right: 0
11:28:09.213 [debug] do_fold called with non-variant data: 0
11:28:09.213 [debug] do_fold called with non-variant data: 0
11:28:09.214 [debug] Recursive field result for right: 9
11:28:09.214 [debug] do_fold called with non-variant data: 9
11:28:09.214 [debug] do_fold called with non-variant data: 9
11:28:09.214 [debug] Recursive field result for right: 26
11:28:09.214 [debug] do_fold called with non-variant data: 26
11:28:09.214 [debug] do_fold called with non-variant data: 26
11:28:09.214 [debug] Recursive field result for left: 59
11:28:09.214 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.214 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.214 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.214 [debug] Recursive field result for left: 0
11:28:09.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.214 [debug] Recursive field result for right: 0
11:28:09.214 [debug] do_fold called with non-variant data: 0
11:28:09.214 [debug] do_fold called with non-variant data: 0
11:28:09.214 [debug] Recursive field result for left: 9
11:28:09.214 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.214 [debug] Recursive field result for left: 0
11:28:09.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.214 [debug] Recursive field result for right: 0
11:28:09.214 [debug] do_fold called with non-variant data: 0
11:28:09.214 [debug] do_fold called with non-variant data: 0
11:28:09.214 [debug] Recursive field result for right: 9
11:28:09.214 [debug] do_fold called with non-variant data: 9
11:28:09.214 [debug] do_fold called with non-variant data: 9
11:28:09.214 [debug] Recursive field result for left: 26
11:28:09.214 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.214 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.214 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for left: 0
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for right: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] Recursive field result for left: 9
11:28:09.215 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for left: 0
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for right: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] Recursive field result for right: 9
11:28:09.215 [debug] do_fold called with non-variant data: 9
11:28:09.215 [debug] do_fold called with non-variant data: 9
11:28:09.215 [debug] Recursive field result for right: 26
11:28:09.215 [debug] do_fold called with non-variant data: 26
11:28:09.215 [debug] do_fold called with non-variant data: 26
11:28:09.215 [debug] Recursive field result for right: 59
11:28:09.215 [debug] do_fold called with non-variant data: 59
11:28:09.215 [debug] do_fold called with non-variant data: 59
11:28:09.215 [debug] Recursive field result for left: 124
11:28:09.215 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
11:28:09.215 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.215 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.215 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for left: 0
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for right: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] Recursive field result for left: 9
11:28:09.215 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for left: 0
11:28:09.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.215 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.215 [debug] Recursive field result for right: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] do_fold called with non-variant data: 0
11:28:09.215 [debug] Recursive field result for right: 9
11:28:09.215 [debug] do_fold called with non-variant data: 9
11:28:09.215 [debug] do_fold called with non-variant data: 9
11:28:09.216 [debug] Recursive field result for left: 26
11:28:09.216 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.216 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.216 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.216 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.216 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.216 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.216 [debug] Recursive field result for left: 0
11:28:09.216 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.216 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.216 [debug] Recursive field result for right: 0
11:28:09.216 [debug] do_fold called with non-variant data: 0
11:28:09.216 [debug] do_fold called with non-variant data: 0
11:28:09.216 [debug] Recursive field result for left: 9
11:28:09.216 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.216 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.216 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.216 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.216 [debug] Recursive field result for left: 0
11:28:09.216 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.216 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.216 [debug] Recursive field result for right: 0
11:28:09.216 [debug] do_fold called with non-variant data: 0
11:28:09.217 [debug] do_fold called with non-variant data: 0
11:28:09.217 [debug] Recursive field result for right: 9
11:28:09.217 [debug] do_fold called with non-variant data: 9
11:28:09.217 [debug] do_fold called with non-variant data: 9
11:28:09.217 [debug] Recursive field result for right: 26
11:28:09.217 [debug] do_fold called with non-variant data: 26
11:28:09.217 [debug] do_fold called with non-variant data: 26
11:28:09.217 [debug] Recursive field result for left: 59
11:28:09.217 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
11:28:09.217 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.217 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.217 [debug] Recursive field result for left: 0
11:28:09.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.217 [debug] Recursive field result for right: 0
11:28:09.217 [debug] do_fold called with non-variant data: 0
11:28:09.217 [debug] do_fold called with non-variant data: 0
11:28:09.217 [debug] Recursive field result for left: 9
11:28:09.217 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.217 [debug] Recursive field result for left: 0
11:28:09.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.217 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.217 [debug] Recursive field result for right: 0
11:28:09.217 [debug] do_fold called with non-variant data: 0
11:28:09.217 [debug] do_fold called with non-variant data: 0
11:28:09.217 [debug] Recursive field result for right: 9
11:28:09.217 [debug] do_fold called with non-variant data: 9
11:28:09.217 [debug] do_fold called with non-variant data: 9
11:28:09.217 [debug] Recursive field result for left: 26
11:28:09.218 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
11:28:09.218 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
11:28:09.218 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.218 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.218 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.218 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.218 [debug] Recursive field result for left: 0
11:28:09.218 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.218 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.218 [debug] Recursive field result for right: 0
11:28:09.218 [debug] do_fold called with non-variant data: 0
11:28:09.218 [debug] do_fold called with non-variant data: 0
11:28:09.218 [debug] Recursive field result for left: 9
11:28:09.218 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
11:28:09.218 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
11:28:09.218 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.218 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.218 [debug] Recursive field result for left: 0
11:28:09.218 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
11:28:09.218 [debug] Processing recursive fields of: %{variant: :leaf}
11:28:09.218 [debug] Recursive field result for right: 0
11:28:09.218 [debug] do_fold called with non-variant data: 0
11:28:09.218 [debug] do_fold called with non-variant data: 0
11:28:09.218 [debug] Recursive field result for right: 9
11:28:09.218 [debug] do_fold called with non-variant data: 9
11:28:09.218 [debug] do_fold called with non-variant data: 9
11:28:09.218 [debug] Recursive field result for right: 26
11:28:09.218 [debug] do_fold called with non-variant data: 26
11:28:09.218 [debug] do_fold called with non-variant data: 26
11:28:09.218 [debug] Recursive field result for right: 59
11:28:09.218 [debug] do_fold called with non-variant data: 59
11:28:09.218 [debug] do_fold called with non-variant data: 59
11:28:09.218 [debug] Recursive field result for right: 124
11:28:09.218 [debug] do_fold called with non-variant data: 124
11:28:09.218 [debug] do_fold called with non-variant data: 124
11:28:09.218 [debug] Recursive field result for right: 253
11:28:09.218 [debug] do_fold called with non-variant data: 253
11:28:09.218 [debug] do_fold called with non-variant data: 253
11:28:09.218 [debug] Recursive field result for right: 510
11:28:09.218 [debug] do_fold called with non-variant data: 510
11:28:09.218 [debug] do_fold called with non-variant data: 510
11:28:09.218 [debug] Recursive field result for right: 1023
11:28:09.218 [debug] do_fold called with non-variant data: 1023
11:28:09.218 [debug] do_fold called with non-variant data: 1023
11:28:09.218 [debug] Recursive field result for right: 2048
11:28:09.218 [debug] do_fold called with non-variant data: 2048
11:28:09.218 [debug] do_fold called with non-variant data: 2048
11:28:09.218 [debug] Recursive field result for right: 4097
11:28:09.218 [debug] do_fold called with non-variant data: 4097
11:28:09.218 [debug] do_fold called with non-variant data: 4097
.11:28:09.220 [debug] Bend initial value: 1
11:28:09.220 [debug] Executing bend with initial: 1
11:28:09.220 [debug] Executing fun with value: 1
11:28:09.220 [debug] Evaluating bend block with value: 1
11:28:09.221 [debug] Block returned: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
11:28:09.221 [debug] Fun returned result: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
11:28:09.221 [debug] Processing constructed value: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
11:28:09.221 [debug] do_bend final result: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
11:28:09.221 [debug] Final bend result: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
11:28:09.221 [debug] do_fold called with data: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}, variant_type: :vertex, state: nil
11:28:09.221 [debug] Processing recursive fields of: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
11:28:09.221 [debug] do_fold called with data: %{to_id: 2, variant: :edge, weight: 2}, variant_type: :edge, state: nil
11:28:09.221 [debug] Processing recursive fields of: %{to_id: 2, variant: :edge, weight: 2}
11:28:09.221 [debug] Recursive field result for edges: 2
12
11:28:09.221 [debug] do_fold called with non-variant data: 2
%{
  edges: %{to_id: 2, variant: :edge, weight: 2},
  id: 1,
  value: 10,
  variant: :vertex
}
.========
%{
  edges: %{to_id: 2, variant: :edge, weight: 5},
  id: 1,
  value: 10,
  variant: :vertex
}
========
11:28:09.221 [debug] do_fold called with data: %{edges: %{to_id: 2, variant: :edge, weight: 5}, id: 1, value: 10, variant: :vertex}, variant_type: :vertex, state: nil
11:28:09.221 [debug] Processing recursive fields of: %{edges: %{to_id: 2, variant: :edge, weight: 5}, id: 1, value: 10, variant: :vertex}
11:28:09.221 [debug] do_fold called with data: %{to_id: 2, variant: :edge, weight: 5}, variant_type: :edge, state: nil
11:28:09.221 [debug] Processing recursive fields of: %{to_id: 2, variant: :edge, weight: 5}
11:28:09.221 [debug] Recursive field result for edges: 5
11:28:09.221 [debug] do_fold called with non-variant data: 5
.
Finished in 5.7 seconds (5.0s async, 0.6s sync)
42 tests, 0 failures, 9 excluded

Randomized with seed 448974

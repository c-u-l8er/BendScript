Excluding tags: [:skip]

warning: function join_and_verify/4 is unused
  test/dist_gdb/dist_graph_database_test.exs:107

warning: default values for the optional arguments in join_cluster_with_retry/4 are never used
  test/dist_gdb/dist_graph_database_test.exs:174

warning: function wait_for_cluster_size/4 is unused
  test/dist_gdb/dist_graph_database_test.exs:80

warning: unused import Prototypal
  test/examples/prototypal_test.exs:3

warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  test/examples/graph_database_test.exs:45: GraphDatabaseTest."test GraphDatabase successful transaction"/1

warning: variable "reason" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/examples/graph_database_test.exs:68: GraphDatabaseTest."test GraphDatabase transaction rollback"/1

warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  test/examples/graph_database_test.exs:78: GraphDatabaseTest."test GraphDatabase schema validation"/1

14:57:26.534 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
14:57:26.534 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
14:57:26.534 [debug] Defining type {:__aliases__, [line: 6], [:LinkedList]} with block: {:__block__, [], [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]}
14:57:26.555 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
14:57:26.534 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
14:57:26.555 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
14:57:26.555 [debug] Extracted variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
14:57:26.555 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
14:57:26.555 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
14:57:26.555 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
14:57:26.555 [debug] Generating constructors for variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
14:57:26.556 [debug] Processing variant: {:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}
14:57:26.556 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
14:57:26.556 [debug] Constructor: :cons, meta: [line: 7], args: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
14:57:26.556 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
14:57:26.556 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
14:57:26.556 [debug] Extracting constructor args from: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
14:57:26.556 [debug] Found value arg: :head
14:57:26.556 [debug] Found recursive arg: :tail
14:57:26.556 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
14:57:26.556 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
14:57:26.556 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
14:57:26.534 [debug] Defining type {:__aliases__, [line: 6], [:LinkedList]} with block: {:__block__, [], [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]}
14:57:26.556 [debug] Extracted variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
14:57:26.556 [debug] Extracted arg_names: [:head, :tail]
14:57:26.556 [debug] Found value arg: :val
14:57:26.556 [debug] Generated arg vars: [{:head, [], nil}, {:tail, [], nil}]
14:57:26.556 [debug] Found recursive arg: :left
14:57:26.556 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
14:57:26.556 [debug] Found recursive arg: :right
14:57:26.556 [debug] Field pairs: [head: {:head, [], nil}, tail: {:tail, [], nil}]
14:57:26.556 [debug] Extracted arg_names: [:val, :left, :right]
14:57:26.556 [debug] Processing variant: {:null, [line: 8], []}
14:57:26.556 [debug] Constructor: :null, meta: [line: 8], args: []
14:57:26.556 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
14:57:26.556 [debug] Extracting constructor args from: []
14:57:26.556 [debug] Extracted arg_names: []
14:57:26.556 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
14:57:26.556 [debug] Generated arg vars: []
14:57:26.556 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
14:57:26.556 [debug] Field pairs: []
14:57:26.556 [debug] Processing variant: {:leaf, [line: 8], []}
14:57:26.556 [debug] Generating constructors for variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
14:57:26.556 [debug] Constructor: :leaf, meta: [line: 8], args: []
14:57:26.556 [debug] Extracting constructor args from: []
14:57:26.556 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
14:57:26.556 [debug] Found value arg: :val
14:57:26.556 [debug] Extracted arg_names: []
14:57:26.556 [debug] Found recursive arg: :left
14:57:26.556 [debug] Found recursive arg: :right
14:57:26.556 [debug] Generated arg vars: []
14:57:26.556 [debug] Extracted arg_names: [:val, :left, :right]
14:57:26.556 [debug] Field pairs: []
14:57:26.556 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
14:57:26.556 [debug] Processing variant: {:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}
14:57:26.556 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
14:57:26.556 [debug] Constructor: :cons, meta: [line: 7], args: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
14:57:26.556 [debug] Found value arg: :val
14:57:26.556 [debug] Extracting constructor args from: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
14:57:26.556 [debug] Found recursive arg: :left
14:57:26.556 [debug] Found value arg: :head
14:57:26.556 [debug] Found recursive arg: :right
14:57:26.556 [debug] Found recursive arg: :tail
14:57:26.556 [debug] Extracted arg_names: [:val, :left, :right]
14:57:26.556 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
14:57:26.556 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
14:57:26.556 [debug] Processing variant: {:leaf, [line: 8], []}
14:57:26.556 [debug] Constructor: :leaf, meta: [line: 8], args: []
14:57:26.556 [debug] Extracting constructor args from: []
14:57:26.556 [debug] Extracted arg_names: []
14:57:26.556 [debug] Generated arg vars: []
14:57:26.556 [debug] Field pairs: []
14:57:26.556 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
14:57:26.556 [debug] Processing variant: {:leaf, [line: 8], []}
14:57:26.556 [debug] Constructor: :leaf, meta: [line: 8], args: []
14:57:26.556 [debug] Extracting constructor args from: []
14:57:26.556 [debug] Extracted arg_names: []
14:57:26.556 [debug] Generated arg vars: []
14:57:26.556 [debug] Field pairs: []
14:57:26.556 [debug] Extracted arg_names: [:head, :tail]
14:57:26.556 [debug] Generated arg vars: [{:head, [], nil}, {:tail, [], nil}]
14:57:26.556 [debug] Field pairs: [head: {:head, [], nil}, tail: {:tail, [], nil}]
14:57:26.556 [debug] Processing variant: {:null, [line: 8], []}
14:57:26.556 [debug] Constructor: :null, meta: [line: 8], args: []
14:57:26.556 [debug] Extracting constructor args from: []
14:57:26.556 [debug] Extracted arg_names: []
14:57:26.556 [debug] Generated arg vars: []
14:57:26.557 [debug] Field pairs: []
warning: variable "node1" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:10: SpaceshipQueriesTest.__ex_unit_setup_0/1

warning: variable "node2" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:11: SpaceshipQueriesTest.__ex_unit_setup_0/1

warning: variable "node3" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:12: SpaceshipQueriesTest.__ex_unit_setup_0/1

warning: variable "created_ships" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:47: SpaceshipQueriesTest."test SpaceshipQueries creates and retrieves spaceships"/1

warning: variable "ship_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/cypher/spaceship_queries_test.exs:75: SpaceshipQueriesTest."test SpaceshipQueries creates spaceship with properties"/1

.........14:57:26.611 [debug] Fold expression: {:list, [line: 17], nil}, opts: [with: 0], cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
14:57:26.611 [debug] Extracting cases from list: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
14:57:26.611 [debug] Extracted fold cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
14:57:26.611 [debug] Generating fold cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
14:57:26.611 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons
14:57:26.611 [debug] Transforming recursive refs:
Body: {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}
Bindings: [head: true, tail: true]
State: 0

14:57:26.611 [debug] Processing recursive reference: {:recu, [line: 19], [{:tail, [line: 19], nil}]}
14:57:26.611 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}
14:57:26.611 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null
14:57:26.611 [debug] Transforming recursive refs:
Body: {0, {:state, [line: 24], nil}}
Bindings: []
State: 0

14:57:26.612 [debug] Generated fold cases after transformation: [{:->, [line: 18], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :null]}], {0, {:state, [line: 24], nil}}]}]
14:57:26.612 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 17], nil}, 0, {:fn, [], [{:->, [], [[{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}], {:case, [], [{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, [do: [{:->, [line: 18], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :null]}], {0, {:state, [line: 24], nil}}]}]]]}]}]}]}
warning: variable "new_state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/ben_ben/fold_with_state_test.exs:19: FoldWithStateTest."test fold operations fold with state"/1

14:57:26.612 [debug] Bend operation with var: :val, initial: 0
14:57:26.613 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
14:57:26.613 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
14:57:26.614 [debug] Bend operation with var: :val, initial: 1
14:57:26.614 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
14:57:26.615 [debug] Fold expression: {:tree, [line: 21], nil}, opts: [], cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
14:57:26.615 [debug] Extracting cases from list: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
14:57:26.615 [debug] Extracted fold cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
14:57:26.616 [debug] Generating fold cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
14:57:26.616 [debug] Generated pattern: {:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]} for variant: :node
14:57:26.616 [debug] Transforming recursive refs:
Body: {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}
Bindings: [val: true, left: true, right: true]
State: nil

14:57:26.616 [debug] Processing recursive reference: {:recu, [line: 22], [{:left, [line: 22], nil}]}
14:57:26.616 [debug] Transformed recursive reference to: {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}
14:57:26.616 [debug] Processing recursive reference: {:recu, [line: 22], [{:right, [line: 22], nil}]}
14:57:26.616 [debug] Transformed recursive reference to: {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}
14:57:26.616 [debug] Generated pattern: {:%{}, [], [variant: :leaf]} for variant: :leaf
14:57:26.616 [debug] Transforming recursive refs:
Body: 0
Bindings: []
State: nil

14:57:26.616 [debug] Generated fold cases after transformation: [{:->, [line: 22], [[{:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :leaf]}], 0]}]
14:57:26.616 [debug] Final quoted expression: {:do_fold, [], [{:tree, [line: 21], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], BenBen}]}], {:case, [], [{:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}, [do: [{:->, [line: 22], [[{:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], BenBen}]}]}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :leaf]}], 0]}]]]}]}]}]}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/ben_ben/sum_of_tree_test.exs:21: SumOfTreeTest."test fold operations basic sum of tree"/1

.14:57:31.606 [debug] Bend initial value: 1
14:57:31.606 [debug] Executing bend with initial: 1
14:57:31.606 [debug] Executing fun with value: 1
14:57:31.606 [debug] Evaluating bend block with value: 1
14:57:31.607 [debug] Block returned: %{head: 1, tail: {:fork, 2}, variant: :cons}
14:57:31.607 [debug] Fun returned result: %{head: 1, tail: {:fork, 2}, variant: :cons}
14:57:31.607 [debug] Processing constructed value: %{head: 1, tail: {:fork, 2}, variant: :cons}
14:57:31.607 [debug] Executing bend with initial: 2
14:57:31.607 [debug] Executing fun with value: 2
14:57:31.607 [debug] Evaluating bend block with value: 2
14:57:31.607 [debug] Block returned: %{head: 2, tail: {:fork, 3}, variant: :cons}
14:57:31.607 [debug] Fun returned result: %{head: 2, tail: {:fork, 3}, variant: :cons}
14:57:31.607 [debug] Processing constructed value: %{head: 2, tail: {:fork, 3}, variant: :cons}
14:57:31.607 [debug] Executing bend with initial: 3
14:57:31.607 [debug] Executing fun with value: 3
14:57:31.607 [debug] Evaluating bend block with value: 3
14:57:31.608 [debug] Block returned: %{head: 3, tail: {:fork, 4}, variant: :cons}
14:57:31.608 [debug] Fun returned result: %{head: 3, tail: {:fork, 4}, variant: :cons}
14:57:31.608 [debug] Processing constructed value: %{head: 3, tail: {:fork, 4}, variant: :cons}
14:57:31.608 [debug] Executing bend with initial: 4
14:57:31.608 [debug] Executing fun with value: 4
14:57:31.608 [debug] Evaluating bend block with value: 4
14:57:31.608 [debug] Block returned: %{variant: :null}
14:57:31.608 [debug] Fun returned result: %{variant: :null}
14:57:31.608 [debug] Processing constructed value: %{variant: :null}
14:57:31.608 [debug] do_bend final result: %{variant: :null}
14:57:31.608 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
14:57:31.608 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
14:57:31.608 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
14:57:31.608 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
.14:57:31.608 [debug] Bend initial value: 0
14:57:31.608 [debug] Executing bend with initial: 0
14:57:31.608 [debug] Executing fun with value: 0
14:57:31.608 [debug] Evaluating bend block with value: 0
14:57:31.608 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
14:57:31.608 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
14:57:31.608 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
14:57:31.608 [debug] Executing bend with initial: 1
14:57:31.608 [debug] Executing fun with value: 1
14:57:31.608 [debug] Evaluating bend block with value: 1
14:57:31.608 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.608 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.608 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.608 [debug] Executing bend with initial: 2
14:57:31.608 [debug] Executing fun with value: 2
14:57:31.608 [debug] Evaluating bend block with value: 2
14:57:31.608 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.608 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.608 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.608 [debug] Executing bend with initial: 3
14:57:31.608 [debug] Executing fun with value: 3
14:57:31.608 [debug] Evaluating bend block with value: 3
14:57:31.608 [debug] Block returned: %{variant: :leaf}
14:57:31.608 [debug] Fun returned result: %{variant: :leaf}
14:57:31.608 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.608 [debug] do_bend final result: %{variant: :leaf}
14:57:31.608 [debug] Executing bend with initial: 3
14:57:31.608 [debug] Executing fun with value: 3
14:57:31.608 [debug] Evaluating bend block with value: 3
14:57:31.608 [debug] Block returned: %{variant: :leaf}
14:57:31.608 [debug] Fun returned result: %{variant: :leaf}
14:57:31.608 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.608 [debug] do_bend final result: %{variant: :leaf}
14:57:31.608 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
14:57:31.608 [debug] Executing bend with initial: 2
14:57:31.608 [debug] Executing fun with value: 2
14:57:31.608 [debug] Evaluating bend block with value: 2
14:57:31.609 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Executing bend with initial: 3
14:57:31.609 [debug] Executing fun with value: 3
14:57:31.609 [debug] Evaluating bend block with value: 3
14:57:31.609 [debug] Block returned: %{variant: :leaf}
14:57:31.609 [debug] Fun returned result: %{variant: :leaf}
14:57:31.609 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{variant: :leaf}
14:57:31.609 [debug] Executing bend with initial: 3
14:57:31.609 [debug] Executing fun with value: 3
14:57:31.609 [debug] Evaluating bend block with value: 3
14:57:31.609 [debug] Block returned: %{variant: :leaf}
14:57:31.609 [debug] Fun returned result: %{variant: :leaf}
14:57:31.609 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
14:57:31.609 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}
14:57:31.609 [debug] Executing bend with initial: 1
14:57:31.609 [debug] Executing fun with value: 1
14:57:31.609 [debug] Evaluating bend block with value: 1
14:57:31.609 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.609 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.609 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.609 [debug] Executing bend with initial: 2
14:57:31.609 [debug] Executing fun with value: 2
14:57:31.609 [debug] Evaluating bend block with value: 2
14:57:31.609 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Executing bend with initial: 3
14:57:31.609 [debug] Executing fun with value: 3
14:57:31.609 [debug] Evaluating bend block with value: 3
14:57:31.609 [debug] Block returned: %{variant: :leaf}
14:57:31.609 [debug] Fun returned result: %{variant: :leaf}
14:57:31.609 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{variant: :leaf}
14:57:31.609 [debug] Executing bend with initial: 3
14:57:31.609 [debug] Executing fun with value: 3
14:57:31.609 [debug] Evaluating bend block with value: 3
14:57:31.609 [debug] Block returned: %{variant: :leaf}
14:57:31.609 [debug] Fun returned result: %{variant: :leaf}
14:57:31.609 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
14:57:31.609 [debug] Executing bend with initial: 2
14:57:31.609 [debug] Executing fun with value: 2
14:57:31.609 [debug] Evaluating bend block with value: 2
14:57:31.609 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.609 [debug] Executing bend with initial: 3
14:57:31.609 [debug] Executing fun with value: 3
14:57:31.609 [debug] Evaluating bend block with value: 3
14:57:31.609 [debug] Block returned: %{variant: :leaf}
14:57:31.609 [debug] Fun returned result: %{variant: :leaf}
14:57:31.609 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{variant: :leaf}
14:57:31.609 [debug] Executing bend with initial: 3
14:57:31.609 [debug] Executing fun with value: 3
14:57:31.609 [debug] Evaluating bend block with value: 3
14:57:31.609 [debug] Block returned: %{variant: :leaf}
14:57:31.609 [debug] Fun returned result: %{variant: :leaf}
14:57:31.609 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{variant: :leaf}
14:57:31.609 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
14:57:31.609 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}
14:57:31.610 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, val: 0, variant: :node}
14:57:31.610 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, val: 0, variant: :node}
.14:57:31.610 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, val: 1, variant: :node}, variant_type: :node, state: nil
14:57:31.610 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, val: 1, variant: :node}
14:57:31.610 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, variant_type: :node, state: nil
14:57:31.610 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
14:57:31.610 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.610 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.610 [debug] Recursive field result for left: 0
14:57:31.610 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.610 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.611 [debug] Recursive field result for right: 0
14:57:31.611 [debug] do_fold called with non-variant data: 0
14:57:31.611 [debug] do_fold called with non-variant data: 0
14:57:31.611 [debug] Recursive field result for left: 2
14:57:31.611 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:31.611 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}
14:57:31.611 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.611 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.611 [debug] Recursive field result for left: 0
14:57:31.611 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.611 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.611 [debug] Recursive field result for right: 0
14:57:31.611 [debug] do_fold called with non-variant data: 0
14:57:31.611 [debug] do_fold called with non-variant data: 0
14:57:31.611 [debug] Recursive field result for right: 3
14:57:31.611 [debug] do_fold called with non-variant data: 2
14:57:31.611 [debug] do_fold called with non-variant data: 3
..14:57:31.611 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
14:57:31.611 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
14:57:31.611 [debug] do_fold called with data: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: 0
14:57:31.611 [debug] Processing recursive fields of: %{head: 2, tail: %{variant: :null}, variant: :cons}
14:57:31.611 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: 0
14:57:31.611 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.611 [debug] Recursive field result for tail: {0, 0}
14:57:31.611 [debug] do_fold called with non-variant data: 0
14:57:31.611 [debug] Recursive field result for tail: {2, 2}
14:57:31.611 [debug] do_fold called with non-variant data: 2
.14:57:31.612 [debug] Bend initial value: 0
14:57:31.612 [debug] Executing bend with initial: 0
14:57:31.612 [debug] Executing fun with value: 0
14:57:31.612 [debug] Evaluating bend block with value: 0
14:57:31.613 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.613 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.613 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.613 [debug] Executing bend with initial: 1
14:57:31.613 [debug] Executing fun with value: 1
14:57:31.613 [debug] Evaluating bend block with value: 1
14:57:31.613 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
14:57:31.613 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
14:57:31.613 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
14:57:31.613 [debug] Executing bend with initial: 2
14:57:31.613 [debug] Executing fun with value: 2
14:57:31.613 [debug] Evaluating bend block with value: 2
14:57:31.613 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.613 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.613 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.613 [debug] Executing bend with initial: 3
14:57:31.613 [debug] Executing fun with value: 3
14:57:31.613 [debug] Evaluating bend block with value: 3
14:57:31.613 [debug] Block returned: %{variant: :leaf}
14:57:31.613 [debug] Fun returned result: %{variant: :leaf}
14:57:31.613 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.613 [debug] do_bend final result: %{variant: :leaf}
14:57:31.613 [debug] Executing bend with initial: 3
14:57:31.613 [debug] Executing fun with value: 3
14:57:31.613 [debug] Evaluating bend block with value: 3
14:57:31.613 [debug] Block returned: %{variant: :leaf}
14:57:31.613 [debug] Fun returned result: %{variant: :leaf}
14:57:31.613 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.613 [debug] do_bend final result: %{variant: :leaf}
14:57:31.613 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
14:57:31.613 [debug] Executing bend with initial: 2
14:57:31.613 [debug] Executing fun with value: 2
14:57:31.614 [debug] Evaluating bend block with value: 2
14:57:31.614 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Executing bend with initial: 3
14:57:31.614 [debug] Executing fun with value: 3
14:57:31.614 [debug] Evaluating bend block with value: 3
14:57:31.614 [debug] Block returned: %{variant: :leaf}
14:57:31.614 [debug] Fun returned result: %{variant: :leaf}
14:57:31.614 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{variant: :leaf}
14:57:31.614 [debug] Executing bend with initial: 3
14:57:31.614 [debug] Executing fun with value: 3
14:57:31.614 [debug] Evaluating bend block with value: 3
14:57:31.614 [debug] Block returned: %{variant: :leaf}
14:57:31.614 [debug] Fun returned result: %{variant: :leaf}
14:57:31.614 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
14:57:31.614 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}
14:57:31.614 [debug] Executing bend with initial: 1
14:57:31.614 [debug] Executing fun with value: 1
14:57:31.614 [debug] Evaluating bend block with value: 1
14:57:31.614 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
14:57:31.614 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
14:57:31.614 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
14:57:31.614 [debug] Executing bend with initial: 2
14:57:31.614 [debug] Executing fun with value: 2
14:57:31.614 [debug] Evaluating bend block with value: 2
14:57:31.614 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Executing bend with initial: 3
14:57:31.614 [debug] Executing fun with value: 3
14:57:31.614 [debug] Evaluating bend block with value: 3
14:57:31.614 [debug] Block returned: %{variant: :leaf}
14:57:31.614 [debug] Fun returned result: %{variant: :leaf}
14:57:31.614 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{variant: :leaf}
14:57:31.614 [debug] Executing bend with initial: 3
14:57:31.614 [debug] Executing fun with value: 3
14:57:31.614 [debug] Evaluating bend block with value: 3
14:57:31.614 [debug] Block returned: %{variant: :leaf}
14:57:31.614 [debug] Fun returned result: %{variant: :leaf}
14:57:31.614 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
14:57:31.614 [debug] Executing bend with initial: 2
14:57:31.614 [debug] Executing fun with value: 2
14:57:31.614 [debug] Evaluating bend block with value: 2
14:57:31.614 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
14:57:31.614 [debug] Executing bend with initial: 3
14:57:31.614 [debug] Executing fun with value: 3
14:57:31.614 [debug] Evaluating bend block with value: 3
14:57:31.614 [debug] Block returned: %{variant: :leaf}
14:57:31.614 [debug] Fun returned result: %{variant: :leaf}
14:57:31.614 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{variant: :leaf}
14:57:31.614 [debug] Executing bend with initial: 3
14:57:31.614 [debug] Executing fun with value: 3
14:57:31.614 [debug] Evaluating bend block with value: 3
14:57:31.614 [debug] Block returned: %{variant: :leaf}
14:57:31.614 [debug] Fun returned result: %{variant: :leaf}
14:57:31.614 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{variant: :leaf}
14:57:31.614 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
14:57:31.614 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}
14:57:31.615 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, value: 0, variant: :node}
14:57:31.615 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, value: 0, variant: :node}
.14:57:31.615 [debug] Bend initial value: 0
14:57:31.615 [debug] Executing bend with initial: 0
14:57:31.615 [debug] Executing fun with value: 0
14:57:31.615 [debug] Evaluating bend block with value: 0
14:57:31.615 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.615 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.615 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.615 [debug] Executing bend with initial: 1
14:57:31.615 [debug] Executing fun with value: 1
14:57:31.615 [debug] Evaluating bend block with value: 1
14:57:31.615 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.615 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.615 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.615 [debug] Executing bend with initial: 2
14:57:31.615 [debug] Executing fun with value: 2
14:57:31.615 [debug] Evaluating bend block with value: 2
14:57:31.615 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.615 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.615 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.615 [debug] Executing bend with initial: 3
14:57:31.615 [debug] Executing fun with value: 3
14:57:31.615 [debug] Evaluating bend block with value: 3
14:57:31.615 [debug] Block returned: %{variant: :leaf}
14:57:31.615 [debug] Fun returned result: %{variant: :leaf}
14:57:31.615 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.615 [debug] do_bend final result: %{variant: :leaf}
14:57:31.615 [debug] Executing bend with initial: 3
14:57:31.615 [debug] Executing fun with value: 3
14:57:31.615 [debug] Evaluating bend block with value: 3
14:57:31.615 [debug] Block returned: %{variant: :leaf}
14:57:31.615 [debug] Fun returned result: %{variant: :leaf}
14:57:31.615 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.615 [debug] do_bend final result: %{variant: :leaf}
14:57:31.615 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.615 [debug] Executing bend with initial: 2
14:57:31.615 [debug] Executing fun with value: 2
14:57:31.615 [debug] Evaluating bend block with value: 2
14:57:31.615 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.615 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.615 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.615 [debug] Executing bend with initial: 3
14:57:31.615 [debug] Executing fun with value: 3
14:57:31.615 [debug] Evaluating bend block with value: 3
14:57:31.615 [debug] Block returned: %{variant: :leaf}
14:57:31.615 [debug] Fun returned result: %{variant: :leaf}
14:57:31.615 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.615 [debug] do_bend final result: %{variant: :leaf}
14:57:31.615 [debug] Executing bend with initial: 3
14:57:31.615 [debug] Executing fun with value: 3
14:57:31.615 [debug] Evaluating bend block with value: 3
14:57:31.615 [debug] Block returned: %{variant: :leaf}
14:57:31.615 [debug] Fun returned result: %{variant: :leaf}
14:57:31.615 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.615 [debug] do_bend final result: %{variant: :leaf}
14:57:31.615 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.615 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.615 [debug] Executing bend with initial: 1
14:57:31.615 [debug] Executing fun with value: 1
14:57:31.615 [debug] Evaluating bend block with value: 1
14:57:31.616 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.616 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.616 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.616 [debug] Executing bend with initial: 2
14:57:31.616 [debug] Executing fun with value: 2
14:57:31.616 [debug] Evaluating bend block with value: 2
14:57:31.616 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.616 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.616 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.616 [debug] Executing bend with initial: 3
14:57:31.616 [debug] Executing fun with value: 3
14:57:31.616 [debug] Evaluating bend block with value: 3
14:57:31.616 [debug] Block returned: %{variant: :leaf}
14:57:31.616 [debug] Fun returned result: %{variant: :leaf}
14:57:31.616 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.616 [debug] do_bend final result: %{variant: :leaf}
14:57:31.616 [debug] Executing bend with initial: 3
14:57:31.616 [debug] Executing fun with value: 3
14:57:31.616 [debug] Evaluating bend block with value: 3
14:57:31.616 [debug] Block returned: %{variant: :leaf}
14:57:31.616 [debug] Fun returned result: %{variant: :leaf}
14:57:31.616 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.616 [debug] do_bend final result: %{variant: :leaf}
14:57:31.616 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.616 [debug] Executing bend with initial: 2
14:57:31.616 [debug] Executing fun with value: 2
14:57:31.616 [debug] Evaluating bend block with value: 2
14:57:31.616 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.616 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.616 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.616 [debug] Executing bend with initial: 3
14:57:31.616 [debug] Executing fun with value: 3
14:57:31.616 [debug] Evaluating bend block with value: 3
14:57:31.616 [debug] Block returned: %{variant: :leaf}
14:57:31.616 [debug] Fun returned result: %{variant: :leaf}
14:57:31.616 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.616 [debug] do_bend final result: %{variant: :leaf}
14:57:31.616 [debug] Executing bend with initial: 3
14:57:31.616 [debug] Executing fun with value: 3
14:57:31.616 [debug] Evaluating bend block with value: 3
14:57:31.616 [debug] Block returned: %{variant: :leaf}
14:57:31.616 [debug] Fun returned result: %{variant: :leaf}
14:57:31.616 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.616 [debug] do_bend final result: %{variant: :leaf}
14:57:31.616 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.616 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.616 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.616 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.616 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: %{0 => 1}
14:57:31.616 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.616 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: %{0 => 1}
14:57:31.616 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.617 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1}
14:57:31.617 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for left: {0, %{0 => 1}}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for right: {0, %{0 => 1}}
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] Recursive field result for left: {2, %{0 => 1, 1 => 2}}
14:57:31.617 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2}
14:57:31.617 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2}}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2}}
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] Recursive field result for right: {2, %{0 => 1, 1 => 2, 2 => 4}}
14:57:31.617 [debug] do_fold called with non-variant data: 2
14:57:31.617 [debug] do_fold called with non-variant data: 2
14:57:31.617 [debug] Recursive field result for left: {1, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
14:57:31.617 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
14:57:31.617 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.617 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
14:57:31.617 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] Recursive field result for left: {2, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
14:57:31.617 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
14:57:31.617 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
14:57:31.617 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
14:57:31.617 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.617 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] do_fold called with non-variant data: 0
14:57:31.617 [debug] Recursive field result for right: {2, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16, 5 => 32}}
14:57:31.617 [debug] do_fold called with non-variant data: 2
14:57:31.617 [debug] do_fold called with non-variant data: 2
14:57:31.617 [debug] Recursive field result for right: {1, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16, 5 => 32, 6 => 64}}
14:57:31.617 [debug] do_fold called with non-variant data: 1
14:57:31.617 [debug] do_fold called with non-variant data: 1
.14:57:31.618 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, value: 2, variant: :node}, variant_type: :node, state: nil
14:57:31.618 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, value: 2, variant: :node}
14:57:31.618 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
14:57:31.618 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
14:57:31.618 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.618 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.618 [debug] Recursive field result for left: []
14:57:31.618 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.618 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.618 [debug] Recursive field result for right: []
14:57:31.618 [debug] do_fold called with non-variant data: []
14:57:31.618 [debug] do_fold called with non-variant data: []
14:57:31.618 [debug] Recursive field result for left: [1]
14:57:31.618 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, variant_type: :node, state: nil
14:57:31.618 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
14:57:31.618 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.618 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.618 [debug] Recursive field result for left: []
14:57:31.618 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.618 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.618 [debug] Recursive field result for right: []
14:57:31.618 [debug] do_fold called with non-variant data: []
14:57:31.618 [debug] do_fold called with non-variant data: []
14:57:31.618 [debug] Recursive field result for right: [3]
14:57:31.618 [debug] do_fold called with non-variant data: [1]
14:57:31.618 [debug] do_fold called with non-variant data: [3]
.14:57:31.618 [debug] Bend initial value: 0
14:57:31.618 [debug] Executing bend with initial: 0
14:57:31.618 [debug] Executing fun with value: 0
14:57:31.618 [debug] Evaluating bend block with value: 0
14:57:31.618 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.618 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.618 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.618 [debug] Executing bend with initial: 1
14:57:31.618 [debug] Executing fun with value: 1
14:57:31.618 [debug] Evaluating bend block with value: 1
14:57:31.618 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.618 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.618 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.618 [debug] Executing bend with initial: 2
14:57:31.618 [debug] Executing fun with value: 2
14:57:31.618 [debug] Evaluating bend block with value: 2
14:57:31.618 [debug] Block returned: %{variant: :leaf}
14:57:31.618 [debug] Fun returned result: %{variant: :leaf}
14:57:31.618 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.618 [debug] do_bend final result: %{variant: :leaf}
14:57:31.618 [debug] Executing bend with initial: 2
14:57:31.618 [debug] Executing fun with value: 2
14:57:31.618 [debug] Evaluating bend block with value: 2
14:57:31.618 [debug] Block returned: %{variant: :leaf}
14:57:31.618 [debug] Fun returned result: %{variant: :leaf}
14:57:31.618 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.618 [debug] do_bend final result: %{variant: :leaf}
14:57:31.618 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
14:57:31.618 [debug] Executing bend with initial: 1
14:57:31.618 [debug] Executing fun with value: 1
14:57:31.618 [debug] Evaluating bend block with value: 1
14:57:31.618 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.618 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.618 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.618 [debug] Executing bend with initial: 2
14:57:31.618 [debug] Executing fun with value: 2
14:57:31.618 [debug] Evaluating bend block with value: 2
14:57:31.618 [debug] Block returned: %{variant: :leaf}
14:57:31.618 [debug] Fun returned result: %{variant: :leaf}
14:57:31.618 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.618 [debug] do_bend final result: %{variant: :leaf}
14:57:31.618 [debug] Executing bend with initial: 2
14:57:31.618 [debug] Executing fun with value: 2
14:57:31.618 [debug] Evaluating bend block with value: 2
14:57:31.618 [debug] Block returned: %{variant: :leaf}
14:57:31.618 [debug] Fun returned result: %{variant: :leaf}
14:57:31.618 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.618 [debug] do_bend final result: %{variant: :leaf}
14:57:31.619 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
14:57:31.619 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.619 [debug] Final bend result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.619 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: nil
14:57:31.619 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.619 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
14:57:31.619 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
14:57:31.619 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.619 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.619 [debug] Recursive field result for left: %{variant: :leaf}
14:57:31.619 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.619 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.619 [debug] Recursive field result for right: %{variant: :leaf}
14:57:31.619 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
14:57:31.619 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
14:57:31.619 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
14:57:31.619 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.619 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.619 [debug] Recursive field result for left: %{variant: :leaf}
14:57:31.619 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.619 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.619 [debug] Recursive field result for right: %{variant: :leaf}
14:57:31.619 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
.14:57:31.619 [debug] Bend initial value: 0
14:57:31.619 [debug] Executing bend with initial: 0
14:57:31.619 [debug] Executing fun with value: 0
14:57:31.619 [debug] Evaluating bend block with value: 0
14:57:31.619 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.619 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.619 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
14:57:31.619 [debug] Executing bend with initial: 1
14:57:31.619 [debug] Executing fun with value: 1
14:57:31.619 [debug] Evaluating bend block with value: 1
14:57:31.619 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.619 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.619 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.619 [debug] Executing bend with initial: 2
14:57:31.619 [debug] Executing fun with value: 2
14:57:31.619 [debug] Evaluating bend block with value: 2
14:57:31.619 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.619 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.619 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.619 [debug] Executing bend with initial: 3
14:57:31.619 [debug] Executing fun with value: 3
14:57:31.619 [debug] Evaluating bend block with value: 3
14:57:31.619 [debug] Block returned: %{variant: :leaf}
14:57:31.619 [debug] Fun returned result: %{variant: :leaf}
14:57:31.619 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.619 [debug] do_bend final result: %{variant: :leaf}
14:57:31.619 [debug] Executing bend with initial: 3
14:57:31.619 [debug] Executing fun with value: 3
14:57:31.619 [debug] Evaluating bend block with value: 3
14:57:31.619 [debug] Block returned: %{variant: :leaf}
14:57:31.619 [debug] Fun returned result: %{variant: :leaf}
14:57:31.619 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.619 [debug] do_bend final result: %{variant: :leaf}
14:57:31.619 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.619 [debug] Executing bend with initial: 2
14:57:31.620 [debug] Executing fun with value: 2
14:57:31.620 [debug] Evaluating bend block with value: 2
14:57:31.620 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Executing bend with initial: 3
14:57:31.620 [debug] Executing fun with value: 3
14:57:31.620 [debug] Evaluating bend block with value: 3
14:57:31.620 [debug] Block returned: %{variant: :leaf}
14:57:31.620 [debug] Fun returned result: %{variant: :leaf}
14:57:31.620 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{variant: :leaf}
14:57:31.620 [debug] Executing bend with initial: 3
14:57:31.620 [debug] Executing fun with value: 3
14:57:31.620 [debug] Evaluating bend block with value: 3
14:57:31.620 [debug] Block returned: %{variant: :leaf}
14:57:31.620 [debug] Fun returned result: %{variant: :leaf}
14:57:31.620 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.620 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.620 [debug] Executing bend with initial: 1
14:57:31.620 [debug] Executing fun with value: 1
14:57:31.620 [debug] Evaluating bend block with value: 1
14:57:31.620 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.620 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.620 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
14:57:31.620 [debug] Executing bend with initial: 2
14:57:31.620 [debug] Executing fun with value: 2
14:57:31.620 [debug] Evaluating bend block with value: 2
14:57:31.620 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Executing bend with initial: 3
14:57:31.620 [debug] Executing fun with value: 3
14:57:31.620 [debug] Evaluating bend block with value: 3
14:57:31.620 [debug] Block returned: %{variant: :leaf}
14:57:31.620 [debug] Fun returned result: %{variant: :leaf}
14:57:31.620 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{variant: :leaf}
14:57:31.620 [debug] Executing bend with initial: 3
14:57:31.620 [debug] Executing fun with value: 3
14:57:31.620 [debug] Evaluating bend block with value: 3
14:57:31.620 [debug] Block returned: %{variant: :leaf}
14:57:31.620 [debug] Fun returned result: %{variant: :leaf}
14:57:31.620 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.620 [debug] Executing bend with initial: 2
14:57:31.620 [debug] Executing fun with value: 2
14:57:31.620 [debug] Evaluating bend block with value: 2
14:57:31.620 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
14:57:31.620 [debug] Executing bend with initial: 3
14:57:31.620 [debug] Executing fun with value: 3
14:57:31.620 [debug] Evaluating bend block with value: 3
14:57:31.620 [debug] Block returned: %{variant: :leaf}
14:57:31.620 [debug] Fun returned result: %{variant: :leaf}
14:57:31.620 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{variant: :leaf}
14:57:31.620 [debug] Executing bend with initial: 3
14:57:31.620 [debug] Executing fun with value: 3
14:57:31.620 [debug] Evaluating bend block with value: 3
14:57:31.620 [debug] Block returned: %{variant: :leaf}
14:57:31.620 [debug] Fun returned result: %{variant: :leaf}
14:57:31.620 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{variant: :leaf}
14:57:31.620 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.620 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.620 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.620 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for left: %{variant: :leaf}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for right: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for left: %{variant: :leaf}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for right: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] Recursive field result for left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 0, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for left: %{variant: :leaf}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for right: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for left: %{variant: :leaf}
14:57:31.621 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.621 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for right: %{variant: :leaf}
14:57:31.621 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
14:57:31.621 [debug] Recursive field result for right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 0, variant: :node}
...14:57:31.625 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.625 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.625 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.625 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.626 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.626 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.626 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.626 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
14:57:31.626 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
.14:57:31.626 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.626 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.626 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.626 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.626 [debug] Recursive field result for edge_list: 0
.14:57:31.626 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.626 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.626 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.626 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.626 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.627 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.627 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.627 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.627 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.627 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.627 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.627 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.627 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.627 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.627 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.627 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.627 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.627 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.627 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.627 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.627 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.627 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.627 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.627 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.627 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.628 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.628 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.628 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.628 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.628 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.628 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.628 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.628 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.628 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.628 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.628 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.628 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.628 [debug] Recursive field result for edge_list: true
14:57:31.628 [debug] Recursive field result for edge_list: true
14:57:31.628 [debug] Recursive field result for edge_list: false
.14:57:31.628 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.628 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.628 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.628 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.629 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.629 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.629 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.629 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.629 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.629 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.629 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.629 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.629 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.629 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.629 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.629 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.629 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.629 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.629 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.629 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.629 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.629 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.629 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.629 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.630 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.630 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.630 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.630 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.630 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.630 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.630 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.630 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.630 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.630 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.630 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.630 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.630 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.630 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.631 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
14:57:31.631 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.631 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
.14:57:31.631 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.631 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.631 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.631 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.631 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
14:57:31.631 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.631 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
14:57:31.631 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.631 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
14:57:31.631 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.631 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.631 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
14:57:31.631 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
14:57:31.631 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.632 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
14:57:31.632 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.632 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
14:57:31.632 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.632 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
14:57:31.632 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.632 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.632 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.632 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.632 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.632 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.632 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.632 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.632 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.632 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.632 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.632 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.633 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.633 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.633 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.633 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.633 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.633 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.633 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.633 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.633 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.633 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.634 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
14:57:31.634 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
14:57:31.634 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
.14:57:31.634 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
14:57:31.634 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.634 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.634 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.634 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.634 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.634 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.634 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
14:57:31.634 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
14:57:31.634 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.634 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.634 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.634 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.635 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.635 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.635 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.635 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.635 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.635 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.635 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
14:57:31.635 [debug] Processing recursive fields of: %{variant: :empty}
14:57:31.635 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
14:57:31.635 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.635 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
14:57:31.635 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
14:57:31.635 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
.14:57:31.637 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.638 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.638 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.638 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.638 [debug] Recursive field result for proto: nil
14:57:31.638 [debug] do_fold called with non-variant data: nil
14:57:31.638 [debug] Recursive field result for proto: nil
14:57:31.638 [debug] do_fold called with non-variant data: nil
14:57:31.638 [debug] Recursive field result for proto: nil
14:57:31.638 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.638 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.638 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.638 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.638 [debug] Recursive field result for proto: nil
14:57:31.638 [debug] Recursive field result for proto: "human"
14:57:31.638 [debug] do_fold called with non-variant data: "human"
14:57:31.638 [debug] Recursive field result for proto: "human"
14:57:31.638 [debug] do_fold called with non-variant data: "human"
14:57:31.638 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.638 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.638 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.639 [debug] Recursive field result for proto: nil
14:57:31.639 [debug] do_fold called with non-variant data: nil
14:57:31.639 [debug] Recursive field result for proto: nil
14:57:31.639 [debug] Recursive field result for proto: "employee"
14:57:31.639 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.639 [debug] Recursive field result for proto: nil
14:57:31.639 [debug] Recursive field result for proto: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
14:57:31.639 [debug] do_fold called with non-variant data: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
14:57:31.639 [debug] Recursive field result for proto: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
14:57:31.639 [debug] do_fold called with non-variant data: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>
14:57:31.639 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.639 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.639 [debug] Recursive field result for proto: nil
14:57:31.639 [debug] do_fold called with non-variant data: nil
14:57:31.639 [debug] Recursive field result for proto: nil
14:57:31.639 [debug] Recursive field result for proto: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>
14:57:31.639 [debug] do_fold called with non-variant data: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>
14:57:31.639 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer", skill: "Elixir"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.639 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer", skill: "Elixir"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with non-variant data: nil
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with non-variant data: nil
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with non-variant data: nil
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with non-variant data: nil
14:57:31.640 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.29533915/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.29533915/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with non-variant data: nil
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with non-variant data: nil
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] do_fold called with non-variant data: nil
.14:57:31.640 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
14:57:31.640 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.640 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.640 [debug] Recursive field result for proto: nil
14:57:31.640 [debug] Recursive field result for proto: 1
14:57:31.640 [debug] do_fold called with non-variant data: 1
14:57:31.641 [debug] Recursive field result for proto: 1
14:57:31.641 [debug] do_fold called with non-variant data: 1
14:57:31.641 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] do_fold called with non-variant data: nil
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] Recursive field result for proto: 2
14:57:31.641 [debug] do_fold called with non-variant data: 2
14:57:31.641 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] do_fold called with non-variant data: nil
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] do_fold called with non-variant data: nil
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
14:57:31.641 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
14:57:31.641 [debug] Processing recursive fields of: %{variant: :null}
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] do_fold called with non-variant data: nil
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] do_fold called with non-variant data: nil
14:57:31.641 [debug] Recursive field result for proto: nil
14:57:31.641 [debug] do_fold called with non-variant data: nil
.14:57:31.642 [debug] Bend initial value: 0
14:57:31.642 [debug] Executing bend with initial: 0
14:57:31.642 [debug] Executing fun with value: 0
14:57:31.642 [debug] Evaluating bend block with value: 0
14:57:31.643 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 1
14:57:31.643 [debug] Executing fun with value: 1
14:57:31.643 [debug] Evaluating bend block with value: 1
14:57:31.643 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 2
14:57:31.643 [debug] Executing fun with value: 2
14:57:31.643 [debug] Evaluating bend block with value: 2
14:57:31.643 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 3
14:57:31.643 [debug] Executing fun with value: 3
14:57:31.643 [debug] Evaluating bend block with value: 3
14:57:31.643 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 4
14:57:31.643 [debug] Executing fun with value: 4
14:57:31.643 [debug] Evaluating bend block with value: 4
14:57:31.643 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 5
14:57:31.643 [debug] Executing fun with value: 5
14:57:31.643 [debug] Evaluating bend block with value: 5
14:57:31.643 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 6
14:57:31.643 [debug] Executing fun with value: 6
14:57:31.643 [debug] Evaluating bend block with value: 6
14:57:31.643 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 7
14:57:31.643 [debug] Executing fun with value: 7
14:57:31.643 [debug] Evaluating bend block with value: 7
14:57:31.643 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 8
14:57:31.643 [debug] Executing fun with value: 8
14:57:31.643 [debug] Evaluating bend block with value: 8
14:57:31.643 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.643 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.643 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.643 [debug] Executing bend with initial: 9
14:57:31.643 [debug] Executing fun with value: 9
14:57:31.643 [debug] Evaluating bend block with value: 9
14:57:31.643 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Executing bend with initial: 10
14:57:31.644 [debug] Executing fun with value: 10
14:57:31.644 [debug] Evaluating bend block with value: 10
14:57:31.644 [debug] Block returned: %{variant: :leaf}
14:57:31.644 [debug] Fun returned result: %{variant: :leaf}
14:57:31.644 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{variant: :leaf}
14:57:31.644 [debug] Executing bend with initial: 10
14:57:31.644 [debug] Executing fun with value: 10
14:57:31.644 [debug] Evaluating bend block with value: 10
14:57:31.644 [debug] Block returned: %{variant: :leaf}
14:57:31.644 [debug] Fun returned result: %{variant: :leaf}
14:57:31.644 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.644 [debug] Executing bend with initial: 9
14:57:31.644 [debug] Executing fun with value: 9
14:57:31.644 [debug] Evaluating bend block with value: 9
14:57:31.644 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Executing bend with initial: 10
14:57:31.644 [debug] Executing fun with value: 10
14:57:31.644 [debug] Evaluating bend block with value: 10
14:57:31.644 [debug] Block returned: %{variant: :leaf}
14:57:31.644 [debug] Fun returned result: %{variant: :leaf}
14:57:31.644 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{variant: :leaf}
14:57:31.644 [debug] Executing bend with initial: 10
14:57:31.644 [debug] Executing fun with value: 10
14:57:31.644 [debug] Evaluating bend block with value: 10
14:57:31.644 [debug] Block returned: %{variant: :leaf}
14:57:31.644 [debug] Fun returned result: %{variant: :leaf}
14:57:31.644 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.644 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.644 [debug] Executing bend with initial: 8
14:57:31.644 [debug] Executing fun with value: 8
14:57:31.644 [debug] Evaluating bend block with value: 8
14:57:31.644 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.644 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.644 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.644 [debug] Executing bend with initial: 9
14:57:31.644 [debug] Executing fun with value: 9
14:57:31.644 [debug] Evaluating bend block with value: 9
14:57:31.644 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.644 [debug] Executing bend with initial: 10
14:57:31.644 [debug] Executing fun with value: 10
14:57:31.644 [debug] Evaluating bend block with value: 10
14:57:31.644 [debug] Block returned: %{variant: :leaf}
14:57:31.644 [debug] Fun returned result: %{variant: :leaf}
14:57:31.644 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{variant: :leaf}
14:57:31.644 [debug] Executing bend with initial: 10
14:57:31.644 [debug] Executing fun with value: 10
14:57:31.644 [debug] Evaluating bend block with value: 10
14:57:31.644 [debug] Block returned: %{variant: :leaf}
14:57:31.644 [debug] Fun returned result: %{variant: :leaf}
14:57:31.644 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{variant: :leaf}
14:57:31.644 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.644 [debug] Executing bend with initial: 9
14:57:31.644 [debug] Executing fun with value: 9
14:57:31.644 [debug] Evaluating bend block with value: 9
14:57:31.645 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 10
14:57:31.645 [debug] Executing fun with value: 10
14:57:31.645 [debug] Evaluating bend block with value: 10
14:57:31.645 [debug] Block returned: %{variant: :leaf}
14:57:31.645 [debug] Fun returned result: %{variant: :leaf}
14:57:31.645 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{variant: :leaf}
14:57:31.645 [debug] Executing bend with initial: 10
14:57:31.645 [debug] Executing fun with value: 10
14:57:31.645 [debug] Evaluating bend block with value: 10
14:57:31.645 [debug] Block returned: %{variant: :leaf}
14:57:31.645 [debug] Fun returned result: %{variant: :leaf}
14:57:31.645 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.645 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.645 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 7
14:57:31.645 [debug] Executing fun with value: 7
14:57:31.645 [debug] Evaluating bend block with value: 7
14:57:31.645 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.645 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.645 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 8
14:57:31.645 [debug] Executing fun with value: 8
14:57:31.645 [debug] Evaluating bend block with value: 8
14:57:31.645 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.645 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.645 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 9
14:57:31.645 [debug] Executing fun with value: 9
14:57:31.645 [debug] Evaluating bend block with value: 9
14:57:31.645 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 10
14:57:31.645 [debug] Executing fun with value: 10
14:57:31.645 [debug] Evaluating bend block with value: 10
14:57:31.645 [debug] Block returned: %{variant: :leaf}
14:57:31.645 [debug] Fun returned result: %{variant: :leaf}
14:57:31.645 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{variant: :leaf}
14:57:31.645 [debug] Executing bend with initial: 10
14:57:31.645 [debug] Executing fun with value: 10
14:57:31.645 [debug] Evaluating bend block with value: 10
14:57:31.645 [debug] Block returned: %{variant: :leaf}
14:57:31.645 [debug] Fun returned result: %{variant: :leaf}
14:57:31.645 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 9
14:57:31.645 [debug] Executing fun with value: 9
14:57:31.645 [debug] Evaluating bend block with value: 9
14:57:31.645 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 10
14:57:31.645 [debug] Executing fun with value: 10
14:57:31.645 [debug] Evaluating bend block with value: 10
14:57:31.645 [debug] Block returned: %{variant: :leaf}
14:57:31.645 [debug] Fun returned result: %{variant: :leaf}
14:57:31.645 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{variant: :leaf}
14:57:31.645 [debug] Executing bend with initial: 10
14:57:31.645 [debug] Executing fun with value: 10
14:57:31.645 [debug] Evaluating bend block with value: 10
14:57:31.645 [debug] Block returned: %{variant: :leaf}
14:57:31.645 [debug] Fun returned result: %{variant: :leaf}
14:57:31.645 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{variant: :leaf}
14:57:31.645 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.645 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.645 [debug] Executing bend with initial: 8
14:57:31.645 [debug] Executing fun with value: 8
14:57:31.645 [debug] Evaluating bend block with value: 8
14:57:31.646 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.646 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.646 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 9
14:57:31.646 [debug] Executing fun with value: 9
14:57:31.646 [debug] Evaluating bend block with value: 9
14:57:31.646 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 10
14:57:31.646 [debug] Executing fun with value: 10
14:57:31.646 [debug] Evaluating bend block with value: 10
14:57:31.646 [debug] Block returned: %{variant: :leaf}
14:57:31.646 [debug] Fun returned result: %{variant: :leaf}
14:57:31.646 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.646 [debug] do_bend final result: %{variant: :leaf}
14:57:31.646 [debug] Executing bend with initial: 10
14:57:31.646 [debug] Executing fun with value: 10
14:57:31.646 [debug] Evaluating bend block with value: 10
14:57:31.646 [debug] Block returned: %{variant: :leaf}
14:57:31.646 [debug] Fun returned result: %{variant: :leaf}
14:57:31.646 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.646 [debug] do_bend final result: %{variant: :leaf}
14:57:31.646 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 9
14:57:31.646 [debug] Executing fun with value: 9
14:57:31.646 [debug] Evaluating bend block with value: 9
14:57:31.646 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 10
14:57:31.646 [debug] Executing fun with value: 10
14:57:31.646 [debug] Evaluating bend block with value: 10
14:57:31.646 [debug] Block returned: %{variant: :leaf}
14:57:31.646 [debug] Fun returned result: %{variant: :leaf}
14:57:31.646 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.646 [debug] do_bend final result: %{variant: :leaf}
14:57:31.646 [debug] Executing bend with initial: 10
14:57:31.646 [debug] Executing fun with value: 10
14:57:31.646 [debug] Evaluating bend block with value: 10
14:57:31.646 [debug] Block returned: %{variant: :leaf}
14:57:31.646 [debug] Fun returned result: %{variant: :leaf}
14:57:31.646 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.646 [debug] do_bend final result: %{variant: :leaf}
14:57:31.646 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.646 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.646 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.646 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 6
14:57:31.646 [debug] Executing fun with value: 6
14:57:31.646 [debug] Evaluating bend block with value: 6
14:57:31.646 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.646 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.646 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 7
14:57:31.646 [debug] Executing fun with value: 7
14:57:31.646 [debug] Evaluating bend block with value: 7
14:57:31.646 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.646 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.646 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 8
14:57:31.646 [debug] Executing fun with value: 8
14:57:31.646 [debug] Evaluating bend block with value: 8
14:57:31.646 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.646 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.646 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.646 [debug] Executing bend with initial: 9
14:57:31.646 [debug] Executing fun with value: 9
14:57:31.646 [debug] Evaluating bend block with value: 9
14:57:31.646 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.646 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 9
14:57:31.647 [debug] Executing fun with value: 9
14:57:31.647 [debug] Evaluating bend block with value: 9
14:57:31.647 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.647 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 8
14:57:31.647 [debug] Executing fun with value: 8
14:57:31.647 [debug] Evaluating bend block with value: 8
14:57:31.647 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.647 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.647 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 9
14:57:31.647 [debug] Executing fun with value: 9
14:57:31.647 [debug] Evaluating bend block with value: 9
14:57:31.647 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 9
14:57:31.647 [debug] Executing fun with value: 9
14:57:31.647 [debug] Evaluating bend block with value: 9
14:57:31.647 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] Executing bend with initial: 10
14:57:31.647 [debug] Executing fun with value: 10
14:57:31.647 [debug] Evaluating bend block with value: 10
14:57:31.647 [debug] Block returned: %{variant: :leaf}
14:57:31.647 [debug] Fun returned result: %{variant: :leaf}
14:57:31.647 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{variant: :leaf}
14:57:31.647 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.647 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.647 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.647 [debug] Executing bend with initial: 7
14:57:31.647 [debug] Executing fun with value: 7
14:57:31.647 [debug] Evaluating bend block with value: 7
14:57:31.647 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.647 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.648 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 8
14:57:31.648 [debug] Executing fun with value: 8
14:57:31.648 [debug] Evaluating bend block with value: 8
14:57:31.648 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.648 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.648 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 9
14:57:31.648 [debug] Executing fun with value: 9
14:57:31.648 [debug] Evaluating bend block with value: 9
14:57:31.648 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.648 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{variant: :leaf}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.648 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 9
14:57:31.648 [debug] Executing fun with value: 9
14:57:31.648 [debug] Evaluating bend block with value: 9
14:57:31.648 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.648 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{variant: :leaf}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.648 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.648 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 8
14:57:31.648 [debug] Executing fun with value: 8
14:57:31.648 [debug] Evaluating bend block with value: 8
14:57:31.648 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.648 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.648 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 9
14:57:31.648 [debug] Executing fun with value: 9
14:57:31.648 [debug] Evaluating bend block with value: 9
14:57:31.648 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.648 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{variant: :leaf}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.648 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 9
14:57:31.648 [debug] Executing fun with value: 9
14:57:31.648 [debug] Evaluating bend block with value: 9
14:57:31.648 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.648 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.648 [debug] do_bend final result: %{variant: :leaf}
14:57:31.648 [debug] Executing bend with initial: 10
14:57:31.648 [debug] Executing fun with value: 10
14:57:31.648 [debug] Evaluating bend block with value: 10
14:57:31.648 [debug] Block returned: %{variant: :leaf}
14:57:31.648 [debug] Fun returned result: %{variant: :leaf}
14:57:31.649 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.649 [debug] do_bend final result: %{variant: :leaf}
14:57:31.649 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.649 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.649 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.649 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.649 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.649 [debug] Executing bend with initial: 5
14:57:31.649 [debug] Executing fun with value: 5
14:57:31.649 [debug] Evaluating bend block with value: 5
14:57:31.649 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.649 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.649 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.649 [debug] Executing bend with initial: 6
14:57:31.649 [debug] Executing fun with value: 6
14:57:31.649 [debug] Evaluating bend block with value: 6
14:57:31.649 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.649 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.649 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.649 [debug] Executing bend with initial: 7
14:57:31.649 [debug] Executing fun with value: 7
14:57:31.649 [debug] Evaluating bend block with value: 7
14:57:31.649 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.649 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.649 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.649 [debug] Executing bend with initial: 8
14:57:31.649 [debug] Executing fun with value: 8
14:57:31.649 [debug] Evaluating bend block with value: 8
14:57:31.649 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.649 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.649 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.649 [debug] Executing bend with initial: 9
14:57:31.649 [debug] Executing fun with value: 9
14:57:31.649 [debug] Evaluating bend block with value: 9
14:57:31.649 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.649 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 10
14:57:31.650 [debug] Executing fun with value: 10
14:57:31.650 [debug] Evaluating bend block with value: 10
14:57:31.650 [debug] Block returned: %{variant: :leaf}
14:57:31.650 [debug] Fun returned result: %{variant: :leaf}
14:57:31.650 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{variant: :leaf}
14:57:31.650 [debug] Executing bend with initial: 10
14:57:31.650 [debug] Executing fun with value: 10
14:57:31.650 [debug] Evaluating bend block with value: 10
14:57:31.650 [debug] Block returned: %{variant: :leaf}
14:57:31.650 [debug] Fun returned result: %{variant: :leaf}
14:57:31.650 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 9
14:57:31.650 [debug] Executing fun with value: 9
14:57:31.650 [debug] Evaluating bend block with value: 9
14:57:31.650 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 10
14:57:31.650 [debug] Executing fun with value: 10
14:57:31.650 [debug] Evaluating bend block with value: 10
14:57:31.650 [debug] Block returned: %{variant: :leaf}
14:57:31.650 [debug] Fun returned result: %{variant: :leaf}
14:57:31.650 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{variant: :leaf}
14:57:31.650 [debug] Executing bend with initial: 10
14:57:31.650 [debug] Executing fun with value: 10
14:57:31.650 [debug] Evaluating bend block with value: 10
14:57:31.650 [debug] Block returned: %{variant: :leaf}
14:57:31.650 [debug] Fun returned result: %{variant: :leaf}
14:57:31.650 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.650 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 8
14:57:31.650 [debug] Executing fun with value: 8
14:57:31.650 [debug] Evaluating bend block with value: 8
14:57:31.650 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.650 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.650 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 9
14:57:31.650 [debug] Executing fun with value: 9
14:57:31.650 [debug] Evaluating bend block with value: 9
14:57:31.650 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 10
14:57:31.650 [debug] Executing fun with value: 10
14:57:31.650 [debug] Evaluating bend block with value: 10
14:57:31.650 [debug] Block returned: %{variant: :leaf}
14:57:31.650 [debug] Fun returned result: %{variant: :leaf}
14:57:31.650 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{variant: :leaf}
14:57:31.650 [debug] Executing bend with initial: 10
14:57:31.650 [debug] Executing fun with value: 10
14:57:31.650 [debug] Evaluating bend block with value: 10
14:57:31.650 [debug] Block returned: %{variant: :leaf}
14:57:31.650 [debug] Fun returned result: %{variant: :leaf}
14:57:31.650 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{variant: :leaf}
14:57:31.650 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 9
14:57:31.650 [debug] Executing fun with value: 9
14:57:31.650 [debug] Evaluating bend block with value: 9
14:57:31.650 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.650 [debug] Executing bend with initial: 10
14:57:31.650 [debug] Executing fun with value: 10
14:57:31.650 [debug] Evaluating bend block with value: 10
14:57:31.650 [debug] Block returned: %{variant: :leaf}
14:57:31.651 [debug] Fun returned result: %{variant: :leaf}
14:57:31.651 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{variant: :leaf}
14:57:31.651 [debug] Executing bend with initial: 10
14:57:31.651 [debug] Executing fun with value: 10
14:57:31.651 [debug] Evaluating bend block with value: 10
14:57:31.651 [debug] Block returned: %{variant: :leaf}
14:57:31.651 [debug] Fun returned result: %{variant: :leaf}
14:57:31.651 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.651 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.651 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.651 [debug] Executing bend with initial: 7
14:57:31.651 [debug] Executing fun with value: 7
14:57:31.651 [debug] Evaluating bend block with value: 7
14:57:31.651 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.651 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.651 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.651 [debug] Executing bend with initial: 8
14:57:31.651 [debug] Executing fun with value: 8
14:57:31.651 [debug] Evaluating bend block with value: 8
14:57:31.651 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.651 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.651 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.651 [debug] Executing bend with initial: 9
14:57:31.651 [debug] Executing fun with value: 9
14:57:31.651 [debug] Evaluating bend block with value: 9
14:57:31.651 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.651 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.651 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.651 [debug] Executing bend with initial: 10
14:57:31.651 [debug] Executing fun with value: 10
14:57:31.651 [debug] Evaluating bend block with value: 10
14:57:31.651 [debug] Block returned: %{variant: :leaf}
14:57:31.651 [debug] Fun returned result: %{variant: :leaf}
14:57:31.651 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{variant: :leaf}
14:57:31.651 [debug] Executing bend with initial: 10
14:57:31.651 [debug] Executing fun with value: 10
14:57:31.651 [debug] Evaluating bend block with value: 10
14:57:31.651 [debug] Block returned: %{variant: :leaf}
14:57:31.651 [debug] Fun returned result: %{variant: :leaf}
14:57:31.651 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.651 [debug] Executing bend with initial: 9
14:57:31.651 [debug] Executing fun with value: 9
14:57:31.651 [debug] Evaluating bend block with value: 9
14:57:31.651 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.651 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.651 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.651 [debug] Executing bend with initial: 10
14:57:31.651 [debug] Executing fun with value: 10
14:57:31.651 [debug] Evaluating bend block with value: 10
14:57:31.651 [debug] Block returned: %{variant: :leaf}
14:57:31.651 [debug] Fun returned result: %{variant: :leaf}
14:57:31.651 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{variant: :leaf}
14:57:31.651 [debug] Executing bend with initial: 10
14:57:31.651 [debug] Executing fun with value: 10
14:57:31.651 [debug] Evaluating bend block with value: 10
14:57:31.651 [debug] Block returned: %{variant: :leaf}
14:57:31.651 [debug] Fun returned result: %{variant: :leaf}
14:57:31.651 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{variant: :leaf}
14:57:31.651 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.651 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.651 [debug] Executing bend with initial: 8
14:57:31.651 [debug] Executing fun with value: 8
14:57:31.651 [debug] Evaluating bend block with value: 8
14:57:31.652 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.652 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.652 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.652 [debug] Executing bend with initial: 9
14:57:31.652 [debug] Executing fun with value: 9
14:57:31.652 [debug] Evaluating bend block with value: 9
14:57:31.652 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.652 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.652 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.652 [debug] Executing bend with initial: 10
14:57:31.652 [debug] Executing fun with value: 10
14:57:31.652 [debug] Evaluating bend block with value: 10
14:57:31.652 [debug] Block returned: %{variant: :leaf}
14:57:31.652 [debug] Fun returned result: %{variant: :leaf}
14:57:31.652 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.652 [debug] do_bend final result: %{variant: :leaf}
14:57:31.652 [debug] Executing bend with initial: 10
14:57:31.652 [debug] Executing fun with value: 10
14:57:31.652 [debug] Evaluating bend block with value: 10
14:57:31.652 [debug] Block returned: %{variant: :leaf}
14:57:31.652 [debug] Fun returned result: %{variant: :leaf}
14:57:31.652 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.652 [debug] do_bend final result: %{variant: :leaf}
14:57:31.652 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.652 [debug] Executing bend with initial: 9
14:57:31.652 [debug] Executing fun with value: 9
14:57:31.652 [debug] Evaluating bend block with value: 9
14:57:31.652 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.652 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.652 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.652 [debug] Executing bend with initial: 10
14:57:31.652 [debug] Executing fun with value: 10
14:57:31.652 [debug] Evaluating bend block with value: 10
14:57:31.652 [debug] Block returned: %{variant: :leaf}
14:57:31.652 [debug] Fun returned result: %{variant: :leaf}
14:57:31.652 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.652 [debug] do_bend final result: %{variant: :leaf}
14:57:31.652 [debug] Executing bend with initial: 10
14:57:31.652 [debug] Executing fun with value: 10
14:57:31.652 [debug] Evaluating bend block with value: 10
14:57:31.652 [debug] Block returned: %{variant: :leaf}
14:57:31.652 [debug] Fun returned result: %{variant: :leaf}
14:57:31.652 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.652 [debug] do_bend final result: %{variant: :leaf}
14:57:31.652 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.652 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.652 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.652 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.652 [debug] Executing bend with initial: 6
14:57:31.652 [debug] Executing fun with value: 6
14:57:31.652 [debug] Evaluating bend block with value: 6
14:57:31.652 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.652 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.652 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.652 [debug] Executing bend with initial: 7
14:57:31.652 [debug] Executing fun with value: 7
14:57:31.652 [debug] Evaluating bend block with value: 7
14:57:31.652 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.652 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.652 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.652 [debug] Executing bend with initial: 8
14:57:31.652 [debug] Executing fun with value: 8
14:57:31.653 [debug] Evaluating bend block with value: 8
14:57:31.653 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.653 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.653 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 9
14:57:31.653 [debug] Executing fun with value: 9
14:57:31.653 [debug] Evaluating bend block with value: 9
14:57:31.653 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.653 [debug] Evaluating bend block with value: 10
14:57:31.653 [debug] Block returned: %{variant: :leaf}
14:57:31.653 [debug] Fun returned result: %{variant: :leaf}
14:57:31.653 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{variant: :leaf}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.653 [debug] Evaluating bend block with value: 10
14:57:31.653 [debug] Block returned: %{variant: :leaf}
14:57:31.653 [debug] Fun returned result: %{variant: :leaf}
14:57:31.653 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 9
14:57:31.653 [debug] Executing fun with value: 9
14:57:31.653 [debug] Evaluating bend block with value: 9
14:57:31.653 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.653 [debug] Evaluating bend block with value: 10
14:57:31.653 [debug] Block returned: %{variant: :leaf}
14:57:31.653 [debug] Fun returned result: %{variant: :leaf}
14:57:31.653 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{variant: :leaf}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.653 [debug] Evaluating bend block with value: 10
14:57:31.653 [debug] Block returned: %{variant: :leaf}
14:57:31.653 [debug] Fun returned result: %{variant: :leaf}
14:57:31.653 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.653 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 8
14:57:31.653 [debug] Executing fun with value: 8
14:57:31.653 [debug] Evaluating bend block with value: 8
14:57:31.653 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.653 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.653 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 9
14:57:31.653 [debug] Executing fun with value: 9
14:57:31.653 [debug] Evaluating bend block with value: 9
14:57:31.653 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.653 [debug] Evaluating bend block with value: 10
14:57:31.653 [debug] Block returned: %{variant: :leaf}
14:57:31.653 [debug] Fun returned result: %{variant: :leaf}
14:57:31.653 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{variant: :leaf}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.653 [debug] Evaluating bend block with value: 10
14:57:31.653 [debug] Block returned: %{variant: :leaf}
14:57:31.653 [debug] Fun returned result: %{variant: :leaf}
14:57:31.653 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 9
14:57:31.653 [debug] Executing fun with value: 9
14:57:31.653 [debug] Evaluating bend block with value: 9
14:57:31.653 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.653 [debug] Evaluating bend block with value: 10
14:57:31.653 [debug] Block returned: %{variant: :leaf}
14:57:31.653 [debug] Fun returned result: %{variant: :leaf}
14:57:31.653 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.653 [debug] do_bend final result: %{variant: :leaf}
14:57:31.653 [debug] Executing bend with initial: 10
14:57:31.653 [debug] Executing fun with value: 10
14:57:31.654 [debug] Evaluating bend block with value: 10
14:57:31.654 [debug] Block returned: %{variant: :leaf}
14:57:31.654 [debug] Fun returned result: %{variant: :leaf}
14:57:31.654 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.654 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.654 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 7
14:57:31.654 [debug] Executing fun with value: 7
14:57:31.654 [debug] Evaluating bend block with value: 7
14:57:31.654 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.654 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.654 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 8
14:57:31.654 [debug] Executing fun with value: 8
14:57:31.654 [debug] Evaluating bend block with value: 8
14:57:31.654 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.654 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.654 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 9
14:57:31.654 [debug] Executing fun with value: 9
14:57:31.654 [debug] Evaluating bend block with value: 9
14:57:31.654 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 10
14:57:31.654 [debug] Executing fun with value: 10
14:57:31.654 [debug] Evaluating bend block with value: 10
14:57:31.654 [debug] Block returned: %{variant: :leaf}
14:57:31.654 [debug] Fun returned result: %{variant: :leaf}
14:57:31.654 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{variant: :leaf}
14:57:31.654 [debug] Executing bend with initial: 10
14:57:31.654 [debug] Executing fun with value: 10
14:57:31.654 [debug] Evaluating bend block with value: 10
14:57:31.654 [debug] Block returned: %{variant: :leaf}
14:57:31.654 [debug] Fun returned result: %{variant: :leaf}
14:57:31.654 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 9
14:57:31.654 [debug] Executing fun with value: 9
14:57:31.654 [debug] Evaluating bend block with value: 9
14:57:31.654 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 10
14:57:31.654 [debug] Executing fun with value: 10
14:57:31.654 [debug] Evaluating bend block with value: 10
14:57:31.654 [debug] Block returned: %{variant: :leaf}
14:57:31.654 [debug] Fun returned result: %{variant: :leaf}
14:57:31.654 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{variant: :leaf}
14:57:31.654 [debug] Executing bend with initial: 10
14:57:31.654 [debug] Executing fun with value: 10
14:57:31.654 [debug] Evaluating bend block with value: 10
14:57:31.654 [debug] Block returned: %{variant: :leaf}
14:57:31.654 [debug] Fun returned result: %{variant: :leaf}
14:57:31.654 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.654 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 8
14:57:31.654 [debug] Executing fun with value: 8
14:57:31.654 [debug] Evaluating bend block with value: 8
14:57:31.654 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.654 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.654 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 9
14:57:31.654 [debug] Executing fun with value: 9
14:57:31.654 [debug] Evaluating bend block with value: 9
14:57:31.654 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.654 [debug] Executing bend with initial: 10
14:57:31.654 [debug] Executing fun with value: 10
14:57:31.654 [debug] Evaluating bend block with value: 10
14:57:31.654 [debug] Block returned: %{variant: :leaf}
14:57:31.654 [debug] Fun returned result: %{variant: :leaf}
14:57:31.654 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{variant: :leaf}
14:57:31.654 [debug] Executing bend with initial: 10
14:57:31.654 [debug] Executing fun with value: 10
14:57:31.654 [debug] Evaluating bend block with value: 10
14:57:31.654 [debug] Block returned: %{variant: :leaf}
14:57:31.654 [debug] Fun returned result: %{variant: :leaf}
14:57:31.654 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{variant: :leaf}
14:57:31.654 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.655 [debug] Executing bend with initial: 9
14:57:31.655 [debug] Executing fun with value: 9
14:57:31.655 [debug] Evaluating bend block with value: 9
14:57:31.655 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.655 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.655 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.655 [debug] Executing bend with initial: 10
14:57:31.655 [debug] Executing fun with value: 10
14:57:31.655 [debug] Evaluating bend block with value: 10
14:57:31.655 [debug] Block returned: %{variant: :leaf}
14:57:31.655 [debug] Fun returned result: %{variant: :leaf}
14:57:31.655 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.655 [debug] do_bend final result: %{variant: :leaf}
14:57:31.655 [debug] Executing bend with initial: 10
14:57:31.655 [debug] Executing fun with value: 10
14:57:31.655 [debug] Evaluating bend block with value: 10
14:57:31.655 [debug] Block returned: %{variant: :leaf}
14:57:31.655 [debug] Fun returned result: %{variant: :leaf}
14:57:31.655 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.655 [debug] do_bend final result: %{variant: :leaf}
14:57:31.655 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.655 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.655 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.655 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.655 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.656 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 4
14:57:31.656 [debug] Executing fun with value: 4
14:57:31.656 [debug] Evaluating bend block with value: 4
14:57:31.656 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 5
14:57:31.656 [debug] Executing fun with value: 5
14:57:31.656 [debug] Evaluating bend block with value: 5
14:57:31.656 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 6
14:57:31.656 [debug] Executing fun with value: 6
14:57:31.656 [debug] Evaluating bend block with value: 6
14:57:31.656 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 7
14:57:31.656 [debug] Executing fun with value: 7
14:57:31.656 [debug] Evaluating bend block with value: 7
14:57:31.656 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 8
14:57:31.656 [debug] Executing fun with value: 8
14:57:31.656 [debug] Evaluating bend block with value: 8
14:57:31.656 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 9
14:57:31.656 [debug] Executing fun with value: 9
14:57:31.656 [debug] Evaluating bend block with value: 9
14:57:31.656 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 10
14:57:31.656 [debug] Executing fun with value: 10
14:57:31.656 [debug] Evaluating bend block with value: 10
14:57:31.656 [debug] Block returned: %{variant: :leaf}
14:57:31.656 [debug] Fun returned result: %{variant: :leaf}
14:57:31.656 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.656 [debug] do_bend final result: %{variant: :leaf}
14:57:31.656 [debug] Executing bend with initial: 10
14:57:31.656 [debug] Executing fun with value: 10
14:57:31.656 [debug] Evaluating bend block with value: 10
14:57:31.656 [debug] Block returned: %{variant: :leaf}
14:57:31.656 [debug] Fun returned result: %{variant: :leaf}
14:57:31.656 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.656 [debug] do_bend final result: %{variant: :leaf}
14:57:31.656 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 9
14:57:31.656 [debug] Executing fun with value: 9
14:57:31.656 [debug] Evaluating bend block with value: 9
14:57:31.656 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 10
14:57:31.656 [debug] Executing fun with value: 10
14:57:31.656 [debug] Evaluating bend block with value: 10
14:57:31.656 [debug] Block returned: %{variant: :leaf}
14:57:31.656 [debug] Fun returned result: %{variant: :leaf}
14:57:31.656 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.656 [debug] do_bend final result: %{variant: :leaf}
14:57:31.656 [debug] Executing bend with initial: 10
14:57:31.656 [debug] Executing fun with value: 10
14:57:31.656 [debug] Evaluating bend block with value: 10
14:57:31.656 [debug] Block returned: %{variant: :leaf}
14:57:31.656 [debug] Fun returned result: %{variant: :leaf}
14:57:31.656 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.656 [debug] do_bend final result: %{variant: :leaf}
14:57:31.656 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.656 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 8
14:57:31.656 [debug] Executing fun with value: 8
14:57:31.656 [debug] Evaluating bend block with value: 8
14:57:31.656 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.656 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.656 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.656 [debug] Executing bend with initial: 9
14:57:31.656 [debug] Executing fun with value: 9
14:57:31.657 [debug] Evaluating bend block with value: 9
14:57:31.657 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.657 [debug] Fun returned result: %{variant: :leaf}
14:57:31.657 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{variant: :leaf}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.657 [debug] Fun returned result: %{variant: :leaf}
14:57:31.657 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 9
14:57:31.657 [debug] Executing fun with value: 9
14:57:31.657 [debug] Evaluating bend block with value: 9
14:57:31.657 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.657 [debug] Fun returned result: %{variant: :leaf}
14:57:31.657 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{variant: :leaf}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.657 [debug] Fun returned result: %{variant: :leaf}
14:57:31.657 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.657 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.657 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 7
14:57:31.657 [debug] Executing fun with value: 7
14:57:31.657 [debug] Evaluating bend block with value: 7
14:57:31.657 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.657 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.657 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 8
14:57:31.657 [debug] Executing fun with value: 8
14:57:31.657 [debug] Evaluating bend block with value: 8
14:57:31.657 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.657 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.657 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 9
14:57:31.657 [debug] Executing fun with value: 9
14:57:31.657 [debug] Evaluating bend block with value: 9
14:57:31.657 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.657 [debug] Fun returned result: %{variant: :leaf}
14:57:31.657 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{variant: :leaf}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.657 [debug] Fun returned result: %{variant: :leaf}
14:57:31.657 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 9
14:57:31.657 [debug] Executing fun with value: 9
14:57:31.657 [debug] Evaluating bend block with value: 9
14:57:31.657 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.657 [debug] Fun returned result: %{variant: :leaf}
14:57:31.657 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.657 [debug] do_bend final result: %{variant: :leaf}
14:57:31.657 [debug] Executing bend with initial: 10
14:57:31.657 [debug] Executing fun with value: 10
14:57:31.657 [debug] Evaluating bend block with value: 10
14:57:31.657 [debug] Block returned: %{variant: :leaf}
14:57:31.658 [debug] Fun returned result: %{variant: :leaf}
14:57:31.658 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.658 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.658 [debug] Executing bend with initial: 8
14:57:31.658 [debug] Executing fun with value: 8
14:57:31.658 [debug] Evaluating bend block with value: 8
14:57:31.658 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.658 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.658 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.658 [debug] Executing bend with initial: 9
14:57:31.658 [debug] Executing fun with value: 9
14:57:31.658 [debug] Evaluating bend block with value: 9
14:57:31.658 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.658 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.658 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.658 [debug] Executing bend with initial: 10
14:57:31.658 [debug] Executing fun with value: 10
14:57:31.658 [debug] Evaluating bend block with value: 10
14:57:31.658 [debug] Block returned: %{variant: :leaf}
14:57:31.658 [debug] Fun returned result: %{variant: :leaf}
14:57:31.658 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{variant: :leaf}
14:57:31.658 [debug] Executing bend with initial: 10
14:57:31.658 [debug] Executing fun with value: 10
14:57:31.658 [debug] Evaluating bend block with value: 10
14:57:31.658 [debug] Block returned: %{variant: :leaf}
14:57:31.658 [debug] Fun returned result: %{variant: :leaf}
14:57:31.658 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.658 [debug] Executing bend with initial: 9
14:57:31.658 [debug] Executing fun with value: 9
14:57:31.658 [debug] Evaluating bend block with value: 9
14:57:31.658 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.658 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.658 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.658 [debug] Executing bend with initial: 10
14:57:31.658 [debug] Executing fun with value: 10
14:57:31.658 [debug] Evaluating bend block with value: 10
14:57:31.658 [debug] Block returned: %{variant: :leaf}
14:57:31.658 [debug] Fun returned result: %{variant: :leaf}
14:57:31.658 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{variant: :leaf}
14:57:31.658 [debug] Executing bend with initial: 10
14:57:31.658 [debug] Executing fun with value: 10
14:57:31.658 [debug] Evaluating bend block with value: 10
14:57:31.658 [debug] Block returned: %{variant: :leaf}
14:57:31.658 [debug] Fun returned result: %{variant: :leaf}
14:57:31.658 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{variant: :leaf}
14:57:31.658 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.658 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.658 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.659 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.659 [debug] Executing bend with initial: 6
14:57:31.659 [debug] Executing fun with value: 6
14:57:31.659 [debug] Evaluating bend block with value: 6
14:57:31.659 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.659 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.659 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.659 [debug] Executing bend with initial: 7
14:57:31.659 [debug] Executing fun with value: 7
14:57:31.659 [debug] Evaluating bend block with value: 7
14:57:31.659 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.659 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.659 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.659 [debug] Executing bend with initial: 8
14:57:31.659 [debug] Executing fun with value: 8
14:57:31.659 [debug] Evaluating bend block with value: 8
14:57:31.659 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.659 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.659 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.659 [debug] Executing bend with initial: 9
14:57:31.659 [debug] Executing fun with value: 9
14:57:31.659 [debug] Evaluating bend block with value: 9
14:57:31.659 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.659 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.659 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.659 [debug] Executing bend with initial: 10
14:57:31.659 [debug] Executing fun with value: 10
14:57:31.659 [debug] Evaluating bend block with value: 10
14:57:31.659 [debug] Block returned: %{variant: :leaf}
14:57:31.659 [debug] Fun returned result: %{variant: :leaf}
14:57:31.659 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.659 [debug] do_bend final result: %{variant: :leaf}
14:57:31.659 [debug] Executing bend with initial: 10
14:57:31.659 [debug] Executing fun with value: 10
14:57:31.659 [debug] Evaluating bend block with value: 10
14:57:31.659 [debug] Block returned: %{variant: :leaf}
14:57:31.659 [debug] Fun returned result: %{variant: :leaf}
14:57:31.659 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.659 [debug] do_bend final result: %{variant: :leaf}
14:57:31.659 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.659 [debug] Executing bend with initial: 9
14:57:31.659 [debug] Executing fun with value: 9
14:57:31.659 [debug] Evaluating bend block with value: 9
14:57:31.659 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.659 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.659 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.659 [debug] Executing bend with initial: 10
14:57:31.659 [debug] Executing fun with value: 10
14:57:31.659 [debug] Evaluating bend block with value: 10
14:57:31.659 [debug] Block returned: %{variant: :leaf}
14:57:31.659 [debug] Fun returned result: %{variant: :leaf}
14:57:31.659 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.659 [debug] do_bend final result: %{variant: :leaf}
14:57:31.659 [debug] Executing bend with initial: 10
14:57:31.659 [debug] Executing fun with value: 10
14:57:31.659 [debug] Evaluating bend block with value: 10
14:57:31.659 [debug] Block returned: %{variant: :leaf}
14:57:31.659 [debug] Fun returned result: %{variant: :leaf}
14:57:31.659 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.660 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 8
14:57:31.660 [debug] Executing fun with value: 8
14:57:31.660 [debug] Evaluating bend block with value: 8
14:57:31.660 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.660 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.660 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 9
14:57:31.660 [debug] Executing fun with value: 9
14:57:31.660 [debug] Evaluating bend block with value: 9
14:57:31.660 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.660 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.660 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 10
14:57:31.660 [debug] Executing fun with value: 10
14:57:31.660 [debug] Evaluating bend block with value: 10
14:57:31.660 [debug] Block returned: %{variant: :leaf}
14:57:31.660 [debug] Fun returned result: %{variant: :leaf}
14:57:31.660 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{variant: :leaf}
14:57:31.660 [debug] Executing bend with initial: 10
14:57:31.660 [debug] Executing fun with value: 10
14:57:31.660 [debug] Evaluating bend block with value: 10
14:57:31.660 [debug] Block returned: %{variant: :leaf}
14:57:31.660 [debug] Fun returned result: %{variant: :leaf}
14:57:31.660 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 9
14:57:31.660 [debug] Executing fun with value: 9
14:57:31.660 [debug] Evaluating bend block with value: 9
14:57:31.660 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.660 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.660 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 10
14:57:31.660 [debug] Executing fun with value: 10
14:57:31.660 [debug] Evaluating bend block with value: 10
14:57:31.660 [debug] Block returned: %{variant: :leaf}
14:57:31.660 [debug] Fun returned result: %{variant: :leaf}
14:57:31.660 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{variant: :leaf}
14:57:31.660 [debug] Executing bend with initial: 10
14:57:31.660 [debug] Executing fun with value: 10
14:57:31.660 [debug] Evaluating bend block with value: 10
14:57:31.660 [debug] Block returned: %{variant: :leaf}
14:57:31.660 [debug] Fun returned result: %{variant: :leaf}
14:57:31.660 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{variant: :leaf}
14:57:31.660 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.660 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.660 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 7
14:57:31.660 [debug] Executing fun with value: 7
14:57:31.660 [debug] Evaluating bend block with value: 7
14:57:31.660 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.660 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.660 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 8
14:57:31.660 [debug] Executing fun with value: 8
14:57:31.660 [debug] Evaluating bend block with value: 8
14:57:31.660 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.660 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.660 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.660 [debug] Executing bend with initial: 9
14:57:31.660 [debug] Executing fun with value: 9
14:57:31.661 [debug] Evaluating bend block with value: 9
14:57:31.661 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Executing bend with initial: 10
14:57:31.661 [debug] Executing fun with value: 10
14:57:31.661 [debug] Evaluating bend block with value: 10
14:57:31.661 [debug] Block returned: %{variant: :leaf}
14:57:31.661 [debug] Fun returned result: %{variant: :leaf}
14:57:31.661 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{variant: :leaf}
14:57:31.661 [debug] Executing bend with initial: 10
14:57:31.661 [debug] Executing fun with value: 10
14:57:31.661 [debug] Evaluating bend block with value: 10
14:57:31.661 [debug] Block returned: %{variant: :leaf}
14:57:31.661 [debug] Fun returned result: %{variant: :leaf}
14:57:31.661 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.661 [debug] Executing bend with initial: 9
14:57:31.661 [debug] Executing fun with value: 9
14:57:31.661 [debug] Evaluating bend block with value: 9
14:57:31.661 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Executing bend with initial: 10
14:57:31.661 [debug] Executing fun with value: 10
14:57:31.661 [debug] Evaluating bend block with value: 10
14:57:31.661 [debug] Block returned: %{variant: :leaf}
14:57:31.661 [debug] Fun returned result: %{variant: :leaf}
14:57:31.661 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{variant: :leaf}
14:57:31.661 [debug] Executing bend with initial: 10
14:57:31.661 [debug] Executing fun with value: 10
14:57:31.661 [debug] Evaluating bend block with value: 10
14:57:31.661 [debug] Block returned: %{variant: :leaf}
14:57:31.661 [debug] Fun returned result: %{variant: :leaf}
14:57:31.661 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.661 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.661 [debug] Executing bend with initial: 8
14:57:31.661 [debug] Executing fun with value: 8
14:57:31.661 [debug] Evaluating bend block with value: 8
14:57:31.661 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.661 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.661 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.661 [debug] Executing bend with initial: 9
14:57:31.661 [debug] Executing fun with value: 9
14:57:31.661 [debug] Evaluating bend block with value: 9
14:57:31.661 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.661 [debug] Executing bend with initial: 10
14:57:31.661 [debug] Executing fun with value: 10
14:57:31.661 [debug] Evaluating bend block with value: 10
14:57:31.661 [debug] Block returned: %{variant: :leaf}
14:57:31.661 [debug] Fun returned result: %{variant: :leaf}
14:57:31.661 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{variant: :leaf}
14:57:31.661 [debug] Executing bend with initial: 10
14:57:31.661 [debug] Executing fun with value: 10
14:57:31.661 [debug] Evaluating bend block with value: 10
14:57:31.661 [debug] Block returned: %{variant: :leaf}
14:57:31.661 [debug] Fun returned result: %{variant: :leaf}
14:57:31.661 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.661 [debug] do_bend final result: %{variant: :leaf}
14:57:31.662 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.662 [debug] Executing bend with initial: 9
14:57:31.662 [debug] Executing fun with value: 9
14:57:31.662 [debug] Evaluating bend block with value: 9
14:57:31.662 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.662 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.662 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.662 [debug] Executing bend with initial: 10
14:57:31.662 [debug] Executing fun with value: 10
14:57:31.662 [debug] Evaluating bend block with value: 10
14:57:31.662 [debug] Block returned: %{variant: :leaf}
14:57:31.662 [debug] Fun returned result: %{variant: :leaf}
14:57:31.662 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.662 [debug] do_bend final result: %{variant: :leaf}
14:57:31.662 [debug] Executing bend with initial: 10
14:57:31.662 [debug] Executing fun with value: 10
14:57:31.662 [debug] Evaluating bend block with value: 10
14:57:31.662 [debug] Block returned: %{variant: :leaf}
14:57:31.662 [debug] Fun returned result: %{variant: :leaf}
14:57:31.662 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.662 [debug] do_bend final result: %{variant: :leaf}
14:57:31.662 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.662 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.662 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.662 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.662 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.662 [debug] Executing bend with initial: 5
14:57:31.662 [debug] Executing fun with value: 5
14:57:31.662 [debug] Evaluating bend block with value: 5
14:57:31.662 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.662 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.662 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.662 [debug] Executing bend with initial: 6
14:57:31.662 [debug] Executing fun with value: 6
14:57:31.662 [debug] Evaluating bend block with value: 6
14:57:31.662 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.662 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.662 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.662 [debug] Executing bend with initial: 7
14:57:31.662 [debug] Executing fun with value: 7
14:57:31.662 [debug] Evaluating bend block with value: 7
14:57:31.662 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.662 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.662 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.662 [debug] Executing bend with initial: 8
14:57:31.663 [debug] Executing fun with value: 8
14:57:31.663 [debug] Evaluating bend block with value: 8
14:57:31.663 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.663 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.663 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 9
14:57:31.663 [debug] Executing fun with value: 9
14:57:31.663 [debug] Evaluating bend block with value: 9
14:57:31.663 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 9
14:57:31.663 [debug] Executing fun with value: 9
14:57:31.663 [debug] Evaluating bend block with value: 9
14:57:31.663 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.663 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 8
14:57:31.663 [debug] Executing fun with value: 8
14:57:31.663 [debug] Evaluating bend block with value: 8
14:57:31.663 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.663 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.663 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 9
14:57:31.663 [debug] Executing fun with value: 9
14:57:31.663 [debug] Evaluating bend block with value: 9
14:57:31.663 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 9
14:57:31.663 [debug] Executing fun with value: 9
14:57:31.663 [debug] Evaluating bend block with value: 9
14:57:31.663 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] Executing bend with initial: 10
14:57:31.663 [debug] Executing fun with value: 10
14:57:31.663 [debug] Evaluating bend block with value: 10
14:57:31.663 [debug] Block returned: %{variant: :leaf}
14:57:31.663 [debug] Fun returned result: %{variant: :leaf}
14:57:31.663 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{variant: :leaf}
14:57:31.663 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.664 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.664 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 7
14:57:31.664 [debug] Executing fun with value: 7
14:57:31.664 [debug] Evaluating bend block with value: 7
14:57:31.664 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.664 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.664 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 8
14:57:31.664 [debug] Executing fun with value: 8
14:57:31.664 [debug] Evaluating bend block with value: 8
14:57:31.664 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.664 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.664 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 9
14:57:31.664 [debug] Executing fun with value: 9
14:57:31.664 [debug] Evaluating bend block with value: 9
14:57:31.664 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 10
14:57:31.664 [debug] Executing fun with value: 10
14:57:31.664 [debug] Evaluating bend block with value: 10
14:57:31.664 [debug] Block returned: %{variant: :leaf}
14:57:31.664 [debug] Fun returned result: %{variant: :leaf}
14:57:31.664 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{variant: :leaf}
14:57:31.664 [debug] Executing bend with initial: 10
14:57:31.664 [debug] Executing fun with value: 10
14:57:31.664 [debug] Evaluating bend block with value: 10
14:57:31.664 [debug] Block returned: %{variant: :leaf}
14:57:31.664 [debug] Fun returned result: %{variant: :leaf}
14:57:31.664 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 9
14:57:31.664 [debug] Executing fun with value: 9
14:57:31.664 [debug] Evaluating bend block with value: 9
14:57:31.664 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 10
14:57:31.664 [debug] Executing fun with value: 10
14:57:31.664 [debug] Evaluating bend block with value: 10
14:57:31.664 [debug] Block returned: %{variant: :leaf}
14:57:31.664 [debug] Fun returned result: %{variant: :leaf}
14:57:31.664 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{variant: :leaf}
14:57:31.664 [debug] Executing bend with initial: 10
14:57:31.664 [debug] Executing fun with value: 10
14:57:31.664 [debug] Evaluating bend block with value: 10
14:57:31.664 [debug] Block returned: %{variant: :leaf}
14:57:31.664 [debug] Fun returned result: %{variant: :leaf}
14:57:31.664 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.664 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 8
14:57:31.664 [debug] Executing fun with value: 8
14:57:31.664 [debug] Evaluating bend block with value: 8
14:57:31.664 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.664 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.664 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 9
14:57:31.664 [debug] Executing fun with value: 9
14:57:31.664 [debug] Evaluating bend block with value: 9
14:57:31.664 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 10
14:57:31.664 [debug] Executing fun with value: 10
14:57:31.664 [debug] Evaluating bend block with value: 10
14:57:31.664 [debug] Block returned: %{variant: :leaf}
14:57:31.664 [debug] Fun returned result: %{variant: :leaf}
14:57:31.664 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{variant: :leaf}
14:57:31.664 [debug] Executing bend with initial: 10
14:57:31.664 [debug] Executing fun with value: 10
14:57:31.664 [debug] Evaluating bend block with value: 10
14:57:31.664 [debug] Block returned: %{variant: :leaf}
14:57:31.664 [debug] Fun returned result: %{variant: :leaf}
14:57:31.664 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{variant: :leaf}
14:57:31.664 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.664 [debug] Executing bend with initial: 9
14:57:31.665 [debug] Executing fun with value: 9
14:57:31.665 [debug] Evaluating bend block with value: 9
14:57:31.665 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 10
14:57:31.665 [debug] Executing fun with value: 10
14:57:31.665 [debug] Evaluating bend block with value: 10
14:57:31.665 [debug] Block returned: %{variant: :leaf}
14:57:31.665 [debug] Fun returned result: %{variant: :leaf}
14:57:31.665 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{variant: :leaf}
14:57:31.665 [debug] Executing bend with initial: 10
14:57:31.665 [debug] Executing fun with value: 10
14:57:31.665 [debug] Evaluating bend block with value: 10
14:57:31.665 [debug] Block returned: %{variant: :leaf}
14:57:31.665 [debug] Fun returned result: %{variant: :leaf}
14:57:31.665 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.665 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.665 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.665 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 6
14:57:31.665 [debug] Executing fun with value: 6
14:57:31.665 [debug] Evaluating bend block with value: 6
14:57:31.665 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.665 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.665 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 7
14:57:31.665 [debug] Executing fun with value: 7
14:57:31.665 [debug] Evaluating bend block with value: 7
14:57:31.665 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.665 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.665 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 8
14:57:31.665 [debug] Executing fun with value: 8
14:57:31.665 [debug] Evaluating bend block with value: 8
14:57:31.665 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.665 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.665 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 9
14:57:31.665 [debug] Executing fun with value: 9
14:57:31.665 [debug] Evaluating bend block with value: 9
14:57:31.665 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 10
14:57:31.665 [debug] Executing fun with value: 10
14:57:31.665 [debug] Evaluating bend block with value: 10
14:57:31.665 [debug] Block returned: %{variant: :leaf}
14:57:31.665 [debug] Fun returned result: %{variant: :leaf}
14:57:31.665 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{variant: :leaf}
14:57:31.665 [debug] Executing bend with initial: 10
14:57:31.665 [debug] Executing fun with value: 10
14:57:31.665 [debug] Evaluating bend block with value: 10
14:57:31.665 [debug] Block returned: %{variant: :leaf}
14:57:31.665 [debug] Fun returned result: %{variant: :leaf}
14:57:31.665 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 9
14:57:31.665 [debug] Executing fun with value: 9
14:57:31.665 [debug] Evaluating bend block with value: 9
14:57:31.665 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.665 [debug] Executing bend with initial: 10
14:57:31.665 [debug] Executing fun with value: 10
14:57:31.665 [debug] Evaluating bend block with value: 10
14:57:31.665 [debug] Block returned: %{variant: :leaf}
14:57:31.665 [debug] Fun returned result: %{variant: :leaf}
14:57:31.665 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{variant: :leaf}
14:57:31.665 [debug] Executing bend with initial: 10
14:57:31.665 [debug] Executing fun with value: 10
14:57:31.665 [debug] Evaluating bend block with value: 10
14:57:31.665 [debug] Block returned: %{variant: :leaf}
14:57:31.665 [debug] Fun returned result: %{variant: :leaf}
14:57:31.665 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{variant: :leaf}
14:57:31.665 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.666 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 8
14:57:31.666 [debug] Executing fun with value: 8
14:57:31.666 [debug] Evaluating bend block with value: 8
14:57:31.666 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.666 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.666 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 9
14:57:31.666 [debug] Executing fun with value: 9
14:57:31.666 [debug] Evaluating bend block with value: 9
14:57:31.666 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.666 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.666 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 10
14:57:31.666 [debug] Executing fun with value: 10
14:57:31.666 [debug] Evaluating bend block with value: 10
14:57:31.666 [debug] Block returned: %{variant: :leaf}
14:57:31.666 [debug] Fun returned result: %{variant: :leaf}
14:57:31.666 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.666 [debug] do_bend final result: %{variant: :leaf}
14:57:31.666 [debug] Executing bend with initial: 10
14:57:31.666 [debug] Executing fun with value: 10
14:57:31.666 [debug] Evaluating bend block with value: 10
14:57:31.666 [debug] Block returned: %{variant: :leaf}
14:57:31.666 [debug] Fun returned result: %{variant: :leaf}
14:57:31.666 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.666 [debug] do_bend final result: %{variant: :leaf}
14:57:31.666 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 9
14:57:31.666 [debug] Executing fun with value: 9
14:57:31.666 [debug] Evaluating bend block with value: 9
14:57:31.666 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.666 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.666 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 10
14:57:31.666 [debug] Executing fun with value: 10
14:57:31.666 [debug] Evaluating bend block with value: 10
14:57:31.666 [debug] Block returned: %{variant: :leaf}
14:57:31.666 [debug] Fun returned result: %{variant: :leaf}
14:57:31.666 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.666 [debug] do_bend final result: %{variant: :leaf}
14:57:31.666 [debug] Executing bend with initial: 10
14:57:31.666 [debug] Executing fun with value: 10
14:57:31.666 [debug] Evaluating bend block with value: 10
14:57:31.666 [debug] Block returned: %{variant: :leaf}
14:57:31.666 [debug] Fun returned result: %{variant: :leaf}
14:57:31.666 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.666 [debug] do_bend final result: %{variant: :leaf}
14:57:31.666 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.666 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.666 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 7
14:57:31.666 [debug] Executing fun with value: 7
14:57:31.666 [debug] Evaluating bend block with value: 7
14:57:31.666 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.666 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.666 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 8
14:57:31.666 [debug] Executing fun with value: 8
14:57:31.666 [debug] Evaluating bend block with value: 8
14:57:31.666 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.666 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.666 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.666 [debug] Executing bend with initial: 9
14:57:31.666 [debug] Executing fun with value: 9
14:57:31.666 [debug] Evaluating bend block with value: 9
14:57:31.667 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 9
14:57:31.667 [debug] Executing fun with value: 9
14:57:31.667 [debug] Evaluating bend block with value: 9
14:57:31.667 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.667 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 8
14:57:31.667 [debug] Executing fun with value: 8
14:57:31.667 [debug] Evaluating bend block with value: 8
14:57:31.667 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.667 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.667 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 9
14:57:31.667 [debug] Executing fun with value: 9
14:57:31.667 [debug] Evaluating bend block with value: 9
14:57:31.667 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 9
14:57:31.667 [debug] Executing fun with value: 9
14:57:31.667 [debug] Evaluating bend block with value: 9
14:57:31.667 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] Executing bend with initial: 10
14:57:31.667 [debug] Executing fun with value: 10
14:57:31.667 [debug] Evaluating bend block with value: 10
14:57:31.667 [debug] Block returned: %{variant: :leaf}
14:57:31.667 [debug] Fun returned result: %{variant: :leaf}
14:57:31.667 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{variant: :leaf}
14:57:31.667 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.668 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.668 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.668 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.668 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.668 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.670 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 3
14:57:31.670 [debug] Executing fun with value: 3
14:57:31.670 [debug] Evaluating bend block with value: 3
14:57:31.670 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 4
14:57:31.670 [debug] Executing fun with value: 4
14:57:31.670 [debug] Evaluating bend block with value: 4
14:57:31.670 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 5
14:57:31.670 [debug] Executing fun with value: 5
14:57:31.670 [debug] Evaluating bend block with value: 5
14:57:31.670 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 6
14:57:31.670 [debug] Executing fun with value: 6
14:57:31.670 [debug] Evaluating bend block with value: 6
14:57:31.670 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 7
14:57:31.670 [debug] Executing fun with value: 7
14:57:31.670 [debug] Evaluating bend block with value: 7
14:57:31.670 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 8
14:57:31.670 [debug] Executing fun with value: 8
14:57:31.670 [debug] Evaluating bend block with value: 8
14:57:31.670 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 9
14:57:31.670 [debug] Executing fun with value: 9
14:57:31.670 [debug] Evaluating bend block with value: 9
14:57:31.670 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 10
14:57:31.670 [debug] Executing fun with value: 10
14:57:31.670 [debug] Evaluating bend block with value: 10
14:57:31.670 [debug] Block returned: %{variant: :leaf}
14:57:31.670 [debug] Fun returned result: %{variant: :leaf}
14:57:31.670 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.670 [debug] do_bend final result: %{variant: :leaf}
14:57:31.670 [debug] Executing bend with initial: 10
14:57:31.670 [debug] Executing fun with value: 10
14:57:31.670 [debug] Evaluating bend block with value: 10
14:57:31.670 [debug] Block returned: %{variant: :leaf}
14:57:31.670 [debug] Fun returned result: %{variant: :leaf}
14:57:31.670 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.670 [debug] do_bend final result: %{variant: :leaf}
14:57:31.670 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 9
14:57:31.670 [debug] Executing fun with value: 9
14:57:31.670 [debug] Evaluating bend block with value: 9
14:57:31.670 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.670 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.670 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.670 [debug] Executing bend with initial: 10
14:57:31.670 [debug] Executing fun with value: 10
14:57:31.670 [debug] Evaluating bend block with value: 10
14:57:31.670 [debug] Block returned: %{variant: :leaf}
14:57:31.670 [debug] Fun returned result: %{variant: :leaf}
14:57:31.670 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.670 [debug] do_bend final result: %{variant: :leaf}
14:57:31.670 [debug] Executing bend with initial: 10
14:57:31.670 [debug] Executing fun with value: 10
14:57:31.670 [debug] Evaluating bend block with value: 10
14:57:31.670 [debug] Block returned: %{variant: :leaf}
14:57:31.670 [debug] Fun returned result: %{variant: :leaf}
14:57:31.671 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.671 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 8
14:57:31.671 [debug] Executing fun with value: 8
14:57:31.671 [debug] Evaluating bend block with value: 8
14:57:31.671 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.671 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.671 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 9
14:57:31.671 [debug] Executing fun with value: 9
14:57:31.671 [debug] Evaluating bend block with value: 9
14:57:31.671 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 10
14:57:31.671 [debug] Executing fun with value: 10
14:57:31.671 [debug] Evaluating bend block with value: 10
14:57:31.671 [debug] Block returned: %{variant: :leaf}
14:57:31.671 [debug] Fun returned result: %{variant: :leaf}
14:57:31.671 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{variant: :leaf}
14:57:31.671 [debug] Executing bend with initial: 10
14:57:31.671 [debug] Executing fun with value: 10
14:57:31.671 [debug] Evaluating bend block with value: 10
14:57:31.671 [debug] Block returned: %{variant: :leaf}
14:57:31.671 [debug] Fun returned result: %{variant: :leaf}
14:57:31.671 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 9
14:57:31.671 [debug] Executing fun with value: 9
14:57:31.671 [debug] Evaluating bend block with value: 9
14:57:31.671 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 10
14:57:31.671 [debug] Executing fun with value: 10
14:57:31.671 [debug] Evaluating bend block with value: 10
14:57:31.671 [debug] Block returned: %{variant: :leaf}
14:57:31.671 [debug] Fun returned result: %{variant: :leaf}
14:57:31.671 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{variant: :leaf}
14:57:31.671 [debug] Executing bend with initial: 10
14:57:31.671 [debug] Executing fun with value: 10
14:57:31.671 [debug] Evaluating bend block with value: 10
14:57:31.671 [debug] Block returned: %{variant: :leaf}
14:57:31.671 [debug] Fun returned result: %{variant: :leaf}
14:57:31.671 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.671 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.671 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 7
14:57:31.671 [debug] Executing fun with value: 7
14:57:31.671 [debug] Evaluating bend block with value: 7
14:57:31.671 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.671 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.671 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 8
14:57:31.671 [debug] Executing fun with value: 8
14:57:31.671 [debug] Evaluating bend block with value: 8
14:57:31.671 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.671 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.671 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 9
14:57:31.671 [debug] Executing fun with value: 9
14:57:31.671 [debug] Evaluating bend block with value: 9
14:57:31.671 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.671 [debug] Executing bend with initial: 10
14:57:31.671 [debug] Executing fun with value: 10
14:57:31.671 [debug] Evaluating bend block with value: 10
14:57:31.671 [debug] Block returned: %{variant: :leaf}
14:57:31.671 [debug] Fun returned result: %{variant: :leaf}
14:57:31.671 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{variant: :leaf}
14:57:31.671 [debug] Executing bend with initial: 10
14:57:31.671 [debug] Executing fun with value: 10
14:57:31.671 [debug] Evaluating bend block with value: 10
14:57:31.671 [debug] Block returned: %{variant: :leaf}
14:57:31.671 [debug] Fun returned result: %{variant: :leaf}
14:57:31.671 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.671 [debug] do_bend final result: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.672 [debug] Executing bend with initial: 9
14:57:31.672 [debug] Executing fun with value: 9
14:57:31.672 [debug] Evaluating bend block with value: 9
14:57:31.672 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Executing bend with initial: 10
14:57:31.672 [debug] Executing fun with value: 10
14:57:31.672 [debug] Evaluating bend block with value: 10
14:57:31.672 [debug] Block returned: %{variant: :leaf}
14:57:31.672 [debug] Fun returned result: %{variant: :leaf}
14:57:31.672 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{variant: :leaf}
14:57:31.672 [debug] Executing bend with initial: 10
14:57:31.672 [debug] Executing fun with value: 10
14:57:31.672 [debug] Evaluating bend block with value: 10
14:57:31.672 [debug] Block returned: %{variant: :leaf}
14:57:31.672 [debug] Fun returned result: %{variant: :leaf}
14:57:31.672 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.672 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.672 [debug] Executing bend with initial: 8
14:57:31.672 [debug] Executing fun with value: 8
14:57:31.672 [debug] Evaluating bend block with value: 8
14:57:31.672 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.672 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.672 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.672 [debug] Executing bend with initial: 9
14:57:31.672 [debug] Executing fun with value: 9
14:57:31.672 [debug] Evaluating bend block with value: 9
14:57:31.672 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Executing bend with initial: 10
14:57:31.672 [debug] Executing fun with value: 10
14:57:31.672 [debug] Evaluating bend block with value: 10
14:57:31.672 [debug] Block returned: %{variant: :leaf}
14:57:31.672 [debug] Fun returned result: %{variant: :leaf}
14:57:31.672 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{variant: :leaf}
14:57:31.672 [debug] Executing bend with initial: 10
14:57:31.672 [debug] Executing fun with value: 10
14:57:31.672 [debug] Evaluating bend block with value: 10
14:57:31.672 [debug] Block returned: %{variant: :leaf}
14:57:31.672 [debug] Fun returned result: %{variant: :leaf}
14:57:31.672 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.672 [debug] Executing bend with initial: 9
14:57:31.672 [debug] Executing fun with value: 9
14:57:31.672 [debug] Evaluating bend block with value: 9
14:57:31.672 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.672 [debug] Executing bend with initial: 10
14:57:31.672 [debug] Executing fun with value: 10
14:57:31.672 [debug] Evaluating bend block with value: 10
14:57:31.672 [debug] Block returned: %{variant: :leaf}
14:57:31.672 [debug] Fun returned result: %{variant: :leaf}
14:57:31.672 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{variant: :leaf}
14:57:31.672 [debug] Executing bend with initial: 10
14:57:31.672 [debug] Executing fun with value: 10
14:57:31.672 [debug] Evaluating bend block with value: 10
14:57:31.672 [debug] Block returned: %{variant: :leaf}
14:57:31.672 [debug] Fun returned result: %{variant: :leaf}
14:57:31.672 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{variant: :leaf}
14:57:31.672 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.672 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.673 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.673 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.673 [debug] Executing bend with initial: 6
14:57:31.673 [debug] Executing fun with value: 6
14:57:31.673 [debug] Evaluating bend block with value: 6
14:57:31.673 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.673 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.673 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.673 [debug] Executing bend with initial: 7
14:57:31.673 [debug] Executing fun with value: 7
14:57:31.673 [debug] Evaluating bend block with value: 7
14:57:31.673 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.673 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.673 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.673 [debug] Executing bend with initial: 8
14:57:31.673 [debug] Executing fun with value: 8
14:57:31.673 [debug] Evaluating bend block with value: 8
14:57:31.673 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.673 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.673 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.673 [debug] Executing bend with initial: 9
14:57:31.673 [debug] Executing fun with value: 9
14:57:31.673 [debug] Evaluating bend block with value: 9
14:57:31.673 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.673 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.673 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.673 [debug] Executing bend with initial: 10
14:57:31.673 [debug] Executing fun with value: 10
14:57:31.673 [debug] Evaluating bend block with value: 10
14:57:31.673 [debug] Block returned: %{variant: :leaf}
14:57:31.673 [debug] Fun returned result: %{variant: :leaf}
14:57:31.673 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.673 [debug] do_bend final result: %{variant: :leaf}
14:57:31.673 [debug] Executing bend with initial: 10
14:57:31.673 [debug] Executing fun with value: 10
14:57:31.673 [debug] Evaluating bend block with value: 10
14:57:31.673 [debug] Block returned: %{variant: :leaf}
14:57:31.673 [debug] Fun returned result: %{variant: :leaf}
14:57:31.673 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.673 [debug] do_bend final result: %{variant: :leaf}
14:57:31.673 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.673 [debug] Executing bend with initial: 9
14:57:31.673 [debug] Executing fun with value: 9
14:57:31.673 [debug] Evaluating bend block with value: 9
14:57:31.673 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.673 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.673 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.673 [debug] Executing bend with initial: 10
14:57:31.673 [debug] Executing fun with value: 10
14:57:31.673 [debug] Evaluating bend block with value: 10
14:57:31.673 [debug] Block returned: %{variant: :leaf}
14:57:31.673 [debug] Fun returned result: %{variant: :leaf}
14:57:31.673 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.673 [debug] do_bend final result: %{variant: :leaf}
14:57:31.673 [debug] Executing bend with initial: 10
14:57:31.673 [debug] Executing fun with value: 10
14:57:31.673 [debug] Evaluating bend block with value: 10
14:57:31.673 [debug] Block returned: %{variant: :leaf}
14:57:31.673 [debug] Fun returned result: %{variant: :leaf}
14:57:31.673 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.673 [debug] do_bend final result: %{variant: :leaf}
14:57:31.673 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.674 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 8
14:57:31.674 [debug] Executing fun with value: 8
14:57:31.674 [debug] Evaluating bend block with value: 8
14:57:31.674 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.674 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.674 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 9
14:57:31.674 [debug] Executing fun with value: 9
14:57:31.674 [debug] Evaluating bend block with value: 9
14:57:31.674 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 10
14:57:31.674 [debug] Executing fun with value: 10
14:57:31.674 [debug] Evaluating bend block with value: 10
14:57:31.674 [debug] Block returned: %{variant: :leaf}
14:57:31.674 [debug] Fun returned result: %{variant: :leaf}
14:57:31.674 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{variant: :leaf}
14:57:31.674 [debug] Executing bend with initial: 10
14:57:31.674 [debug] Executing fun with value: 10
14:57:31.674 [debug] Evaluating bend block with value: 10
14:57:31.674 [debug] Block returned: %{variant: :leaf}
14:57:31.674 [debug] Fun returned result: %{variant: :leaf}
14:57:31.674 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 9
14:57:31.674 [debug] Executing fun with value: 9
14:57:31.674 [debug] Evaluating bend block with value: 9
14:57:31.674 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 10
14:57:31.674 [debug] Executing fun with value: 10
14:57:31.674 [debug] Evaluating bend block with value: 10
14:57:31.674 [debug] Block returned: %{variant: :leaf}
14:57:31.674 [debug] Fun returned result: %{variant: :leaf}
14:57:31.674 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{variant: :leaf}
14:57:31.674 [debug] Executing bend with initial: 10
14:57:31.674 [debug] Executing fun with value: 10
14:57:31.674 [debug] Evaluating bend block with value: 10
14:57:31.674 [debug] Block returned: %{variant: :leaf}
14:57:31.674 [debug] Fun returned result: %{variant: :leaf}
14:57:31.674 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.674 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.674 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 7
14:57:31.674 [debug] Executing fun with value: 7
14:57:31.674 [debug] Evaluating bend block with value: 7
14:57:31.674 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.674 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.674 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 8
14:57:31.674 [debug] Executing fun with value: 8
14:57:31.674 [debug] Evaluating bend block with value: 8
14:57:31.674 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.674 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.674 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 9
14:57:31.674 [debug] Executing fun with value: 9
14:57:31.674 [debug] Evaluating bend block with value: 9
14:57:31.674 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.674 [debug] Executing bend with initial: 10
14:57:31.674 [debug] Executing fun with value: 10
14:57:31.674 [debug] Evaluating bend block with value: 10
14:57:31.674 [debug] Block returned: %{variant: :leaf}
14:57:31.674 [debug] Fun returned result: %{variant: :leaf}
14:57:31.674 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{variant: :leaf}
14:57:31.674 [debug] Executing bend with initial: 10
14:57:31.674 [debug] Executing fun with value: 10
14:57:31.674 [debug] Evaluating bend block with value: 10
14:57:31.674 [debug] Block returned: %{variant: :leaf}
14:57:31.674 [debug] Fun returned result: %{variant: :leaf}
14:57:31.674 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{variant: :leaf}
14:57:31.674 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.676 [debug] Executing bend with initial: 9
14:57:31.676 [debug] Executing fun with value: 9
14:57:31.676 [debug] Evaluating bend block with value: 9
14:57:31.676 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Executing bend with initial: 10
14:57:31.676 [debug] Executing fun with value: 10
14:57:31.676 [debug] Evaluating bend block with value: 10
14:57:31.676 [debug] Block returned: %{variant: :leaf}
14:57:31.676 [debug] Fun returned result: %{variant: :leaf}
14:57:31.676 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{variant: :leaf}
14:57:31.676 [debug] Executing bend with initial: 10
14:57:31.676 [debug] Executing fun with value: 10
14:57:31.676 [debug] Evaluating bend block with value: 10
14:57:31.676 [debug] Block returned: %{variant: :leaf}
14:57:31.676 [debug] Fun returned result: %{variant: :leaf}
14:57:31.676 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.676 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.676 [debug] Executing bend with initial: 8
14:57:31.676 [debug] Executing fun with value: 8
14:57:31.676 [debug] Evaluating bend block with value: 8
14:57:31.676 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.676 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.676 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.676 [debug] Executing bend with initial: 9
14:57:31.676 [debug] Executing fun with value: 9
14:57:31.676 [debug] Evaluating bend block with value: 9
14:57:31.676 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Executing bend with initial: 10
14:57:31.676 [debug] Executing fun with value: 10
14:57:31.676 [debug] Evaluating bend block with value: 10
14:57:31.676 [debug] Block returned: %{variant: :leaf}
14:57:31.676 [debug] Fun returned result: %{variant: :leaf}
14:57:31.676 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{variant: :leaf}
14:57:31.676 [debug] Executing bend with initial: 10
14:57:31.676 [debug] Executing fun with value: 10
14:57:31.676 [debug] Evaluating bend block with value: 10
14:57:31.676 [debug] Block returned: %{variant: :leaf}
14:57:31.676 [debug] Fun returned result: %{variant: :leaf}
14:57:31.676 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.676 [debug] Executing bend with initial: 9
14:57:31.676 [debug] Executing fun with value: 9
14:57:31.676 [debug] Evaluating bend block with value: 9
14:57:31.676 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.676 [debug] Executing bend with initial: 10
14:57:31.676 [debug] Executing fun with value: 10
14:57:31.676 [debug] Evaluating bend block with value: 10
14:57:31.676 [debug] Block returned: %{variant: :leaf}
14:57:31.676 [debug] Fun returned result: %{variant: :leaf}
14:57:31.676 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{variant: :leaf}
14:57:31.676 [debug] Executing bend with initial: 10
14:57:31.676 [debug] Executing fun with value: 10
14:57:31.676 [debug] Evaluating bend block with value: 10
14:57:31.676 [debug] Block returned: %{variant: :leaf}
14:57:31.676 [debug] Fun returned result: %{variant: :leaf}
14:57:31.676 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{variant: :leaf}
14:57:31.676 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.676 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.676 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.676 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.677 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 5
14:57:31.677 [debug] Executing fun with value: 5
14:57:31.677 [debug] Evaluating bend block with value: 5
14:57:31.677 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.677 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.677 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 6
14:57:31.677 [debug] Executing fun with value: 6
14:57:31.677 [debug] Evaluating bend block with value: 6
14:57:31.677 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.677 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.677 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 7
14:57:31.677 [debug] Executing fun with value: 7
14:57:31.677 [debug] Evaluating bend block with value: 7
14:57:31.677 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.677 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.677 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 8
14:57:31.677 [debug] Executing fun with value: 8
14:57:31.677 [debug] Evaluating bend block with value: 8
14:57:31.677 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.677 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.677 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 9
14:57:31.677 [debug] Executing fun with value: 9
14:57:31.677 [debug] Evaluating bend block with value: 9
14:57:31.677 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.677 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.677 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 10
14:57:31.677 [debug] Executing fun with value: 10
14:57:31.677 [debug] Evaluating bend block with value: 10
14:57:31.677 [debug] Block returned: %{variant: :leaf}
14:57:31.677 [debug] Fun returned result: %{variant: :leaf}
14:57:31.677 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.677 [debug] do_bend final result: %{variant: :leaf}
14:57:31.677 [debug] Executing bend with initial: 10
14:57:31.677 [debug] Executing fun with value: 10
14:57:31.677 [debug] Evaluating bend block with value: 10
14:57:31.677 [debug] Block returned: %{variant: :leaf}
14:57:31.677 [debug] Fun returned result: %{variant: :leaf}
14:57:31.677 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.677 [debug] do_bend final result: %{variant: :leaf}
14:57:31.677 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 9
14:57:31.677 [debug] Executing fun with value: 9
14:57:31.677 [debug] Evaluating bend block with value: 9
14:57:31.677 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.677 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.677 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.677 [debug] Executing bend with initial: 10
14:57:31.677 [debug] Executing fun with value: 10
14:57:31.677 [debug] Evaluating bend block with value: 10
14:57:31.679 [debug] Block returned: %{variant: :leaf}
14:57:31.679 [debug] Fun returned result: %{variant: :leaf}
14:57:31.679 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.679 [debug] do_bend final result: %{variant: :leaf}
14:57:31.679 [debug] Executing bend with initial: 10
14:57:31.679 [debug] Executing fun with value: 10
14:57:31.679 [debug] Evaluating bend block with value: 10
14:57:31.679 [debug] Block returned: %{variant: :leaf}
14:57:31.679 [debug] Fun returned result: %{variant: :leaf}
14:57:31.679 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.679 [debug] do_bend final result: %{variant: :leaf}
14:57:31.679 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.679 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.679 [debug] Executing bend with initial: 8
14:57:31.679 [debug] Executing fun with value: 8
14:57:31.679 [debug] Evaluating bend block with value: 8
14:57:31.679 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.679 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.679 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.679 [debug] Executing bend with initial: 9
14:57:31.679 [debug] Executing fun with value: 9
14:57:31.679 [debug] Evaluating bend block with value: 9
14:57:31.679 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.679 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.679 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.679 [debug] Executing bend with initial: 10
14:57:31.679 [debug] Executing fun with value: 10
14:57:31.680 [debug] Evaluating bend block with value: 10
14:57:31.680 [debug] Block returned: %{variant: :leaf}
14:57:31.680 [debug] Fun returned result: %{variant: :leaf}
14:57:31.680 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.680 [debug] do_bend final result: %{variant: :leaf}
14:57:31.680 [debug] Executing bend with initial: 10
14:57:31.680 [debug] Executing fun with value: 10
14:57:31.680 [debug] Evaluating bend block with value: 10
14:57:31.680 [debug] Block returned: %{variant: :leaf}
14:57:31.680 [debug] Fun returned result: %{variant: :leaf}
14:57:31.680 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.680 [debug] do_bend final result: %{variant: :leaf}
14:57:31.680 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.680 [debug] Executing bend with initial: 9
14:57:31.680 [debug] Executing fun with value: 9
14:57:31.680 [debug] Evaluating bend block with value: 9
14:57:31.680 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.680 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.680 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.680 [debug] Executing bend with initial: 10
14:57:31.680 [debug] Executing fun with value: 10
14:57:31.680 [debug] Evaluating bend block with value: 10
14:57:31.680 [debug] Block returned: %{variant: :leaf}
14:57:31.680 [debug] Fun returned result: %{variant: :leaf}
14:57:31.680 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.680 [debug] do_bend final result: %{variant: :leaf}
14:57:31.680 [debug] Executing bend with initial: 10
14:57:31.680 [debug] Executing fun with value: 10
14:57:31.680 [debug] Evaluating bend block with value: 10
14:57:31.680 [debug] Block returned: %{variant: :leaf}
14:57:31.680 [debug] Fun returned result: %{variant: :leaf}
14:57:31.680 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.680 [debug] do_bend final result: %{variant: :leaf}
14:57:31.680 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.680 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.680 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.680 [debug] Executing bend with initial: 7
14:57:31.680 [debug] Executing fun with value: 7
14:57:31.680 [debug] Evaluating bend block with value: 7
14:57:31.680 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.680 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.680 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.680 [debug] Executing bend with initial: 8
14:57:31.680 [debug] Executing fun with value: 8
14:57:31.680 [debug] Evaluating bend block with value: 8
14:57:31.680 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.680 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.680 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.680 [debug] Executing bend with initial: 9
14:57:31.680 [debug] Executing fun with value: 9
14:57:31.680 [debug] Evaluating bend block with value: 9
14:57:31.681 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 9
14:57:31.681 [debug] Executing fun with value: 9
14:57:31.681 [debug] Evaluating bend block with value: 9
14:57:31.681 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.681 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 8
14:57:31.681 [debug] Executing fun with value: 8
14:57:31.681 [debug] Evaluating bend block with value: 8
14:57:31.681 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.681 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.681 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 9
14:57:31.681 [debug] Executing fun with value: 9
14:57:31.681 [debug] Evaluating bend block with value: 9
14:57:31.681 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 9
14:57:31.681 [debug] Executing fun with value: 9
14:57:31.681 [debug] Evaluating bend block with value: 9
14:57:31.681 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] Executing bend with initial: 10
14:57:31.681 [debug] Executing fun with value: 10
14:57:31.681 [debug] Evaluating bend block with value: 10
14:57:31.681 [debug] Block returned: %{variant: :leaf}
14:57:31.681 [debug] Fun returned result: %{variant: :leaf}
14:57:31.681 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{variant: :leaf}
14:57:31.681 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.681 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.681 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.681 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.681 [debug] Executing bend with initial: 6
14:57:31.681 [debug] Executing fun with value: 6
14:57:31.681 [debug] Evaluating bend block with value: 6
14:57:31.681 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 7
14:57:31.682 [debug] Executing fun with value: 7
14:57:31.682 [debug] Evaluating bend block with value: 7
14:57:31.682 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 8
14:57:31.682 [debug] Executing fun with value: 8
14:57:31.682 [debug] Evaluating bend block with value: 8
14:57:31.682 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 9
14:57:31.682 [debug] Executing fun with value: 9
14:57:31.682 [debug] Evaluating bend block with value: 9
14:57:31.682 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 9
14:57:31.682 [debug] Executing fun with value: 9
14:57:31.682 [debug] Evaluating bend block with value: 9
14:57:31.682 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.682 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 8
14:57:31.682 [debug] Executing fun with value: 8
14:57:31.682 [debug] Evaluating bend block with value: 8
14:57:31.682 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 9
14:57:31.682 [debug] Executing fun with value: 9
14:57:31.682 [debug] Evaluating bend block with value: 9
14:57:31.682 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 9
14:57:31.682 [debug] Executing fun with value: 9
14:57:31.682 [debug] Evaluating bend block with value: 9
14:57:31.682 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.682 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.682 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 7
14:57:31.682 [debug] Executing fun with value: 7
14:57:31.682 [debug] Evaluating bend block with value: 7
14:57:31.682 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 8
14:57:31.682 [debug] Executing fun with value: 8
14:57:31.682 [debug] Evaluating bend block with value: 8
14:57:31.682 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 9
14:57:31.682 [debug] Executing fun with value: 9
14:57:31.682 [debug] Evaluating bend block with value: 9
14:57:31.682 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.682 [debug] do_bend final result: %{variant: :leaf}
14:57:31.682 [debug] Executing bend with initial: 10
14:57:31.682 [debug] Executing fun with value: 10
14:57:31.682 [debug] Evaluating bend block with value: 10
14:57:31.682 [debug] Block returned: %{variant: :leaf}
14:57:31.682 [debug] Fun returned result: %{variant: :leaf}
14:57:31.682 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.683 [debug] Executing bend with initial: 9
14:57:31.683 [debug] Executing fun with value: 9
14:57:31.683 [debug] Evaluating bend block with value: 9
14:57:31.683 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Executing bend with initial: 10
14:57:31.683 [debug] Executing fun with value: 10
14:57:31.683 [debug] Evaluating bend block with value: 10
14:57:31.683 [debug] Block returned: %{variant: :leaf}
14:57:31.683 [debug] Fun returned result: %{variant: :leaf}
14:57:31.683 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{variant: :leaf}
14:57:31.683 [debug] Executing bend with initial: 10
14:57:31.683 [debug] Executing fun with value: 10
14:57:31.683 [debug] Evaluating bend block with value: 10
14:57:31.683 [debug] Block returned: %{variant: :leaf}
14:57:31.683 [debug] Fun returned result: %{variant: :leaf}
14:57:31.683 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.683 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.683 [debug] Executing bend with initial: 8
14:57:31.683 [debug] Executing fun with value: 8
14:57:31.683 [debug] Evaluating bend block with value: 8
14:57:31.683 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.683 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.683 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.683 [debug] Executing bend with initial: 9
14:57:31.683 [debug] Executing fun with value: 9
14:57:31.683 [debug] Evaluating bend block with value: 9
14:57:31.683 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Executing bend with initial: 10
14:57:31.683 [debug] Executing fun with value: 10
14:57:31.683 [debug] Evaluating bend block with value: 10
14:57:31.683 [debug] Block returned: %{variant: :leaf}
14:57:31.683 [debug] Fun returned result: %{variant: :leaf}
14:57:31.683 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{variant: :leaf}
14:57:31.683 [debug] Executing bend with initial: 10
14:57:31.683 [debug] Executing fun with value: 10
14:57:31.683 [debug] Evaluating bend block with value: 10
14:57:31.683 [debug] Block returned: %{variant: :leaf}
14:57:31.683 [debug] Fun returned result: %{variant: :leaf}
14:57:31.683 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.683 [debug] Executing bend with initial: 9
14:57:31.683 [debug] Executing fun with value: 9
14:57:31.683 [debug] Evaluating bend block with value: 9
14:57:31.683 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.683 [debug] Executing bend with initial: 10
14:57:31.683 [debug] Executing fun with value: 10
14:57:31.683 [debug] Evaluating bend block with value: 10
14:57:31.683 [debug] Block returned: %{variant: :leaf}
14:57:31.683 [debug] Fun returned result: %{variant: :leaf}
14:57:31.683 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{variant: :leaf}
14:57:31.683 [debug] Executing bend with initial: 10
14:57:31.683 [debug] Executing fun with value: 10
14:57:31.683 [debug] Evaluating bend block with value: 10
14:57:31.683 [debug] Block returned: %{variant: :leaf}
14:57:31.683 [debug] Fun returned result: %{variant: :leaf}
14:57:31.683 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{variant: :leaf}
14:57:31.683 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.683 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.683 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.683 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.683 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.684 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 4
14:57:31.684 [debug] Executing fun with value: 4
14:57:31.684 [debug] Evaluating bend block with value: 4
14:57:31.684 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.684 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.684 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 5
14:57:31.684 [debug] Executing fun with value: 5
14:57:31.684 [debug] Evaluating bend block with value: 5
14:57:31.684 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.684 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.684 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 6
14:57:31.684 [debug] Executing fun with value: 6
14:57:31.684 [debug] Evaluating bend block with value: 6
14:57:31.684 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.684 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.684 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 7
14:57:31.684 [debug] Executing fun with value: 7
14:57:31.684 [debug] Evaluating bend block with value: 7
14:57:31.684 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.684 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.684 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 8
14:57:31.684 [debug] Executing fun with value: 8
14:57:31.684 [debug] Evaluating bend block with value: 8
14:57:31.684 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.684 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.684 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 9
14:57:31.684 [debug] Executing fun with value: 9
14:57:31.684 [debug] Evaluating bend block with value: 9
14:57:31.684 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.684 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.684 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 10
14:57:31.684 [debug] Executing fun with value: 10
14:57:31.684 [debug] Evaluating bend block with value: 10
14:57:31.684 [debug] Block returned: %{variant: :leaf}
14:57:31.684 [debug] Fun returned result: %{variant: :leaf}
14:57:31.684 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.684 [debug] do_bend final result: %{variant: :leaf}
14:57:31.684 [debug] Executing bend with initial: 10
14:57:31.684 [debug] Executing fun with value: 10
14:57:31.684 [debug] Evaluating bend block with value: 10
14:57:31.684 [debug] Block returned: %{variant: :leaf}
14:57:31.684 [debug] Fun returned result: %{variant: :leaf}
14:57:31.684 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.684 [debug] do_bend final result: %{variant: :leaf}
14:57:31.684 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.684 [debug] Executing bend with initial: 9
14:57:31.684 [debug] Executing fun with value: 9
14:57:31.687 [debug] Evaluating bend block with value: 9
14:57:31.687 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.687 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 8
14:57:31.687 [debug] Executing fun with value: 8
14:57:31.687 [debug] Evaluating bend block with value: 8
14:57:31.687 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.687 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.687 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 9
14:57:31.687 [debug] Executing fun with value: 9
14:57:31.687 [debug] Evaluating bend block with value: 9
14:57:31.687 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 9
14:57:31.687 [debug] Executing fun with value: 9
14:57:31.687 [debug] Evaluating bend block with value: 9
14:57:31.687 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.687 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.687 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 7
14:57:31.687 [debug] Executing fun with value: 7
14:57:31.687 [debug] Evaluating bend block with value: 7
14:57:31.687 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.687 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.687 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 8
14:57:31.687 [debug] Executing fun with value: 8
14:57:31.687 [debug] Evaluating bend block with value: 8
14:57:31.687 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.687 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.687 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 9
14:57:31.687 [debug] Executing fun with value: 9
14:57:31.687 [debug] Evaluating bend block with value: 9
14:57:31.687 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] Executing bend with initial: 10
14:57:31.687 [debug] Executing fun with value: 10
14:57:31.687 [debug] Evaluating bend block with value: 10
14:57:31.687 [debug] Block returned: %{variant: :leaf}
14:57:31.687 [debug] Fun returned result: %{variant: :leaf}
14:57:31.687 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{variant: :leaf}
14:57:31.687 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.687 [debug] Executing bend with initial: 9
14:57:31.687 [debug] Executing fun with value: 9
14:57:31.687 [debug] Evaluating bend block with value: 9
14:57:31.688 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Executing bend with initial: 10
14:57:31.688 [debug] Executing fun with value: 10
14:57:31.688 [debug] Evaluating bend block with value: 10
14:57:31.688 [debug] Block returned: %{variant: :leaf}
14:57:31.688 [debug] Fun returned result: %{variant: :leaf}
14:57:31.688 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{variant: :leaf}
14:57:31.688 [debug] Executing bend with initial: 10
14:57:31.688 [debug] Executing fun with value: 10
14:57:31.688 [debug] Evaluating bend block with value: 10
14:57:31.688 [debug] Block returned: %{variant: :leaf}
14:57:31.688 [debug] Fun returned result: %{variant: :leaf}
14:57:31.688 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.688 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.688 [debug] Executing bend with initial: 8
14:57:31.688 [debug] Executing fun with value: 8
14:57:31.688 [debug] Evaluating bend block with value: 8
14:57:31.688 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.688 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.688 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.688 [debug] Executing bend with initial: 9
14:57:31.688 [debug] Executing fun with value: 9
14:57:31.688 [debug] Evaluating bend block with value: 9
14:57:31.688 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Executing bend with initial: 10
14:57:31.688 [debug] Executing fun with value: 10
14:57:31.688 [debug] Evaluating bend block with value: 10
14:57:31.688 [debug] Block returned: %{variant: :leaf}
14:57:31.688 [debug] Fun returned result: %{variant: :leaf}
14:57:31.688 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{variant: :leaf}
14:57:31.688 [debug] Executing bend with initial: 10
14:57:31.688 [debug] Executing fun with value: 10
14:57:31.688 [debug] Evaluating bend block with value: 10
14:57:31.688 [debug] Block returned: %{variant: :leaf}
14:57:31.688 [debug] Fun returned result: %{variant: :leaf}
14:57:31.688 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.688 [debug] Executing bend with initial: 9
14:57:31.688 [debug] Executing fun with value: 9
14:57:31.688 [debug] Evaluating bend block with value: 9
14:57:31.688 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.688 [debug] Executing bend with initial: 10
14:57:31.688 [debug] Executing fun with value: 10
14:57:31.688 [debug] Evaluating bend block with value: 10
14:57:31.688 [debug] Block returned: %{variant: :leaf}
14:57:31.688 [debug] Fun returned result: %{variant: :leaf}
14:57:31.688 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{variant: :leaf}
14:57:31.688 [debug] Executing bend with initial: 10
14:57:31.688 [debug] Executing fun with value: 10
14:57:31.688 [debug] Evaluating bend block with value: 10
14:57:31.688 [debug] Block returned: %{variant: :leaf}
14:57:31.688 [debug] Fun returned result: %{variant: :leaf}
14:57:31.688 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{variant: :leaf}
14:57:31.688 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.688 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.688 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.689 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 6
14:57:31.689 [debug] Executing fun with value: 6
14:57:31.689 [debug] Evaluating bend block with value: 6
14:57:31.689 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.689 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.689 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 7
14:57:31.689 [debug] Executing fun with value: 7
14:57:31.689 [debug] Evaluating bend block with value: 7
14:57:31.689 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.689 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.689 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 8
14:57:31.689 [debug] Executing fun with value: 8
14:57:31.689 [debug] Evaluating bend block with value: 8
14:57:31.689 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.689 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.689 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 9
14:57:31.689 [debug] Executing fun with value: 9
14:57:31.689 [debug] Evaluating bend block with value: 9
14:57:31.689 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 10
14:57:31.689 [debug] Executing fun with value: 10
14:57:31.689 [debug] Evaluating bend block with value: 10
14:57:31.689 [debug] Block returned: %{variant: :leaf}
14:57:31.689 [debug] Fun returned result: %{variant: :leaf}
14:57:31.689 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.689 [debug] do_bend final result: %{variant: :leaf}
14:57:31.689 [debug] Executing bend with initial: 10
14:57:31.689 [debug] Executing fun with value: 10
14:57:31.689 [debug] Evaluating bend block with value: 10
14:57:31.689 [debug] Block returned: %{variant: :leaf}
14:57:31.689 [debug] Fun returned result: %{variant: :leaf}
14:57:31.689 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.689 [debug] do_bend final result: %{variant: :leaf}
14:57:31.689 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 9
14:57:31.689 [debug] Executing fun with value: 9
14:57:31.689 [debug] Evaluating bend block with value: 9
14:57:31.689 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 10
14:57:31.689 [debug] Executing fun with value: 10
14:57:31.689 [debug] Evaluating bend block with value: 10
14:57:31.689 [debug] Block returned: %{variant: :leaf}
14:57:31.689 [debug] Fun returned result: %{variant: :leaf}
14:57:31.689 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.689 [debug] do_bend final result: %{variant: :leaf}
14:57:31.689 [debug] Executing bend with initial: 10
14:57:31.689 [debug] Executing fun with value: 10
14:57:31.689 [debug] Evaluating bend block with value: 10
14:57:31.689 [debug] Block returned: %{variant: :leaf}
14:57:31.689 [debug] Fun returned result: %{variant: :leaf}
14:57:31.689 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.689 [debug] do_bend final result: %{variant: :leaf}
14:57:31.689 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.689 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 8
14:57:31.689 [debug] Executing fun with value: 8
14:57:31.689 [debug] Evaluating bend block with value: 8
14:57:31.689 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.689 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.689 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 9
14:57:31.689 [debug] Executing fun with value: 9
14:57:31.689 [debug] Evaluating bend block with value: 9
14:57:31.689 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.689 [debug] Executing bend with initial: 10
14:57:31.689 [debug] Executing fun with value: 10
14:57:31.691 [debug] Evaluating bend block with value: 10
14:57:31.691 [debug] Block returned: %{variant: :leaf}
14:57:31.691 [debug] Fun returned result: %{variant: :leaf}
14:57:31.691 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.691 [debug] do_bend final result: %{variant: :leaf}
14:57:31.691 [debug] Executing bend with initial: 10
14:57:31.691 [debug] Executing fun with value: 10
14:57:31.691 [debug] Evaluating bend block with value: 10
14:57:31.691 [debug] Block returned: %{variant: :leaf}
14:57:31.691 [debug] Fun returned result: %{variant: :leaf}
14:57:31.691 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.692 [debug] Executing bend with initial: 9
14:57:31.692 [debug] Executing fun with value: 9
14:57:31.692 [debug] Evaluating bend block with value: 9
14:57:31.692 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Executing bend with initial: 10
14:57:31.692 [debug] Executing fun with value: 10
14:57:31.692 [debug] Evaluating bend block with value: 10
14:57:31.692 [debug] Block returned: %{variant: :leaf}
14:57:31.692 [debug] Fun returned result: %{variant: :leaf}
14:57:31.692 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{variant: :leaf}
14:57:31.692 [debug] Executing bend with initial: 10
14:57:31.692 [debug] Executing fun with value: 10
14:57:31.692 [debug] Evaluating bend block with value: 10
14:57:31.692 [debug] Block returned: %{variant: :leaf}
14:57:31.692 [debug] Fun returned result: %{variant: :leaf}
14:57:31.692 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.692 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.692 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.692 [debug] Executing bend with initial: 7
14:57:31.692 [debug] Executing fun with value: 7
14:57:31.692 [debug] Evaluating bend block with value: 7
14:57:31.692 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.692 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.692 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.692 [debug] Executing bend with initial: 8
14:57:31.692 [debug] Executing fun with value: 8
14:57:31.692 [debug] Evaluating bend block with value: 8
14:57:31.692 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.692 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.692 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.692 [debug] Executing bend with initial: 9
14:57:31.692 [debug] Executing fun with value: 9
14:57:31.692 [debug] Evaluating bend block with value: 9
14:57:31.692 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Executing bend with initial: 10
14:57:31.692 [debug] Executing fun with value: 10
14:57:31.692 [debug] Evaluating bend block with value: 10
14:57:31.692 [debug] Block returned: %{variant: :leaf}
14:57:31.692 [debug] Fun returned result: %{variant: :leaf}
14:57:31.692 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{variant: :leaf}
14:57:31.692 [debug] Executing bend with initial: 10
14:57:31.692 [debug] Executing fun with value: 10
14:57:31.692 [debug] Evaluating bend block with value: 10
14:57:31.692 [debug] Block returned: %{variant: :leaf}
14:57:31.692 [debug] Fun returned result: %{variant: :leaf}
14:57:31.692 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{variant: :leaf}
14:57:31.692 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.692 [debug] Executing bend with initial: 9
14:57:31.692 [debug] Executing fun with value: 9
14:57:31.692 [debug] Evaluating bend block with value: 9
14:57:31.692 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.692 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.693 [debug] Executing bend with initial: 10
14:57:31.693 [debug] Executing fun with value: 10
14:57:31.693 [debug] Evaluating bend block with value: 10
14:57:31.693 [debug] Block returned: %{variant: :leaf}
14:57:31.693 [debug] Fun returned result: %{variant: :leaf}
14:57:31.693 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{variant: :leaf}
14:57:31.693 [debug] Executing bend with initial: 10
14:57:31.693 [debug] Executing fun with value: 10
14:57:31.693 [debug] Evaluating bend block with value: 10
14:57:31.693 [debug] Block returned: %{variant: :leaf}
14:57:31.693 [debug] Fun returned result: %{variant: :leaf}
14:57:31.693 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.693 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.693 [debug] Executing bend with initial: 8
14:57:31.693 [debug] Executing fun with value: 8
14:57:31.693 [debug] Evaluating bend block with value: 8
14:57:31.693 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.693 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.693 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.693 [debug] Executing bend with initial: 9
14:57:31.693 [debug] Executing fun with value: 9
14:57:31.693 [debug] Evaluating bend block with value: 9
14:57:31.693 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.693 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.693 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.693 [debug] Executing bend with initial: 10
14:57:31.693 [debug] Executing fun with value: 10
14:57:31.693 [debug] Evaluating bend block with value: 10
14:57:31.693 [debug] Block returned: %{variant: :leaf}
14:57:31.693 [debug] Fun returned result: %{variant: :leaf}
14:57:31.693 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{variant: :leaf}
14:57:31.693 [debug] Executing bend with initial: 10
14:57:31.693 [debug] Executing fun with value: 10
14:57:31.693 [debug] Evaluating bend block with value: 10
14:57:31.693 [debug] Block returned: %{variant: :leaf}
14:57:31.693 [debug] Fun returned result: %{variant: :leaf}
14:57:31.693 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.693 [debug] Executing bend with initial: 9
14:57:31.693 [debug] Executing fun with value: 9
14:57:31.693 [debug] Evaluating bend block with value: 9
14:57:31.693 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.693 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.693 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.693 [debug] Executing bend with initial: 10
14:57:31.693 [debug] Executing fun with value: 10
14:57:31.693 [debug] Evaluating bend block with value: 10
14:57:31.693 [debug] Block returned: %{variant: :leaf}
14:57:31.693 [debug] Fun returned result: %{variant: :leaf}
14:57:31.693 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{variant: :leaf}
14:57:31.693 [debug] Executing bend with initial: 10
14:57:31.693 [debug] Executing fun with value: 10
14:57:31.693 [debug] Evaluating bend block with value: 10
14:57:31.693 [debug] Block returned: %{variant: :leaf}
14:57:31.693 [debug] Fun returned result: %{variant: :leaf}
14:57:31.693 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{variant: :leaf}
14:57:31.693 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.693 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.693 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.694 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.694 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 5
14:57:31.694 [debug] Executing fun with value: 5
14:57:31.694 [debug] Evaluating bend block with value: 5
14:57:31.694 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.694 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.694 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 6
14:57:31.694 [debug] Executing fun with value: 6
14:57:31.694 [debug] Evaluating bend block with value: 6
14:57:31.694 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.694 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.694 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 7
14:57:31.694 [debug] Executing fun with value: 7
14:57:31.694 [debug] Evaluating bend block with value: 7
14:57:31.694 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.694 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.694 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 8
14:57:31.694 [debug] Executing fun with value: 8
14:57:31.694 [debug] Evaluating bend block with value: 8
14:57:31.694 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.694 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.694 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 9
14:57:31.694 [debug] Executing fun with value: 9
14:57:31.694 [debug] Evaluating bend block with value: 9
14:57:31.694 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.694 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.694 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 10
14:57:31.694 [debug] Executing fun with value: 10
14:57:31.694 [debug] Evaluating bend block with value: 10
14:57:31.694 [debug] Block returned: %{variant: :leaf}
14:57:31.694 [debug] Fun returned result: %{variant: :leaf}
14:57:31.694 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.694 [debug] do_bend final result: %{variant: :leaf}
14:57:31.694 [debug] Executing bend with initial: 10
14:57:31.694 [debug] Executing fun with value: 10
14:57:31.694 [debug] Evaluating bend block with value: 10
14:57:31.694 [debug] Block returned: %{variant: :leaf}
14:57:31.694 [debug] Fun returned result: %{variant: :leaf}
14:57:31.694 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.694 [debug] do_bend final result: %{variant: :leaf}
14:57:31.694 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 9
14:57:31.694 [debug] Executing fun with value: 9
14:57:31.694 [debug] Evaluating bend block with value: 9
14:57:31.694 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.694 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.694 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.694 [debug] Executing bend with initial: 10
14:57:31.695 [debug] Executing fun with value: 10
14:57:31.695 [debug] Evaluating bend block with value: 10
14:57:31.695 [debug] Block returned: %{variant: :leaf}
14:57:31.695 [debug] Fun returned result: %{variant: :leaf}
14:57:31.695 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{variant: :leaf}
14:57:31.695 [debug] Executing bend with initial: 10
14:57:31.695 [debug] Executing fun with value: 10
14:57:31.695 [debug] Evaluating bend block with value: 10
14:57:31.695 [debug] Block returned: %{variant: :leaf}
14:57:31.695 [debug] Fun returned result: %{variant: :leaf}
14:57:31.695 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.695 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.695 [debug] Executing bend with initial: 8
14:57:31.695 [debug] Executing fun with value: 8
14:57:31.695 [debug] Evaluating bend block with value: 8
14:57:31.695 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.695 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.695 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.695 [debug] Executing bend with initial: 9
14:57:31.695 [debug] Executing fun with value: 9
14:57:31.695 [debug] Evaluating bend block with value: 9
14:57:31.695 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.695 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.695 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.695 [debug] Executing bend with initial: 10
14:57:31.695 [debug] Executing fun with value: 10
14:57:31.695 [debug] Evaluating bend block with value: 10
14:57:31.695 [debug] Block returned: %{variant: :leaf}
14:57:31.695 [debug] Fun returned result: %{variant: :leaf}
14:57:31.695 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{variant: :leaf}
14:57:31.695 [debug] Executing bend with initial: 10
14:57:31.695 [debug] Executing fun with value: 10
14:57:31.695 [debug] Evaluating bend block with value: 10
14:57:31.695 [debug] Block returned: %{variant: :leaf}
14:57:31.695 [debug] Fun returned result: %{variant: :leaf}
14:57:31.695 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.695 [debug] Executing bend with initial: 9
14:57:31.695 [debug] Executing fun with value: 9
14:57:31.695 [debug] Evaluating bend block with value: 9
14:57:31.695 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.695 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.695 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.695 [debug] Executing bend with initial: 10
14:57:31.695 [debug] Executing fun with value: 10
14:57:31.695 [debug] Evaluating bend block with value: 10
14:57:31.695 [debug] Block returned: %{variant: :leaf}
14:57:31.695 [debug] Fun returned result: %{variant: :leaf}
14:57:31.695 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{variant: :leaf}
14:57:31.695 [debug] Executing bend with initial: 10
14:57:31.695 [debug] Executing fun with value: 10
14:57:31.695 [debug] Evaluating bend block with value: 10
14:57:31.695 [debug] Block returned: %{variant: :leaf}
14:57:31.695 [debug] Fun returned result: %{variant: :leaf}
14:57:31.695 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{variant: :leaf}
14:57:31.695 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.695 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.695 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.695 [debug] Executing bend with initial: 7
14:57:31.695 [debug] Executing fun with value: 7
14:57:31.695 [debug] Evaluating bend block with value: 7
14:57:31.695 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.695 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.695 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.695 [debug] Executing bend with initial: 8
14:57:31.695 [debug] Executing fun with value: 8
14:57:31.695 [debug] Evaluating bend block with value: 8
14:57:31.695 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.695 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.696 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 9
14:57:31.696 [debug] Executing fun with value: 9
14:57:31.696 [debug] Evaluating bend block with value: 9
14:57:31.696 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 10
14:57:31.696 [debug] Executing fun with value: 10
14:57:31.696 [debug] Evaluating bend block with value: 10
14:57:31.696 [debug] Block returned: %{variant: :leaf}
14:57:31.696 [debug] Fun returned result: %{variant: :leaf}
14:57:31.696 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{variant: :leaf}
14:57:31.696 [debug] Executing bend with initial: 10
14:57:31.696 [debug] Executing fun with value: 10
14:57:31.696 [debug] Evaluating bend block with value: 10
14:57:31.696 [debug] Block returned: %{variant: :leaf}
14:57:31.696 [debug] Fun returned result: %{variant: :leaf}
14:57:31.696 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 9
14:57:31.696 [debug] Executing fun with value: 9
14:57:31.696 [debug] Evaluating bend block with value: 9
14:57:31.696 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 10
14:57:31.696 [debug] Executing fun with value: 10
14:57:31.696 [debug] Evaluating bend block with value: 10
14:57:31.696 [debug] Block returned: %{variant: :leaf}
14:57:31.696 [debug] Fun returned result: %{variant: :leaf}
14:57:31.696 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{variant: :leaf}
14:57:31.696 [debug] Executing bend with initial: 10
14:57:31.696 [debug] Executing fun with value: 10
14:57:31.696 [debug] Evaluating bend block with value: 10
14:57:31.696 [debug] Block returned: %{variant: :leaf}
14:57:31.696 [debug] Fun returned result: %{variant: :leaf}
14:57:31.696 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.696 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 8
14:57:31.696 [debug] Executing fun with value: 8
14:57:31.696 [debug] Evaluating bend block with value: 8
14:57:31.696 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.696 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.696 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 9
14:57:31.696 [debug] Executing fun with value: 9
14:57:31.696 [debug] Evaluating bend block with value: 9
14:57:31.696 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 10
14:57:31.696 [debug] Executing fun with value: 10
14:57:31.696 [debug] Evaluating bend block with value: 10
14:57:31.696 [debug] Block returned: %{variant: :leaf}
14:57:31.696 [debug] Fun returned result: %{variant: :leaf}
14:57:31.696 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{variant: :leaf}
14:57:31.696 [debug] Executing bend with initial: 10
14:57:31.696 [debug] Executing fun with value: 10
14:57:31.696 [debug] Evaluating bend block with value: 10
14:57:31.696 [debug] Block returned: %{variant: :leaf}
14:57:31.696 [debug] Fun returned result: %{variant: :leaf}
14:57:31.696 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{variant: :leaf}
14:57:31.696 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 9
14:57:31.696 [debug] Executing fun with value: 9
14:57:31.696 [debug] Evaluating bend block with value: 9
14:57:31.696 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.696 [debug] Executing bend with initial: 10
14:57:31.697 [debug] Executing fun with value: 10
14:57:31.697 [debug] Evaluating bend block with value: 10
14:57:31.697 [debug] Block returned: %{variant: :leaf}
14:57:31.697 [debug] Fun returned result: %{variant: :leaf}
14:57:31.697 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{variant: :leaf}
14:57:31.697 [debug] Executing bend with initial: 10
14:57:31.697 [debug] Executing fun with value: 10
14:57:31.697 [debug] Evaluating bend block with value: 10
14:57:31.697 [debug] Block returned: %{variant: :leaf}
14:57:31.697 [debug] Fun returned result: %{variant: :leaf}
14:57:31.697 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.697 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.697 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.697 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 6
14:57:31.697 [debug] Executing fun with value: 6
14:57:31.697 [debug] Evaluating bend block with value: 6
14:57:31.697 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.697 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.697 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 7
14:57:31.697 [debug] Executing fun with value: 7
14:57:31.697 [debug] Evaluating bend block with value: 7
14:57:31.697 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.697 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.697 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 8
14:57:31.697 [debug] Executing fun with value: 8
14:57:31.697 [debug] Evaluating bend block with value: 8
14:57:31.697 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.697 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.697 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 9
14:57:31.697 [debug] Executing fun with value: 9
14:57:31.697 [debug] Evaluating bend block with value: 9
14:57:31.697 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 10
14:57:31.697 [debug] Executing fun with value: 10
14:57:31.697 [debug] Evaluating bend block with value: 10
14:57:31.697 [debug] Block returned: %{variant: :leaf}
14:57:31.697 [debug] Fun returned result: %{variant: :leaf}
14:57:31.697 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{variant: :leaf}
14:57:31.697 [debug] Executing bend with initial: 10
14:57:31.697 [debug] Executing fun with value: 10
14:57:31.697 [debug] Evaluating bend block with value: 10
14:57:31.697 [debug] Block returned: %{variant: :leaf}
14:57:31.697 [debug] Fun returned result: %{variant: :leaf}
14:57:31.697 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 9
14:57:31.697 [debug] Executing fun with value: 9
14:57:31.697 [debug] Evaluating bend block with value: 9
14:57:31.697 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 10
14:57:31.697 [debug] Executing fun with value: 10
14:57:31.697 [debug] Evaluating bend block with value: 10
14:57:31.697 [debug] Block returned: %{variant: :leaf}
14:57:31.697 [debug] Fun returned result: %{variant: :leaf}
14:57:31.697 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{variant: :leaf}
14:57:31.697 [debug] Executing bend with initial: 10
14:57:31.697 [debug] Executing fun with value: 10
14:57:31.697 [debug] Evaluating bend block with value: 10
14:57:31.697 [debug] Block returned: %{variant: :leaf}
14:57:31.697 [debug] Fun returned result: %{variant: :leaf}
14:57:31.697 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{variant: :leaf}
14:57:31.697 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.697 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 8
14:57:31.697 [debug] Executing fun with value: 8
14:57:31.697 [debug] Evaluating bend block with value: 8
14:57:31.697 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.697 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.697 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 9
14:57:31.697 [debug] Executing fun with value: 9
14:57:31.697 [debug] Evaluating bend block with value: 9
14:57:31.697 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.697 [debug] Executing bend with initial: 10
14:57:31.697 [debug] Executing fun with value: 10
14:57:31.697 [debug] Evaluating bend block with value: 10
14:57:31.697 [debug] Block returned: %{variant: :leaf}
14:57:31.697 [debug] Fun returned result: %{variant: :leaf}
14:57:31.698 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.698 [debug] do_bend final result: %{variant: :leaf}
14:57:31.698 [debug] Executing bend with initial: 10
14:57:31.698 [debug] Executing fun with value: 10
14:57:31.698 [debug] Evaluating bend block with value: 10
14:57:31.698 [debug] Block returned: %{variant: :leaf}
14:57:31.698 [debug] Fun returned result: %{variant: :leaf}
14:57:31.698 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.698 [debug] do_bend final result: %{variant: :leaf}
14:57:31.698 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.698 [debug] Executing bend with initial: 9
14:57:31.700 [debug] Executing fun with value: 9
14:57:31.700 [debug] Evaluating bend block with value: 9
14:57:31.700 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.700 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.700 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.700 [debug] Executing bend with initial: 10
14:57:31.700 [debug] Executing fun with value: 10
14:57:31.700 [debug] Evaluating bend block with value: 10
14:57:31.700 [debug] Block returned: %{variant: :leaf}
14:57:31.700 [debug] Fun returned result: %{variant: :leaf}
14:57:31.700 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.700 [debug] do_bend final result: %{variant: :leaf}
14:57:31.700 [debug] Executing bend with initial: 10
14:57:31.700 [debug] Executing fun with value: 10
14:57:31.700 [debug] Evaluating bend block with value: 10
14:57:31.700 [debug] Block returned: %{variant: :leaf}
14:57:31.700 [debug] Fun returned result: %{variant: :leaf}
14:57:31.700 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.700 [debug] do_bend final result: %{variant: :leaf}
14:57:31.700 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.700 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.700 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.700 [debug] Executing bend with initial: 7
14:57:31.700 [debug] Executing fun with value: 7
14:57:31.700 [debug] Evaluating bend block with value: 7
14:57:31.700 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.700 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.700 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.700 [debug] Executing bend with initial: 8
14:57:31.700 [debug] Executing fun with value: 8
14:57:31.700 [debug] Evaluating bend block with value: 8
14:57:31.700 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.700 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.700 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.700 [debug] Executing bend with initial: 9
14:57:31.700 [debug] Executing fun with value: 9
14:57:31.700 [debug] Evaluating bend block with value: 9
14:57:31.700 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.700 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.700 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.700 [debug] Executing bend with initial: 10
14:57:31.700 [debug] Executing fun with value: 10
14:57:31.700 [debug] Evaluating bend block with value: 10
14:57:31.700 [debug] Block returned: %{variant: :leaf}
14:57:31.700 [debug] Fun returned result: %{variant: :leaf}
14:57:31.700 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.700 [debug] do_bend final result: %{variant: :leaf}
14:57:31.700 [debug] Executing bend with initial: 10
14:57:31.700 [debug] Executing fun with value: 10
14:57:31.700 [debug] Evaluating bend block with value: 10
14:57:31.700 [debug] Block returned: %{variant: :leaf}
14:57:31.700 [debug] Fun returned result: %{variant: :leaf}
14:57:31.700 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.700 [debug] do_bend final result: %{variant: :leaf}
14:57:31.700 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.700 [debug] Executing bend with initial: 9
14:57:31.700 [debug] Executing fun with value: 9
14:57:31.700 [debug] Evaluating bend block with value: 9
14:57:31.700 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.700 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.701 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.701 [debug] Executing bend with initial: 10
14:57:31.701 [debug] Executing fun with value: 10
14:57:31.701 [debug] Evaluating bend block with value: 10
14:57:31.701 [debug] Block returned: %{variant: :leaf}
14:57:31.701 [debug] Fun returned result: %{variant: :leaf}
14:57:31.701 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.701 [debug] do_bend final result: %{variant: :leaf}
14:57:31.701 [debug] Executing bend with initial: 10
14:57:31.701 [debug] Executing fun with value: 10
14:57:31.701 [debug] Evaluating bend block with value: 10
14:57:31.701 [debug] Block returned: %{variant: :leaf}
14:57:31.701 [debug] Fun returned result: %{variant: :leaf}
14:57:31.701 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.701 [debug] do_bend final result: %{variant: :leaf}
14:57:31.701 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.701 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.701 [debug] Executing bend with initial: 8
14:57:31.701 [debug] Executing fun with value: 8
14:57:31.701 [debug] Evaluating bend block with value: 8
14:57:31.701 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.701 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.701 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.701 [debug] Executing bend with initial: 9
14:57:31.701 [debug] Executing fun with value: 9
14:57:31.701 [debug] Evaluating bend block with value: 9
14:57:31.701 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.701 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.701 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.701 [debug] Executing bend with initial: 10
14:57:31.701 [debug] Executing fun with value: 10
14:57:31.701 [debug] Evaluating bend block with value: 10
14:57:31.701 [debug] Block returned: %{variant: :leaf}
14:57:31.701 [debug] Fun returned result: %{variant: :leaf}
14:57:31.701 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.701 [debug] do_bend final result: %{variant: :leaf}
14:57:31.701 [debug] Executing bend with initial: 10
14:57:31.701 [debug] Executing fun with value: 10
14:57:31.701 [debug] Evaluating bend block with value: 10
14:57:31.701 [debug] Block returned: %{variant: :leaf}
14:57:31.701 [debug] Fun returned result: %{variant: :leaf}
14:57:31.701 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.701 [debug] do_bend final result: %{variant: :leaf}
14:57:31.701 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.701 [debug] Executing bend with initial: 9
14:57:31.701 [debug] Executing fun with value: 9
14:57:31.701 [debug] Evaluating bend block with value: 9
14:57:31.701 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.703 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.703 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.703 [debug] Executing bend with initial: 10
14:57:31.703 [debug] Executing fun with value: 10
14:57:31.703 [debug] Evaluating bend block with value: 10
14:57:31.703 [debug] Block returned: %{variant: :leaf}
14:57:31.703 [debug] Fun returned result: %{variant: :leaf}
14:57:31.703 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.703 [debug] do_bend final result: %{variant: :leaf}
14:57:31.703 [debug] Executing bend with initial: 10
14:57:31.703 [debug] Executing fun with value: 10
14:57:31.703 [debug] Evaluating bend block with value: 10
14:57:31.703 [debug] Block returned: %{variant: :leaf}
14:57:31.703 [debug] Fun returned result: %{variant: :leaf}
14:57:31.703 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.703 [debug] do_bend final result: %{variant: :leaf}
14:57:31.703 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.703 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.704 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.704 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.704 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.705 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.706 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.709 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
14:57:31.709 [debug] Executing bend with initial: 2
14:57:31.709 [debug] Executing fun with value: 2
14:57:31.709 [debug] Evaluating bend block with value: 2
14:57:31.709 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.709 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.709 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.709 [debug] Executing bend with initial: 3
14:57:31.709 [debug] Executing fun with value: 3
14:57:31.709 [debug] Evaluating bend block with value: 3
14:57:31.709 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.709 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.709 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.709 [debug] Executing bend with initial: 4
14:57:31.709 [debug] Executing fun with value: 4
14:57:31.709 [debug] Evaluating bend block with value: 4
14:57:31.709 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.709 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.709 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.709 [debug] Executing bend with initial: 5
14:57:31.709 [debug] Executing fun with value: 5
14:57:31.709 [debug] Evaluating bend block with value: 5
14:57:31.709 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.709 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.709 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.709 [debug] Executing bend with initial: 6
14:57:31.710 [debug] Executing fun with value: 6
14:57:31.710 [debug] Evaluating bend block with value: 6
14:57:31.710 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.710 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.710 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 7
14:57:31.710 [debug] Executing fun with value: 7
14:57:31.710 [debug] Evaluating bend block with value: 7
14:57:31.710 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.710 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.710 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 8
14:57:31.710 [debug] Executing fun with value: 8
14:57:31.710 [debug] Evaluating bend block with value: 8
14:57:31.710 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.710 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.710 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 9
14:57:31.710 [debug] Executing fun with value: 9
14:57:31.710 [debug] Evaluating bend block with value: 9
14:57:31.710 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 10
14:57:31.710 [debug] Executing fun with value: 10
14:57:31.710 [debug] Evaluating bend block with value: 10
14:57:31.710 [debug] Block returned: %{variant: :leaf}
14:57:31.710 [debug] Fun returned result: %{variant: :leaf}
14:57:31.710 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.710 [debug] do_bend final result: %{variant: :leaf}
14:57:31.710 [debug] Executing bend with initial: 10
14:57:31.710 [debug] Executing fun with value: 10
14:57:31.710 [debug] Evaluating bend block with value: 10
14:57:31.710 [debug] Block returned: %{variant: :leaf}
14:57:31.710 [debug] Fun returned result: %{variant: :leaf}
14:57:31.710 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.710 [debug] do_bend final result: %{variant: :leaf}
14:57:31.710 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 9
14:57:31.710 [debug] Executing fun with value: 9
14:57:31.710 [debug] Evaluating bend block with value: 9
14:57:31.710 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 10
14:57:31.710 [debug] Executing fun with value: 10
14:57:31.710 [debug] Evaluating bend block with value: 10
14:57:31.710 [debug] Block returned: %{variant: :leaf}
14:57:31.710 [debug] Fun returned result: %{variant: :leaf}
14:57:31.710 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.710 [debug] do_bend final result: %{variant: :leaf}
14:57:31.710 [debug] Executing bend with initial: 10
14:57:31.710 [debug] Executing fun with value: 10
14:57:31.710 [debug] Evaluating bend block with value: 10
14:57:31.710 [debug] Block returned: %{variant: :leaf}
14:57:31.710 [debug] Fun returned result: %{variant: :leaf}
14:57:31.710 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.710 [debug] do_bend final result: %{variant: :leaf}
14:57:31.710 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.710 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 8
14:57:31.710 [debug] Executing fun with value: 8
14:57:31.710 [debug] Evaluating bend block with value: 8
14:57:31.710 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.710 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.710 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 9
14:57:31.710 [debug] Executing fun with value: 9
14:57:31.710 [debug] Evaluating bend block with value: 9
14:57:31.710 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.710 [debug] Executing bend with initial: 10
14:57:31.710 [debug] Executing fun with value: 10
14:57:31.710 [debug] Evaluating bend block with value: 10
14:57:31.710 [debug] Block returned: %{variant: :leaf}
14:57:31.710 [debug] Fun returned result: %{variant: :leaf}
14:57:31.710 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.710 [debug] do_bend final result: %{variant: :leaf}
14:57:31.710 [debug] Executing bend with initial: 10
14:57:31.711 [debug] Executing fun with value: 10
14:57:31.711 [debug] Evaluating bend block with value: 10
14:57:31.711 [debug] Block returned: %{variant: :leaf}
14:57:31.711 [debug] Fun returned result: %{variant: :leaf}
14:57:31.711 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 9
14:57:31.711 [debug] Executing fun with value: 9
14:57:31.711 [debug] Evaluating bend block with value: 9
14:57:31.711 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 10
14:57:31.711 [debug] Executing fun with value: 10
14:57:31.711 [debug] Evaluating bend block with value: 10
14:57:31.711 [debug] Block returned: %{variant: :leaf}
14:57:31.711 [debug] Fun returned result: %{variant: :leaf}
14:57:31.711 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{variant: :leaf}
14:57:31.711 [debug] Executing bend with initial: 10
14:57:31.711 [debug] Executing fun with value: 10
14:57:31.711 [debug] Evaluating bend block with value: 10
14:57:31.711 [debug] Block returned: %{variant: :leaf}
14:57:31.711 [debug] Fun returned result: %{variant: :leaf}
14:57:31.711 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.711 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.711 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 7
14:57:31.711 [debug] Executing fun with value: 7
14:57:31.711 [debug] Evaluating bend block with value: 7
14:57:31.711 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.711 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.711 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 8
14:57:31.711 [debug] Executing fun with value: 8
14:57:31.711 [debug] Evaluating bend block with value: 8
14:57:31.711 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.711 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.711 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 9
14:57:31.711 [debug] Executing fun with value: 9
14:57:31.711 [debug] Evaluating bend block with value: 9
14:57:31.711 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 10
14:57:31.711 [debug] Executing fun with value: 10
14:57:31.711 [debug] Evaluating bend block with value: 10
14:57:31.711 [debug] Block returned: %{variant: :leaf}
14:57:31.711 [debug] Fun returned result: %{variant: :leaf}
14:57:31.711 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{variant: :leaf}
14:57:31.711 [debug] Executing bend with initial: 10
14:57:31.711 [debug] Executing fun with value: 10
14:57:31.711 [debug] Evaluating bend block with value: 10
14:57:31.711 [debug] Block returned: %{variant: :leaf}
14:57:31.711 [debug] Fun returned result: %{variant: :leaf}
14:57:31.711 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 9
14:57:31.711 [debug] Executing fun with value: 9
14:57:31.711 [debug] Evaluating bend block with value: 9
14:57:31.711 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.711 [debug] Executing bend with initial: 10
14:57:31.711 [debug] Executing fun with value: 10
14:57:31.711 [debug] Evaluating bend block with value: 10
14:57:31.711 [debug] Block returned: %{variant: :leaf}
14:57:31.711 [debug] Fun returned result: %{variant: :leaf}
14:57:31.711 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.711 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] Executing bend with initial: 10
14:57:31.712 [debug] Executing fun with value: 10
14:57:31.712 [debug] Evaluating bend block with value: 10
14:57:31.712 [debug] Block returned: %{variant: :leaf}
14:57:31.712 [debug] Fun returned result: %{variant: :leaf}
14:57:31.712 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.712 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 8
14:57:31.712 [debug] Executing fun with value: 8
14:57:31.712 [debug] Evaluating bend block with value: 8
14:57:31.712 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.712 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.712 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 9
14:57:31.712 [debug] Executing fun with value: 9
14:57:31.712 [debug] Evaluating bend block with value: 9
14:57:31.712 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 10
14:57:31.712 [debug] Executing fun with value: 10
14:57:31.712 [debug] Evaluating bend block with value: 10
14:57:31.712 [debug] Block returned: %{variant: :leaf}
14:57:31.712 [debug] Fun returned result: %{variant: :leaf}
14:57:31.712 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] Executing bend with initial: 10
14:57:31.712 [debug] Executing fun with value: 10
14:57:31.712 [debug] Evaluating bend block with value: 10
14:57:31.712 [debug] Block returned: %{variant: :leaf}
14:57:31.712 [debug] Fun returned result: %{variant: :leaf}
14:57:31.712 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 9
14:57:31.712 [debug] Executing fun with value: 9
14:57:31.712 [debug] Evaluating bend block with value: 9
14:57:31.712 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 10
14:57:31.712 [debug] Executing fun with value: 10
14:57:31.712 [debug] Evaluating bend block with value: 10
14:57:31.712 [debug] Block returned: %{variant: :leaf}
14:57:31.712 [debug] Fun returned result: %{variant: :leaf}
14:57:31.712 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] Executing bend with initial: 10
14:57:31.712 [debug] Executing fun with value: 10
14:57:31.712 [debug] Evaluating bend block with value: 10
14:57:31.712 [debug] Block returned: %{variant: :leaf}
14:57:31.712 [debug] Fun returned result: %{variant: :leaf}
14:57:31.712 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.712 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.712 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.712 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 6
14:57:31.712 [debug] Executing fun with value: 6
14:57:31.712 [debug] Evaluating bend block with value: 6
14:57:31.712 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.712 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.712 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 7
14:57:31.712 [debug] Executing fun with value: 7
14:57:31.712 [debug] Evaluating bend block with value: 7
14:57:31.712 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.712 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.712 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 8
14:57:31.712 [debug] Executing fun with value: 8
14:57:31.712 [debug] Evaluating bend block with value: 8
14:57:31.712 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.712 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.712 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 9
14:57:31.712 [debug] Executing fun with value: 9
14:57:31.712 [debug] Evaluating bend block with value: 9
14:57:31.712 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 10
14:57:31.712 [debug] Executing fun with value: 10
14:57:31.712 [debug] Evaluating bend block with value: 10
14:57:31.712 [debug] Block returned: %{variant: :leaf}
14:57:31.712 [debug] Fun returned result: %{variant: :leaf}
14:57:31.712 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] Executing bend with initial: 10
14:57:31.712 [debug] Executing fun with value: 10
14:57:31.712 [debug] Evaluating bend block with value: 10
14:57:31.712 [debug] Block returned: %{variant: :leaf}
14:57:31.712 [debug] Fun returned result: %{variant: :leaf}
14:57:31.712 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{variant: :leaf}
14:57:31.712 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.712 [debug] Executing bend with initial: 9
14:57:31.712 [debug] Executing fun with value: 9
14:57:31.712 [debug] Evaluating bend block with value: 9
14:57:31.712 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Executing bend with initial: 10
14:57:31.713 [debug] Executing fun with value: 10
14:57:31.713 [debug] Evaluating bend block with value: 10
14:57:31.713 [debug] Block returned: %{variant: :leaf}
14:57:31.713 [debug] Fun returned result: %{variant: :leaf}
14:57:31.713 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{variant: :leaf}
14:57:31.713 [debug] Executing bend with initial: 10
14:57:31.713 [debug] Executing fun with value: 10
14:57:31.713 [debug] Evaluating bend block with value: 10
14:57:31.713 [debug] Block returned: %{variant: :leaf}
14:57:31.713 [debug] Fun returned result: %{variant: :leaf}
14:57:31.713 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.713 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.713 [debug] Executing bend with initial: 8
14:57:31.713 [debug] Executing fun with value: 8
14:57:31.713 [debug] Evaluating bend block with value: 8
14:57:31.713 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.713 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.713 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.713 [debug] Executing bend with initial: 9
14:57:31.713 [debug] Executing fun with value: 9
14:57:31.713 [debug] Evaluating bend block with value: 9
14:57:31.713 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Executing bend with initial: 10
14:57:31.713 [debug] Executing fun with value: 10
14:57:31.713 [debug] Evaluating bend block with value: 10
14:57:31.713 [debug] Block returned: %{variant: :leaf}
14:57:31.713 [debug] Fun returned result: %{variant: :leaf}
14:57:31.713 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{variant: :leaf}
14:57:31.713 [debug] Executing bend with initial: 10
14:57:31.713 [debug] Executing fun with value: 10
14:57:31.713 [debug] Evaluating bend block with value: 10
14:57:31.713 [debug] Block returned: %{variant: :leaf}
14:57:31.713 [debug] Fun returned result: %{variant: :leaf}
14:57:31.713 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.713 [debug] Executing bend with initial: 9
14:57:31.713 [debug] Executing fun with value: 9
14:57:31.713 [debug] Evaluating bend block with value: 9
14:57:31.713 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.713 [debug] Executing bend with initial: 10
14:57:31.713 [debug] Executing fun with value: 10
14:57:31.713 [debug] Evaluating bend block with value: 10
14:57:31.713 [debug] Block returned: %{variant: :leaf}
14:57:31.713 [debug] Fun returned result: %{variant: :leaf}
14:57:31.713 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{variant: :leaf}
14:57:31.713 [debug] Executing bend with initial: 10
14:57:31.713 [debug] Executing fun with value: 10
14:57:31.713 [debug] Evaluating bend block with value: 10
14:57:31.713 [debug] Block returned: %{variant: :leaf}
14:57:31.713 [debug] Fun returned result: %{variant: :leaf}
14:57:31.713 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{variant: :leaf}
14:57:31.713 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.713 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.713 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.713 [debug] Executing bend with initial: 7
14:57:31.713 [debug] Executing fun with value: 7
14:57:31.713 [debug] Evaluating bend block with value: 7
14:57:31.713 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.713 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.714 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 8
14:57:31.714 [debug] Executing fun with value: 8
14:57:31.714 [debug] Evaluating bend block with value: 8
14:57:31.714 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.714 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.714 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 9
14:57:31.714 [debug] Executing fun with value: 9
14:57:31.714 [debug] Evaluating bend block with value: 9
14:57:31.714 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.714 [debug] Evaluating bend block with value: 10
14:57:31.714 [debug] Block returned: %{variant: :leaf}
14:57:31.714 [debug] Fun returned result: %{variant: :leaf}
14:57:31.714 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{variant: :leaf}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.714 [debug] Evaluating bend block with value: 10
14:57:31.714 [debug] Block returned: %{variant: :leaf}
14:57:31.714 [debug] Fun returned result: %{variant: :leaf}
14:57:31.714 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 9
14:57:31.714 [debug] Executing fun with value: 9
14:57:31.714 [debug] Evaluating bend block with value: 9
14:57:31.714 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.714 [debug] Evaluating bend block with value: 10
14:57:31.714 [debug] Block returned: %{variant: :leaf}
14:57:31.714 [debug] Fun returned result: %{variant: :leaf}
14:57:31.714 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{variant: :leaf}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.714 [debug] Evaluating bend block with value: 10
14:57:31.714 [debug] Block returned: %{variant: :leaf}
14:57:31.714 [debug] Fun returned result: %{variant: :leaf}
14:57:31.714 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.714 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 8
14:57:31.714 [debug] Executing fun with value: 8
14:57:31.714 [debug] Evaluating bend block with value: 8
14:57:31.714 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.714 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.714 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 9
14:57:31.714 [debug] Executing fun with value: 9
14:57:31.714 [debug] Evaluating bend block with value: 9
14:57:31.714 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.714 [debug] Evaluating bend block with value: 10
14:57:31.714 [debug] Block returned: %{variant: :leaf}
14:57:31.714 [debug] Fun returned result: %{variant: :leaf}
14:57:31.714 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{variant: :leaf}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.714 [debug] Evaluating bend block with value: 10
14:57:31.714 [debug] Block returned: %{variant: :leaf}
14:57:31.714 [debug] Fun returned result: %{variant: :leaf}
14:57:31.714 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 9
14:57:31.714 [debug] Executing fun with value: 9
14:57:31.714 [debug] Evaluating bend block with value: 9
14:57:31.714 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.714 [debug] Evaluating bend block with value: 10
14:57:31.714 [debug] Block returned: %{variant: :leaf}
14:57:31.714 [debug] Fun returned result: %{variant: :leaf}
14:57:31.714 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.714 [debug] do_bend final result: %{variant: :leaf}
14:57:31.714 [debug] Executing bend with initial: 10
14:57:31.714 [debug] Executing fun with value: 10
14:57:31.715 [debug] Evaluating bend block with value: 10
14:57:31.715 [debug] Block returned: %{variant: :leaf}
14:57:31.715 [debug] Fun returned result: %{variant: :leaf}
14:57:31.715 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.715 [debug] do_bend final result: %{variant: :leaf}
14:57:31.715 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.715 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.715 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.715 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.715 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.715 [debug] Executing bend with initial: 5
14:57:31.715 [debug] Executing fun with value: 5
14:57:31.715 [debug] Evaluating bend block with value: 5
14:57:31.715 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.715 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.715 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.715 [debug] Executing bend with initial: 6
14:57:31.715 [debug] Executing fun with value: 6
14:57:31.715 [debug] Evaluating bend block with value: 6
14:57:31.715 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.715 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.715 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.715 [debug] Executing bend with initial: 7
14:57:31.715 [debug] Executing fun with value: 7
14:57:31.715 [debug] Evaluating bend block with value: 7
14:57:31.715 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.715 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.715 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.715 [debug] Executing bend with initial: 8
14:57:31.715 [debug] Executing fun with value: 8
14:57:31.715 [debug] Evaluating bend block with value: 8
14:57:31.715 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.715 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.715 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.715 [debug] Executing bend with initial: 9
14:57:31.715 [debug] Executing fun with value: 9
14:57:31.715 [debug] Evaluating bend block with value: 9
14:57:31.715 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.715 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.715 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.715 [debug] Executing bend with initial: 10
14:57:31.715 [debug] Executing fun with value: 10
14:57:31.715 [debug] Evaluating bend block with value: 10
14:57:31.715 [debug] Block returned: %{variant: :leaf}
14:57:31.715 [debug] Fun returned result: %{variant: :leaf}
14:57:31.715 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.715 [debug] do_bend final result: %{variant: :leaf}
14:57:31.715 [debug] Executing bend with initial: 10
14:57:31.715 [debug] Executing fun with value: 10
14:57:31.715 [debug] Evaluating bend block with value: 10
14:57:31.715 [debug] Block returned: %{variant: :leaf}
14:57:31.715 [debug] Fun returned result: %{variant: :leaf}
14:57:31.715 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.715 [debug] do_bend final result: %{variant: :leaf}
14:57:31.715 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.715 [debug] Executing bend with initial: 9
14:57:31.715 [debug] Executing fun with value: 9
14:57:31.715 [debug] Evaluating bend block with value: 9
14:57:31.715 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.715 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Executing bend with initial: 10
14:57:31.716 [debug] Executing fun with value: 10
14:57:31.716 [debug] Evaluating bend block with value: 10
14:57:31.716 [debug] Block returned: %{variant: :leaf}
14:57:31.716 [debug] Fun returned result: %{variant: :leaf}
14:57:31.716 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{variant: :leaf}
14:57:31.716 [debug] Executing bend with initial: 10
14:57:31.716 [debug] Executing fun with value: 10
14:57:31.716 [debug] Evaluating bend block with value: 10
14:57:31.716 [debug] Block returned: %{variant: :leaf}
14:57:31.716 [debug] Fun returned result: %{variant: :leaf}
14:57:31.716 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.716 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.716 [debug] Executing bend with initial: 8
14:57:31.716 [debug] Executing fun with value: 8
14:57:31.716 [debug] Evaluating bend block with value: 8
14:57:31.716 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.716 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.716 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.716 [debug] Executing bend with initial: 9
14:57:31.716 [debug] Executing fun with value: 9
14:57:31.716 [debug] Evaluating bend block with value: 9
14:57:31.716 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Executing bend with initial: 10
14:57:31.716 [debug] Executing fun with value: 10
14:57:31.716 [debug] Evaluating bend block with value: 10
14:57:31.716 [debug] Block returned: %{variant: :leaf}
14:57:31.716 [debug] Fun returned result: %{variant: :leaf}
14:57:31.716 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{variant: :leaf}
14:57:31.716 [debug] Executing bend with initial: 10
14:57:31.716 [debug] Executing fun with value: 10
14:57:31.716 [debug] Evaluating bend block with value: 10
14:57:31.716 [debug] Block returned: %{variant: :leaf}
14:57:31.716 [debug] Fun returned result: %{variant: :leaf}
14:57:31.716 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.716 [debug] Executing bend with initial: 9
14:57:31.716 [debug] Executing fun with value: 9
14:57:31.716 [debug] Evaluating bend block with value: 9
14:57:31.716 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.716 [debug] Executing bend with initial: 10
14:57:31.716 [debug] Executing fun with value: 10
14:57:31.716 [debug] Evaluating bend block with value: 10
14:57:31.716 [debug] Block returned: %{variant: :leaf}
14:57:31.716 [debug] Fun returned result: %{variant: :leaf}
14:57:31.716 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{variant: :leaf}
14:57:31.716 [debug] Executing bend with initial: 10
14:57:31.716 [debug] Executing fun with value: 10
14:57:31.716 [debug] Evaluating bend block with value: 10
14:57:31.716 [debug] Block returned: %{variant: :leaf}
14:57:31.716 [debug] Fun returned result: %{variant: :leaf}
14:57:31.716 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{variant: :leaf}
14:57:31.716 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.716 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.716 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.716 [debug] Executing bend with initial: 7
14:57:31.716 [debug] Executing fun with value: 7
14:57:31.716 [debug] Evaluating bend block with value: 7
14:57:31.716 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.716 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.716 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 8
14:57:31.717 [debug] Executing fun with value: 8
14:57:31.717 [debug] Evaluating bend block with value: 8
14:57:31.717 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.717 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.717 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 9
14:57:31.717 [debug] Executing fun with value: 9
14:57:31.717 [debug] Evaluating bend block with value: 9
14:57:31.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 10
14:57:31.717 [debug] Executing fun with value: 10
14:57:31.717 [debug] Evaluating bend block with value: 10
14:57:31.717 [debug] Block returned: %{variant: :leaf}
14:57:31.717 [debug] Fun returned result: %{variant: :leaf}
14:57:31.717 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{variant: :leaf}
14:57:31.717 [debug] Executing bend with initial: 10
14:57:31.717 [debug] Executing fun with value: 10
14:57:31.717 [debug] Evaluating bend block with value: 10
14:57:31.717 [debug] Block returned: %{variant: :leaf}
14:57:31.717 [debug] Fun returned result: %{variant: :leaf}
14:57:31.717 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 9
14:57:31.717 [debug] Executing fun with value: 9
14:57:31.717 [debug] Evaluating bend block with value: 9
14:57:31.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 10
14:57:31.717 [debug] Executing fun with value: 10
14:57:31.717 [debug] Evaluating bend block with value: 10
14:57:31.717 [debug] Block returned: %{variant: :leaf}
14:57:31.717 [debug] Fun returned result: %{variant: :leaf}
14:57:31.717 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{variant: :leaf}
14:57:31.717 [debug] Executing bend with initial: 10
14:57:31.717 [debug] Executing fun with value: 10
14:57:31.717 [debug] Evaluating bend block with value: 10
14:57:31.717 [debug] Block returned: %{variant: :leaf}
14:57:31.717 [debug] Fun returned result: %{variant: :leaf}
14:57:31.717 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.717 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 8
14:57:31.717 [debug] Executing fun with value: 8
14:57:31.717 [debug] Evaluating bend block with value: 8
14:57:31.717 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.717 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.717 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 9
14:57:31.717 [debug] Executing fun with value: 9
14:57:31.717 [debug] Evaluating bend block with value: 9
14:57:31.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 10
14:57:31.717 [debug] Executing fun with value: 10
14:57:31.717 [debug] Evaluating bend block with value: 10
14:57:31.717 [debug] Block returned: %{variant: :leaf}
14:57:31.717 [debug] Fun returned result: %{variant: :leaf}
14:57:31.717 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{variant: :leaf}
14:57:31.717 [debug] Executing bend with initial: 10
14:57:31.717 [debug] Executing fun with value: 10
14:57:31.717 [debug] Evaluating bend block with value: 10
14:57:31.717 [debug] Block returned: %{variant: :leaf}
14:57:31.717 [debug] Fun returned result: %{variant: :leaf}
14:57:31.717 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{variant: :leaf}
14:57:31.717 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.717 [debug] Executing bend with initial: 9
14:57:31.717 [debug] Executing fun with value: 9
14:57:31.717 [debug] Evaluating bend block with value: 9
14:57:31.717 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 10
14:57:31.718 [debug] Executing fun with value: 10
14:57:31.718 [debug] Evaluating bend block with value: 10
14:57:31.718 [debug] Block returned: %{variant: :leaf}
14:57:31.718 [debug] Fun returned result: %{variant: :leaf}
14:57:31.718 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.718 [debug] do_bend final result: %{variant: :leaf}
14:57:31.718 [debug] Executing bend with initial: 10
14:57:31.718 [debug] Executing fun with value: 10
14:57:31.718 [debug] Evaluating bend block with value: 10
14:57:31.718 [debug] Block returned: %{variant: :leaf}
14:57:31.718 [debug] Fun returned result: %{variant: :leaf}
14:57:31.718 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.718 [debug] do_bend final result: %{variant: :leaf}
14:57:31.718 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.718 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.718 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.718 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 6
14:57:31.718 [debug] Executing fun with value: 6
14:57:31.718 [debug] Evaluating bend block with value: 6
14:57:31.718 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.718 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.718 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 7
14:57:31.718 [debug] Executing fun with value: 7
14:57:31.718 [debug] Evaluating bend block with value: 7
14:57:31.718 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.718 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.718 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 8
14:57:31.718 [debug] Executing fun with value: 8
14:57:31.718 [debug] Evaluating bend block with value: 8
14:57:31.718 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.718 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.718 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 9
14:57:31.718 [debug] Executing fun with value: 9
14:57:31.718 [debug] Evaluating bend block with value: 9
14:57:31.718 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 10
14:57:31.718 [debug] Executing fun with value: 10
14:57:31.718 [debug] Evaluating bend block with value: 10
14:57:31.718 [debug] Block returned: %{variant: :leaf}
14:57:31.718 [debug] Fun returned result: %{variant: :leaf}
14:57:31.718 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.718 [debug] do_bend final result: %{variant: :leaf}
14:57:31.718 [debug] Executing bend with initial: 10
14:57:31.718 [debug] Executing fun with value: 10
14:57:31.718 [debug] Evaluating bend block with value: 10
14:57:31.718 [debug] Block returned: %{variant: :leaf}
14:57:31.718 [debug] Fun returned result: %{variant: :leaf}
14:57:31.718 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.718 [debug] do_bend final result: %{variant: :leaf}
14:57:31.718 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 9
14:57:31.718 [debug] Executing fun with value: 9
14:57:31.718 [debug] Evaluating bend block with value: 9
14:57:31.718 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.718 [debug] Executing bend with initial: 10
14:57:31.718 [debug] Executing fun with value: 10
14:57:31.718 [debug] Evaluating bend block with value: 10
14:57:31.718 [debug] Block returned: %{variant: :leaf}
14:57:31.718 [debug] Fun returned result: %{variant: :leaf}
14:57:31.718 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.718 [debug] do_bend final result: %{variant: :leaf}
14:57:31.718 [debug] Executing bend with initial: 10
14:57:31.718 [debug] Executing fun with value: 10
14:57:31.719 [debug] Evaluating bend block with value: 10
14:57:31.719 [debug] Block returned: %{variant: :leaf}
14:57:31.719 [debug] Fun returned result: %{variant: :leaf}
14:57:31.719 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.719 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 8
14:57:31.719 [debug] Executing fun with value: 8
14:57:31.719 [debug] Evaluating bend block with value: 8
14:57:31.719 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.719 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.719 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 9
14:57:31.719 [debug] Executing fun with value: 9
14:57:31.719 [debug] Evaluating bend block with value: 9
14:57:31.719 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 10
14:57:31.719 [debug] Executing fun with value: 10
14:57:31.719 [debug] Evaluating bend block with value: 10
14:57:31.719 [debug] Block returned: %{variant: :leaf}
14:57:31.719 [debug] Fun returned result: %{variant: :leaf}
14:57:31.719 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{variant: :leaf}
14:57:31.719 [debug] Executing bend with initial: 10
14:57:31.719 [debug] Executing fun with value: 10
14:57:31.719 [debug] Evaluating bend block with value: 10
14:57:31.719 [debug] Block returned: %{variant: :leaf}
14:57:31.719 [debug] Fun returned result: %{variant: :leaf}
14:57:31.719 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 9
14:57:31.719 [debug] Executing fun with value: 9
14:57:31.719 [debug] Evaluating bend block with value: 9
14:57:31.719 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 10
14:57:31.719 [debug] Executing fun with value: 10
14:57:31.719 [debug] Evaluating bend block with value: 10
14:57:31.719 [debug] Block returned: %{variant: :leaf}
14:57:31.719 [debug] Fun returned result: %{variant: :leaf}
14:57:31.719 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{variant: :leaf}
14:57:31.719 [debug] Executing bend with initial: 10
14:57:31.719 [debug] Executing fun with value: 10
14:57:31.719 [debug] Evaluating bend block with value: 10
14:57:31.719 [debug] Block returned: %{variant: :leaf}
14:57:31.719 [debug] Fun returned result: %{variant: :leaf}
14:57:31.719 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.719 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.719 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 7
14:57:31.719 [debug] Executing fun with value: 7
14:57:31.719 [debug] Evaluating bend block with value: 7
14:57:31.719 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.719 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.719 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 8
14:57:31.719 [debug] Executing fun with value: 8
14:57:31.719 [debug] Evaluating bend block with value: 8
14:57:31.719 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.719 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.719 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 9
14:57:31.719 [debug] Executing fun with value: 9
14:57:31.719 [debug] Evaluating bend block with value: 9
14:57:31.719 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.719 [debug] Executing bend with initial: 10
14:57:31.719 [debug] Executing fun with value: 10
14:57:31.719 [debug] Evaluating bend block with value: 10
14:57:31.719 [debug] Block returned: %{variant: :leaf}
14:57:31.719 [debug] Fun returned result: %{variant: :leaf}
14:57:31.719 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.719 [debug] do_bend final result: %{variant: :leaf}
14:57:31.719 [debug] Executing bend with initial: 10
14:57:31.719 [debug] Executing fun with value: 10
14:57:31.719 [debug] Evaluating bend block with value: 10
14:57:31.720 [debug] Block returned: %{variant: :leaf}
14:57:31.720 [debug] Fun returned result: %{variant: :leaf}
14:57:31.720 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.720 [debug] Executing bend with initial: 9
14:57:31.720 [debug] Executing fun with value: 9
14:57:31.720 [debug] Evaluating bend block with value: 9
14:57:31.720 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Executing bend with initial: 10
14:57:31.720 [debug] Executing fun with value: 10
14:57:31.720 [debug] Evaluating bend block with value: 10
14:57:31.720 [debug] Block returned: %{variant: :leaf}
14:57:31.720 [debug] Fun returned result: %{variant: :leaf}
14:57:31.720 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{variant: :leaf}
14:57:31.720 [debug] Executing bend with initial: 10
14:57:31.720 [debug] Executing fun with value: 10
14:57:31.720 [debug] Evaluating bend block with value: 10
14:57:31.720 [debug] Block returned: %{variant: :leaf}
14:57:31.720 [debug] Fun returned result: %{variant: :leaf}
14:57:31.720 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.720 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.720 [debug] Executing bend with initial: 8
14:57:31.720 [debug] Executing fun with value: 8
14:57:31.720 [debug] Evaluating bend block with value: 8
14:57:31.720 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.720 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.720 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.720 [debug] Executing bend with initial: 9
14:57:31.720 [debug] Executing fun with value: 9
14:57:31.720 [debug] Evaluating bend block with value: 9
14:57:31.720 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Executing bend with initial: 10
14:57:31.720 [debug] Executing fun with value: 10
14:57:31.720 [debug] Evaluating bend block with value: 10
14:57:31.720 [debug] Block returned: %{variant: :leaf}
14:57:31.720 [debug] Fun returned result: %{variant: :leaf}
14:57:31.720 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{variant: :leaf}
14:57:31.720 [debug] Executing bend with initial: 10
14:57:31.720 [debug] Executing fun with value: 10
14:57:31.720 [debug] Evaluating bend block with value: 10
14:57:31.720 [debug] Block returned: %{variant: :leaf}
14:57:31.720 [debug] Fun returned result: %{variant: :leaf}
14:57:31.720 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.720 [debug] Executing bend with initial: 9
14:57:31.720 [debug] Executing fun with value: 9
14:57:31.720 [debug] Evaluating bend block with value: 9
14:57:31.720 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.720 [debug] Executing bend with initial: 10
14:57:31.720 [debug] Executing fun with value: 10
14:57:31.720 [debug] Evaluating bend block with value: 10
14:57:31.720 [debug] Block returned: %{variant: :leaf}
14:57:31.720 [debug] Fun returned result: %{variant: :leaf}
14:57:31.720 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{variant: :leaf}
14:57:31.720 [debug] Executing bend with initial: 10
14:57:31.720 [debug] Executing fun with value: 10
14:57:31.720 [debug] Evaluating bend block with value: 10
14:57:31.720 [debug] Block returned: %{variant: :leaf}
14:57:31.720 [debug] Fun returned result: %{variant: :leaf}
14:57:31.720 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{variant: :leaf}
14:57:31.720 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.720 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.720 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.720 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.721 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.721 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.721 [debug] Executing bend with initial: 4
14:57:31.721 [debug] Executing fun with value: 4
14:57:31.721 [debug] Evaluating bend block with value: 4
14:57:31.721 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.721 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.721 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.721 [debug] Executing bend with initial: 5
14:57:31.721 [debug] Executing fun with value: 5
14:57:31.721 [debug] Evaluating bend block with value: 5
14:57:31.721 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.721 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.721 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.721 [debug] Executing bend with initial: 6
14:57:31.721 [debug] Executing fun with value: 6
14:57:31.721 [debug] Evaluating bend block with value: 6
14:57:31.721 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.721 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.721 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.721 [debug] Executing bend with initial: 7
14:57:31.721 [debug] Executing fun with value: 7
14:57:31.721 [debug] Evaluating bend block with value: 7
14:57:31.721 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.721 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.721 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.721 [debug] Executing bend with initial: 8
14:57:31.721 [debug] Executing fun with value: 8
14:57:31.721 [debug] Evaluating bend block with value: 8
14:57:31.721 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.721 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.721 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.721 [debug] Executing bend with initial: 9
14:57:31.722 [debug] Executing fun with value: 9
14:57:31.722 [debug] Evaluating bend block with value: 9
14:57:31.722 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.722 [debug] Evaluating bend block with value: 10
14:57:31.722 [debug] Block returned: %{variant: :leaf}
14:57:31.722 [debug] Fun returned result: %{variant: :leaf}
14:57:31.722 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{variant: :leaf}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.722 [debug] Evaluating bend block with value: 10
14:57:31.722 [debug] Block returned: %{variant: :leaf}
14:57:31.722 [debug] Fun returned result: %{variant: :leaf}
14:57:31.722 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 9
14:57:31.722 [debug] Executing fun with value: 9
14:57:31.722 [debug] Evaluating bend block with value: 9
14:57:31.722 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.722 [debug] Evaluating bend block with value: 10
14:57:31.722 [debug] Block returned: %{variant: :leaf}
14:57:31.722 [debug] Fun returned result: %{variant: :leaf}
14:57:31.722 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{variant: :leaf}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.722 [debug] Evaluating bend block with value: 10
14:57:31.722 [debug] Block returned: %{variant: :leaf}
14:57:31.722 [debug] Fun returned result: %{variant: :leaf}
14:57:31.722 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.722 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 8
14:57:31.722 [debug] Executing fun with value: 8
14:57:31.722 [debug] Evaluating bend block with value: 8
14:57:31.722 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.722 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.722 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 9
14:57:31.722 [debug] Executing fun with value: 9
14:57:31.722 [debug] Evaluating bend block with value: 9
14:57:31.722 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.722 [debug] Evaluating bend block with value: 10
14:57:31.722 [debug] Block returned: %{variant: :leaf}
14:57:31.722 [debug] Fun returned result: %{variant: :leaf}
14:57:31.722 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{variant: :leaf}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.722 [debug] Evaluating bend block with value: 10
14:57:31.722 [debug] Block returned: %{variant: :leaf}
14:57:31.722 [debug] Fun returned result: %{variant: :leaf}
14:57:31.722 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 9
14:57:31.722 [debug] Executing fun with value: 9
14:57:31.722 [debug] Evaluating bend block with value: 9
14:57:31.722 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.722 [debug] Evaluating bend block with value: 10
14:57:31.722 [debug] Block returned: %{variant: :leaf}
14:57:31.722 [debug] Fun returned result: %{variant: :leaf}
14:57:31.722 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.722 [debug] do_bend final result: %{variant: :leaf}
14:57:31.722 [debug] Executing bend with initial: 10
14:57:31.722 [debug] Executing fun with value: 10
14:57:31.723 [debug] Evaluating bend block with value: 10
14:57:31.723 [debug] Block returned: %{variant: :leaf}
14:57:31.723 [debug] Fun returned result: %{variant: :leaf}
14:57:31.723 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.723 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.723 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 7
14:57:31.723 [debug] Executing fun with value: 7
14:57:31.723 [debug] Evaluating bend block with value: 7
14:57:31.723 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.723 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.723 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 8
14:57:31.723 [debug] Executing fun with value: 8
14:57:31.723 [debug] Evaluating bend block with value: 8
14:57:31.723 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.723 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.723 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 9
14:57:31.723 [debug] Executing fun with value: 9
14:57:31.723 [debug] Evaluating bend block with value: 9
14:57:31.723 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 10
14:57:31.723 [debug] Executing fun with value: 10
14:57:31.723 [debug] Evaluating bend block with value: 10
14:57:31.723 [debug] Block returned: %{variant: :leaf}
14:57:31.723 [debug] Fun returned result: %{variant: :leaf}
14:57:31.723 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{variant: :leaf}
14:57:31.723 [debug] Executing bend with initial: 10
14:57:31.723 [debug] Executing fun with value: 10
14:57:31.723 [debug] Evaluating bend block with value: 10
14:57:31.723 [debug] Block returned: %{variant: :leaf}
14:57:31.723 [debug] Fun returned result: %{variant: :leaf}
14:57:31.723 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 9
14:57:31.723 [debug] Executing fun with value: 9
14:57:31.723 [debug] Evaluating bend block with value: 9
14:57:31.723 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 10
14:57:31.723 [debug] Executing fun with value: 10
14:57:31.723 [debug] Evaluating bend block with value: 10
14:57:31.723 [debug] Block returned: %{variant: :leaf}
14:57:31.723 [debug] Fun returned result: %{variant: :leaf}
14:57:31.723 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{variant: :leaf}
14:57:31.723 [debug] Executing bend with initial: 10
14:57:31.723 [debug] Executing fun with value: 10
14:57:31.723 [debug] Evaluating bend block with value: 10
14:57:31.723 [debug] Block returned: %{variant: :leaf}
14:57:31.723 [debug] Fun returned result: %{variant: :leaf}
14:57:31.723 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{variant: :leaf}
14:57:31.723 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.723 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 8
14:57:31.723 [debug] Executing fun with value: 8
14:57:31.723 [debug] Evaluating bend block with value: 8
14:57:31.723 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.723 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.723 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 9
14:57:31.723 [debug] Executing fun with value: 9
14:57:31.723 [debug] Evaluating bend block with value: 9
14:57:31.723 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.723 [debug] Executing bend with initial: 10
14:57:31.723 [debug] Executing fun with value: 10
14:57:31.723 [debug] Evaluating bend block with value: 10
14:57:31.723 [debug] Block returned: %{variant: :leaf}
14:57:31.723 [debug] Fun returned result: %{variant: :leaf}
14:57:31.725 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{variant: :leaf}
14:57:31.725 [debug] Executing bend with initial: 10
14:57:31.725 [debug] Executing fun with value: 10
14:57:31.725 [debug] Evaluating bend block with value: 10
14:57:31.725 [debug] Block returned: %{variant: :leaf}
14:57:31.725 [debug] Fun returned result: %{variant: :leaf}
14:57:31.725 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 9
14:57:31.725 [debug] Executing fun with value: 9
14:57:31.725 [debug] Evaluating bend block with value: 9
14:57:31.725 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 10
14:57:31.725 [debug] Executing fun with value: 10
14:57:31.725 [debug] Evaluating bend block with value: 10
14:57:31.725 [debug] Block returned: %{variant: :leaf}
14:57:31.725 [debug] Fun returned result: %{variant: :leaf}
14:57:31.725 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{variant: :leaf}
14:57:31.725 [debug] Executing bend with initial: 10
14:57:31.725 [debug] Executing fun with value: 10
14:57:31.725 [debug] Evaluating bend block with value: 10
14:57:31.725 [debug] Block returned: %{variant: :leaf}
14:57:31.725 [debug] Fun returned result: %{variant: :leaf}
14:57:31.725 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.725 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.725 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.725 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 6
14:57:31.725 [debug] Executing fun with value: 6
14:57:31.725 [debug] Evaluating bend block with value: 6
14:57:31.725 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.725 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.725 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 7
14:57:31.725 [debug] Executing fun with value: 7
14:57:31.725 [debug] Evaluating bend block with value: 7
14:57:31.725 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.725 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.725 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 8
14:57:31.725 [debug] Executing fun with value: 8
14:57:31.725 [debug] Evaluating bend block with value: 8
14:57:31.725 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.725 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.725 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 9
14:57:31.725 [debug] Executing fun with value: 9
14:57:31.725 [debug] Evaluating bend block with value: 9
14:57:31.725 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 10
14:57:31.725 [debug] Executing fun with value: 10
14:57:31.725 [debug] Evaluating bend block with value: 10
14:57:31.725 [debug] Block returned: %{variant: :leaf}
14:57:31.725 [debug] Fun returned result: %{variant: :leaf}
14:57:31.725 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{variant: :leaf}
14:57:31.725 [debug] Executing bend with initial: 10
14:57:31.725 [debug] Executing fun with value: 10
14:57:31.725 [debug] Evaluating bend block with value: 10
14:57:31.725 [debug] Block returned: %{variant: :leaf}
14:57:31.725 [debug] Fun returned result: %{variant: :leaf}
14:57:31.725 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{variant: :leaf}
14:57:31.725 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 9
14:57:31.725 [debug] Executing fun with value: 9
14:57:31.725 [debug] Evaluating bend block with value: 9
14:57:31.725 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.725 [debug] Executing bend with initial: 10
14:57:31.725 [debug] Executing fun with value: 10
14:57:31.725 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] Executing bend with initial: 10
14:57:31.726 [debug] Executing fun with value: 10
14:57:31.726 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.726 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 8
14:57:31.726 [debug] Executing fun with value: 8
14:57:31.726 [debug] Evaluating bend block with value: 8
14:57:31.726 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.726 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.726 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 9
14:57:31.726 [debug] Executing fun with value: 9
14:57:31.726 [debug] Evaluating bend block with value: 9
14:57:31.726 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 10
14:57:31.726 [debug] Executing fun with value: 10
14:57:31.726 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] Executing bend with initial: 10
14:57:31.726 [debug] Executing fun with value: 10
14:57:31.726 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 9
14:57:31.726 [debug] Executing fun with value: 9
14:57:31.726 [debug] Evaluating bend block with value: 9
14:57:31.726 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 10
14:57:31.726 [debug] Executing fun with value: 10
14:57:31.726 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] Executing bend with initial: 10
14:57:31.726 [debug] Executing fun with value: 10
14:57:31.726 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.726 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.726 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 7
14:57:31.726 [debug] Executing fun with value: 7
14:57:31.726 [debug] Evaluating bend block with value: 7
14:57:31.726 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.726 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.726 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 8
14:57:31.726 [debug] Executing fun with value: 8
14:57:31.726 [debug] Evaluating bend block with value: 8
14:57:31.726 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.726 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.726 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 9
14:57:31.726 [debug] Executing fun with value: 9
14:57:31.726 [debug] Evaluating bend block with value: 9
14:57:31.726 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 10
14:57:31.726 [debug] Executing fun with value: 10
14:57:31.726 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] Executing bend with initial: 10
14:57:31.726 [debug] Executing fun with value: 10
14:57:31.726 [debug] Evaluating bend block with value: 10
14:57:31.726 [debug] Block returned: %{variant: :leaf}
14:57:31.726 [debug] Fun returned result: %{variant: :leaf}
14:57:31.726 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{variant: :leaf}
14:57:31.726 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.726 [debug] Executing bend with initial: 9
14:57:31.726 [debug] Executing fun with value: 9
14:57:31.726 [debug] Evaluating bend block with value: 9
14:57:31.728 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Executing bend with initial: 10
14:57:31.728 [debug] Executing fun with value: 10
14:57:31.728 [debug] Evaluating bend block with value: 10
14:57:31.728 [debug] Block returned: %{variant: :leaf}
14:57:31.728 [debug] Fun returned result: %{variant: :leaf}
14:57:31.728 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{variant: :leaf}
14:57:31.728 [debug] Executing bend with initial: 10
14:57:31.728 [debug] Executing fun with value: 10
14:57:31.728 [debug] Evaluating bend block with value: 10
14:57:31.728 [debug] Block returned: %{variant: :leaf}
14:57:31.728 [debug] Fun returned result: %{variant: :leaf}
14:57:31.728 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.728 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.728 [debug] Executing bend with initial: 8
14:57:31.728 [debug] Executing fun with value: 8
14:57:31.728 [debug] Evaluating bend block with value: 8
14:57:31.728 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.728 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.728 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.728 [debug] Executing bend with initial: 9
14:57:31.728 [debug] Executing fun with value: 9
14:57:31.728 [debug] Evaluating bend block with value: 9
14:57:31.728 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Executing bend with initial: 10
14:57:31.728 [debug] Executing fun with value: 10
14:57:31.728 [debug] Evaluating bend block with value: 10
14:57:31.728 [debug] Block returned: %{variant: :leaf}
14:57:31.728 [debug] Fun returned result: %{variant: :leaf}
14:57:31.728 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{variant: :leaf}
14:57:31.728 [debug] Executing bend with initial: 10
14:57:31.728 [debug] Executing fun with value: 10
14:57:31.728 [debug] Evaluating bend block with value: 10
14:57:31.728 [debug] Block returned: %{variant: :leaf}
14:57:31.728 [debug] Fun returned result: %{variant: :leaf}
14:57:31.728 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.728 [debug] Executing bend with initial: 9
14:57:31.728 [debug] Executing fun with value: 9
14:57:31.728 [debug] Evaluating bend block with value: 9
14:57:31.728 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.728 [debug] Executing bend with initial: 10
14:57:31.728 [debug] Executing fun with value: 10
14:57:31.728 [debug] Evaluating bend block with value: 10
14:57:31.728 [debug] Block returned: %{variant: :leaf}
14:57:31.728 [debug] Fun returned result: %{variant: :leaf}
14:57:31.728 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{variant: :leaf}
14:57:31.728 [debug] Executing bend with initial: 10
14:57:31.728 [debug] Executing fun with value: 10
14:57:31.728 [debug] Evaluating bend block with value: 10
14:57:31.728 [debug] Block returned: %{variant: :leaf}
14:57:31.728 [debug] Fun returned result: %{variant: :leaf}
14:57:31.728 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{variant: :leaf}
14:57:31.728 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.728 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.728 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.728 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.729 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 5
14:57:31.729 [debug] Executing fun with value: 5
14:57:31.729 [debug] Evaluating bend block with value: 5
14:57:31.729 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.729 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.729 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 6
14:57:31.729 [debug] Executing fun with value: 6
14:57:31.729 [debug] Evaluating bend block with value: 6
14:57:31.729 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.729 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.729 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 7
14:57:31.729 [debug] Executing fun with value: 7
14:57:31.729 [debug] Evaluating bend block with value: 7
14:57:31.729 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.729 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.729 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 8
14:57:31.729 [debug] Executing fun with value: 8
14:57:31.729 [debug] Evaluating bend block with value: 8
14:57:31.729 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.729 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.729 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 9
14:57:31.729 [debug] Executing fun with value: 9
14:57:31.729 [debug] Evaluating bend block with value: 9
14:57:31.729 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.729 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.729 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 10
14:57:31.729 [debug] Executing fun with value: 10
14:57:31.729 [debug] Evaluating bend block with value: 10
14:57:31.729 [debug] Block returned: %{variant: :leaf}
14:57:31.729 [debug] Fun returned result: %{variant: :leaf}
14:57:31.729 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.729 [debug] do_bend final result: %{variant: :leaf}
14:57:31.729 [debug] Executing bend with initial: 10
14:57:31.729 [debug] Executing fun with value: 10
14:57:31.729 [debug] Evaluating bend block with value: 10
14:57:31.729 [debug] Block returned: %{variant: :leaf}
14:57:31.729 [debug] Fun returned result: %{variant: :leaf}
14:57:31.729 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.729 [debug] do_bend final result: %{variant: :leaf}
14:57:31.729 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 9
14:57:31.729 [debug] Executing fun with value: 9
14:57:31.729 [debug] Evaluating bend block with value: 9
14:57:31.729 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.729 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.729 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.729 [debug] Executing bend with initial: 10
14:57:31.729 [debug] Executing fun with value: 10
14:57:31.731 [debug] Evaluating bend block with value: 10
14:57:31.731 [debug] Block returned: %{variant: :leaf}
14:57:31.731 [debug] Fun returned result: %{variant: :leaf}
14:57:31.731 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{variant: :leaf}
14:57:31.731 [debug] Executing bend with initial: 10
14:57:31.731 [debug] Executing fun with value: 10
14:57:31.731 [debug] Evaluating bend block with value: 10
14:57:31.731 [debug] Block returned: %{variant: :leaf}
14:57:31.731 [debug] Fun returned result: %{variant: :leaf}
14:57:31.731 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.731 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.731 [debug] Executing bend with initial: 8
14:57:31.731 [debug] Executing fun with value: 8
14:57:31.731 [debug] Evaluating bend block with value: 8
14:57:31.731 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.731 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.731 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.731 [debug] Executing bend with initial: 9
14:57:31.731 [debug] Executing fun with value: 9
14:57:31.731 [debug] Evaluating bend block with value: 9
14:57:31.731 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.731 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.731 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.731 [debug] Executing bend with initial: 10
14:57:31.731 [debug] Executing fun with value: 10
14:57:31.731 [debug] Evaluating bend block with value: 10
14:57:31.731 [debug] Block returned: %{variant: :leaf}
14:57:31.731 [debug] Fun returned result: %{variant: :leaf}
14:57:31.731 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{variant: :leaf}
14:57:31.731 [debug] Executing bend with initial: 10
14:57:31.731 [debug] Executing fun with value: 10
14:57:31.731 [debug] Evaluating bend block with value: 10
14:57:31.731 [debug] Block returned: %{variant: :leaf}
14:57:31.731 [debug] Fun returned result: %{variant: :leaf}
14:57:31.731 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.731 [debug] Executing bend with initial: 9
14:57:31.731 [debug] Executing fun with value: 9
14:57:31.731 [debug] Evaluating bend block with value: 9
14:57:31.731 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.731 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.731 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.731 [debug] Executing bend with initial: 10
14:57:31.731 [debug] Executing fun with value: 10
14:57:31.731 [debug] Evaluating bend block with value: 10
14:57:31.731 [debug] Block returned: %{variant: :leaf}
14:57:31.731 [debug] Fun returned result: %{variant: :leaf}
14:57:31.731 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{variant: :leaf}
14:57:31.731 [debug] Executing bend with initial: 10
14:57:31.731 [debug] Executing fun with value: 10
14:57:31.731 [debug] Evaluating bend block with value: 10
14:57:31.731 [debug] Block returned: %{variant: :leaf}
14:57:31.731 [debug] Fun returned result: %{variant: :leaf}
14:57:31.731 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{variant: :leaf}
14:57:31.731 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.731 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.731 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.731 [debug] Executing bend with initial: 7
14:57:31.731 [debug] Executing fun with value: 7
14:57:31.732 [debug] Evaluating bend block with value: 7
14:57:31.732 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.732 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.732 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 8
14:57:31.732 [debug] Executing fun with value: 8
14:57:31.732 [debug] Evaluating bend block with value: 8
14:57:31.732 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.732 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.732 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 9
14:57:31.732 [debug] Executing fun with value: 9
14:57:31.732 [debug] Evaluating bend block with value: 9
14:57:31.732 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.732 [debug] Evaluating bend block with value: 10
14:57:31.732 [debug] Block returned: %{variant: :leaf}
14:57:31.732 [debug] Fun returned result: %{variant: :leaf}
14:57:31.732 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{variant: :leaf}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.732 [debug] Evaluating bend block with value: 10
14:57:31.732 [debug] Block returned: %{variant: :leaf}
14:57:31.732 [debug] Fun returned result: %{variant: :leaf}
14:57:31.732 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 9
14:57:31.732 [debug] Executing fun with value: 9
14:57:31.732 [debug] Evaluating bend block with value: 9
14:57:31.732 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.732 [debug] Evaluating bend block with value: 10
14:57:31.732 [debug] Block returned: %{variant: :leaf}
14:57:31.732 [debug] Fun returned result: %{variant: :leaf}
14:57:31.732 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{variant: :leaf}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.732 [debug] Evaluating bend block with value: 10
14:57:31.732 [debug] Block returned: %{variant: :leaf}
14:57:31.732 [debug] Fun returned result: %{variant: :leaf}
14:57:31.732 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.732 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 8
14:57:31.732 [debug] Executing fun with value: 8
14:57:31.732 [debug] Evaluating bend block with value: 8
14:57:31.732 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.732 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.732 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 9
14:57:31.732 [debug] Executing fun with value: 9
14:57:31.732 [debug] Evaluating bend block with value: 9
14:57:31.732 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.732 [debug] Evaluating bend block with value: 10
14:57:31.732 [debug] Block returned: %{variant: :leaf}
14:57:31.732 [debug] Fun returned result: %{variant: :leaf}
14:57:31.732 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{variant: :leaf}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.732 [debug] Evaluating bend block with value: 10
14:57:31.732 [debug] Block returned: %{variant: :leaf}
14:57:31.732 [debug] Fun returned result: %{variant: :leaf}
14:57:31.732 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 9
14:57:31.732 [debug] Executing fun with value: 9
14:57:31.732 [debug] Evaluating bend block with value: 9
14:57:31.732 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.732 [debug] Evaluating bend block with value: 10
14:57:31.732 [debug] Block returned: %{variant: :leaf}
14:57:31.732 [debug] Fun returned result: %{variant: :leaf}
14:57:31.732 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.732 [debug] do_bend final result: %{variant: :leaf}
14:57:31.732 [debug] Executing bend with initial: 10
14:57:31.732 [debug] Executing fun with value: 10
14:57:31.733 [debug] Evaluating bend block with value: 10
14:57:31.733 [debug] Block returned: %{variant: :leaf}
14:57:31.733 [debug] Fun returned result: %{variant: :leaf}
14:57:31.733 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.733 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.733 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.733 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 6
14:57:31.733 [debug] Executing fun with value: 6
14:57:31.733 [debug] Evaluating bend block with value: 6
14:57:31.733 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.733 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.733 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 7
14:57:31.733 [debug] Executing fun with value: 7
14:57:31.733 [debug] Evaluating bend block with value: 7
14:57:31.733 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.733 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.733 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 8
14:57:31.733 [debug] Executing fun with value: 8
14:57:31.733 [debug] Evaluating bend block with value: 8
14:57:31.733 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.733 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.733 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 9
14:57:31.733 [debug] Executing fun with value: 9
14:57:31.733 [debug] Evaluating bend block with value: 9
14:57:31.733 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 10
14:57:31.733 [debug] Executing fun with value: 10
14:57:31.733 [debug] Evaluating bend block with value: 10
14:57:31.733 [debug] Block returned: %{variant: :leaf}
14:57:31.733 [debug] Fun returned result: %{variant: :leaf}
14:57:31.733 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{variant: :leaf}
14:57:31.733 [debug] Executing bend with initial: 10
14:57:31.733 [debug] Executing fun with value: 10
14:57:31.733 [debug] Evaluating bend block with value: 10
14:57:31.733 [debug] Block returned: %{variant: :leaf}
14:57:31.733 [debug] Fun returned result: %{variant: :leaf}
14:57:31.733 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 9
14:57:31.733 [debug] Executing fun with value: 9
14:57:31.733 [debug] Evaluating bend block with value: 9
14:57:31.733 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 10
14:57:31.733 [debug] Executing fun with value: 10
14:57:31.733 [debug] Evaluating bend block with value: 10
14:57:31.733 [debug] Block returned: %{variant: :leaf}
14:57:31.733 [debug] Fun returned result: %{variant: :leaf}
14:57:31.733 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{variant: :leaf}
14:57:31.733 [debug] Executing bend with initial: 10
14:57:31.733 [debug] Executing fun with value: 10
14:57:31.733 [debug] Evaluating bend block with value: 10
14:57:31.733 [debug] Block returned: %{variant: :leaf}
14:57:31.733 [debug] Fun returned result: %{variant: :leaf}
14:57:31.733 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.733 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 8
14:57:31.733 [debug] Executing fun with value: 8
14:57:31.733 [debug] Evaluating bend block with value: 8
14:57:31.733 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.733 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.733 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 9
14:57:31.733 [debug] Executing fun with value: 9
14:57:31.733 [debug] Evaluating bend block with value: 9
14:57:31.733 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.733 [debug] Executing bend with initial: 10
14:57:31.733 [debug] Executing fun with value: 10
14:57:31.733 [debug] Evaluating bend block with value: 10
14:57:31.733 [debug] Block returned: %{variant: :leaf}
14:57:31.733 [debug] Fun returned result: %{variant: :leaf}
14:57:31.733 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{variant: :leaf}
14:57:31.733 [debug] Executing bend with initial: 10
14:57:31.733 [debug] Executing fun with value: 10
14:57:31.733 [debug] Evaluating bend block with value: 10
14:57:31.733 [debug] Block returned: %{variant: :leaf}
14:57:31.733 [debug] Fun returned result: %{variant: :leaf}
14:57:31.733 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{variant: :leaf}
14:57:31.733 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.734 [debug] Executing bend with initial: 9
14:57:31.734 [debug] Executing fun with value: 9
14:57:31.734 [debug] Evaluating bend block with value: 9
14:57:31.734 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.734 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.734 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.734 [debug] Executing bend with initial: 10
14:57:31.734 [debug] Executing fun with value: 10
14:57:31.734 [debug] Evaluating bend block with value: 10
14:57:31.734 [debug] Block returned: %{variant: :leaf}
14:57:31.734 [debug] Fun returned result: %{variant: :leaf}
14:57:31.734 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.734 [debug] do_bend final result: %{variant: :leaf}
14:57:31.734 [debug] Executing bend with initial: 10
14:57:31.736 [debug] Executing fun with value: 10
14:57:31.736 [debug] Evaluating bend block with value: 10
14:57:31.736 [debug] Block returned: %{variant: :leaf}
14:57:31.736 [debug] Fun returned result: %{variant: :leaf}
14:57:31.736 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.736 [debug] do_bend final result: %{variant: :leaf}
14:57:31.736 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.736 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.736 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.736 [debug] Executing bend with initial: 7
14:57:31.736 [debug] Executing fun with value: 7
14:57:31.736 [debug] Evaluating bend block with value: 7
14:57:31.736 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.736 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.736 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.736 [debug] Executing bend with initial: 8
14:57:31.736 [debug] Executing fun with value: 8
14:57:31.736 [debug] Evaluating bend block with value: 8
14:57:31.736 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.736 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.736 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.736 [debug] Executing bend with initial: 9
14:57:31.736 [debug] Executing fun with value: 9
14:57:31.736 [debug] Evaluating bend block with value: 9
14:57:31.736 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.736 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.736 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.736 [debug] Executing bend with initial: 10
14:57:31.736 [debug] Executing fun with value: 10
14:57:31.736 [debug] Evaluating bend block with value: 10
14:57:31.736 [debug] Block returned: %{variant: :leaf}
14:57:31.736 [debug] Fun returned result: %{variant: :leaf}
14:57:31.736 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.736 [debug] do_bend final result: %{variant: :leaf}
14:57:31.736 [debug] Executing bend with initial: 10
14:57:31.736 [debug] Executing fun with value: 10
14:57:31.736 [debug] Evaluating bend block with value: 10
14:57:31.736 [debug] Block returned: %{variant: :leaf}
14:57:31.736 [debug] Fun returned result: %{variant: :leaf}
14:57:31.736 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.736 [debug] do_bend final result: %{variant: :leaf}
14:57:31.736 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.736 [debug] Executing bend with initial: 9
14:57:31.736 [debug] Executing fun with value: 9
14:57:31.736 [debug] Evaluating bend block with value: 9
14:57:31.736 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.736 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.736 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.736 [debug] Executing bend with initial: 10
14:57:31.736 [debug] Executing fun with value: 10
14:57:31.736 [debug] Evaluating bend block with value: 10
14:57:31.736 [debug] Block returned: %{variant: :leaf}
14:57:31.736 [debug] Fun returned result: %{variant: :leaf}
14:57:31.736 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.736 [debug] do_bend final result: %{variant: :leaf}
14:57:31.736 [debug] Executing bend with initial: 10
14:57:31.736 [debug] Executing fun with value: 10
14:57:31.736 [debug] Evaluating bend block with value: 10
14:57:31.736 [debug] Block returned: %{variant: :leaf}
14:57:31.737 [debug] Fun returned result: %{variant: :leaf}
14:57:31.737 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.737 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.737 [debug] Executing bend with initial: 8
14:57:31.737 [debug] Executing fun with value: 8
14:57:31.737 [debug] Evaluating bend block with value: 8
14:57:31.737 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.737 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.737 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.737 [debug] Executing bend with initial: 9
14:57:31.737 [debug] Executing fun with value: 9
14:57:31.737 [debug] Evaluating bend block with value: 9
14:57:31.737 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.737 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.737 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.737 [debug] Executing bend with initial: 10
14:57:31.737 [debug] Executing fun with value: 10
14:57:31.737 [debug] Evaluating bend block with value: 10
14:57:31.737 [debug] Block returned: %{variant: :leaf}
14:57:31.737 [debug] Fun returned result: %{variant: :leaf}
14:57:31.737 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{variant: :leaf}
14:57:31.737 [debug] Executing bend with initial: 10
14:57:31.737 [debug] Executing fun with value: 10
14:57:31.737 [debug] Evaluating bend block with value: 10
14:57:31.737 [debug] Block returned: %{variant: :leaf}
14:57:31.737 [debug] Fun returned result: %{variant: :leaf}
14:57:31.737 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.737 [debug] Executing bend with initial: 9
14:57:31.737 [debug] Executing fun with value: 9
14:57:31.737 [debug] Evaluating bend block with value: 9
14:57:31.737 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.737 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.737 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.737 [debug] Executing bend with initial: 10
14:57:31.737 [debug] Executing fun with value: 10
14:57:31.737 [debug] Evaluating bend block with value: 10
14:57:31.737 [debug] Block returned: %{variant: :leaf}
14:57:31.737 [debug] Fun returned result: %{variant: :leaf}
14:57:31.737 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{variant: :leaf}
14:57:31.737 [debug] Executing bend with initial: 10
14:57:31.737 [debug] Executing fun with value: 10
14:57:31.737 [debug] Evaluating bend block with value: 10
14:57:31.737 [debug] Block returned: %{variant: :leaf}
14:57:31.737 [debug] Fun returned result: %{variant: :leaf}
14:57:31.737 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{variant: :leaf}
14:57:31.737 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.737 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.737 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.737 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.737 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.738 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.738 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.738 [debug] Executing bend with initial: 3
14:57:31.738 [debug] Executing fun with value: 3
14:57:31.738 [debug] Evaluating bend block with value: 3
14:57:31.738 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.738 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.738 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.738 [debug] Executing bend with initial: 4
14:57:31.738 [debug] Executing fun with value: 4
14:57:31.738 [debug] Evaluating bend block with value: 4
14:57:31.738 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.738 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.738 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.738 [debug] Executing bend with initial: 5
14:57:31.738 [debug] Executing fun with value: 5
14:57:31.738 [debug] Evaluating bend block with value: 5
14:57:31.738 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.738 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.738 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.738 [debug] Executing bend with initial: 6
14:57:31.738 [debug] Executing fun with value: 6
14:57:31.738 [debug] Evaluating bend block with value: 6
14:57:31.738 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.738 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.738 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.738 [debug] Executing bend with initial: 7
14:57:31.738 [debug] Executing fun with value: 7
14:57:31.738 [debug] Evaluating bend block with value: 7
14:57:31.738 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.739 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.739 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.739 [debug] Executing bend with initial: 8
14:57:31.739 [debug] Executing fun with value: 8
14:57:31.739 [debug] Evaluating bend block with value: 8
14:57:31.739 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.739 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.739 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.739 [debug] Executing bend with initial: 9
14:57:31.739 [debug] Executing fun with value: 9
14:57:31.739 [debug] Evaluating bend block with value: 9
14:57:31.739 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.739 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.739 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.739 [debug] Executing bend with initial: 10
14:57:31.739 [debug] Executing fun with value: 10
14:57:31.739 [debug] Evaluating bend block with value: 10
14:57:31.739 [debug] Block returned: %{variant: :leaf}
14:57:31.739 [debug] Fun returned result: %{variant: :leaf}
14:57:31.739 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.739 [debug] do_bend final result: %{variant: :leaf}
14:57:31.739 [debug] Executing bend with initial: 10
14:57:31.739 [debug] Executing fun with value: 10
14:57:31.739 [debug] Evaluating bend block with value: 10
14:57:31.739 [debug] Block returned: %{variant: :leaf}
14:57:31.739 [debug] Fun returned result: %{variant: :leaf}
14:57:31.739 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.739 [debug] do_bend final result: %{variant: :leaf}
14:57:31.739 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.739 [debug] Executing bend with initial: 9
14:57:31.739 [debug] Executing fun with value: 9
14:57:31.741 [debug] Evaluating bend block with value: 9
14:57:31.741 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Executing bend with initial: 10
14:57:31.741 [debug] Executing fun with value: 10
14:57:31.741 [debug] Evaluating bend block with value: 10
14:57:31.741 [debug] Block returned: %{variant: :leaf}
14:57:31.741 [debug] Fun returned result: %{variant: :leaf}
14:57:31.741 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.741 [debug] do_bend final result: %{variant: :leaf}
14:57:31.741 [debug] Executing bend with initial: 10
14:57:31.741 [debug] Executing fun with value: 10
14:57:31.741 [debug] Evaluating bend block with value: 10
14:57:31.741 [debug] Block returned: %{variant: :leaf}
14:57:31.741 [debug] Fun returned result: %{variant: :leaf}
14:57:31.741 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.741 [debug] do_bend final result: %{variant: :leaf}
14:57:31.741 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.741 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.741 [debug] Executing bend with initial: 8
14:57:31.741 [debug] Executing fun with value: 8
14:57:31.741 [debug] Evaluating bend block with value: 8
14:57:31.741 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.741 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.741 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.741 [debug] Executing bend with initial: 9
14:57:31.741 [debug] Executing fun with value: 9
14:57:31.741 [debug] Evaluating bend block with value: 9
14:57:31.741 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Executing bend with initial: 10
14:57:31.741 [debug] Executing fun with value: 10
14:57:31.741 [debug] Evaluating bend block with value: 10
14:57:31.741 [debug] Block returned: %{variant: :leaf}
14:57:31.741 [debug] Fun returned result: %{variant: :leaf}
14:57:31.741 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.741 [debug] do_bend final result: %{variant: :leaf}
14:57:31.741 [debug] Executing bend with initial: 10
14:57:31.741 [debug] Executing fun with value: 10
14:57:31.741 [debug] Evaluating bend block with value: 10
14:57:31.741 [debug] Block returned: %{variant: :leaf}
14:57:31.741 [debug] Fun returned result: %{variant: :leaf}
14:57:31.741 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.741 [debug] do_bend final result: %{variant: :leaf}
14:57:31.741 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.741 [debug] Executing bend with initial: 9
14:57:31.741 [debug] Executing fun with value: 9
14:57:31.741 [debug] Evaluating bend block with value: 9
14:57:31.741 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.741 [debug] Executing bend with initial: 10
14:57:31.741 [debug] Executing fun with value: 10
14:57:31.741 [debug] Evaluating bend block with value: 10
14:57:31.741 [debug] Block returned: %{variant: :leaf}
14:57:31.741 [debug] Fun returned result: %{variant: :leaf}
14:57:31.741 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.741 [debug] do_bend final result: %{variant: :leaf}
14:57:31.742 [debug] Executing bend with initial: 10
14:57:31.742 [debug] Executing fun with value: 10
14:57:31.742 [debug] Evaluating bend block with value: 10
14:57:31.742 [debug] Block returned: %{variant: :leaf}
14:57:31.742 [debug] Fun returned result: %{variant: :leaf}
14:57:31.742 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.742 [debug] do_bend final result: %{variant: :leaf}
14:57:31.742 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.742 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.742 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.742 [debug] Executing bend with initial: 7
14:57:31.742 [debug] Executing fun with value: 7
14:57:31.742 [debug] Evaluating bend block with value: 7
14:57:31.742 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.742 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.742 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.742 [debug] Executing bend with initial: 8
14:57:31.742 [debug] Executing fun with value: 8
14:57:31.742 [debug] Evaluating bend block with value: 8
14:57:31.742 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.742 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.742 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.742 [debug] Executing bend with initial: 9
14:57:31.742 [debug] Executing fun with value: 9
14:57:31.742 [debug] Evaluating bend block with value: 9
14:57:31.742 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.742 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.742 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.742 [debug] Executing bend with initial: 10
14:57:31.742 [debug] Executing fun with value: 10
14:57:31.742 [debug] Evaluating bend block with value: 10
14:57:31.742 [debug] Block returned: %{variant: :leaf}
14:57:31.742 [debug] Fun returned result: %{variant: :leaf}
14:57:31.742 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.742 [debug] do_bend final result: %{variant: :leaf}
14:57:31.742 [debug] Executing bend with initial: 10
14:57:31.742 [debug] Executing fun with value: 10
14:57:31.742 [debug] Evaluating bend block with value: 10
14:57:31.742 [debug] Block returned: %{variant: :leaf}
14:57:31.742 [debug] Fun returned result: %{variant: :leaf}
14:57:31.742 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.742 [debug] do_bend final result: %{variant: :leaf}
14:57:31.742 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.742 [debug] Executing bend with initial: 9
14:57:31.742 [debug] Executing fun with value: 9
14:57:31.742 [debug] Evaluating bend block with value: 9
14:57:31.742 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.742 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.742 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.742 [debug] Executing bend with initial: 10
14:57:31.742 [debug] Executing fun with value: 10
14:57:31.742 [debug] Evaluating bend block with value: 10
14:57:31.742 [debug] Block returned: %{variant: :leaf}
14:57:31.742 [debug] Fun returned result: %{variant: :leaf}
14:57:31.745 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{variant: :leaf}
14:57:31.745 [debug] Executing bend with initial: 10
14:57:31.745 [debug] Executing fun with value: 10
14:57:31.745 [debug] Evaluating bend block with value: 10
14:57:31.745 [debug] Block returned: %{variant: :leaf}
14:57:31.745 [debug] Fun returned result: %{variant: :leaf}
14:57:31.745 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.745 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 8
14:57:31.745 [debug] Executing fun with value: 8
14:57:31.745 [debug] Evaluating bend block with value: 8
14:57:31.745 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.745 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.745 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 9
14:57:31.745 [debug] Executing fun with value: 9
14:57:31.745 [debug] Evaluating bend block with value: 9
14:57:31.745 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.745 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.745 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 10
14:57:31.745 [debug] Executing fun with value: 10
14:57:31.745 [debug] Evaluating bend block with value: 10
14:57:31.745 [debug] Block returned: %{variant: :leaf}
14:57:31.745 [debug] Fun returned result: %{variant: :leaf}
14:57:31.745 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{variant: :leaf}
14:57:31.745 [debug] Executing bend with initial: 10
14:57:31.745 [debug] Executing fun with value: 10
14:57:31.745 [debug] Evaluating bend block with value: 10
14:57:31.745 [debug] Block returned: %{variant: :leaf}
14:57:31.745 [debug] Fun returned result: %{variant: :leaf}
14:57:31.745 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 9
14:57:31.745 [debug] Executing fun with value: 9
14:57:31.745 [debug] Evaluating bend block with value: 9
14:57:31.745 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.745 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.745 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 10
14:57:31.745 [debug] Executing fun with value: 10
14:57:31.745 [debug] Evaluating bend block with value: 10
14:57:31.745 [debug] Block returned: %{variant: :leaf}
14:57:31.745 [debug] Fun returned result: %{variant: :leaf}
14:57:31.745 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{variant: :leaf}
14:57:31.745 [debug] Executing bend with initial: 10
14:57:31.745 [debug] Executing fun with value: 10
14:57:31.745 [debug] Evaluating bend block with value: 10
14:57:31.745 [debug] Block returned: %{variant: :leaf}
14:57:31.745 [debug] Fun returned result: %{variant: :leaf}
14:57:31.745 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{variant: :leaf}
14:57:31.745 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.745 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.745 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.745 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 6
14:57:31.745 [debug] Executing fun with value: 6
14:57:31.745 [debug] Evaluating bend block with value: 6
14:57:31.745 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.745 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.745 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 7
14:57:31.745 [debug] Executing fun with value: 7
14:57:31.745 [debug] Evaluating bend block with value: 7
14:57:31.745 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.745 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.745 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.745 [debug] Executing bend with initial: 8
14:57:31.745 [debug] Executing fun with value: 8
14:57:31.745 [debug] Evaluating bend block with value: 8
14:57:31.745 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.745 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.746 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 9
14:57:31.746 [debug] Executing fun with value: 9
14:57:31.746 [debug] Evaluating bend block with value: 9
14:57:31.746 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.746 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{variant: :leaf}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.746 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 9
14:57:31.746 [debug] Executing fun with value: 9
14:57:31.746 [debug] Evaluating bend block with value: 9
14:57:31.746 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.746 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{variant: :leaf}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.746 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.746 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 8
14:57:31.746 [debug] Executing fun with value: 8
14:57:31.746 [debug] Evaluating bend block with value: 8
14:57:31.746 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.746 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.746 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 9
14:57:31.746 [debug] Executing fun with value: 9
14:57:31.746 [debug] Evaluating bend block with value: 9
14:57:31.746 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.746 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{variant: :leaf}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.746 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 9
14:57:31.746 [debug] Executing fun with value: 9
14:57:31.746 [debug] Evaluating bend block with value: 9
14:57:31.746 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.746 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.746 [debug] do_bend final result: %{variant: :leaf}
14:57:31.746 [debug] Executing bend with initial: 10
14:57:31.746 [debug] Executing fun with value: 10
14:57:31.746 [debug] Evaluating bend block with value: 10
14:57:31.746 [debug] Block returned: %{variant: :leaf}
14:57:31.746 [debug] Fun returned result: %{variant: :leaf}
14:57:31.747 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.747 [debug] do_bend final result: %{variant: :leaf}
14:57:31.747 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.747 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.747 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.747 [debug] Executing bend with initial: 7
14:57:31.747 [debug] Executing fun with value: 7
14:57:31.747 [debug] Evaluating bend block with value: 7
14:57:31.747 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.747 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.747 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.747 [debug] Executing bend with initial: 8
14:57:31.747 [debug] Executing fun with value: 8
14:57:31.747 [debug] Evaluating bend block with value: 8
14:57:31.748 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.748 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.748 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.748 [debug] Executing bend with initial: 9
14:57:31.748 [debug] Executing fun with value: 9
14:57:31.748 [debug] Evaluating bend block with value: 9
14:57:31.748 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.748 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.748 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.748 [debug] Executing bend with initial: 10
14:57:31.748 [debug] Executing fun with value: 10
14:57:31.748 [debug] Evaluating bend block with value: 10
14:57:31.748 [debug] Block returned: %{variant: :leaf}
14:57:31.748 [debug] Fun returned result: %{variant: :leaf}
14:57:31.748 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.748 [debug] do_bend final result: %{variant: :leaf}
14:57:31.748 [debug] Executing bend with initial: 10
14:57:31.748 [debug] Executing fun with value: 10
14:57:31.748 [debug] Evaluating bend block with value: 10
14:57:31.748 [debug] Block returned: %{variant: :leaf}
14:57:31.748 [debug] Fun returned result: %{variant: :leaf}
14:57:31.748 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.748 [debug] do_bend final result: %{variant: :leaf}
14:57:31.748 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.748 [debug] Executing bend with initial: 9
14:57:31.748 [debug] Executing fun with value: 9
14:57:31.748 [debug] Evaluating bend block with value: 9
14:57:31.748 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.748 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.748 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.748 [debug] Executing bend with initial: 10
14:57:31.748 [debug] Executing fun with value: 10
14:57:31.748 [debug] Evaluating bend block with value: 10
14:57:31.748 [debug] Block returned: %{variant: :leaf}
14:57:31.748 [debug] Fun returned result: %{variant: :leaf}
14:57:31.748 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.748 [debug] do_bend final result: %{variant: :leaf}
14:57:31.748 [debug] Executing bend with initial: 10
14:57:31.748 [debug] Executing fun with value: 10
14:57:31.748 [debug] Evaluating bend block with value: 10
14:57:31.748 [debug] Block returned: %{variant: :leaf}
14:57:31.748 [debug] Fun returned result: %{variant: :leaf}
14:57:31.748 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.749 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.749 [debug] Executing bend with initial: 8
14:57:31.749 [debug] Executing fun with value: 8
14:57:31.749 [debug] Evaluating bend block with value: 8
14:57:31.749 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.749 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.749 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.749 [debug] Executing bend with initial: 9
14:57:31.749 [debug] Executing fun with value: 9
14:57:31.749 [debug] Evaluating bend block with value: 9
14:57:31.749 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.749 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.749 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.749 [debug] Executing bend with initial: 10
14:57:31.749 [debug] Executing fun with value: 10
14:57:31.749 [debug] Evaluating bend block with value: 10
14:57:31.749 [debug] Block returned: %{variant: :leaf}
14:57:31.749 [debug] Fun returned result: %{variant: :leaf}
14:57:31.749 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{variant: :leaf}
14:57:31.749 [debug] Executing bend with initial: 10
14:57:31.749 [debug] Executing fun with value: 10
14:57:31.749 [debug] Evaluating bend block with value: 10
14:57:31.749 [debug] Block returned: %{variant: :leaf}
14:57:31.749 [debug] Fun returned result: %{variant: :leaf}
14:57:31.749 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.749 [debug] Executing bend with initial: 9
14:57:31.749 [debug] Executing fun with value: 9
14:57:31.749 [debug] Evaluating bend block with value: 9
14:57:31.749 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.749 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.749 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.749 [debug] Executing bend with initial: 10
14:57:31.749 [debug] Executing fun with value: 10
14:57:31.749 [debug] Evaluating bend block with value: 10
14:57:31.749 [debug] Block returned: %{variant: :leaf}
14:57:31.749 [debug] Fun returned result: %{variant: :leaf}
14:57:31.749 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{variant: :leaf}
14:57:31.749 [debug] Executing bend with initial: 10
14:57:31.749 [debug] Executing fun with value: 10
14:57:31.749 [debug] Evaluating bend block with value: 10
14:57:31.749 [debug] Block returned: %{variant: :leaf}
14:57:31.749 [debug] Fun returned result: %{variant: :leaf}
14:57:31.749 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{variant: :leaf}
14:57:31.749 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.749 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.749 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.749 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.750 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 5
14:57:31.750 [debug] Executing fun with value: 5
14:57:31.750 [debug] Evaluating bend block with value: 5
14:57:31.750 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.750 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 6
14:57:31.750 [debug] Executing fun with value: 6
14:57:31.750 [debug] Evaluating bend block with value: 6
14:57:31.750 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.750 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 7
14:57:31.750 [debug] Executing fun with value: 7
14:57:31.750 [debug] Evaluating bend block with value: 7
14:57:31.750 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.750 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 8
14:57:31.750 [debug] Executing fun with value: 8
14:57:31.750 [debug] Evaluating bend block with value: 8
14:57:31.750 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.750 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 9
14:57:31.750 [debug] Executing fun with value: 9
14:57:31.750 [debug] Evaluating bend block with value: 9
14:57:31.750 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.750 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 10
14:57:31.750 [debug] Executing fun with value: 10
14:57:31.750 [debug] Evaluating bend block with value: 10
14:57:31.750 [debug] Block returned: %{variant: :leaf}
14:57:31.750 [debug] Fun returned result: %{variant: :leaf}
14:57:31.750 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.750 [debug] do_bend final result: %{variant: :leaf}
14:57:31.750 [debug] Executing bend with initial: 10
14:57:31.750 [debug] Executing fun with value: 10
14:57:31.750 [debug] Evaluating bend block with value: 10
14:57:31.750 [debug] Block returned: %{variant: :leaf}
14:57:31.750 [debug] Fun returned result: %{variant: :leaf}
14:57:31.750 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.750 [debug] do_bend final result: %{variant: :leaf}
14:57:31.750 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 9
14:57:31.750 [debug] Executing fun with value: 9
14:57:31.750 [debug] Evaluating bend block with value: 9
14:57:31.750 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.750 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 10
14:57:31.750 [debug] Executing fun with value: 10
14:57:31.750 [debug] Evaluating bend block with value: 10
14:57:31.750 [debug] Block returned: %{variant: :leaf}
14:57:31.750 [debug] Fun returned result: %{variant: :leaf}
14:57:31.750 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.750 [debug] do_bend final result: %{variant: :leaf}
14:57:31.750 [debug] Executing bend with initial: 10
14:57:31.750 [debug] Executing fun with value: 10
14:57:31.750 [debug] Evaluating bend block with value: 10
14:57:31.750 [debug] Block returned: %{variant: :leaf}
14:57:31.750 [debug] Fun returned result: %{variant: :leaf}
14:57:31.750 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.750 [debug] do_bend final result: %{variant: :leaf}
14:57:31.750 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.750 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 8
14:57:31.750 [debug] Executing fun with value: 8
14:57:31.750 [debug] Evaluating bend block with value: 8
14:57:31.750 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.750 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.750 [debug] Executing bend with initial: 9
14:57:31.750 [debug] Executing fun with value: 9
14:57:31.750 [debug] Evaluating bend block with value: 9
14:57:31.750 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.750 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.751 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.751 [debug] Executing bend with initial: 10
14:57:31.751 [debug] Executing fun with value: 10
14:57:31.751 [debug] Evaluating bend block with value: 10
14:57:31.751 [debug] Block returned: %{variant: :leaf}
14:57:31.751 [debug] Fun returned result: %{variant: :leaf}
14:57:31.751 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.751 [debug] do_bend final result: %{variant: :leaf}
14:57:31.751 [debug] Executing bend with initial: 10
14:57:31.751 [debug] Executing fun with value: 10
14:57:31.751 [debug] Evaluating bend block with value: 10
14:57:31.751 [debug] Block returned: %{variant: :leaf}
14:57:31.751 [debug] Fun returned result: %{variant: :leaf}
14:57:31.751 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.751 [debug] do_bend final result: %{variant: :leaf}
14:57:31.751 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.751 [debug] Executing bend with initial: 9
14:57:31.751 [debug] Executing fun with value: 9
14:57:31.751 [debug] Evaluating bend block with value: 9
14:57:31.751 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.751 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.751 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.751 [debug] Executing bend with initial: 10
14:57:31.751 [debug] Executing fun with value: 10
14:57:31.751 [debug] Evaluating bend block with value: 10
14:57:31.751 [debug] Block returned: %{variant: :leaf}
14:57:31.751 [debug] Fun returned result: %{variant: :leaf}
14:57:31.751 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.751 [debug] do_bend final result: %{variant: :leaf}
14:57:31.751 [debug] Executing bend with initial: 10
14:57:31.751 [debug] Executing fun with value: 10
14:57:31.751 [debug] Evaluating bend block with value: 10
14:57:31.751 [debug] Block returned: %{variant: :leaf}
14:57:31.751 [debug] Fun returned result: %{variant: :leaf}
14:57:31.751 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.751 [debug] do_bend final result: %{variant: :leaf}
14:57:31.751 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.751 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.751 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.751 [debug] Executing bend with initial: 7
14:57:31.751 [debug] Executing fun with value: 7
14:57:31.751 [debug] Evaluating bend block with value: 7
14:57:31.751 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.751 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.751 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.751 [debug] Executing bend with initial: 8
14:57:31.751 [debug] Executing fun with value: 8
14:57:31.751 [debug] Evaluating bend block with value: 8
14:57:31.752 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.752 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.752 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.752 [debug] Executing bend with initial: 9
14:57:31.752 [debug] Executing fun with value: 9
14:57:31.752 [debug] Evaluating bend block with value: 9
14:57:31.752 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.752 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.752 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.752 [debug] Executing bend with initial: 10
14:57:31.752 [debug] Executing fun with value: 10
14:57:31.752 [debug] Evaluating bend block with value: 10
14:57:31.752 [debug] Block returned: %{variant: :leaf}
14:57:31.752 [debug] Fun returned result: %{variant: :leaf}
14:57:31.752 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.752 [debug] do_bend final result: %{variant: :leaf}
14:57:31.752 [debug] Executing bend with initial: 10
14:57:31.753 [debug] Executing fun with value: 10
14:57:31.753 [debug] Evaluating bend block with value: 10
14:57:31.753 [debug] Block returned: %{variant: :leaf}
14:57:31.753 [debug] Fun returned result: %{variant: :leaf}
14:57:31.753 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.753 [debug] Executing bend with initial: 9
14:57:31.753 [debug] Executing fun with value: 9
14:57:31.753 [debug] Evaluating bend block with value: 9
14:57:31.753 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Executing bend with initial: 10
14:57:31.753 [debug] Executing fun with value: 10
14:57:31.753 [debug] Evaluating bend block with value: 10
14:57:31.753 [debug] Block returned: %{variant: :leaf}
14:57:31.753 [debug] Fun returned result: %{variant: :leaf}
14:57:31.753 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{variant: :leaf}
14:57:31.753 [debug] Executing bend with initial: 10
14:57:31.753 [debug] Executing fun with value: 10
14:57:31.753 [debug] Evaluating bend block with value: 10
14:57:31.753 [debug] Block returned: %{variant: :leaf}
14:57:31.753 [debug] Fun returned result: %{variant: :leaf}
14:57:31.753 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.753 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.753 [debug] Executing bend with initial: 8
14:57:31.753 [debug] Executing fun with value: 8
14:57:31.753 [debug] Evaluating bend block with value: 8
14:57:31.753 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.753 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.753 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.753 [debug] Executing bend with initial: 9
14:57:31.753 [debug] Executing fun with value: 9
14:57:31.753 [debug] Evaluating bend block with value: 9
14:57:31.753 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Executing bend with initial: 10
14:57:31.753 [debug] Executing fun with value: 10
14:57:31.753 [debug] Evaluating bend block with value: 10
14:57:31.753 [debug] Block returned: %{variant: :leaf}
14:57:31.753 [debug] Fun returned result: %{variant: :leaf}
14:57:31.753 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{variant: :leaf}
14:57:31.753 [debug] Executing bend with initial: 10
14:57:31.753 [debug] Executing fun with value: 10
14:57:31.753 [debug] Evaluating bend block with value: 10
14:57:31.753 [debug] Block returned: %{variant: :leaf}
14:57:31.753 [debug] Fun returned result: %{variant: :leaf}
14:57:31.753 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.753 [debug] Executing bend with initial: 9
14:57:31.753 [debug] Executing fun with value: 9
14:57:31.753 [debug] Evaluating bend block with value: 9
14:57:31.753 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.753 [debug] Executing bend with initial: 10
14:57:31.753 [debug] Executing fun with value: 10
14:57:31.753 [debug] Evaluating bend block with value: 10
14:57:31.753 [debug] Block returned: %{variant: :leaf}
14:57:31.753 [debug] Fun returned result: %{variant: :leaf}
14:57:31.753 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{variant: :leaf}
14:57:31.753 [debug] Executing bend with initial: 10
14:57:31.753 [debug] Executing fun with value: 10
14:57:31.753 [debug] Evaluating bend block with value: 10
14:57:31.753 [debug] Block returned: %{variant: :leaf}
14:57:31.753 [debug] Fun returned result: %{variant: :leaf}
14:57:31.753 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{variant: :leaf}
14:57:31.753 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.753 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.753 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.753 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 6
14:57:31.754 [debug] Executing fun with value: 6
14:57:31.754 [debug] Evaluating bend block with value: 6
14:57:31.754 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.754 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.754 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 7
14:57:31.754 [debug] Executing fun with value: 7
14:57:31.754 [debug] Evaluating bend block with value: 7
14:57:31.754 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.754 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.754 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 8
14:57:31.754 [debug] Executing fun with value: 8
14:57:31.754 [debug] Evaluating bend block with value: 8
14:57:31.754 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.754 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.754 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 9
14:57:31.754 [debug] Executing fun with value: 9
14:57:31.754 [debug] Evaluating bend block with value: 9
14:57:31.754 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.754 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.754 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 10
14:57:31.754 [debug] Executing fun with value: 10
14:57:31.754 [debug] Evaluating bend block with value: 10
14:57:31.754 [debug] Block returned: %{variant: :leaf}
14:57:31.754 [debug] Fun returned result: %{variant: :leaf}
14:57:31.754 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.754 [debug] do_bend final result: %{variant: :leaf}
14:57:31.754 [debug] Executing bend with initial: 10
14:57:31.754 [debug] Executing fun with value: 10
14:57:31.754 [debug] Evaluating bend block with value: 10
14:57:31.754 [debug] Block returned: %{variant: :leaf}
14:57:31.754 [debug] Fun returned result: %{variant: :leaf}
14:57:31.754 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.754 [debug] do_bend final result: %{variant: :leaf}
14:57:31.754 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 9
14:57:31.754 [debug] Executing fun with value: 9
14:57:31.754 [debug] Evaluating bend block with value: 9
14:57:31.754 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.754 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.754 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 10
14:57:31.754 [debug] Executing fun with value: 10
14:57:31.754 [debug] Evaluating bend block with value: 10
14:57:31.754 [debug] Block returned: %{variant: :leaf}
14:57:31.754 [debug] Fun returned result: %{variant: :leaf}
14:57:31.754 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.754 [debug] do_bend final result: %{variant: :leaf}
14:57:31.754 [debug] Executing bend with initial: 10
14:57:31.754 [debug] Executing fun with value: 10
14:57:31.754 [debug] Evaluating bend block with value: 10
14:57:31.754 [debug] Block returned: %{variant: :leaf}
14:57:31.754 [debug] Fun returned result: %{variant: :leaf}
14:57:31.754 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.754 [debug] do_bend final result: %{variant: :leaf}
14:57:31.754 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.754 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.754 [debug] Executing bend with initial: 8
14:57:31.754 [debug] Executing fun with value: 8
14:57:31.754 [debug] Evaluating bend block with value: 8
14:57:31.754 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.754 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.755 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 9
14:57:31.755 [debug] Executing fun with value: 9
14:57:31.755 [debug] Evaluating bend block with value: 9
14:57:31.755 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 10
14:57:31.755 [debug] Executing fun with value: 10
14:57:31.755 [debug] Evaluating bend block with value: 10
14:57:31.755 [debug] Block returned: %{variant: :leaf}
14:57:31.755 [debug] Fun returned result: %{variant: :leaf}
14:57:31.755 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{variant: :leaf}
14:57:31.755 [debug] Executing bend with initial: 10
14:57:31.755 [debug] Executing fun with value: 10
14:57:31.755 [debug] Evaluating bend block with value: 10
14:57:31.755 [debug] Block returned: %{variant: :leaf}
14:57:31.755 [debug] Fun returned result: %{variant: :leaf}
14:57:31.755 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 9
14:57:31.755 [debug] Executing fun with value: 9
14:57:31.755 [debug] Evaluating bend block with value: 9
14:57:31.755 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 10
14:57:31.755 [debug] Executing fun with value: 10
14:57:31.755 [debug] Evaluating bend block with value: 10
14:57:31.755 [debug] Block returned: %{variant: :leaf}
14:57:31.755 [debug] Fun returned result: %{variant: :leaf}
14:57:31.755 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{variant: :leaf}
14:57:31.755 [debug] Executing bend with initial: 10
14:57:31.755 [debug] Executing fun with value: 10
14:57:31.755 [debug] Evaluating bend block with value: 10
14:57:31.755 [debug] Block returned: %{variant: :leaf}
14:57:31.755 [debug] Fun returned result: %{variant: :leaf}
14:57:31.755 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.755 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.755 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 7
14:57:31.755 [debug] Executing fun with value: 7
14:57:31.755 [debug] Evaluating bend block with value: 7
14:57:31.755 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.755 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.755 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 8
14:57:31.755 [debug] Executing fun with value: 8
14:57:31.755 [debug] Evaluating bend block with value: 8
14:57:31.755 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.755 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.755 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 9
14:57:31.755 [debug] Executing fun with value: 9
14:57:31.755 [debug] Evaluating bend block with value: 9
14:57:31.755 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 10
14:57:31.755 [debug] Executing fun with value: 10
14:57:31.755 [debug] Evaluating bend block with value: 10
14:57:31.755 [debug] Block returned: %{variant: :leaf}
14:57:31.755 [debug] Fun returned result: %{variant: :leaf}
14:57:31.755 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{variant: :leaf}
14:57:31.755 [debug] Executing bend with initial: 10
14:57:31.755 [debug] Executing fun with value: 10
14:57:31.755 [debug] Evaluating bend block with value: 10
14:57:31.755 [debug] Block returned: %{variant: :leaf}
14:57:31.755 [debug] Fun returned result: %{variant: :leaf}
14:57:31.755 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{variant: :leaf}
14:57:31.755 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.755 [debug] Executing bend with initial: 9
14:57:31.755 [debug] Executing fun with value: 9
14:57:31.755 [debug] Evaluating bend block with value: 9
14:57:31.755 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.755 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Executing bend with initial: 10
14:57:31.756 [debug] Executing fun with value: 10
14:57:31.756 [debug] Evaluating bend block with value: 10
14:57:31.756 [debug] Block returned: %{variant: :leaf}
14:57:31.756 [debug] Fun returned result: %{variant: :leaf}
14:57:31.756 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{variant: :leaf}
14:57:31.756 [debug] Executing bend with initial: 10
14:57:31.756 [debug] Executing fun with value: 10
14:57:31.756 [debug] Evaluating bend block with value: 10
14:57:31.756 [debug] Block returned: %{variant: :leaf}
14:57:31.756 [debug] Fun returned result: %{variant: :leaf}
14:57:31.756 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.756 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.756 [debug] Executing bend with initial: 8
14:57:31.756 [debug] Executing fun with value: 8
14:57:31.756 [debug] Evaluating bend block with value: 8
14:57:31.756 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.756 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.756 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.756 [debug] Executing bend with initial: 9
14:57:31.756 [debug] Executing fun with value: 9
14:57:31.756 [debug] Evaluating bend block with value: 9
14:57:31.756 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Executing bend with initial: 10
14:57:31.756 [debug] Executing fun with value: 10
14:57:31.756 [debug] Evaluating bend block with value: 10
14:57:31.756 [debug] Block returned: %{variant: :leaf}
14:57:31.756 [debug] Fun returned result: %{variant: :leaf}
14:57:31.756 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{variant: :leaf}
14:57:31.756 [debug] Executing bend with initial: 10
14:57:31.756 [debug] Executing fun with value: 10
14:57:31.756 [debug] Evaluating bend block with value: 10
14:57:31.756 [debug] Block returned: %{variant: :leaf}
14:57:31.756 [debug] Fun returned result: %{variant: :leaf}
14:57:31.756 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.756 [debug] Executing bend with initial: 9
14:57:31.756 [debug] Executing fun with value: 9
14:57:31.756 [debug] Evaluating bend block with value: 9
14:57:31.756 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.756 [debug] Executing bend with initial: 10
14:57:31.756 [debug] Executing fun with value: 10
14:57:31.756 [debug] Evaluating bend block with value: 10
14:57:31.756 [debug] Block returned: %{variant: :leaf}
14:57:31.756 [debug] Fun returned result: %{variant: :leaf}
14:57:31.756 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{variant: :leaf}
14:57:31.756 [debug] Executing bend with initial: 10
14:57:31.756 [debug] Executing fun with value: 10
14:57:31.756 [debug] Evaluating bend block with value: 10
14:57:31.756 [debug] Block returned: %{variant: :leaf}
14:57:31.756 [debug] Fun returned result: %{variant: :leaf}
14:57:31.756 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.756 [debug] do_bend final result: %{variant: :leaf}
14:57:31.757 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.757 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.757 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.757 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.757 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.758 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 4
14:57:31.758 [debug] Executing fun with value: 4
14:57:31.758 [debug] Evaluating bend block with value: 4
14:57:31.758 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.758 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.758 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 5
14:57:31.758 [debug] Executing fun with value: 5
14:57:31.758 [debug] Evaluating bend block with value: 5
14:57:31.758 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.758 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.758 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 6
14:57:31.758 [debug] Executing fun with value: 6
14:57:31.758 [debug] Evaluating bend block with value: 6
14:57:31.758 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.758 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.758 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 7
14:57:31.758 [debug] Executing fun with value: 7
14:57:31.758 [debug] Evaluating bend block with value: 7
14:57:31.758 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.758 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.758 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 8
14:57:31.758 [debug] Executing fun with value: 8
14:57:31.758 [debug] Evaluating bend block with value: 8
14:57:31.758 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.758 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.758 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 9
14:57:31.758 [debug] Executing fun with value: 9
14:57:31.758 [debug] Evaluating bend block with value: 9
14:57:31.758 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.758 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.758 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 10
14:57:31.758 [debug] Executing fun with value: 10
14:57:31.758 [debug] Evaluating bend block with value: 10
14:57:31.758 [debug] Block returned: %{variant: :leaf}
14:57:31.758 [debug] Fun returned result: %{variant: :leaf}
14:57:31.758 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.758 [debug] do_bend final result: %{variant: :leaf}
14:57:31.758 [debug] Executing bend with initial: 10
14:57:31.758 [debug] Executing fun with value: 10
14:57:31.758 [debug] Evaluating bend block with value: 10
14:57:31.758 [debug] Block returned: %{variant: :leaf}
14:57:31.758 [debug] Fun returned result: %{variant: :leaf}
14:57:31.758 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.758 [debug] do_bend final result: %{variant: :leaf}
14:57:31.758 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 9
14:57:31.758 [debug] Executing fun with value: 9
14:57:31.758 [debug] Evaluating bend block with value: 9
14:57:31.758 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.758 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.758 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.758 [debug] Executing bend with initial: 10
14:57:31.758 [debug] Executing fun with value: 10
14:57:31.758 [debug] Evaluating bend block with value: 10
14:57:31.758 [debug] Block returned: %{variant: :leaf}
14:57:31.758 [debug] Fun returned result: %{variant: :leaf}
14:57:31.758 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.758 [debug] do_bend final result: %{variant: :leaf}
14:57:31.758 [debug] Executing bend with initial: 10
14:57:31.758 [debug] Executing fun with value: 10
14:57:31.758 [debug] Evaluating bend block with value: 10
14:57:31.759 [debug] Block returned: %{variant: :leaf}
14:57:31.759 [debug] Fun returned result: %{variant: :leaf}
14:57:31.759 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.759 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.759 [debug] Executing bend with initial: 8
14:57:31.759 [debug] Executing fun with value: 8
14:57:31.759 [debug] Evaluating bend block with value: 8
14:57:31.759 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.759 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.759 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.759 [debug] Executing bend with initial: 9
14:57:31.759 [debug] Executing fun with value: 9
14:57:31.759 [debug] Evaluating bend block with value: 9
14:57:31.759 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.759 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.759 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.759 [debug] Executing bend with initial: 10
14:57:31.759 [debug] Executing fun with value: 10
14:57:31.759 [debug] Evaluating bend block with value: 10
14:57:31.759 [debug] Block returned: %{variant: :leaf}
14:57:31.759 [debug] Fun returned result: %{variant: :leaf}
14:57:31.759 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{variant: :leaf}
14:57:31.759 [debug] Executing bend with initial: 10
14:57:31.759 [debug] Executing fun with value: 10
14:57:31.759 [debug] Evaluating bend block with value: 10
14:57:31.759 [debug] Block returned: %{variant: :leaf}
14:57:31.759 [debug] Fun returned result: %{variant: :leaf}
14:57:31.759 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.759 [debug] Executing bend with initial: 9
14:57:31.759 [debug] Executing fun with value: 9
14:57:31.759 [debug] Evaluating bend block with value: 9
14:57:31.759 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.759 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.759 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.759 [debug] Executing bend with initial: 10
14:57:31.759 [debug] Executing fun with value: 10
14:57:31.759 [debug] Evaluating bend block with value: 10
14:57:31.759 [debug] Block returned: %{variant: :leaf}
14:57:31.759 [debug] Fun returned result: %{variant: :leaf}
14:57:31.759 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{variant: :leaf}
14:57:31.759 [debug] Executing bend with initial: 10
14:57:31.759 [debug] Executing fun with value: 10
14:57:31.759 [debug] Evaluating bend block with value: 10
14:57:31.759 [debug] Block returned: %{variant: :leaf}
14:57:31.759 [debug] Fun returned result: %{variant: :leaf}
14:57:31.759 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{variant: :leaf}
14:57:31.759 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.759 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.759 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.759 [debug] Executing bend with initial: 7
14:57:31.759 [debug] Executing fun with value: 7
14:57:31.759 [debug] Evaluating bend block with value: 7
14:57:31.759 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.759 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.759 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.759 [debug] Executing bend with initial: 8
14:57:31.759 [debug] Executing fun with value: 8
14:57:31.759 [debug] Evaluating bend block with value: 8
14:57:31.760 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.760 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.760 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 9
14:57:31.760 [debug] Executing fun with value: 9
14:57:31.760 [debug] Evaluating bend block with value: 9
14:57:31.760 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 9
14:57:31.760 [debug] Executing fun with value: 9
14:57:31.760 [debug] Evaluating bend block with value: 9
14:57:31.760 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.760 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 8
14:57:31.760 [debug] Executing fun with value: 8
14:57:31.760 [debug] Evaluating bend block with value: 8
14:57:31.760 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.760 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.760 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 9
14:57:31.760 [debug] Executing fun with value: 9
14:57:31.760 [debug] Evaluating bend block with value: 9
14:57:31.760 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 9
14:57:31.760 [debug] Executing fun with value: 9
14:57:31.760 [debug] Evaluating bend block with value: 9
14:57:31.760 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] Executing bend with initial: 10
14:57:31.760 [debug] Executing fun with value: 10
14:57:31.760 [debug] Evaluating bend block with value: 10
14:57:31.760 [debug] Block returned: %{variant: :leaf}
14:57:31.760 [debug] Fun returned result: %{variant: :leaf}
14:57:31.760 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{variant: :leaf}
14:57:31.760 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.761 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.761 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.761 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 6
14:57:31.761 [debug] Executing fun with value: 6
14:57:31.761 [debug] Evaluating bend block with value: 6
14:57:31.761 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.761 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.761 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 7
14:57:31.761 [debug] Executing fun with value: 7
14:57:31.761 [debug] Evaluating bend block with value: 7
14:57:31.761 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.761 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.761 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 8
14:57:31.761 [debug] Executing fun with value: 8
14:57:31.761 [debug] Evaluating bend block with value: 8
14:57:31.761 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.761 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.761 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 9
14:57:31.761 [debug] Executing fun with value: 9
14:57:31.761 [debug] Evaluating bend block with value: 9
14:57:31.761 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 10
14:57:31.761 [debug] Executing fun with value: 10
14:57:31.761 [debug] Evaluating bend block with value: 10
14:57:31.761 [debug] Block returned: %{variant: :leaf}
14:57:31.761 [debug] Fun returned result: %{variant: :leaf}
14:57:31.761 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.761 [debug] do_bend final result: %{variant: :leaf}
14:57:31.761 [debug] Executing bend with initial: 10
14:57:31.761 [debug] Executing fun with value: 10
14:57:31.761 [debug] Evaluating bend block with value: 10
14:57:31.761 [debug] Block returned: %{variant: :leaf}
14:57:31.761 [debug] Fun returned result: %{variant: :leaf}
14:57:31.761 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.761 [debug] do_bend final result: %{variant: :leaf}
14:57:31.761 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 9
14:57:31.761 [debug] Executing fun with value: 9
14:57:31.761 [debug] Evaluating bend block with value: 9
14:57:31.761 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 10
14:57:31.761 [debug] Executing fun with value: 10
14:57:31.761 [debug] Evaluating bend block with value: 10
14:57:31.761 [debug] Block returned: %{variant: :leaf}
14:57:31.761 [debug] Fun returned result: %{variant: :leaf}
14:57:31.761 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.761 [debug] do_bend final result: %{variant: :leaf}
14:57:31.761 [debug] Executing bend with initial: 10
14:57:31.761 [debug] Executing fun with value: 10
14:57:31.761 [debug] Evaluating bend block with value: 10
14:57:31.761 [debug] Block returned: %{variant: :leaf}
14:57:31.761 [debug] Fun returned result: %{variant: :leaf}
14:57:31.761 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.761 [debug] do_bend final result: %{variant: :leaf}
14:57:31.761 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.761 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 8
14:57:31.761 [debug] Executing fun with value: 8
14:57:31.761 [debug] Evaluating bend block with value: 8
14:57:31.761 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.761 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.761 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 9
14:57:31.761 [debug] Executing fun with value: 9
14:57:31.761 [debug] Evaluating bend block with value: 9
14:57:31.761 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.761 [debug] Executing bend with initial: 10
14:57:31.761 [debug] Executing fun with value: 10
14:57:31.761 [debug] Evaluating bend block with value: 10
14:57:31.761 [debug] Block returned: %{variant: :leaf}
14:57:31.761 [debug] Fun returned result: %{variant: :leaf}
14:57:31.761 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{variant: :leaf}
14:57:31.762 [debug] Executing bend with initial: 10
14:57:31.762 [debug] Executing fun with value: 10
14:57:31.762 [debug] Evaluating bend block with value: 10
14:57:31.762 [debug] Block returned: %{variant: :leaf}
14:57:31.762 [debug] Fun returned result: %{variant: :leaf}
14:57:31.762 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.762 [debug] Executing bend with initial: 9
14:57:31.762 [debug] Executing fun with value: 9
14:57:31.762 [debug] Evaluating bend block with value: 9
14:57:31.762 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.762 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.762 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.762 [debug] Executing bend with initial: 10
14:57:31.762 [debug] Executing fun with value: 10
14:57:31.762 [debug] Evaluating bend block with value: 10
14:57:31.762 [debug] Block returned: %{variant: :leaf}
14:57:31.762 [debug] Fun returned result: %{variant: :leaf}
14:57:31.762 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{variant: :leaf}
14:57:31.762 [debug] Executing bend with initial: 10
14:57:31.762 [debug] Executing fun with value: 10
14:57:31.762 [debug] Evaluating bend block with value: 10
14:57:31.762 [debug] Block returned: %{variant: :leaf}
14:57:31.762 [debug] Fun returned result: %{variant: :leaf}
14:57:31.762 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.762 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.762 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.762 [debug] Executing bend with initial: 7
14:57:31.762 [debug] Executing fun with value: 7
14:57:31.762 [debug] Evaluating bend block with value: 7
14:57:31.762 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.762 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.762 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.762 [debug] Executing bend with initial: 8
14:57:31.762 [debug] Executing fun with value: 8
14:57:31.762 [debug] Evaluating bend block with value: 8
14:57:31.762 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.762 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.762 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.762 [debug] Executing bend with initial: 9
14:57:31.762 [debug] Executing fun with value: 9
14:57:31.762 [debug] Evaluating bend block with value: 9
14:57:31.762 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.762 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.762 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.762 [debug] Executing bend with initial: 10
14:57:31.762 [debug] Executing fun with value: 10
14:57:31.762 [debug] Evaluating bend block with value: 10
14:57:31.762 [debug] Block returned: %{variant: :leaf}
14:57:31.762 [debug] Fun returned result: %{variant: :leaf}
14:57:31.762 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{variant: :leaf}
14:57:31.762 [debug] Executing bend with initial: 10
14:57:31.762 [debug] Executing fun with value: 10
14:57:31.762 [debug] Evaluating bend block with value: 10
14:57:31.762 [debug] Block returned: %{variant: :leaf}
14:57:31.762 [debug] Fun returned result: %{variant: :leaf}
14:57:31.762 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{variant: :leaf}
14:57:31.762 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.762 [debug] Executing bend with initial: 9
14:57:31.762 [debug] Executing fun with value: 9
14:57:31.762 [debug] Evaluating bend block with value: 9
14:57:31.762 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.762 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Executing bend with initial: 10
14:57:31.763 [debug] Executing fun with value: 10
14:57:31.763 [debug] Evaluating bend block with value: 10
14:57:31.763 [debug] Block returned: %{variant: :leaf}
14:57:31.763 [debug] Fun returned result: %{variant: :leaf}
14:57:31.763 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{variant: :leaf}
14:57:31.763 [debug] Executing bend with initial: 10
14:57:31.763 [debug] Executing fun with value: 10
14:57:31.763 [debug] Evaluating bend block with value: 10
14:57:31.763 [debug] Block returned: %{variant: :leaf}
14:57:31.763 [debug] Fun returned result: %{variant: :leaf}
14:57:31.763 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.763 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.763 [debug] Executing bend with initial: 8
14:57:31.763 [debug] Executing fun with value: 8
14:57:31.763 [debug] Evaluating bend block with value: 8
14:57:31.763 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.763 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.763 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.763 [debug] Executing bend with initial: 9
14:57:31.763 [debug] Executing fun with value: 9
14:57:31.763 [debug] Evaluating bend block with value: 9
14:57:31.763 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Executing bend with initial: 10
14:57:31.763 [debug] Executing fun with value: 10
14:57:31.763 [debug] Evaluating bend block with value: 10
14:57:31.763 [debug] Block returned: %{variant: :leaf}
14:57:31.763 [debug] Fun returned result: %{variant: :leaf}
14:57:31.763 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{variant: :leaf}
14:57:31.763 [debug] Executing bend with initial: 10
14:57:31.763 [debug] Executing fun with value: 10
14:57:31.763 [debug] Evaluating bend block with value: 10
14:57:31.763 [debug] Block returned: %{variant: :leaf}
14:57:31.763 [debug] Fun returned result: %{variant: :leaf}
14:57:31.763 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.763 [debug] Executing bend with initial: 9
14:57:31.763 [debug] Executing fun with value: 9
14:57:31.763 [debug] Evaluating bend block with value: 9
14:57:31.763 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.763 [debug] Executing bend with initial: 10
14:57:31.763 [debug] Executing fun with value: 10
14:57:31.763 [debug] Evaluating bend block with value: 10
14:57:31.763 [debug] Block returned: %{variant: :leaf}
14:57:31.763 [debug] Fun returned result: %{variant: :leaf}
14:57:31.763 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{variant: :leaf}
14:57:31.763 [debug] Executing bend with initial: 10
14:57:31.763 [debug] Executing fun with value: 10
14:57:31.763 [debug] Evaluating bend block with value: 10
14:57:31.763 [debug] Block returned: %{variant: :leaf}
14:57:31.763 [debug] Fun returned result: %{variant: :leaf}
14:57:31.763 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{variant: :leaf}
14:57:31.763 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.763 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.763 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.763 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.764 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 5
14:57:31.764 [debug] Executing fun with value: 5
14:57:31.764 [debug] Evaluating bend block with value: 5
14:57:31.764 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 6
14:57:31.764 [debug] Executing fun with value: 6
14:57:31.764 [debug] Evaluating bend block with value: 6
14:57:31.764 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 7
14:57:31.764 [debug] Executing fun with value: 7
14:57:31.764 [debug] Evaluating bend block with value: 7
14:57:31.764 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 8
14:57:31.764 [debug] Executing fun with value: 8
14:57:31.764 [debug] Evaluating bend block with value: 8
14:57:31.764 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 9
14:57:31.764 [debug] Executing fun with value: 9
14:57:31.764 [debug] Evaluating bend block with value: 9
14:57:31.764 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 10
14:57:31.764 [debug] Executing fun with value: 10
14:57:31.764 [debug] Evaluating bend block with value: 10
14:57:31.764 [debug] Block returned: %{variant: :leaf}
14:57:31.764 [debug] Fun returned result: %{variant: :leaf}
14:57:31.764 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.764 [debug] do_bend final result: %{variant: :leaf}
14:57:31.764 [debug] Executing bend with initial: 10
14:57:31.764 [debug] Executing fun with value: 10
14:57:31.764 [debug] Evaluating bend block with value: 10
14:57:31.764 [debug] Block returned: %{variant: :leaf}
14:57:31.764 [debug] Fun returned result: %{variant: :leaf}
14:57:31.764 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.764 [debug] do_bend final result: %{variant: :leaf}
14:57:31.764 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 9
14:57:31.764 [debug] Executing fun with value: 9
14:57:31.764 [debug] Evaluating bend block with value: 9
14:57:31.764 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 10
14:57:31.764 [debug] Executing fun with value: 10
14:57:31.764 [debug] Evaluating bend block with value: 10
14:57:31.764 [debug] Block returned: %{variant: :leaf}
14:57:31.764 [debug] Fun returned result: %{variant: :leaf}
14:57:31.764 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.764 [debug] do_bend final result: %{variant: :leaf}
14:57:31.764 [debug] Executing bend with initial: 10
14:57:31.764 [debug] Executing fun with value: 10
14:57:31.764 [debug] Evaluating bend block with value: 10
14:57:31.764 [debug] Block returned: %{variant: :leaf}
14:57:31.764 [debug] Fun returned result: %{variant: :leaf}
14:57:31.764 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.764 [debug] do_bend final result: %{variant: :leaf}
14:57:31.764 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.764 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 8
14:57:31.764 [debug] Executing fun with value: 8
14:57:31.764 [debug] Evaluating bend block with value: 8
14:57:31.764 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 9
14:57:31.764 [debug] Executing fun with value: 9
14:57:31.764 [debug] Evaluating bend block with value: 9
14:57:31.764 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.764 [debug] Executing bend with initial: 10
14:57:31.764 [debug] Executing fun with value: 10
14:57:31.764 [debug] Evaluating bend block with value: 10
14:57:31.765 [debug] Block returned: %{variant: :leaf}
14:57:31.765 [debug] Fun returned result: %{variant: :leaf}
14:57:31.765 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.765 [debug] do_bend final result: %{variant: :leaf}
14:57:31.765 [debug] Executing bend with initial: 10
14:57:31.765 [debug] Executing fun with value: 10
14:57:31.765 [debug] Evaluating bend block with value: 10
14:57:31.765 [debug] Block returned: %{variant: :leaf}
14:57:31.765 [debug] Fun returned result: %{variant: :leaf}
14:57:31.765 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.765 [debug] do_bend final result: %{variant: :leaf}
14:57:31.765 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.765 [debug] Executing bend with initial: 9
14:57:31.765 [debug] Executing fun with value: 9
14:57:31.765 [debug] Evaluating bend block with value: 9
14:57:31.765 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.765 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.765 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.765 [debug] Executing bend with initial: 10
14:57:31.765 [debug] Executing fun with value: 10
14:57:31.765 [debug] Evaluating bend block with value: 10
14:57:31.765 [debug] Block returned: %{variant: :leaf}
14:57:31.765 [debug] Fun returned result: %{variant: :leaf}
14:57:31.765 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.766 [debug] do_bend final result: %{variant: :leaf}
14:57:31.766 [debug] Executing bend with initial: 10
14:57:31.766 [debug] Executing fun with value: 10
14:57:31.766 [debug] Evaluating bend block with value: 10
14:57:31.766 [debug] Block returned: %{variant: :leaf}
14:57:31.766 [debug] Fun returned result: %{variant: :leaf}
14:57:31.766 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.766 [debug] do_bend final result: %{variant: :leaf}
14:57:31.766 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.766 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.766 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.766 [debug] Executing bend with initial: 7
14:57:31.766 [debug] Executing fun with value: 7
14:57:31.766 [debug] Evaluating bend block with value: 7
14:57:31.766 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.766 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.766 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.766 [debug] Executing bend with initial: 8
14:57:31.766 [debug] Executing fun with value: 8
14:57:31.766 [debug] Evaluating bend block with value: 8
14:57:31.766 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.766 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.766 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.766 [debug] Executing bend with initial: 9
14:57:31.766 [debug] Executing fun with value: 9
14:57:31.766 [debug] Evaluating bend block with value: 9
14:57:31.766 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.766 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.766 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.766 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.767 [debug] Executing bend with initial: 9
14:57:31.767 [debug] Executing fun with value: 9
14:57:31.767 [debug] Evaluating bend block with value: 9
14:57:31.767 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.767 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.767 [debug] Executing bend with initial: 8
14:57:31.767 [debug] Executing fun with value: 8
14:57:31.767 [debug] Evaluating bend block with value: 8
14:57:31.767 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.767 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.767 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.767 [debug] Executing bend with initial: 9
14:57:31.767 [debug] Executing fun with value: 9
14:57:31.767 [debug] Evaluating bend block with value: 9
14:57:31.767 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.767 [debug] Executing bend with initial: 9
14:57:31.767 [debug] Executing fun with value: 9
14:57:31.767 [debug] Evaluating bend block with value: 9
14:57:31.767 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.767 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] Executing bend with initial: 10
14:57:31.767 [debug] Executing fun with value: 10
14:57:31.767 [debug] Evaluating bend block with value: 10
14:57:31.767 [debug] Block returned: %{variant: :leaf}
14:57:31.767 [debug] Fun returned result: %{variant: :leaf}
14:57:31.767 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{variant: :leaf}
14:57:31.767 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.767 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.767 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.768 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 6
14:57:31.768 [debug] Executing fun with value: 6
14:57:31.768 [debug] Evaluating bend block with value: 6
14:57:31.768 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.768 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.768 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 7
14:57:31.768 [debug] Executing fun with value: 7
14:57:31.768 [debug] Evaluating bend block with value: 7
14:57:31.768 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.768 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.768 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 8
14:57:31.768 [debug] Executing fun with value: 8
14:57:31.768 [debug] Evaluating bend block with value: 8
14:57:31.768 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.768 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.768 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 9
14:57:31.768 [debug] Executing fun with value: 9
14:57:31.768 [debug] Evaluating bend block with value: 9
14:57:31.768 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 10
14:57:31.768 [debug] Executing fun with value: 10
14:57:31.768 [debug] Evaluating bend block with value: 10
14:57:31.768 [debug] Block returned: %{variant: :leaf}
14:57:31.768 [debug] Fun returned result: %{variant: :leaf}
14:57:31.768 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{variant: :leaf}
14:57:31.768 [debug] Executing bend with initial: 10
14:57:31.768 [debug] Executing fun with value: 10
14:57:31.768 [debug] Evaluating bend block with value: 10
14:57:31.768 [debug] Block returned: %{variant: :leaf}
14:57:31.768 [debug] Fun returned result: %{variant: :leaf}
14:57:31.768 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 9
14:57:31.768 [debug] Executing fun with value: 9
14:57:31.768 [debug] Evaluating bend block with value: 9
14:57:31.768 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 10
14:57:31.768 [debug] Executing fun with value: 10
14:57:31.768 [debug] Evaluating bend block with value: 10
14:57:31.768 [debug] Block returned: %{variant: :leaf}
14:57:31.768 [debug] Fun returned result: %{variant: :leaf}
14:57:31.768 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{variant: :leaf}
14:57:31.768 [debug] Executing bend with initial: 10
14:57:31.768 [debug] Executing fun with value: 10
14:57:31.768 [debug] Evaluating bend block with value: 10
14:57:31.768 [debug] Block returned: %{variant: :leaf}
14:57:31.768 [debug] Fun returned result: %{variant: :leaf}
14:57:31.768 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.768 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 8
14:57:31.768 [debug] Executing fun with value: 8
14:57:31.768 [debug] Evaluating bend block with value: 8
14:57:31.768 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.768 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.768 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 9
14:57:31.768 [debug] Executing fun with value: 9
14:57:31.768 [debug] Evaluating bend block with value: 9
14:57:31.768 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 10
14:57:31.768 [debug] Executing fun with value: 10
14:57:31.768 [debug] Evaluating bend block with value: 10
14:57:31.768 [debug] Block returned: %{variant: :leaf}
14:57:31.768 [debug] Fun returned result: %{variant: :leaf}
14:57:31.768 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{variant: :leaf}
14:57:31.768 [debug] Executing bend with initial: 10
14:57:31.768 [debug] Executing fun with value: 10
14:57:31.768 [debug] Evaluating bend block with value: 10
14:57:31.768 [debug] Block returned: %{variant: :leaf}
14:57:31.768 [debug] Fun returned result: %{variant: :leaf}
14:57:31.768 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{variant: :leaf}
14:57:31.768 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.768 [debug] Executing bend with initial: 9
14:57:31.768 [debug] Executing fun with value: 9
14:57:31.768 [debug] Evaluating bend block with value: 9
14:57:31.768 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 10
14:57:31.769 [debug] Executing fun with value: 10
14:57:31.769 [debug] Evaluating bend block with value: 10
14:57:31.769 [debug] Block returned: %{variant: :leaf}
14:57:31.769 [debug] Fun returned result: %{variant: :leaf}
14:57:31.769 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{variant: :leaf}
14:57:31.769 [debug] Executing bend with initial: 10
14:57:31.769 [debug] Executing fun with value: 10
14:57:31.769 [debug] Evaluating bend block with value: 10
14:57:31.769 [debug] Block returned: %{variant: :leaf}
14:57:31.769 [debug] Fun returned result: %{variant: :leaf}
14:57:31.769 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.769 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.769 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 7
14:57:31.769 [debug] Executing fun with value: 7
14:57:31.769 [debug] Evaluating bend block with value: 7
14:57:31.769 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.769 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.769 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 8
14:57:31.769 [debug] Executing fun with value: 8
14:57:31.769 [debug] Evaluating bend block with value: 8
14:57:31.769 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.769 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.769 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 9
14:57:31.769 [debug] Executing fun with value: 9
14:57:31.769 [debug] Evaluating bend block with value: 9
14:57:31.769 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 10
14:57:31.769 [debug] Executing fun with value: 10
14:57:31.769 [debug] Evaluating bend block with value: 10
14:57:31.769 [debug] Block returned: %{variant: :leaf}
14:57:31.769 [debug] Fun returned result: %{variant: :leaf}
14:57:31.769 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{variant: :leaf}
14:57:31.769 [debug] Executing bend with initial: 10
14:57:31.769 [debug] Executing fun with value: 10
14:57:31.769 [debug] Evaluating bend block with value: 10
14:57:31.769 [debug] Block returned: %{variant: :leaf}
14:57:31.769 [debug] Fun returned result: %{variant: :leaf}
14:57:31.769 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 9
14:57:31.769 [debug] Executing fun with value: 9
14:57:31.769 [debug] Evaluating bend block with value: 9
14:57:31.769 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 10
14:57:31.769 [debug] Executing fun with value: 10
14:57:31.769 [debug] Evaluating bend block with value: 10
14:57:31.769 [debug] Block returned: %{variant: :leaf}
14:57:31.769 [debug] Fun returned result: %{variant: :leaf}
14:57:31.769 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{variant: :leaf}
14:57:31.769 [debug] Executing bend with initial: 10
14:57:31.769 [debug] Executing fun with value: 10
14:57:31.769 [debug] Evaluating bend block with value: 10
14:57:31.769 [debug] Block returned: %{variant: :leaf}
14:57:31.769 [debug] Fun returned result: %{variant: :leaf}
14:57:31.769 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{variant: :leaf}
14:57:31.769 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.769 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 8
14:57:31.769 [debug] Executing fun with value: 8
14:57:31.769 [debug] Evaluating bend block with value: 8
14:57:31.769 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.769 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.769 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 9
14:57:31.769 [debug] Executing fun with value: 9
14:57:31.769 [debug] Evaluating bend block with value: 9
14:57:31.769 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.769 [debug] Executing bend with initial: 10
14:57:31.769 [debug] Executing fun with value: 10
14:57:31.769 [debug] Evaluating bend block with value: 10
14:57:31.770 [debug] Block returned: %{variant: :leaf}
14:57:31.770 [debug] Fun returned result: %{variant: :leaf}
14:57:31.770 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.770 [debug] do_bend final result: %{variant: :leaf}
14:57:31.770 [debug] Executing bend with initial: 10
14:57:31.770 [debug] Executing fun with value: 10
14:57:31.770 [debug] Evaluating bend block with value: 10
14:57:31.770 [debug] Block returned: %{variant: :leaf}
14:57:31.770 [debug] Fun returned result: %{variant: :leaf}
14:57:31.770 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.770 [debug] do_bend final result: %{variant: :leaf}
14:57:31.770 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.770 [debug] Executing bend with initial: 9
14:57:31.770 [debug] Executing fun with value: 9
14:57:31.770 [debug] Evaluating bend block with value: 9
14:57:31.770 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.770 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.770 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.770 [debug] Executing bend with initial: 10
14:57:31.770 [debug] Executing fun with value: 10
14:57:31.770 [debug] Evaluating bend block with value: 10
14:57:31.770 [debug] Block returned: %{variant: :leaf}
14:57:31.770 [debug] Fun returned result: %{variant: :leaf}
14:57:31.770 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.770 [debug] do_bend final result: %{variant: :leaf}
14:57:31.770 [debug] Executing bend with initial: 10
14:57:31.770 [debug] Executing fun with value: 10
14:57:31.770 [debug] Evaluating bend block with value: 10
14:57:31.770 [debug] Block returned: %{variant: :leaf}
14:57:31.770 [debug] Fun returned result: %{variant: :leaf}
14:57:31.770 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.770 [debug] do_bend final result: %{variant: :leaf}
14:57:31.770 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.770 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.770 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.770 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.770 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.770 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.771 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.773 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
14:57:31.776 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, (truncated)
14:57:31.776 [debug] Executing bend with initial: 1
14:57:31.776 [debug] Executing fun with value: 1
14:57:31.776 [debug] Evaluating bend block with value: 1
14:57:31.776 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.776 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.776 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
14:57:31.776 [debug] Executing bend with initial: 2
14:57:31.776 [debug] Executing fun with value: 2
14:57:31.776 [debug] Evaluating bend block with value: 2
14:57:31.776 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.776 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.776 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.776 [debug] Executing bend with initial: 3
14:57:31.776 [debug] Executing fun with value: 3
14:57:31.776 [debug] Evaluating bend block with value: 3
14:57:31.776 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.776 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.776 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.776 [debug] Executing bend with initial: 4
14:57:31.776 [debug] Executing fun with value: 4
14:57:31.776 [debug] Evaluating bend block with value: 4
14:57:31.776 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.776 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.776 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.776 [debug] Executing bend with initial: 5
14:57:31.776 [debug] Executing fun with value: 5
14:57:31.776 [debug] Evaluating bend block with value: 5
14:57:31.776 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.776 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.776 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.776 [debug] Executing bend with initial: 6
14:57:31.776 [debug] Executing fun with value: 6
14:57:31.776 [debug] Evaluating bend block with value: 6
14:57:31.777 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 7
14:57:31.777 [debug] Executing fun with value: 7
14:57:31.777 [debug] Evaluating bend block with value: 7
14:57:31.777 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 8
14:57:31.777 [debug] Executing fun with value: 8
14:57:31.777 [debug] Evaluating bend block with value: 8
14:57:31.777 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 9
14:57:31.777 [debug] Executing fun with value: 9
14:57:31.777 [debug] Evaluating bend block with value: 9
14:57:31.777 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 10
14:57:31.777 [debug] Executing fun with value: 10
14:57:31.777 [debug] Evaluating bend block with value: 10
14:57:31.777 [debug] Block returned: %{variant: :leaf}
14:57:31.777 [debug] Fun returned result: %{variant: :leaf}
14:57:31.777 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{variant: :leaf}
14:57:31.777 [debug] Executing bend with initial: 10
14:57:31.777 [debug] Executing fun with value: 10
14:57:31.777 [debug] Evaluating bend block with value: 10
14:57:31.777 [debug] Block returned: %{variant: :leaf}
14:57:31.777 [debug] Fun returned result: %{variant: :leaf}
14:57:31.777 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 9
14:57:31.777 [debug] Executing fun with value: 9
14:57:31.777 [debug] Evaluating bend block with value: 9
14:57:31.777 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 10
14:57:31.777 [debug] Executing fun with value: 10
14:57:31.777 [debug] Evaluating bend block with value: 10
14:57:31.777 [debug] Block returned: %{variant: :leaf}
14:57:31.777 [debug] Fun returned result: %{variant: :leaf}
14:57:31.777 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{variant: :leaf}
14:57:31.777 [debug] Executing bend with initial: 10
14:57:31.777 [debug] Executing fun with value: 10
14:57:31.777 [debug] Evaluating bend block with value: 10
14:57:31.777 [debug] Block returned: %{variant: :leaf}
14:57:31.777 [debug] Fun returned result: %{variant: :leaf}
14:57:31.777 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.777 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 8
14:57:31.777 [debug] Executing fun with value: 8
14:57:31.777 [debug] Evaluating bend block with value: 8
14:57:31.777 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 9
14:57:31.777 [debug] Executing fun with value: 9
14:57:31.777 [debug] Evaluating bend block with value: 9
14:57:31.777 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 10
14:57:31.777 [debug] Executing fun with value: 10
14:57:31.777 [debug] Evaluating bend block with value: 10
14:57:31.777 [debug] Block returned: %{variant: :leaf}
14:57:31.777 [debug] Fun returned result: %{variant: :leaf}
14:57:31.777 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{variant: :leaf}
14:57:31.777 [debug] Executing bend with initial: 10
14:57:31.777 [debug] Executing fun with value: 10
14:57:31.777 [debug] Evaluating bend block with value: 10
14:57:31.777 [debug] Block returned: %{variant: :leaf}
14:57:31.777 [debug] Fun returned result: %{variant: :leaf}
14:57:31.777 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{variant: :leaf}
14:57:31.777 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.777 [debug] Executing bend with initial: 9
14:57:31.777 [debug] Executing fun with value: 9
14:57:31.777 [debug] Evaluating bend block with value: 9
14:57:31.777 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.777 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 10
14:57:31.778 [debug] Executing fun with value: 10
14:57:31.778 [debug] Evaluating bend block with value: 10
14:57:31.778 [debug] Block returned: %{variant: :leaf}
14:57:31.778 [debug] Fun returned result: %{variant: :leaf}
14:57:31.778 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{variant: :leaf}
14:57:31.778 [debug] Executing bend with initial: 10
14:57:31.778 [debug] Executing fun with value: 10
14:57:31.778 [debug] Evaluating bend block with value: 10
14:57:31.778 [debug] Block returned: %{variant: :leaf}
14:57:31.778 [debug] Fun returned result: %{variant: :leaf}
14:57:31.778 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.778 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.778 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 7
14:57:31.778 [debug] Executing fun with value: 7
14:57:31.778 [debug] Evaluating bend block with value: 7
14:57:31.778 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.778 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.778 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 8
14:57:31.778 [debug] Executing fun with value: 8
14:57:31.778 [debug] Evaluating bend block with value: 8
14:57:31.778 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.778 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.778 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 9
14:57:31.778 [debug] Executing fun with value: 9
14:57:31.778 [debug] Evaluating bend block with value: 9
14:57:31.778 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 10
14:57:31.778 [debug] Executing fun with value: 10
14:57:31.778 [debug] Evaluating bend block with value: 10
14:57:31.778 [debug] Block returned: %{variant: :leaf}
14:57:31.778 [debug] Fun returned result: %{variant: :leaf}
14:57:31.778 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{variant: :leaf}
14:57:31.778 [debug] Executing bend with initial: 10
14:57:31.778 [debug] Executing fun with value: 10
14:57:31.778 [debug] Evaluating bend block with value: 10
14:57:31.778 [debug] Block returned: %{variant: :leaf}
14:57:31.778 [debug] Fun returned result: %{variant: :leaf}
14:57:31.778 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 9
14:57:31.778 [debug] Executing fun with value: 9
14:57:31.778 [debug] Evaluating bend block with value: 9
14:57:31.778 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 10
14:57:31.778 [debug] Executing fun with value: 10
14:57:31.778 [debug] Evaluating bend block with value: 10
14:57:31.778 [debug] Block returned: %{variant: :leaf}
14:57:31.778 [debug] Fun returned result: %{variant: :leaf}
14:57:31.778 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{variant: :leaf}
14:57:31.778 [debug] Executing bend with initial: 10
14:57:31.778 [debug] Executing fun with value: 10
14:57:31.778 [debug] Evaluating bend block with value: 10
14:57:31.778 [debug] Block returned: %{variant: :leaf}
14:57:31.778 [debug] Fun returned result: %{variant: :leaf}
14:57:31.778 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{variant: :leaf}
14:57:31.778 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.778 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 8
14:57:31.778 [debug] Executing fun with value: 8
14:57:31.778 [debug] Evaluating bend block with value: 8
14:57:31.778 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.778 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.778 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.778 [debug] Executing bend with initial: 9
14:57:31.778 [debug] Executing fun with value: 9
14:57:31.778 [debug] Evaluating bend block with value: 9
14:57:31.778 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.778 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 10
14:57:31.779 [debug] Executing fun with value: 10
14:57:31.779 [debug] Evaluating bend block with value: 10
14:57:31.779 [debug] Block returned: %{variant: :leaf}
14:57:31.779 [debug] Fun returned result: %{variant: :leaf}
14:57:31.779 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{variant: :leaf}
14:57:31.779 [debug] Executing bend with initial: 10
14:57:31.779 [debug] Executing fun with value: 10
14:57:31.779 [debug] Evaluating bend block with value: 10
14:57:31.779 [debug] Block returned: %{variant: :leaf}
14:57:31.779 [debug] Fun returned result: %{variant: :leaf}
14:57:31.779 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 9
14:57:31.779 [debug] Executing fun with value: 9
14:57:31.779 [debug] Evaluating bend block with value: 9
14:57:31.779 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 10
14:57:31.779 [debug] Executing fun with value: 10
14:57:31.779 [debug] Evaluating bend block with value: 10
14:57:31.779 [debug] Block returned: %{variant: :leaf}
14:57:31.779 [debug] Fun returned result: %{variant: :leaf}
14:57:31.779 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{variant: :leaf}
14:57:31.779 [debug] Executing bend with initial: 10
14:57:31.779 [debug] Executing fun with value: 10
14:57:31.779 [debug] Evaluating bend block with value: 10
14:57:31.779 [debug] Block returned: %{variant: :leaf}
14:57:31.779 [debug] Fun returned result: %{variant: :leaf}
14:57:31.779 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.779 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.779 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.779 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 6
14:57:31.779 [debug] Executing fun with value: 6
14:57:31.779 [debug] Evaluating bend block with value: 6
14:57:31.779 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.779 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.779 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 7
14:57:31.779 [debug] Executing fun with value: 7
14:57:31.779 [debug] Evaluating bend block with value: 7
14:57:31.779 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.779 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.779 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 8
14:57:31.779 [debug] Executing fun with value: 8
14:57:31.779 [debug] Evaluating bend block with value: 8
14:57:31.779 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.779 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.779 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 9
14:57:31.779 [debug] Executing fun with value: 9
14:57:31.779 [debug] Evaluating bend block with value: 9
14:57:31.779 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 10
14:57:31.779 [debug] Executing fun with value: 10
14:57:31.779 [debug] Evaluating bend block with value: 10
14:57:31.779 [debug] Block returned: %{variant: :leaf}
14:57:31.779 [debug] Fun returned result: %{variant: :leaf}
14:57:31.779 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{variant: :leaf}
14:57:31.779 [debug] Executing bend with initial: 10
14:57:31.779 [debug] Executing fun with value: 10
14:57:31.779 [debug] Evaluating bend block with value: 10
14:57:31.779 [debug] Block returned: %{variant: :leaf}
14:57:31.779 [debug] Fun returned result: %{variant: :leaf}
14:57:31.779 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{variant: :leaf}
14:57:31.779 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.779 [debug] Executing bend with initial: 9
14:57:31.779 [debug] Executing fun with value: 9
14:57:31.779 [debug] Evaluating bend block with value: 9
14:57:31.779 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 10
14:57:31.780 [debug] Executing fun with value: 10
14:57:31.780 [debug] Evaluating bend block with value: 10
14:57:31.780 [debug] Block returned: %{variant: :leaf}
14:57:31.780 [debug] Fun returned result: %{variant: :leaf}
14:57:31.780 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{variant: :leaf}
14:57:31.780 [debug] Executing bend with initial: 10
14:57:31.780 [debug] Executing fun with value: 10
14:57:31.780 [debug] Evaluating bend block with value: 10
14:57:31.780 [debug] Block returned: %{variant: :leaf}
14:57:31.780 [debug] Fun returned result: %{variant: :leaf}
14:57:31.780 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.780 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 8
14:57:31.780 [debug] Executing fun with value: 8
14:57:31.780 [debug] Evaluating bend block with value: 8
14:57:31.780 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.780 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.780 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 9
14:57:31.780 [debug] Executing fun with value: 9
14:57:31.780 [debug] Evaluating bend block with value: 9
14:57:31.780 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 10
14:57:31.780 [debug] Executing fun with value: 10
14:57:31.780 [debug] Evaluating bend block with value: 10
14:57:31.780 [debug] Block returned: %{variant: :leaf}
14:57:31.780 [debug] Fun returned result: %{variant: :leaf}
14:57:31.780 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{variant: :leaf}
14:57:31.780 [debug] Executing bend with initial: 10
14:57:31.780 [debug] Executing fun with value: 10
14:57:31.780 [debug] Evaluating bend block with value: 10
14:57:31.780 [debug] Block returned: %{variant: :leaf}
14:57:31.780 [debug] Fun returned result: %{variant: :leaf}
14:57:31.780 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 9
14:57:31.780 [debug] Executing fun with value: 9
14:57:31.780 [debug] Evaluating bend block with value: 9
14:57:31.780 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 10
14:57:31.780 [debug] Executing fun with value: 10
14:57:31.780 [debug] Evaluating bend block with value: 10
14:57:31.780 [debug] Block returned: %{variant: :leaf}
14:57:31.780 [debug] Fun returned result: %{variant: :leaf}
14:57:31.780 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{variant: :leaf}
14:57:31.780 [debug] Executing bend with initial: 10
14:57:31.780 [debug] Executing fun with value: 10
14:57:31.780 [debug] Evaluating bend block with value: 10
14:57:31.780 [debug] Block returned: %{variant: :leaf}
14:57:31.780 [debug] Fun returned result: %{variant: :leaf}
14:57:31.780 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{variant: :leaf}
14:57:31.780 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.780 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.780 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 7
14:57:31.780 [debug] Executing fun with value: 7
14:57:31.780 [debug] Evaluating bend block with value: 7
14:57:31.780 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.780 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.780 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 8
14:57:31.780 [debug] Executing fun with value: 8
14:57:31.780 [debug] Evaluating bend block with value: 8
14:57:31.780 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.780 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.780 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.780 [debug] Executing bend with initial: 9
14:57:31.780 [debug] Executing fun with value: 9
14:57:31.780 [debug] Evaluating bend block with value: 9
14:57:31.780 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.780 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 9
14:57:31.781 [debug] Executing fun with value: 9
14:57:31.781 [debug] Evaluating bend block with value: 9
14:57:31.781 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.781 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 8
14:57:31.781 [debug] Executing fun with value: 8
14:57:31.781 [debug] Evaluating bend block with value: 8
14:57:31.781 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.781 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.781 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 9
14:57:31.781 [debug] Executing fun with value: 9
14:57:31.781 [debug] Evaluating bend block with value: 9
14:57:31.781 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 9
14:57:31.781 [debug] Executing fun with value: 9
14:57:31.781 [debug] Evaluating bend block with value: 9
14:57:31.781 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] Executing bend with initial: 10
14:57:31.781 [debug] Executing fun with value: 10
14:57:31.781 [debug] Evaluating bend block with value: 10
14:57:31.781 [debug] Block returned: %{variant: :leaf}
14:57:31.781 [debug] Fun returned result: %{variant: :leaf}
14:57:31.781 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{variant: :leaf}
14:57:31.781 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.781 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.781 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.782 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.782 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 5
14:57:31.782 [debug] Executing fun with value: 5
14:57:31.782 [debug] Evaluating bend block with value: 5
14:57:31.782 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.782 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.782 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 6
14:57:31.782 [debug] Executing fun with value: 6
14:57:31.782 [debug] Evaluating bend block with value: 6
14:57:31.782 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.782 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.782 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 7
14:57:31.782 [debug] Executing fun with value: 7
14:57:31.782 [debug] Evaluating bend block with value: 7
14:57:31.782 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.782 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.782 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 8
14:57:31.782 [debug] Executing fun with value: 8
14:57:31.782 [debug] Evaluating bend block with value: 8
14:57:31.782 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.782 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.782 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 9
14:57:31.782 [debug] Executing fun with value: 9
14:57:31.782 [debug] Evaluating bend block with value: 9
14:57:31.782 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.782 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.782 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 10
14:57:31.782 [debug] Executing fun with value: 10
14:57:31.782 [debug] Evaluating bend block with value: 10
14:57:31.782 [debug] Block returned: %{variant: :leaf}
14:57:31.782 [debug] Fun returned result: %{variant: :leaf}
14:57:31.782 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.782 [debug] do_bend final result: %{variant: :leaf}
14:57:31.782 [debug] Executing bend with initial: 10
14:57:31.782 [debug] Executing fun with value: 10
14:57:31.782 [debug] Evaluating bend block with value: 10
14:57:31.782 [debug] Block returned: %{variant: :leaf}
14:57:31.782 [debug] Fun returned result: %{variant: :leaf}
14:57:31.782 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.782 [debug] do_bend final result: %{variant: :leaf}
14:57:31.782 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 9
14:57:31.782 [debug] Executing fun with value: 9
14:57:31.782 [debug] Evaluating bend block with value: 9
14:57:31.782 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.782 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.782 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.782 [debug] Executing bend with initial: 10
14:57:31.782 [debug] Executing fun with value: 10
14:57:31.782 [debug] Evaluating bend block with value: 10
14:57:31.782 [debug] Block returned: %{variant: :leaf}
14:57:31.782 [debug] Fun returned result: %{variant: :leaf}
14:57:31.782 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.782 [debug] do_bend final result: %{variant: :leaf}
14:57:31.782 [debug] Executing bend with initial: 10
14:57:31.782 [debug] Executing fun with value: 10
14:57:31.782 [debug] Evaluating bend block with value: 10
14:57:31.782 [debug] Block returned: %{variant: :leaf}
14:57:31.782 [debug] Fun returned result: %{variant: :leaf}
14:57:31.783 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.783 [debug] do_bend final result: %{variant: :leaf}
14:57:31.783 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.783 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.783 [debug] Executing bend with initial: 8
14:57:31.783 [debug] Executing fun with value: 8
14:57:31.783 [debug] Evaluating bend block with value: 8
14:57:31.783 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.783 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.783 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.783 [debug] Executing bend with initial: 9
14:57:31.783 [debug] Executing fun with value: 9
14:57:31.783 [debug] Evaluating bend block with value: 9
14:57:31.783 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.783 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.783 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.783 [debug] Executing bend with initial: 10
14:57:31.783 [debug] Executing fun with value: 10
14:57:31.783 [debug] Evaluating bend block with value: 10
14:57:31.783 [debug] Block returned: %{variant: :leaf}
14:57:31.783 [debug] Fun returned result: %{variant: :leaf}
14:57:31.783 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.783 [debug] do_bend final result: %{variant: :leaf}
14:57:31.783 [debug] Executing bend with initial: 10
14:57:31.783 [debug] Executing fun with value: 10
14:57:31.783 [debug] Evaluating bend block with value: 10
14:57:31.783 [debug] Block returned: %{variant: :leaf}
14:57:31.783 [debug] Fun returned result: %{variant: :leaf}
14:57:31.783 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.783 [debug] do_bend final result: %{variant: :leaf}
14:57:31.783 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.784 [debug] Executing bend with initial: 9
14:57:31.784 [debug] Executing fun with value: 9
14:57:31.785 [debug] Evaluating bend block with value: 9
14:57:31.785 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Executing bend with initial: 10
14:57:31.785 [debug] Executing fun with value: 10
14:57:31.785 [debug] Evaluating bend block with value: 10
14:57:31.785 [debug] Block returned: %{variant: :leaf}
14:57:31.785 [debug] Fun returned result: %{variant: :leaf}
14:57:31.785 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.785 [debug] do_bend final result: %{variant: :leaf}
14:57:31.785 [debug] Executing bend with initial: 10
14:57:31.785 [debug] Executing fun with value: 10
14:57:31.785 [debug] Evaluating bend block with value: 10
14:57:31.785 [debug] Block returned: %{variant: :leaf}
14:57:31.785 [debug] Fun returned result: %{variant: :leaf}
14:57:31.785 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.785 [debug] do_bend final result: %{variant: :leaf}
14:57:31.785 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.785 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.785 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.785 [debug] Executing bend with initial: 7
14:57:31.785 [debug] Executing fun with value: 7
14:57:31.785 [debug] Evaluating bend block with value: 7
14:57:31.785 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.785 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.785 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.785 [debug] Executing bend with initial: 8
14:57:31.785 [debug] Executing fun with value: 8
14:57:31.785 [debug] Evaluating bend block with value: 8
14:57:31.785 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.785 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.785 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.785 [debug] Executing bend with initial: 9
14:57:31.785 [debug] Executing fun with value: 9
14:57:31.785 [debug] Evaluating bend block with value: 9
14:57:31.785 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Executing bend with initial: 10
14:57:31.785 [debug] Executing fun with value: 10
14:57:31.785 [debug] Evaluating bend block with value: 10
14:57:31.785 [debug] Block returned: %{variant: :leaf}
14:57:31.785 [debug] Fun returned result: %{variant: :leaf}
14:57:31.785 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.785 [debug] do_bend final result: %{variant: :leaf}
14:57:31.785 [debug] Executing bend with initial: 10
14:57:31.785 [debug] Executing fun with value: 10
14:57:31.785 [debug] Evaluating bend block with value: 10
14:57:31.785 [debug] Block returned: %{variant: :leaf}
14:57:31.785 [debug] Fun returned result: %{variant: :leaf}
14:57:31.785 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.785 [debug] do_bend final result: %{variant: :leaf}
14:57:31.785 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.785 [debug] Executing bend with initial: 9
14:57:31.785 [debug] Executing fun with value: 9
14:57:31.785 [debug] Evaluating bend block with value: 9
14:57:31.785 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.785 [debug] Executing bend with initial: 10
14:57:31.785 [debug] Executing fun with value: 10
14:57:31.785 [debug] Evaluating bend block with value: 10
14:57:31.785 [debug] Block returned: %{variant: :leaf}
14:57:31.785 [debug] Fun returned result: %{variant: :leaf}
14:57:31.785 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.785 [debug] do_bend final result: %{variant: :leaf}
14:57:31.785 [debug] Executing bend with initial: 10
14:57:31.785 [debug] Executing fun with value: 10
14:57:31.785 [debug] Evaluating bend block with value: 10
14:57:31.785 [debug] Block returned: %{variant: :leaf}
14:57:31.786 [debug] Fun returned result: %{variant: :leaf}
14:57:31.786 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.786 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 8
14:57:31.786 [debug] Executing fun with value: 8
14:57:31.786 [debug] Evaluating bend block with value: 8
14:57:31.786 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.786 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.786 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 9
14:57:31.786 [debug] Executing fun with value: 9
14:57:31.786 [debug] Evaluating bend block with value: 9
14:57:31.786 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.786 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.786 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 10
14:57:31.786 [debug] Executing fun with value: 10
14:57:31.786 [debug] Evaluating bend block with value: 10
14:57:31.786 [debug] Block returned: %{variant: :leaf}
14:57:31.786 [debug] Fun returned result: %{variant: :leaf}
14:57:31.786 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{variant: :leaf}
14:57:31.786 [debug] Executing bend with initial: 10
14:57:31.786 [debug] Executing fun with value: 10
14:57:31.786 [debug] Evaluating bend block with value: 10
14:57:31.786 [debug] Block returned: %{variant: :leaf}
14:57:31.786 [debug] Fun returned result: %{variant: :leaf}
14:57:31.786 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 9
14:57:31.786 [debug] Executing fun with value: 9
14:57:31.786 [debug] Evaluating bend block with value: 9
14:57:31.786 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.786 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.786 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 10
14:57:31.786 [debug] Executing fun with value: 10
14:57:31.786 [debug] Evaluating bend block with value: 10
14:57:31.786 [debug] Block returned: %{variant: :leaf}
14:57:31.786 [debug] Fun returned result: %{variant: :leaf}
14:57:31.786 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{variant: :leaf}
14:57:31.786 [debug] Executing bend with initial: 10
14:57:31.786 [debug] Executing fun with value: 10
14:57:31.786 [debug] Evaluating bend block with value: 10
14:57:31.786 [debug] Block returned: %{variant: :leaf}
14:57:31.786 [debug] Fun returned result: %{variant: :leaf}
14:57:31.786 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{variant: :leaf}
14:57:31.786 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.786 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.786 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.786 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 6
14:57:31.786 [debug] Executing fun with value: 6
14:57:31.786 [debug] Evaluating bend block with value: 6
14:57:31.786 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.786 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.786 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 7
14:57:31.786 [debug] Executing fun with value: 7
14:57:31.786 [debug] Evaluating bend block with value: 7
14:57:31.786 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.786 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.786 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.786 [debug] Executing bend with initial: 8
14:57:31.786 [debug] Executing fun with value: 8
14:57:31.786 [debug] Evaluating bend block with value: 8
14:57:31.786 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.786 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.787 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 9
14:57:31.787 [debug] Executing fun with value: 9
14:57:31.787 [debug] Evaluating bend block with value: 9
14:57:31.787 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 9
14:57:31.787 [debug] Executing fun with value: 9
14:57:31.787 [debug] Evaluating bend block with value: 9
14:57:31.787 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.787 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 8
14:57:31.787 [debug] Executing fun with value: 8
14:57:31.787 [debug] Evaluating bend block with value: 8
14:57:31.787 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.787 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.787 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 9
14:57:31.787 [debug] Executing fun with value: 9
14:57:31.787 [debug] Evaluating bend block with value: 9
14:57:31.787 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 9
14:57:31.787 [debug] Executing fun with value: 9
14:57:31.787 [debug] Evaluating bend block with value: 9
14:57:31.787 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] Executing bend with initial: 10
14:57:31.787 [debug] Executing fun with value: 10
14:57:31.787 [debug] Evaluating bend block with value: 10
14:57:31.787 [debug] Block returned: %{variant: :leaf}
14:57:31.787 [debug] Fun returned result: %{variant: :leaf}
14:57:31.787 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{variant: :leaf}
14:57:31.787 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.787 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.787 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 7
14:57:31.788 [debug] Executing fun with value: 7
14:57:31.788 [debug] Evaluating bend block with value: 7
14:57:31.788 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.788 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.788 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 8
14:57:31.788 [debug] Executing fun with value: 8
14:57:31.788 [debug] Evaluating bend block with value: 8
14:57:31.788 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.788 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.788 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 9
14:57:31.788 [debug] Executing fun with value: 9
14:57:31.788 [debug] Evaluating bend block with value: 9
14:57:31.788 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 9
14:57:31.788 [debug] Executing fun with value: 9
14:57:31.788 [debug] Evaluating bend block with value: 9
14:57:31.788 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.788 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 8
14:57:31.788 [debug] Executing fun with value: 8
14:57:31.788 [debug] Evaluating bend block with value: 8
14:57:31.788 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.788 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.788 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 9
14:57:31.788 [debug] Executing fun with value: 9
14:57:31.788 [debug] Evaluating bend block with value: 9
14:57:31.788 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 9
14:57:31.788 [debug] Executing fun with value: 9
14:57:31.788 [debug] Evaluating bend block with value: 9
14:57:31.788 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] Executing bend with initial: 10
14:57:31.788 [debug] Executing fun with value: 10
14:57:31.788 [debug] Evaluating bend block with value: 10
14:57:31.788 [debug] Block returned: %{variant: :leaf}
14:57:31.788 [debug] Fun returned result: %{variant: :leaf}
14:57:31.788 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{variant: :leaf}
14:57:31.788 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.788 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.788 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.788 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.789 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.789 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.789 [debug] Executing bend with initial: 4
14:57:31.789 [debug] Executing fun with value: 4
14:57:31.789 [debug] Evaluating bend block with value: 4
14:57:31.789 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.789 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.789 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.789 [debug] Executing bend with initial: 5
14:57:31.789 [debug] Executing fun with value: 5
14:57:31.789 [debug] Evaluating bend block with value: 5
14:57:31.789 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.789 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.789 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.789 [debug] Executing bend with initial: 6
14:57:31.789 [debug] Executing fun with value: 6
14:57:31.789 [debug] Evaluating bend block with value: 6
14:57:31.789 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.789 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.789 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.789 [debug] Executing bend with initial: 7
14:57:31.789 [debug] Executing fun with value: 7
14:57:31.789 [debug] Evaluating bend block with value: 7
14:57:31.789 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.789 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.789 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.789 [debug] Executing bend with initial: 8
14:57:31.789 [debug] Executing fun with value: 8
14:57:31.789 [debug] Evaluating bend block with value: 8
14:57:31.791 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.791 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.791 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.791 [debug] Executing bend with initial: 9
14:57:31.791 [debug] Executing fun with value: 9
14:57:31.791 [debug] Evaluating bend block with value: 9
14:57:31.791 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.791 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.791 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.791 [debug] Executing bend with initial: 10
14:57:31.791 [debug] Executing fun with value: 10
14:57:31.791 [debug] Evaluating bend block with value: 10
14:57:31.791 [debug] Block returned: %{variant: :leaf}
14:57:31.791 [debug] Fun returned result: %{variant: :leaf}
14:57:31.791 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.791 [debug] do_bend final result: %{variant: :leaf}
14:57:31.791 [debug] Executing bend with initial: 10
14:57:31.791 [debug] Executing fun with value: 10
14:57:31.791 [debug] Evaluating bend block with value: 10
14:57:31.791 [debug] Block returned: %{variant: :leaf}
14:57:31.791 [debug] Fun returned result: %{variant: :leaf}
14:57:31.791 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.791 [debug] do_bend final result: %{variant: :leaf}
14:57:31.791 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.791 [debug] Executing bend with initial: 9
14:57:31.791 [debug] Executing fun with value: 9
14:57:31.791 [debug] Evaluating bend block with value: 9
14:57:31.791 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.791 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.791 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.791 [debug] Executing bend with initial: 10
14:57:31.791 [debug] Executing fun with value: 10
14:57:31.791 [debug] Evaluating bend block with value: 10
14:57:31.791 [debug] Block returned: %{variant: :leaf}
14:57:31.791 [debug] Fun returned result: %{variant: :leaf}
14:57:31.791 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.791 [debug] do_bend final result: %{variant: :leaf}
14:57:31.791 [debug] Executing bend with initial: 10
14:57:31.791 [debug] Executing fun with value: 10
14:57:31.791 [debug] Evaluating bend block with value: 10
14:57:31.791 [debug] Block returned: %{variant: :leaf}
14:57:31.791 [debug] Fun returned result: %{variant: :leaf}
14:57:31.791 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.791 [debug] do_bend final result: %{variant: :leaf}
14:57:31.791 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.791 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.791 [debug] Executing bend with initial: 8
14:57:31.791 [debug] Executing fun with value: 8
14:57:31.791 [debug] Evaluating bend block with value: 8
14:57:31.791 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.791 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.791 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.791 [debug] Executing bend with initial: 9
14:57:31.792 [debug] Executing fun with value: 9
14:57:31.792 [debug] Evaluating bend block with value: 9
14:57:31.792 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.792 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.792 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.792 [debug] Executing bend with initial: 10
14:57:31.792 [debug] Executing fun with value: 10
14:57:31.792 [debug] Evaluating bend block with value: 10
14:57:31.792 [debug] Block returned: %{variant: :leaf}
14:57:31.792 [debug] Fun returned result: %{variant: :leaf}
14:57:31.792 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.792 [debug] do_bend final result: %{variant: :leaf}
14:57:31.792 [debug] Executing bend with initial: 10
14:57:31.792 [debug] Executing fun with value: 10
14:57:31.792 [debug] Evaluating bend block with value: 10
14:57:31.792 [debug] Block returned: %{variant: :leaf}
14:57:31.792 [debug] Fun returned result: %{variant: :leaf}
14:57:31.792 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.792 [debug] do_bend final result: %{variant: :leaf}
14:57:31.792 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.792 [debug] Executing bend with initial: 9
14:57:31.792 [debug] Executing fun with value: 9
14:57:31.792 [debug] Evaluating bend block with value: 9
14:57:31.792 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.792 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.792 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.792 [debug] Executing bend with initial: 10
14:57:31.792 [debug] Executing fun with value: 10
14:57:31.792 [debug] Evaluating bend block with value: 10
14:57:31.792 [debug] Block returned: %{variant: :leaf}
14:57:31.792 [debug] Fun returned result: %{variant: :leaf}
14:57:31.792 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.792 [debug] do_bend final result: %{variant: :leaf}
14:57:31.792 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.793 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.793 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 7
14:57:31.793 [debug] Executing fun with value: 7
14:57:31.793 [debug] Evaluating bend block with value: 7
14:57:31.793 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.793 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.793 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 8
14:57:31.793 [debug] Executing fun with value: 8
14:57:31.793 [debug] Evaluating bend block with value: 8
14:57:31.793 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.793 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.793 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 9
14:57:31.793 [debug] Executing fun with value: 9
14:57:31.793 [debug] Evaluating bend block with value: 9
14:57:31.793 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.793 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 9
14:57:31.793 [debug] Executing fun with value: 9
14:57:31.793 [debug] Evaluating bend block with value: 9
14:57:31.793 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.793 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.793 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 8
14:57:31.793 [debug] Executing fun with value: 8
14:57:31.793 [debug] Evaluating bend block with value: 8
14:57:31.793 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.793 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.793 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 9
14:57:31.793 [debug] Executing fun with value: 9
14:57:31.793 [debug] Evaluating bend block with value: 9
14:57:31.793 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.793 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 9
14:57:31.793 [debug] Executing fun with value: 9
14:57:31.793 [debug] Evaluating bend block with value: 9
14:57:31.793 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.793 [debug] Executing bend with initial: 10
14:57:31.793 [debug] Executing fun with value: 10
14:57:31.793 [debug] Evaluating bend block with value: 10
14:57:31.793 [debug] Block returned: %{variant: :leaf}
14:57:31.793 [debug] Fun returned result: %{variant: :leaf}
14:57:31.793 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.793 [debug] do_bend final result: %{variant: :leaf}
14:57:31.794 [debug] Executing bend with initial: 10
14:57:31.794 [debug] Executing fun with value: 10
14:57:31.794 [debug] Evaluating bend block with value: 10
14:57:31.794 [debug] Block returned: %{variant: :leaf}
14:57:31.794 [debug] Fun returned result: %{variant: :leaf}
14:57:31.794 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.794 [debug] do_bend final result: %{variant: :leaf}
14:57:31.798 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.798 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.798 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.798 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.798 [debug] Executing bend with initial: 6
14:57:31.798 [debug] Executing fun with value: 6
14:57:31.798 [debug] Evaluating bend block with value: 6
14:57:31.798 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.798 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.798 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.798 [debug] Executing bend with initial: 7
14:57:31.798 [debug] Executing fun with value: 7
14:57:31.798 [debug] Evaluating bend block with value: 7
14:57:31.798 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.798 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.798 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.798 [debug] Executing bend with initial: 8
14:57:31.798 [debug] Executing fun with value: 8
14:57:31.798 [debug] Evaluating bend block with value: 8
14:57:31.798 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.798 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.798 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.798 [debug] Executing bend with initial: 9
14:57:31.798 [debug] Executing fun with value: 9
14:57:31.798 [debug] Evaluating bend block with value: 9
14:57:31.798 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.798 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.798 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.798 [debug] Executing bend with initial: 10
14:57:31.798 [debug] Executing fun with value: 10
14:57:31.798 [debug] Evaluating bend block with value: 10
14:57:31.798 [debug] Block returned: %{variant: :leaf}
14:57:31.798 [debug] Fun returned result: %{variant: :leaf}
14:57:31.798 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.798 [debug] do_bend final result: %{variant: :leaf}
14:57:31.798 [debug] Executing bend with initial: 10
14:57:31.798 [debug] Executing fun with value: 10
14:57:31.798 [debug] Evaluating bend block with value: 10
14:57:31.798 [debug] Block returned: %{variant: :leaf}
14:57:31.798 [debug] Fun returned result: %{variant: :leaf}
14:57:31.798 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.798 [debug] do_bend final result: %{variant: :leaf}
14:57:31.798 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.798 [debug] Executing bend with initial: 9
14:57:31.798 [debug] Executing fun with value: 9
14:57:31.798 [debug] Evaluating bend block with value: 9
14:57:31.798 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.798 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.798 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.798 [debug] Executing bend with initial: 10
14:57:31.798 [debug] Executing fun with value: 10
14:57:31.798 [debug] Evaluating bend block with value: 10
14:57:31.798 [debug] Block returned: %{variant: :leaf}
14:57:31.798 [debug] Fun returned result: %{variant: :leaf}
14:57:31.798 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.798 [debug] do_bend final result: %{variant: :leaf}
14:57:31.798 [debug] Executing bend with initial: 10
14:57:31.798 [debug] Executing fun with value: 10
14:57:31.798 [debug] Evaluating bend block with value: 10
14:57:31.798 [debug] Block returned: %{variant: :leaf}
14:57:31.798 [debug] Fun returned result: %{variant: :leaf}
14:57:31.798 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.799 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.799 [debug] Executing bend with initial: 8
14:57:31.799 [debug] Executing fun with value: 8
14:57:31.799 [debug] Evaluating bend block with value: 8
14:57:31.799 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.799 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.799 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.799 [debug] Executing bend with initial: 9
14:57:31.799 [debug] Executing fun with value: 9
14:57:31.799 [debug] Evaluating bend block with value: 9
14:57:31.799 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.799 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.799 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.799 [debug] Executing bend with initial: 10
14:57:31.799 [debug] Executing fun with value: 10
14:57:31.799 [debug] Evaluating bend block with value: 10
14:57:31.799 [debug] Block returned: %{variant: :leaf}
14:57:31.799 [debug] Fun returned result: %{variant: :leaf}
14:57:31.799 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{variant: :leaf}
14:57:31.799 [debug] Executing bend with initial: 10
14:57:31.799 [debug] Executing fun with value: 10
14:57:31.799 [debug] Evaluating bend block with value: 10
14:57:31.799 [debug] Block returned: %{variant: :leaf}
14:57:31.799 [debug] Fun returned result: %{variant: :leaf}
14:57:31.799 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.799 [debug] Executing bend with initial: 9
14:57:31.799 [debug] Executing fun with value: 9
14:57:31.799 [debug] Evaluating bend block with value: 9
14:57:31.799 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.799 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.799 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.799 [debug] Executing bend with initial: 10
14:57:31.799 [debug] Executing fun with value: 10
14:57:31.799 [debug] Evaluating bend block with value: 10
14:57:31.799 [debug] Block returned: %{variant: :leaf}
14:57:31.799 [debug] Fun returned result: %{variant: :leaf}
14:57:31.799 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{variant: :leaf}
14:57:31.799 [debug] Executing bend with initial: 10
14:57:31.799 [debug] Executing fun with value: 10
14:57:31.799 [debug] Evaluating bend block with value: 10
14:57:31.799 [debug] Block returned: %{variant: :leaf}
14:57:31.799 [debug] Fun returned result: %{variant: :leaf}
14:57:31.799 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{variant: :leaf}
14:57:31.799 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.799 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.799 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.799 [debug] Executing bend with initial: 7
14:57:31.799 [debug] Executing fun with value: 7
14:57:31.799 [debug] Evaluating bend block with value: 7
14:57:31.799 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.799 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.799 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.799 [debug] Executing bend with initial: 8
14:57:31.799 [debug] Executing fun with value: 8
14:57:31.799 [debug] Evaluating bend block with value: 8
14:57:31.799 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.799 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.800 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.800 [debug] Executing bend with initial: 9
14:57:31.800 [debug] Executing fun with value: 9
14:57:31.800 [debug] Evaluating bend block with value: 9
14:57:31.800 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.800 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.800 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.800 [debug] Executing bend with initial: 10
14:57:31.800 [debug] Executing fun with value: 10
14:57:31.800 [debug] Evaluating bend block with value: 10
14:57:31.800 [debug] Block returned: %{variant: :leaf}
14:57:31.800 [debug] Fun returned result: %{variant: :leaf}
14:57:31.800 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.800 [debug] do_bend final result: %{variant: :leaf}
14:57:31.800 [debug] Executing bend with initial: 10
14:57:31.800 [debug] Executing fun with value: 10
14:57:31.800 [debug] Evaluating bend block with value: 10
14:57:31.800 [debug] Block returned: %{variant: :leaf}
14:57:31.800 [debug] Fun returned result: %{variant: :leaf}
14:57:31.800 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.800 [debug] do_bend final result: %{variant: :leaf}
14:57:31.800 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.800 [debug] Executing bend with initial: 9
14:57:31.800 [debug] Executing fun with value: 9
14:57:31.800 [debug] Evaluating bend block with value: 9
14:57:31.800 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.800 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.800 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.800 [debug] Executing bend with initial: 10
14:57:31.800 [debug] Executing fun with value: 10
14:57:31.800 [debug] Evaluating bend block with value: 10
14:57:31.800 [debug] Block returned: %{variant: :leaf}
14:57:31.800 [debug] Fun returned result: %{variant: :leaf}
14:57:31.800 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.800 [debug] do_bend final result: %{variant: :leaf}
14:57:31.800 [debug] Executing bend with initial: 10
14:57:31.800 [debug] Executing fun with value: 10
14:57:31.800 [debug] Evaluating bend block with value: 10
14:57:31.800 [debug] Block returned: %{variant: :leaf}
14:57:31.800 [debug] Fun returned result: %{variant: :leaf}
14:57:31.800 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.800 [debug] do_bend final result: %{variant: :leaf}
14:57:31.800 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.800 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.800 [debug] Executing bend with initial: 8
14:57:31.800 [debug] Executing fun with value: 8
14:57:31.800 [debug] Evaluating bend block with value: 8
14:57:31.800 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.800 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.800 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.800 [debug] Executing bend with initial: 9
14:57:31.800 [debug] Executing fun with value: 9
14:57:31.800 [debug] Evaluating bend block with value: 9
14:57:31.800 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.800 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.801 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.801 [debug] Executing bend with initial: 10
14:57:31.801 [debug] Executing fun with value: 10
14:57:31.801 [debug] Evaluating bend block with value: 10
14:57:31.801 [debug] Block returned: %{variant: :leaf}
14:57:31.801 [debug] Fun returned result: %{variant: :leaf}
14:57:31.801 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.801 [debug] do_bend final result: %{variant: :leaf}
14:57:31.801 [debug] Executing bend with initial: 10
14:57:31.801 [debug] Executing fun with value: 10
14:57:31.801 [debug] Evaluating bend block with value: 10
14:57:31.801 [debug] Block returned: %{variant: :leaf}
14:57:31.801 [debug] Fun returned result: %{variant: :leaf}
14:57:31.801 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.801 [debug] do_bend final result: %{variant: :leaf}
14:57:31.801 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.801 [debug] Executing bend with initial: 9
14:57:31.801 [debug] Executing fun with value: 9
14:57:31.801 [debug] Evaluating bend block with value: 9
14:57:31.801 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.801 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.801 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.801 [debug] Executing bend with initial: 10
14:57:31.801 [debug] Executing fun with value: 10
14:57:31.801 [debug] Evaluating bend block with value: 10
14:57:31.801 [debug] Block returned: %{variant: :leaf}
14:57:31.801 [debug] Fun returned result: %{variant: :leaf}
14:57:31.801 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.801 [debug] do_bend final result: %{variant: :leaf}
14:57:31.801 [debug] Executing bend with initial: 10
14:57:31.801 [debug] Executing fun with value: 10
14:57:31.801 [debug] Evaluating bend block with value: 10
14:57:31.801 [debug] Block returned: %{variant: :leaf}
14:57:31.801 [debug] Fun returned result: %{variant: :leaf}
14:57:31.801 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.801 [debug] do_bend final result: %{variant: :leaf}
14:57:31.801 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.801 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.801 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.801 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.801 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.801 [debug] Executing bend with initial: 5
14:57:31.801 [debug] Executing fun with value: 5
14:57:31.801 [debug] Evaluating bend block with value: 5
14:57:31.801 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.801 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.801 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.801 [debug] Executing bend with initial: 6
14:57:31.801 [debug] Executing fun with value: 6
14:57:31.801 [debug] Evaluating bend block with value: 6
14:57:31.801 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.801 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.801 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.801 [debug] Executing bend with initial: 7
14:57:31.801 [debug] Executing fun with value: 7
14:57:31.801 [debug] Evaluating bend block with value: 7
14:57:31.801 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.801 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.801 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.801 [debug] Executing bend with initial: 8
14:57:31.801 [debug] Executing fun with value: 8
14:57:31.802 [debug] Evaluating bend block with value: 8
14:57:31.802 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.802 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.802 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 9
14:57:31.802 [debug] Executing fun with value: 9
14:57:31.802 [debug] Evaluating bend block with value: 9
14:57:31.802 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 10
14:57:31.802 [debug] Executing fun with value: 10
14:57:31.802 [debug] Evaluating bend block with value: 10
14:57:31.802 [debug] Block returned: %{variant: :leaf}
14:57:31.802 [debug] Fun returned result: %{variant: :leaf}
14:57:31.802 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{variant: :leaf}
14:57:31.802 [debug] Executing bend with initial: 10
14:57:31.802 [debug] Executing fun with value: 10
14:57:31.802 [debug] Evaluating bend block with value: 10
14:57:31.802 [debug] Block returned: %{variant: :leaf}
14:57:31.802 [debug] Fun returned result: %{variant: :leaf}
14:57:31.802 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 9
14:57:31.802 [debug] Executing fun with value: 9
14:57:31.802 [debug] Evaluating bend block with value: 9
14:57:31.802 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 10
14:57:31.802 [debug] Executing fun with value: 10
14:57:31.802 [debug] Evaluating bend block with value: 10
14:57:31.802 [debug] Block returned: %{variant: :leaf}
14:57:31.802 [debug] Fun returned result: %{variant: :leaf}
14:57:31.802 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{variant: :leaf}
14:57:31.802 [debug] Executing bend with initial: 10
14:57:31.802 [debug] Executing fun with value: 10
14:57:31.802 [debug] Evaluating bend block with value: 10
14:57:31.802 [debug] Block returned: %{variant: :leaf}
14:57:31.802 [debug] Fun returned result: %{variant: :leaf}
14:57:31.802 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.802 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 8
14:57:31.802 [debug] Executing fun with value: 8
14:57:31.802 [debug] Evaluating bend block with value: 8
14:57:31.802 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.802 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.802 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 9
14:57:31.802 [debug] Executing fun with value: 9
14:57:31.802 [debug] Evaluating bend block with value: 9
14:57:31.802 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 10
14:57:31.802 [debug] Executing fun with value: 10
14:57:31.802 [debug] Evaluating bend block with value: 10
14:57:31.802 [debug] Block returned: %{variant: :leaf}
14:57:31.802 [debug] Fun returned result: %{variant: :leaf}
14:57:31.802 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{variant: :leaf}
14:57:31.802 [debug] Executing bend with initial: 10
14:57:31.802 [debug] Executing fun with value: 10
14:57:31.802 [debug] Evaluating bend block with value: 10
14:57:31.802 [debug] Block returned: %{variant: :leaf}
14:57:31.802 [debug] Fun returned result: %{variant: :leaf}
14:57:31.802 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{variant: :leaf}
14:57:31.802 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 9
14:57:31.802 [debug] Executing fun with value: 9
14:57:31.802 [debug] Evaluating bend block with value: 9
14:57:31.802 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.802 [debug] Executing bend with initial: 10
14:57:31.802 [debug] Executing fun with value: 10
14:57:31.802 [debug] Evaluating bend block with value: 10
14:57:31.803 [debug] Block returned: %{variant: :leaf}
14:57:31.803 [debug] Fun returned result: %{variant: :leaf}
14:57:31.803 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{variant: :leaf}
14:57:31.803 [debug] Executing bend with initial: 10
14:57:31.803 [debug] Executing fun with value: 10
14:57:31.803 [debug] Evaluating bend block with value: 10
14:57:31.803 [debug] Block returned: %{variant: :leaf}
14:57:31.803 [debug] Fun returned result: %{variant: :leaf}
14:57:31.803 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.803 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.803 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.803 [debug] Executing bend with initial: 7
14:57:31.803 [debug] Executing fun with value: 7
14:57:31.803 [debug] Evaluating bend block with value: 7
14:57:31.803 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.803 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.803 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.803 [debug] Executing bend with initial: 8
14:57:31.803 [debug] Executing fun with value: 8
14:57:31.803 [debug] Evaluating bend block with value: 8
14:57:31.803 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.803 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.803 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.803 [debug] Executing bend with initial: 9
14:57:31.803 [debug] Executing fun with value: 9
14:57:31.803 [debug] Evaluating bend block with value: 9
14:57:31.803 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.803 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.803 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.803 [debug] Executing bend with initial: 10
14:57:31.803 [debug] Executing fun with value: 10
14:57:31.803 [debug] Evaluating bend block with value: 10
14:57:31.803 [debug] Block returned: %{variant: :leaf}
14:57:31.803 [debug] Fun returned result: %{variant: :leaf}
14:57:31.803 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{variant: :leaf}
14:57:31.803 [debug] Executing bend with initial: 10
14:57:31.803 [debug] Executing fun with value: 10
14:57:31.803 [debug] Evaluating bend block with value: 10
14:57:31.803 [debug] Block returned: %{variant: :leaf}
14:57:31.803 [debug] Fun returned result: %{variant: :leaf}
14:57:31.803 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.803 [debug] Executing bend with initial: 9
14:57:31.803 [debug] Executing fun with value: 9
14:57:31.803 [debug] Evaluating bend block with value: 9
14:57:31.803 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.803 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.803 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.803 [debug] Executing bend with initial: 10
14:57:31.803 [debug] Executing fun with value: 10
14:57:31.803 [debug] Evaluating bend block with value: 10
14:57:31.803 [debug] Block returned: %{variant: :leaf}
14:57:31.803 [debug] Fun returned result: %{variant: :leaf}
14:57:31.803 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{variant: :leaf}
14:57:31.803 [debug] Executing bend with initial: 10
14:57:31.803 [debug] Executing fun with value: 10
14:57:31.803 [debug] Evaluating bend block with value: 10
14:57:31.803 [debug] Block returned: %{variant: :leaf}
14:57:31.803 [debug] Fun returned result: %{variant: :leaf}
14:57:31.803 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{variant: :leaf}
14:57:31.803 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.803 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.803 [debug] Executing bend with initial: 8
14:57:31.803 [debug] Executing fun with value: 8
14:57:31.803 [debug] Evaluating bend block with value: 8
14:57:31.803 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.803 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.803 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 9
14:57:31.804 [debug] Executing fun with value: 9
14:57:31.804 [debug] Evaluating bend block with value: 9
14:57:31.804 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 9
14:57:31.804 [debug] Executing fun with value: 9
14:57:31.804 [debug] Evaluating bend block with value: 9
14:57:31.804 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.804 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.804 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.804 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 6
14:57:31.804 [debug] Executing fun with value: 6
14:57:31.804 [debug] Evaluating bend block with value: 6
14:57:31.804 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.804 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.804 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 7
14:57:31.804 [debug] Executing fun with value: 7
14:57:31.804 [debug] Evaluating bend block with value: 7
14:57:31.804 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.804 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.804 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 8
14:57:31.804 [debug] Executing fun with value: 8
14:57:31.804 [debug] Evaluating bend block with value: 8
14:57:31.804 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.804 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.804 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 9
14:57:31.804 [debug] Executing fun with value: 9
14:57:31.804 [debug] Evaluating bend block with value: 9
14:57:31.804 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 9
14:57:31.804 [debug] Executing fun with value: 9
14:57:31.804 [debug] Evaluating bend block with value: 9
14:57:31.804 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] Executing bend with initial: 10
14:57:31.804 [debug] Executing fun with value: 10
14:57:31.804 [debug] Evaluating bend block with value: 10
14:57:31.804 [debug] Block returned: %{variant: :leaf}
14:57:31.804 [debug] Fun returned result: %{variant: :leaf}
14:57:31.804 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{variant: :leaf}
14:57:31.804 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.805 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 8
14:57:31.805 [debug] Executing fun with value: 8
14:57:31.805 [debug] Evaluating bend block with value: 8
14:57:31.805 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.805 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.805 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 9
14:57:31.805 [debug] Executing fun with value: 9
14:57:31.805 [debug] Evaluating bend block with value: 9
14:57:31.805 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 10
14:57:31.805 [debug] Executing fun with value: 10
14:57:31.805 [debug] Evaluating bend block with value: 10
14:57:31.805 [debug] Block returned: %{variant: :leaf}
14:57:31.805 [debug] Fun returned result: %{variant: :leaf}
14:57:31.805 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{variant: :leaf}
14:57:31.805 [debug] Executing bend with initial: 10
14:57:31.805 [debug] Executing fun with value: 10
14:57:31.805 [debug] Evaluating bend block with value: 10
14:57:31.805 [debug] Block returned: %{variant: :leaf}
14:57:31.805 [debug] Fun returned result: %{variant: :leaf}
14:57:31.805 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 9
14:57:31.805 [debug] Executing fun with value: 9
14:57:31.805 [debug] Evaluating bend block with value: 9
14:57:31.805 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 10
14:57:31.805 [debug] Executing fun with value: 10
14:57:31.805 [debug] Evaluating bend block with value: 10
14:57:31.805 [debug] Block returned: %{variant: :leaf}
14:57:31.805 [debug] Fun returned result: %{variant: :leaf}
14:57:31.805 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{variant: :leaf}
14:57:31.805 [debug] Executing bend with initial: 10
14:57:31.805 [debug] Executing fun with value: 10
14:57:31.805 [debug] Evaluating bend block with value: 10
14:57:31.805 [debug] Block returned: %{variant: :leaf}
14:57:31.805 [debug] Fun returned result: %{variant: :leaf}
14:57:31.805 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.805 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.805 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 7
14:57:31.805 [debug] Executing fun with value: 7
14:57:31.805 [debug] Evaluating bend block with value: 7
14:57:31.805 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.805 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.805 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 8
14:57:31.805 [debug] Executing fun with value: 8
14:57:31.805 [debug] Evaluating bend block with value: 8
14:57:31.805 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.805 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.805 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 9
14:57:31.805 [debug] Executing fun with value: 9
14:57:31.805 [debug] Evaluating bend block with value: 9
14:57:31.805 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 10
14:57:31.805 [debug] Executing fun with value: 10
14:57:31.805 [debug] Evaluating bend block with value: 10
14:57:31.805 [debug] Block returned: %{variant: :leaf}
14:57:31.805 [debug] Fun returned result: %{variant: :leaf}
14:57:31.805 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{variant: :leaf}
14:57:31.805 [debug] Executing bend with initial: 10
14:57:31.805 [debug] Executing fun with value: 10
14:57:31.805 [debug] Evaluating bend block with value: 10
14:57:31.805 [debug] Block returned: %{variant: :leaf}
14:57:31.805 [debug] Fun returned result: %{variant: :leaf}
14:57:31.805 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{variant: :leaf}
14:57:31.805 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 9
14:57:31.805 [debug] Executing fun with value: 9
14:57:31.805 [debug] Evaluating bend block with value: 9
14:57:31.805 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.805 [debug] Executing bend with initial: 10
14:57:31.805 [debug] Executing fun with value: 10
14:57:31.805 [debug] Evaluating bend block with value: 10
14:57:31.805 [debug] Block returned: %{variant: :leaf}
14:57:31.805 [debug] Fun returned result: %{variant: :leaf}
14:57:31.806 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{variant: :leaf}
14:57:31.806 [debug] Executing bend with initial: 10
14:57:31.806 [debug] Executing fun with value: 10
14:57:31.806 [debug] Evaluating bend block with value: 10
14:57:31.806 [debug] Block returned: %{variant: :leaf}
14:57:31.806 [debug] Fun returned result: %{variant: :leaf}
14:57:31.806 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.806 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.806 [debug] Executing bend with initial: 8
14:57:31.806 [debug] Executing fun with value: 8
14:57:31.806 [debug] Evaluating bend block with value: 8
14:57:31.806 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.806 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.806 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.806 [debug] Executing bend with initial: 9
14:57:31.806 [debug] Executing fun with value: 9
14:57:31.806 [debug] Evaluating bend block with value: 9
14:57:31.806 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.806 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.806 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.806 [debug] Executing bend with initial: 10
14:57:31.806 [debug] Executing fun with value: 10
14:57:31.806 [debug] Evaluating bend block with value: 10
14:57:31.806 [debug] Block returned: %{variant: :leaf}
14:57:31.806 [debug] Fun returned result: %{variant: :leaf}
14:57:31.806 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{variant: :leaf}
14:57:31.806 [debug] Executing bend with initial: 10
14:57:31.806 [debug] Executing fun with value: 10
14:57:31.806 [debug] Evaluating bend block with value: 10
14:57:31.806 [debug] Block returned: %{variant: :leaf}
14:57:31.806 [debug] Fun returned result: %{variant: :leaf}
14:57:31.806 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.806 [debug] Executing bend with initial: 9
14:57:31.806 [debug] Executing fun with value: 9
14:57:31.806 [debug] Evaluating bend block with value: 9
14:57:31.806 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.806 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.806 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.806 [debug] Executing bend with initial: 10
14:57:31.806 [debug] Executing fun with value: 10
14:57:31.806 [debug] Evaluating bend block with value: 10
14:57:31.806 [debug] Block returned: %{variant: :leaf}
14:57:31.806 [debug] Fun returned result: %{variant: :leaf}
14:57:31.806 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{variant: :leaf}
14:57:31.806 [debug] Executing bend with initial: 10
14:57:31.806 [debug] Executing fun with value: 10
14:57:31.806 [debug] Evaluating bend block with value: 10
14:57:31.806 [debug] Block returned: %{variant: :leaf}
14:57:31.806 [debug] Fun returned result: %{variant: :leaf}
14:57:31.806 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{variant: :leaf}
14:57:31.806 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.806 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.806 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.806 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.807 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.807 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.808 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 3
14:57:31.808 [debug] Executing fun with value: 3
14:57:31.808 [debug] Evaluating bend block with value: 3
14:57:31.808 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.808 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.808 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 4
14:57:31.808 [debug] Executing fun with value: 4
14:57:31.808 [debug] Evaluating bend block with value: 4
14:57:31.808 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.808 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.808 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 5
14:57:31.808 [debug] Executing fun with value: 5
14:57:31.808 [debug] Evaluating bend block with value: 5
14:57:31.808 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.808 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.808 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 6
14:57:31.808 [debug] Executing fun with value: 6
14:57:31.808 [debug] Evaluating bend block with value: 6
14:57:31.808 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.808 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.808 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 7
14:57:31.808 [debug] Executing fun with value: 7
14:57:31.808 [debug] Evaluating bend block with value: 7
14:57:31.808 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.808 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.808 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 8
14:57:31.808 [debug] Executing fun with value: 8
14:57:31.808 [debug] Evaluating bend block with value: 8
14:57:31.808 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.808 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.808 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 9
14:57:31.808 [debug] Executing fun with value: 9
14:57:31.808 [debug] Evaluating bend block with value: 9
14:57:31.808 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.808 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.808 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.808 [debug] Executing bend with initial: 10
14:57:31.809 [debug] Executing fun with value: 10
14:57:31.809 [debug] Evaluating bend block with value: 10
14:57:31.809 [debug] Block returned: %{variant: :leaf}
14:57:31.809 [debug] Fun returned result: %{variant: :leaf}
14:57:31.809 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.809 [debug] do_bend final result: %{variant: :leaf}
14:57:31.809 [debug] Executing bend with initial: 10
14:57:31.809 [debug] Executing fun with value: 10
14:57:31.809 [debug] Evaluating bend block with value: 10
14:57:31.809 [debug] Block returned: %{variant: :leaf}
14:57:31.809 [debug] Fun returned result: %{variant: :leaf}
14:57:31.809 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.809 [debug] do_bend final result: %{variant: :leaf}
14:57:31.809 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.809 [debug] Executing bend with initial: 9
14:57:31.809 [debug] Executing fun with value: 9
14:57:31.809 [debug] Evaluating bend block with value: 9
14:57:31.809 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.809 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.809 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.809 [debug] Executing bend with initial: 10
14:57:31.809 [debug] Executing fun with value: 10
14:57:31.809 [debug] Evaluating bend block with value: 10
14:57:31.809 [debug] Block returned: %{variant: :leaf}
14:57:31.809 [debug] Fun returned result: %{variant: :leaf}
14:57:31.809 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.809 [debug] do_bend final result: %{variant: :leaf}
14:57:31.809 [debug] Executing bend with initial: 10
14:57:31.809 [debug] Executing fun with value: 10
14:57:31.809 [debug] Evaluating bend block with value: 10
14:57:31.809 [debug] Block returned: %{variant: :leaf}
14:57:31.809 [debug] Fun returned result: %{variant: :leaf}
14:57:31.809 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.809 [debug] do_bend final result: %{variant: :leaf}
14:57:31.809 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.809 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.809 [debug] Executing bend with initial: 8
14:57:31.809 [debug] Executing fun with value: 8
14:57:31.809 [debug] Evaluating bend block with value: 8
14:57:31.809 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.809 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.809 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.809 [debug] Executing bend with initial: 9
14:57:31.809 [debug] Executing fun with value: 9
14:57:31.809 [debug] Evaluating bend block with value: 9
14:57:31.809 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.809 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.809 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.809 [debug] Executing bend with initial: 10
14:57:31.809 [debug] Executing fun with value: 10
14:57:31.809 [debug] Evaluating bend block with value: 10
14:57:31.809 [debug] Block returned: %{variant: :leaf}
14:57:31.809 [debug] Fun returned result: %{variant: :leaf}
14:57:31.809 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.809 [debug] do_bend final result: %{variant: :leaf}
14:57:31.810 [debug] Executing bend with initial: 10
14:57:31.810 [debug] Executing fun with value: 10
14:57:31.810 [debug] Evaluating bend block with value: 10
14:57:31.810 [debug] Block returned: %{variant: :leaf}
14:57:31.810 [debug] Fun returned result: %{variant: :leaf}
14:57:31.810 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.810 [debug] do_bend final result: %{variant: :leaf}
14:57:31.810 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.810 [debug] Executing bend with initial: 9
14:57:31.810 [debug] Executing fun with value: 9
14:57:31.810 [debug] Evaluating bend block with value: 9
14:57:31.810 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.810 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.810 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.810 [debug] Executing bend with initial: 10
14:57:31.810 [debug] Executing fun with value: 10
14:57:31.810 [debug] Evaluating bend block with value: 10
14:57:31.810 [debug] Block returned: %{variant: :leaf}
14:57:31.810 [debug] Fun returned result: %{variant: :leaf}
14:57:31.810 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.810 [debug] do_bend final result: %{variant: :leaf}
14:57:31.810 [debug] Executing bend with initial: 10
14:57:31.810 [debug] Executing fun with value: 10
14:57:31.810 [debug] Evaluating bend block with value: 10
14:57:31.810 [debug] Block returned: %{variant: :leaf}
14:57:31.810 [debug] Fun returned result: %{variant: :leaf}
14:57:31.810 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.810 [debug] do_bend final result: %{variant: :leaf}
14:57:31.810 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.810 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.811 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.811 [debug] Executing bend with initial: 7
14:57:31.811 [debug] Executing fun with value: 7
14:57:31.811 [debug] Evaluating bend block with value: 7
14:57:31.811 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.811 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.811 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.811 [debug] Executing bend with initial: 8
14:57:31.811 [debug] Executing fun with value: 8
14:57:31.811 [debug] Evaluating bend block with value: 8
14:57:31.811 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.811 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.811 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.811 [debug] Executing bend with initial: 9
14:57:31.811 [debug] Executing fun with value: 9
14:57:31.811 [debug] Evaluating bend block with value: 9
14:57:31.811 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.811 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.811 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.811 [debug] Executing bend with initial: 10
14:57:31.811 [debug] Executing fun with value: 10
14:57:31.811 [debug] Evaluating bend block with value: 10
14:57:31.811 [debug] Block returned: %{variant: :leaf}
14:57:31.811 [debug] Fun returned result: %{variant: :leaf}
14:57:31.811 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.811 [debug] do_bend final result: %{variant: :leaf}
14:57:31.811 [debug] Executing bend with initial: 10
14:57:31.811 [debug] Executing fun with value: 10
14:57:31.811 [debug] Evaluating bend block with value: 10
14:57:31.811 [debug] Block returned: %{variant: :leaf}
14:57:31.811 [debug] Fun returned result: %{variant: :leaf}
14:57:31.811 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.811 [debug] do_bend final result: %{variant: :leaf}
14:57:31.811 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.811 [debug] Executing bend with initial: 9
14:57:31.811 [debug] Executing fun with value: 9
14:57:31.811 [debug] Evaluating bend block with value: 9
14:57:31.811 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.811 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.811 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.811 [debug] Executing bend with initial: 10
14:57:31.811 [debug] Executing fun with value: 10
14:57:31.811 [debug] Evaluating bend block with value: 10
14:57:31.811 [debug] Block returned: %{variant: :leaf}
14:57:31.811 [debug] Fun returned result: %{variant: :leaf}
14:57:31.811 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.811 [debug] do_bend final result: %{variant: :leaf}
14:57:31.811 [debug] Executing bend with initial: 10
14:57:31.811 [debug] Executing fun with value: 10
14:57:31.811 [debug] Evaluating bend block with value: 10
14:57:31.811 [debug] Block returned: %{variant: :leaf}
14:57:31.811 [debug] Fun returned result: %{variant: :leaf}
14:57:31.811 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.811 [debug] do_bend final result: %{variant: :leaf}
14:57:31.811 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.811 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.811 [debug] Executing bend with initial: 8
14:57:31.813 [debug] Executing fun with value: 8
14:57:31.813 [debug] Evaluating bend block with value: 8
14:57:31.813 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.813 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.813 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.813 [debug] Executing bend with initial: 9
14:57:31.813 [debug] Executing fun with value: 9
14:57:31.814 [debug] Evaluating bend block with value: 9
14:57:31.814 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.814 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.814 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.814 [debug] Executing bend with initial: 10
14:57:31.814 [debug] Executing fun with value: 10
14:57:31.814 [debug] Evaluating bend block with value: 10
14:57:31.814 [debug] Block returned: %{variant: :leaf}
14:57:31.814 [debug] Fun returned result: %{variant: :leaf}
14:57:31.814 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.814 [debug] do_bend final result: %{variant: :leaf}
14:57:31.814 [debug] Executing bend with initial: 10
14:57:31.814 [debug] Executing fun with value: 10
14:57:31.814 [debug] Evaluating bend block with value: 10
14:57:31.814 [debug] Block returned: %{variant: :leaf}
14:57:31.814 [debug] Fun returned result: %{variant: :leaf}
14:57:31.814 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.814 [debug] do_bend final result: %{variant: :leaf}
14:57:31.814 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.814 [debug] Executing bend with initial: 9
14:57:31.814 [debug] Executing fun with value: 9
14:57:31.814 [debug] Evaluating bend block with value: 9
14:57:31.814 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.814 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.814 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.814 [debug] Executing bend with initial: 10
14:57:31.814 [debug] Executing fun with value: 10
14:57:31.814 [debug] Evaluating bend block with value: 10
14:57:31.814 [debug] Block returned: %{variant: :leaf}
14:57:31.814 [debug] Fun returned result: %{variant: :leaf}
14:57:31.814 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.814 [debug] do_bend final result: %{variant: :leaf}
14:57:31.814 [debug] Executing bend with initial: 10
14:57:31.814 [debug] Executing fun with value: 10
14:57:31.814 [debug] Evaluating bend block with value: 10
14:57:31.814 [debug] Block returned: %{variant: :leaf}
14:57:31.814 [debug] Fun returned result: %{variant: :leaf}
14:57:31.814 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.814 [debug] do_bend final result: %{variant: :leaf}
14:57:31.814 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.814 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.814 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.814 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.814 [debug] Executing bend with initial: 6
14:57:31.814 [debug] Executing fun with value: 6
14:57:31.814 [debug] Evaluating bend block with value: 6
14:57:31.814 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.814 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.814 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.814 [debug] Executing bend with initial: 7
14:57:31.814 [debug] Executing fun with value: 7
14:57:31.814 [debug] Evaluating bend block with value: 7
14:57:31.814 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.814 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.814 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.814 [debug] Executing bend with initial: 8
14:57:31.814 [debug] Executing fun with value: 8
14:57:31.814 [debug] Evaluating bend block with value: 8
14:57:31.814 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.815 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.815 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 9
14:57:31.815 [debug] Executing fun with value: 9
14:57:31.815 [debug] Evaluating bend block with value: 9
14:57:31.815 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 10
14:57:31.815 [debug] Executing fun with value: 10
14:57:31.815 [debug] Evaluating bend block with value: 10
14:57:31.815 [debug] Block returned: %{variant: :leaf}
14:57:31.815 [debug] Fun returned result: %{variant: :leaf}
14:57:31.815 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{variant: :leaf}
14:57:31.815 [debug] Executing bend with initial: 10
14:57:31.815 [debug] Executing fun with value: 10
14:57:31.815 [debug] Evaluating bend block with value: 10
14:57:31.815 [debug] Block returned: %{variant: :leaf}
14:57:31.815 [debug] Fun returned result: %{variant: :leaf}
14:57:31.815 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 9
14:57:31.815 [debug] Executing fun with value: 9
14:57:31.815 [debug] Evaluating bend block with value: 9
14:57:31.815 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 10
14:57:31.815 [debug] Executing fun with value: 10
14:57:31.815 [debug] Evaluating bend block with value: 10
14:57:31.815 [debug] Block returned: %{variant: :leaf}
14:57:31.815 [debug] Fun returned result: %{variant: :leaf}
14:57:31.815 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{variant: :leaf}
14:57:31.815 [debug] Executing bend with initial: 10
14:57:31.815 [debug] Executing fun with value: 10
14:57:31.815 [debug] Evaluating bend block with value: 10
14:57:31.815 [debug] Block returned: %{variant: :leaf}
14:57:31.815 [debug] Fun returned result: %{variant: :leaf}
14:57:31.815 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.815 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 8
14:57:31.815 [debug] Executing fun with value: 8
14:57:31.815 [debug] Evaluating bend block with value: 8
14:57:31.815 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.815 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.815 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 9
14:57:31.815 [debug] Executing fun with value: 9
14:57:31.815 [debug] Evaluating bend block with value: 9
14:57:31.815 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 10
14:57:31.815 [debug] Executing fun with value: 10
14:57:31.815 [debug] Evaluating bend block with value: 10
14:57:31.815 [debug] Block returned: %{variant: :leaf}
14:57:31.815 [debug] Fun returned result: %{variant: :leaf}
14:57:31.815 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{variant: :leaf}
14:57:31.815 [debug] Executing bend with initial: 10
14:57:31.815 [debug] Executing fun with value: 10
14:57:31.815 [debug] Evaluating bend block with value: 10
14:57:31.815 [debug] Block returned: %{variant: :leaf}
14:57:31.815 [debug] Fun returned result: %{variant: :leaf}
14:57:31.815 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{variant: :leaf}
14:57:31.815 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.815 [debug] Executing bend with initial: 9
14:57:31.815 [debug] Executing fun with value: 9
14:57:31.815 [debug] Evaluating bend block with value: 9
14:57:31.815 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Executing bend with initial: 10
14:57:31.816 [debug] Executing fun with value: 10
14:57:31.816 [debug] Evaluating bend block with value: 10
14:57:31.816 [debug] Block returned: %{variant: :leaf}
14:57:31.816 [debug] Fun returned result: %{variant: :leaf}
14:57:31.816 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.816 [debug] do_bend final result: %{variant: :leaf}
14:57:31.816 [debug] Executing bend with initial: 10
14:57:31.816 [debug] Executing fun with value: 10
14:57:31.816 [debug] Evaluating bend block with value: 10
14:57:31.816 [debug] Block returned: %{variant: :leaf}
14:57:31.816 [debug] Fun returned result: %{variant: :leaf}
14:57:31.816 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.816 [debug] do_bend final result: %{variant: :leaf}
14:57:31.816 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.816 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.816 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.816 [debug] Executing bend with initial: 7
14:57:31.816 [debug] Executing fun with value: 7
14:57:31.816 [debug] Evaluating bend block with value: 7
14:57:31.816 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.816 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.816 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.816 [debug] Executing bend with initial: 8
14:57:31.816 [debug] Executing fun with value: 8
14:57:31.816 [debug] Evaluating bend block with value: 8
14:57:31.816 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.816 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.816 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.816 [debug] Executing bend with initial: 9
14:57:31.816 [debug] Executing fun with value: 9
14:57:31.816 [debug] Evaluating bend block with value: 9
14:57:31.816 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Executing bend with initial: 10
14:57:31.816 [debug] Executing fun with value: 10
14:57:31.816 [debug] Evaluating bend block with value: 10
14:57:31.816 [debug] Block returned: %{variant: :leaf}
14:57:31.816 [debug] Fun returned result: %{variant: :leaf}
14:57:31.816 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.816 [debug] do_bend final result: %{variant: :leaf}
14:57:31.816 [debug] Executing bend with initial: 10
14:57:31.816 [debug] Executing fun with value: 10
14:57:31.816 [debug] Evaluating bend block with value: 10
14:57:31.816 [debug] Block returned: %{variant: :leaf}
14:57:31.816 [debug] Fun returned result: %{variant: :leaf}
14:57:31.816 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.816 [debug] do_bend final result: %{variant: :leaf}
14:57:31.816 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.816 [debug] Executing bend with initial: 9
14:57:31.816 [debug] Executing fun with value: 9
14:57:31.816 [debug] Evaluating bend block with value: 9
14:57:31.816 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.816 [debug] Executing bend with initial: 10
14:57:31.816 [debug] Executing fun with value: 10
14:57:31.816 [debug] Evaluating bend block with value: 10
14:57:31.816 [debug] Block returned: %{variant: :leaf}
14:57:31.816 [debug] Fun returned result: %{variant: :leaf}
14:57:31.816 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.816 [debug] do_bend final result: %{variant: :leaf}
14:57:31.816 [debug] Executing bend with initial: 10
14:57:31.816 [debug] Executing fun with value: 10
14:57:31.816 [debug] Evaluating bend block with value: 10
14:57:31.816 [debug] Block returned: %{variant: :leaf}
14:57:31.817 [debug] Fun returned result: %{variant: :leaf}
14:57:31.817 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.817 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.817 [debug] Executing bend with initial: 8
14:57:31.817 [debug] Executing fun with value: 8
14:57:31.817 [debug] Evaluating bend block with value: 8
14:57:31.817 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.817 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.817 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.817 [debug] Executing bend with initial: 9
14:57:31.817 [debug] Executing fun with value: 9
14:57:31.817 [debug] Evaluating bend block with value: 9
14:57:31.817 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.817 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.817 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.817 [debug] Executing bend with initial: 10
14:57:31.817 [debug] Executing fun with value: 10
14:57:31.817 [debug] Evaluating bend block with value: 10
14:57:31.817 [debug] Block returned: %{variant: :leaf}
14:57:31.817 [debug] Fun returned result: %{variant: :leaf}
14:57:31.817 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{variant: :leaf}
14:57:31.817 [debug] Executing bend with initial: 10
14:57:31.817 [debug] Executing fun with value: 10
14:57:31.817 [debug] Evaluating bend block with value: 10
14:57:31.817 [debug] Block returned: %{variant: :leaf}
14:57:31.817 [debug] Fun returned result: %{variant: :leaf}
14:57:31.817 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.817 [debug] Executing bend with initial: 9
14:57:31.817 [debug] Executing fun with value: 9
14:57:31.817 [debug] Evaluating bend block with value: 9
14:57:31.817 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.817 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.817 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.817 [debug] Executing bend with initial: 10
14:57:31.817 [debug] Executing fun with value: 10
14:57:31.817 [debug] Evaluating bend block with value: 10
14:57:31.817 [debug] Block returned: %{variant: :leaf}
14:57:31.817 [debug] Fun returned result: %{variant: :leaf}
14:57:31.817 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{variant: :leaf}
14:57:31.817 [debug] Executing bend with initial: 10
14:57:31.817 [debug] Executing fun with value: 10
14:57:31.817 [debug] Evaluating bend block with value: 10
14:57:31.817 [debug] Block returned: %{variant: :leaf}
14:57:31.817 [debug] Fun returned result: %{variant: :leaf}
14:57:31.817 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{variant: :leaf}
14:57:31.817 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.817 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.817 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.817 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.818 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 5
14:57:31.818 [debug] Executing fun with value: 5
14:57:31.818 [debug] Evaluating bend block with value: 5
14:57:31.818 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.818 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.818 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 6
14:57:31.818 [debug] Executing fun with value: 6
14:57:31.818 [debug] Evaluating bend block with value: 6
14:57:31.818 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.818 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.818 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 7
14:57:31.818 [debug] Executing fun with value: 7
14:57:31.818 [debug] Evaluating bend block with value: 7
14:57:31.818 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.818 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.818 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 8
14:57:31.818 [debug] Executing fun with value: 8
14:57:31.818 [debug] Evaluating bend block with value: 8
14:57:31.818 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.818 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.818 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 9
14:57:31.818 [debug] Executing fun with value: 9
14:57:31.818 [debug] Evaluating bend block with value: 9
14:57:31.818 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.818 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.818 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 10
14:57:31.818 [debug] Executing fun with value: 10
14:57:31.818 [debug] Evaluating bend block with value: 10
14:57:31.818 [debug] Block returned: %{variant: :leaf}
14:57:31.818 [debug] Fun returned result: %{variant: :leaf}
14:57:31.818 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.818 [debug] do_bend final result: %{variant: :leaf}
14:57:31.818 [debug] Executing bend with initial: 10
14:57:31.818 [debug] Executing fun with value: 10
14:57:31.818 [debug] Evaluating bend block with value: 10
14:57:31.818 [debug] Block returned: %{variant: :leaf}
14:57:31.818 [debug] Fun returned result: %{variant: :leaf}
14:57:31.818 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.818 [debug] do_bend final result: %{variant: :leaf}
14:57:31.818 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 9
14:57:31.818 [debug] Executing fun with value: 9
14:57:31.818 [debug] Evaluating bend block with value: 9
14:57:31.818 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.818 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.818 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.818 [debug] Executing bend with initial: 10
14:57:31.818 [debug] Executing fun with value: 10
14:57:31.818 [debug] Evaluating bend block with value: 10
14:57:31.818 [debug] Block returned: %{variant: :leaf}
14:57:31.818 [debug] Fun returned result: %{variant: :leaf}
14:57:31.818 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{variant: :leaf}
14:57:31.819 [debug] Executing bend with initial: 10
14:57:31.819 [debug] Executing fun with value: 10
14:57:31.819 [debug] Evaluating bend block with value: 10
14:57:31.819 [debug] Block returned: %{variant: :leaf}
14:57:31.819 [debug] Fun returned result: %{variant: :leaf}
14:57:31.819 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.819 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 8
14:57:31.819 [debug] Executing fun with value: 8
14:57:31.819 [debug] Evaluating bend block with value: 8
14:57:31.819 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.819 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.819 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 9
14:57:31.819 [debug] Executing fun with value: 9
14:57:31.819 [debug] Evaluating bend block with value: 9
14:57:31.819 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 10
14:57:31.819 [debug] Executing fun with value: 10
14:57:31.819 [debug] Evaluating bend block with value: 10
14:57:31.819 [debug] Block returned: %{variant: :leaf}
14:57:31.819 [debug] Fun returned result: %{variant: :leaf}
14:57:31.819 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{variant: :leaf}
14:57:31.819 [debug] Executing bend with initial: 10
14:57:31.819 [debug] Executing fun with value: 10
14:57:31.819 [debug] Evaluating bend block with value: 10
14:57:31.819 [debug] Block returned: %{variant: :leaf}
14:57:31.819 [debug] Fun returned result: %{variant: :leaf}
14:57:31.819 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 9
14:57:31.819 [debug] Executing fun with value: 9
14:57:31.819 [debug] Evaluating bend block with value: 9
14:57:31.819 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 10
14:57:31.819 [debug] Executing fun with value: 10
14:57:31.819 [debug] Evaluating bend block with value: 10
14:57:31.819 [debug] Block returned: %{variant: :leaf}
14:57:31.819 [debug] Fun returned result: %{variant: :leaf}
14:57:31.819 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{variant: :leaf}
14:57:31.819 [debug] Executing bend with initial: 10
14:57:31.819 [debug] Executing fun with value: 10
14:57:31.819 [debug] Evaluating bend block with value: 10
14:57:31.819 [debug] Block returned: %{variant: :leaf}
14:57:31.819 [debug] Fun returned result: %{variant: :leaf}
14:57:31.819 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{variant: :leaf}
14:57:31.819 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.819 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.819 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 7
14:57:31.819 [debug] Executing fun with value: 7
14:57:31.819 [debug] Evaluating bend block with value: 7
14:57:31.819 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.819 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.819 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 8
14:57:31.819 [debug] Executing fun with value: 8
14:57:31.819 [debug] Evaluating bend block with value: 8
14:57:31.819 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.819 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.819 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 9
14:57:31.819 [debug] Executing fun with value: 9
14:57:31.819 [debug] Evaluating bend block with value: 9
14:57:31.819 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.819 [debug] Executing bend with initial: 10
14:57:31.819 [debug] Executing fun with value: 10
14:57:31.820 [debug] Evaluating bend block with value: 10
14:57:31.820 [debug] Block returned: %{variant: :leaf}
14:57:31.820 [debug] Fun returned result: %{variant: :leaf}
14:57:31.820 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.820 [debug] do_bend final result: %{variant: :leaf}
14:57:31.820 [debug] Executing bend with initial: 10
14:57:31.820 [debug] Executing fun with value: 10
14:57:31.820 [debug] Evaluating bend block with value: 10
14:57:31.820 [debug] Block returned: %{variant: :leaf}
14:57:31.820 [debug] Fun returned result: %{variant: :leaf}
14:57:31.820 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.820 [debug] do_bend final result: %{variant: :leaf}
14:57:31.820 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.820 [debug] Executing bend with initial: 9
14:57:31.820 [debug] Executing fun with value: 9
14:57:31.820 [debug] Evaluating bend block with value: 9
14:57:31.820 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.820 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.820 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.820 [debug] Executing bend with initial: 10
14:57:31.820 [debug] Executing fun with value: 10
14:57:31.820 [debug] Evaluating bend block with value: 10
14:57:31.820 [debug] Block returned: %{variant: :leaf}
14:57:31.820 [debug] Fun returned result: %{variant: :leaf}
14:57:31.820 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.820 [debug] do_bend final result: %{variant: :leaf}
14:57:31.820 [debug] Executing bend with initial: 10
14:57:31.820 [debug] Executing fun with value: 10
14:57:31.820 [debug] Evaluating bend block with value: 10
14:57:31.820 [debug] Block returned: %{variant: :leaf}
14:57:31.820 [debug] Fun returned result: %{variant: :leaf}
14:57:31.820 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.820 [debug] do_bend final result: %{variant: :leaf}
14:57:31.820 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.820 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.820 [debug] Executing bend with initial: 8
14:57:31.820 [debug] Executing fun with value: 8
14:57:31.821 [debug] Evaluating bend block with value: 8
14:57:31.821 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.821 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.821 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.821 [debug] Executing bend with initial: 9
14:57:31.821 [debug] Executing fun with value: 9
14:57:31.821 [debug] Evaluating bend block with value: 9
14:57:31.821 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.821 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.821 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.822 [debug] Executing bend with initial: 10
14:57:31.822 [debug] Executing fun with value: 10
14:57:31.822 [debug] Evaluating bend block with value: 10
14:57:31.822 [debug] Block returned: %{variant: :leaf}
14:57:31.822 [debug] Fun returned result: %{variant: :leaf}
14:57:31.822 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.822 [debug] do_bend final result: %{variant: :leaf}
14:57:31.822 [debug] Executing bend with initial: 10
14:57:31.822 [debug] Executing fun with value: 10
14:57:31.822 [debug] Evaluating bend block with value: 10
14:57:31.822 [debug] Block returned: %{variant: :leaf}
14:57:31.822 [debug] Fun returned result: %{variant: :leaf}
14:57:31.822 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.822 [debug] do_bend final result: %{variant: :leaf}
14:57:31.822 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.822 [debug] Executing bend with initial: 9
14:57:31.822 [debug] Executing fun with value: 9
14:57:31.822 [debug] Evaluating bend block with value: 9
14:57:31.822 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.822 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.822 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.822 [debug] Executing bend with initial: 10
14:57:31.822 [debug] Executing fun with value: 10
14:57:31.822 [debug] Evaluating bend block with value: 10
14:57:31.822 [debug] Block returned: %{variant: :leaf}
14:57:31.822 [debug] Fun returned result: %{variant: :leaf}
14:57:31.822 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.822 [debug] do_bend final result: %{variant: :leaf}
14:57:31.822 [debug] Executing bend with initial: 10
14:57:31.822 [debug] Executing fun with value: 10
14:57:31.822 [debug] Evaluating bend block with value: 10
14:57:31.822 [debug] Block returned: %{variant: :leaf}
14:57:31.822 [debug] Fun returned result: %{variant: :leaf}
14:57:31.822 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.822 [debug] do_bend final result: %{variant: :leaf}
14:57:31.822 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.822 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.822 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.822 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.822 [debug] Executing bend with initial: 6
14:57:31.822 [debug] Executing fun with value: 6
14:57:31.822 [debug] Evaluating bend block with value: 6
14:57:31.822 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.822 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.822 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.822 [debug] Executing bend with initial: 7
14:57:31.822 [debug] Executing fun with value: 7
14:57:31.822 [debug] Evaluating bend block with value: 7
14:57:31.822 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.822 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.822 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.822 [debug] Executing bend with initial: 8
14:57:31.822 [debug] Executing fun with value: 8
14:57:31.822 [debug] Evaluating bend block with value: 8
14:57:31.822 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.823 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.823 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 9
14:57:31.823 [debug] Executing fun with value: 9
14:57:31.823 [debug] Evaluating bend block with value: 9
14:57:31.823 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.823 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{variant: :leaf}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.823 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 9
14:57:31.823 [debug] Executing fun with value: 9
14:57:31.823 [debug] Evaluating bend block with value: 9
14:57:31.823 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.823 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{variant: :leaf}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.823 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.823 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 8
14:57:31.823 [debug] Executing fun with value: 8
14:57:31.823 [debug] Evaluating bend block with value: 8
14:57:31.823 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.823 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.823 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 9
14:57:31.823 [debug] Executing fun with value: 9
14:57:31.823 [debug] Evaluating bend block with value: 9
14:57:31.823 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.823 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{variant: :leaf}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.823 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 9
14:57:31.823 [debug] Executing fun with value: 9
14:57:31.823 [debug] Evaluating bend block with value: 9
14:57:31.823 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.823 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.823 [debug] do_bend final result: %{variant: :leaf}
14:57:31.823 [debug] Executing bend with initial: 10
14:57:31.823 [debug] Executing fun with value: 10
14:57:31.823 [debug] Evaluating bend block with value: 10
14:57:31.823 [debug] Block returned: %{variant: :leaf}
14:57:31.823 [debug] Fun returned result: %{variant: :leaf}
14:57:31.824 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.824 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.824 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 7
14:57:31.824 [debug] Executing fun with value: 7
14:57:31.824 [debug] Evaluating bend block with value: 7
14:57:31.824 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.824 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.824 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 8
14:57:31.824 [debug] Executing fun with value: 8
14:57:31.824 [debug] Evaluating bend block with value: 8
14:57:31.824 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.824 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.824 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 9
14:57:31.824 [debug] Executing fun with value: 9
14:57:31.824 [debug] Evaluating bend block with value: 9
14:57:31.824 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 10
14:57:31.824 [debug] Executing fun with value: 10
14:57:31.824 [debug] Evaluating bend block with value: 10
14:57:31.824 [debug] Block returned: %{variant: :leaf}
14:57:31.824 [debug] Fun returned result: %{variant: :leaf}
14:57:31.824 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{variant: :leaf}
14:57:31.824 [debug] Executing bend with initial: 10
14:57:31.824 [debug] Executing fun with value: 10
14:57:31.824 [debug] Evaluating bend block with value: 10
14:57:31.824 [debug] Block returned: %{variant: :leaf}
14:57:31.824 [debug] Fun returned result: %{variant: :leaf}
14:57:31.824 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 9
14:57:31.824 [debug] Executing fun with value: 9
14:57:31.824 [debug] Evaluating bend block with value: 9
14:57:31.824 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 10
14:57:31.824 [debug] Executing fun with value: 10
14:57:31.824 [debug] Evaluating bend block with value: 10
14:57:31.824 [debug] Block returned: %{variant: :leaf}
14:57:31.824 [debug] Fun returned result: %{variant: :leaf}
14:57:31.824 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{variant: :leaf}
14:57:31.824 [debug] Executing bend with initial: 10
14:57:31.824 [debug] Executing fun with value: 10
14:57:31.824 [debug] Evaluating bend block with value: 10
14:57:31.824 [debug] Block returned: %{variant: :leaf}
14:57:31.824 [debug] Fun returned result: %{variant: :leaf}
14:57:31.824 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.824 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 8
14:57:31.824 [debug] Executing fun with value: 8
14:57:31.824 [debug] Evaluating bend block with value: 8
14:57:31.824 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.824 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.824 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 9
14:57:31.824 [debug] Executing fun with value: 9
14:57:31.824 [debug] Evaluating bend block with value: 9
14:57:31.824 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 10
14:57:31.824 [debug] Executing fun with value: 10
14:57:31.824 [debug] Evaluating bend block with value: 10
14:57:31.824 [debug] Block returned: %{variant: :leaf}
14:57:31.824 [debug] Fun returned result: %{variant: :leaf}
14:57:31.824 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{variant: :leaf}
14:57:31.824 [debug] Executing bend with initial: 10
14:57:31.824 [debug] Executing fun with value: 10
14:57:31.824 [debug] Evaluating bend block with value: 10
14:57:31.824 [debug] Block returned: %{variant: :leaf}
14:57:31.824 [debug] Fun returned result: %{variant: :leaf}
14:57:31.824 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{variant: :leaf}
14:57:31.824 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.824 [debug] Executing bend with initial: 9
14:57:31.824 [debug] Executing fun with value: 9
14:57:31.824 [debug] Evaluating bend block with value: 9
14:57:31.824 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.824 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.825 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.825 [debug] Executing bend with initial: 10
14:57:31.825 [debug] Executing fun with value: 10
14:57:31.825 [debug] Evaluating bend block with value: 10
14:57:31.825 [debug] Block returned: %{variant: :leaf}
14:57:31.825 [debug] Fun returned result: %{variant: :leaf}
14:57:31.825 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.825 [debug] do_bend final result: %{variant: :leaf}
14:57:31.825 [debug] Executing bend with initial: 10
14:57:31.825 [debug] Executing fun with value: 10
14:57:31.825 [debug] Evaluating bend block with value: 10
14:57:31.825 [debug] Block returned: %{variant: :leaf}
14:57:31.825 [debug] Fun returned result: %{variant: :leaf}
14:57:31.825 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.825 [debug] do_bend final result: %{variant: :leaf}
14:57:31.825 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.825 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.825 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.825 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.825 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.826 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.826 [debug] Executing bend with initial: 4
14:57:31.826 [debug] Executing fun with value: 4
14:57:31.826 [debug] Evaluating bend block with value: 4
14:57:31.826 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.826 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.826 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.826 [debug] Executing bend with initial: 5
14:57:31.826 [debug] Executing fun with value: 5
14:57:31.826 [debug] Evaluating bend block with value: 5
14:57:31.826 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.826 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.826 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.826 [debug] Executing bend with initial: 6
14:57:31.826 [debug] Executing fun with value: 6
14:57:31.826 [debug] Evaluating bend block with value: 6
14:57:31.826 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.826 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.826 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.826 [debug] Executing bend with initial: 7
14:57:31.826 [debug] Executing fun with value: 7
14:57:31.826 [debug] Evaluating bend block with value: 7
14:57:31.826 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.826 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.826 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.826 [debug] Executing bend with initial: 8
14:57:31.826 [debug] Executing fun with value: 8
14:57:31.826 [debug] Evaluating bend block with value: 8
14:57:31.826 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.826 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.826 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.826 [debug] Executing bend with initial: 9
14:57:31.826 [debug] Executing fun with value: 9
14:57:31.826 [debug] Evaluating bend block with value: 9
14:57:31.826 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 9
14:57:31.827 [debug] Executing fun with value: 9
14:57:31.827 [debug] Evaluating bend block with value: 9
14:57:31.827 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.827 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 8
14:57:31.827 [debug] Executing fun with value: 8
14:57:31.827 [debug] Evaluating bend block with value: 8
14:57:31.827 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.827 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.827 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 9
14:57:31.827 [debug] Executing fun with value: 9
14:57:31.827 [debug] Evaluating bend block with value: 9
14:57:31.827 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 9
14:57:31.827 [debug] Executing fun with value: 9
14:57:31.827 [debug] Evaluating bend block with value: 9
14:57:31.827 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] Executing bend with initial: 10
14:57:31.827 [debug] Executing fun with value: 10
14:57:31.827 [debug] Evaluating bend block with value: 10
14:57:31.827 [debug] Block returned: %{variant: :leaf}
14:57:31.827 [debug] Fun returned result: %{variant: :leaf}
14:57:31.827 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{variant: :leaf}
14:57:31.827 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.827 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.827 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.827 [debug] Executing bend with initial: 7
14:57:31.827 [debug] Executing fun with value: 7
14:57:31.827 [debug] Evaluating bend block with value: 7
14:57:31.827 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.827 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.828 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 8
14:57:31.828 [debug] Executing fun with value: 8
14:57:31.828 [debug] Evaluating bend block with value: 8
14:57:31.828 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.828 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.828 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 9
14:57:31.828 [debug] Executing fun with value: 9
14:57:31.828 [debug] Evaluating bend block with value: 9
14:57:31.828 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 10
14:57:31.828 [debug] Executing fun with value: 10
14:57:31.828 [debug] Evaluating bend block with value: 10
14:57:31.828 [debug] Block returned: %{variant: :leaf}
14:57:31.828 [debug] Fun returned result: %{variant: :leaf}
14:57:31.828 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{variant: :leaf}
14:57:31.828 [debug] Executing bend with initial: 10
14:57:31.828 [debug] Executing fun with value: 10
14:57:31.828 [debug] Evaluating bend block with value: 10
14:57:31.828 [debug] Block returned: %{variant: :leaf}
14:57:31.828 [debug] Fun returned result: %{variant: :leaf}
14:57:31.828 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 9
14:57:31.828 [debug] Executing fun with value: 9
14:57:31.828 [debug] Evaluating bend block with value: 9
14:57:31.828 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 10
14:57:31.828 [debug] Executing fun with value: 10
14:57:31.828 [debug] Evaluating bend block with value: 10
14:57:31.828 [debug] Block returned: %{variant: :leaf}
14:57:31.828 [debug] Fun returned result: %{variant: :leaf}
14:57:31.828 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{variant: :leaf}
14:57:31.828 [debug] Executing bend with initial: 10
14:57:31.828 [debug] Executing fun with value: 10
14:57:31.828 [debug] Evaluating bend block with value: 10
14:57:31.828 [debug] Block returned: %{variant: :leaf}
14:57:31.828 [debug] Fun returned result: %{variant: :leaf}
14:57:31.828 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.828 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 8
14:57:31.828 [debug] Executing fun with value: 8
14:57:31.828 [debug] Evaluating bend block with value: 8
14:57:31.828 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.828 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.828 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 9
14:57:31.828 [debug] Executing fun with value: 9
14:57:31.828 [debug] Evaluating bend block with value: 9
14:57:31.828 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 10
14:57:31.828 [debug] Executing fun with value: 10
14:57:31.828 [debug] Evaluating bend block with value: 10
14:57:31.828 [debug] Block returned: %{variant: :leaf}
14:57:31.828 [debug] Fun returned result: %{variant: :leaf}
14:57:31.828 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{variant: :leaf}
14:57:31.828 [debug] Executing bend with initial: 10
14:57:31.828 [debug] Executing fun with value: 10
14:57:31.828 [debug] Evaluating bend block with value: 10
14:57:31.828 [debug] Block returned: %{variant: :leaf}
14:57:31.828 [debug] Fun returned result: %{variant: :leaf}
14:57:31.828 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{variant: :leaf}
14:57:31.828 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 9
14:57:31.828 [debug] Executing fun with value: 9
14:57:31.828 [debug] Evaluating bend block with value: 9
14:57:31.828 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.828 [debug] Executing bend with initial: 10
14:57:31.828 [debug] Executing fun with value: 10
14:57:31.829 [debug] Evaluating bend block with value: 10
14:57:31.829 [debug] Block returned: %{variant: :leaf}
14:57:31.829 [debug] Fun returned result: %{variant: :leaf}
14:57:31.829 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{variant: :leaf}
14:57:31.829 [debug] Executing bend with initial: 10
14:57:31.829 [debug] Executing fun with value: 10
14:57:31.829 [debug] Evaluating bend block with value: 10
14:57:31.829 [debug] Block returned: %{variant: :leaf}
14:57:31.829 [debug] Fun returned result: %{variant: :leaf}
14:57:31.829 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.829 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.829 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.829 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.829 [debug] Executing bend with initial: 6
14:57:31.829 [debug] Executing fun with value: 6
14:57:31.829 [debug] Evaluating bend block with value: 6
14:57:31.829 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.829 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.829 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.829 [debug] Executing bend with initial: 7
14:57:31.829 [debug] Executing fun with value: 7
14:57:31.829 [debug] Evaluating bend block with value: 7
14:57:31.829 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.829 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.829 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.829 [debug] Executing bend with initial: 8
14:57:31.829 [debug] Executing fun with value: 8
14:57:31.829 [debug] Evaluating bend block with value: 8
14:57:31.829 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.829 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.829 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.829 [debug] Executing bend with initial: 9
14:57:31.829 [debug] Executing fun with value: 9
14:57:31.829 [debug] Evaluating bend block with value: 9
14:57:31.829 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.829 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.829 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.829 [debug] Executing bend with initial: 10
14:57:31.829 [debug] Executing fun with value: 10
14:57:31.829 [debug] Evaluating bend block with value: 10
14:57:31.829 [debug] Block returned: %{variant: :leaf}
14:57:31.829 [debug] Fun returned result: %{variant: :leaf}
14:57:31.829 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{variant: :leaf}
14:57:31.829 [debug] Executing bend with initial: 10
14:57:31.829 [debug] Executing fun with value: 10
14:57:31.829 [debug] Evaluating bend block with value: 10
14:57:31.829 [debug] Block returned: %{variant: :leaf}
14:57:31.829 [debug] Fun returned result: %{variant: :leaf}
14:57:31.829 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.829 [debug] Executing bend with initial: 9
14:57:31.829 [debug] Executing fun with value: 9
14:57:31.829 [debug] Evaluating bend block with value: 9
14:57:31.829 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.829 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.829 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.829 [debug] Executing bend with initial: 10
14:57:31.829 [debug] Executing fun with value: 10
14:57:31.829 [debug] Evaluating bend block with value: 10
14:57:31.829 [debug] Block returned: %{variant: :leaf}
14:57:31.829 [debug] Fun returned result: %{variant: :leaf}
14:57:31.829 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{variant: :leaf}
14:57:31.829 [debug] Executing bend with initial: 10
14:57:31.829 [debug] Executing fun with value: 10
14:57:31.829 [debug] Evaluating bend block with value: 10
14:57:31.829 [debug] Block returned: %{variant: :leaf}
14:57:31.829 [debug] Fun returned result: %{variant: :leaf}
14:57:31.829 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{variant: :leaf}
14:57:31.829 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.830 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.830 [debug] Executing bend with initial: 8
14:57:31.830 [debug] Executing fun with value: 8
14:57:31.830 [debug] Evaluating bend block with value: 8
14:57:31.830 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.830 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.830 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.830 [debug] Executing bend with initial: 9
14:57:31.830 [debug] Executing fun with value: 9
14:57:31.830 [debug] Evaluating bend block with value: 9
14:57:31.830 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.830 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.830 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.830 [debug] Executing bend with initial: 10
14:57:31.830 [debug] Executing fun with value: 10
14:57:31.830 [debug] Evaluating bend block with value: 10
14:57:31.830 [debug] Block returned: %{variant: :leaf}
14:57:31.830 [debug] Fun returned result: %{variant: :leaf}
14:57:31.830 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.830 [debug] do_bend final result: %{variant: :leaf}
14:57:31.830 [debug] Executing bend with initial: 10
14:57:31.830 [debug] Executing fun with value: 10
14:57:31.830 [debug] Evaluating bend block with value: 10
14:57:31.830 [debug] Block returned: %{variant: :leaf}
14:57:31.830 [debug] Fun returned result: %{variant: :leaf}
14:57:31.830 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.830 [debug] do_bend final result: %{variant: :leaf}
14:57:31.830 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.830 [debug] Executing bend with initial: 9
14:57:31.830 [debug] Executing fun with value: 9
14:57:31.830 [debug] Evaluating bend block with value: 9
14:57:31.830 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.830 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.830 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.830 [debug] Executing bend with initial: 10
14:57:31.830 [debug] Executing fun with value: 10
14:57:31.830 [debug] Evaluating bend block with value: 10
14:57:31.830 [debug] Block returned: %{variant: :leaf}
14:57:31.830 [debug] Fun returned result: %{variant: :leaf}
14:57:31.830 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.830 [debug] do_bend final result: %{variant: :leaf}
14:57:31.830 [debug] Executing bend with initial: 10
14:57:31.830 [debug] Executing fun with value: 10
14:57:31.830 [debug] Evaluating bend block with value: 10
14:57:31.830 [debug] Block returned: %{variant: :leaf}
14:57:31.830 [debug] Fun returned result: %{variant: :leaf}
14:57:31.830 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.830 [debug] do_bend final result: %{variant: :leaf}
14:57:31.830 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.830 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.830 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.830 [debug] Executing bend with initial: 7
14:57:31.830 [debug] Executing fun with value: 7
14:57:31.830 [debug] Evaluating bend block with value: 7
14:57:31.830 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.830 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.830 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.830 [debug] Executing bend with initial: 8
14:57:31.830 [debug] Executing fun with value: 8
14:57:31.830 [debug] Evaluating bend block with value: 8
14:57:31.830 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.830 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.830 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.831 [debug] Executing bend with initial: 9
14:57:31.831 [debug] Executing fun with value: 9
14:57:31.831 [debug] Evaluating bend block with value: 9
14:57:31.831 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Executing bend with initial: 10
14:57:31.831 [debug] Executing fun with value: 10
14:57:31.831 [debug] Evaluating bend block with value: 10
14:57:31.831 [debug] Block returned: %{variant: :leaf}
14:57:31.831 [debug] Fun returned result: %{variant: :leaf}
14:57:31.831 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.831 [debug] do_bend final result: %{variant: :leaf}
14:57:31.831 [debug] Executing bend with initial: 10
14:57:31.831 [debug] Executing fun with value: 10
14:57:31.831 [debug] Evaluating bend block with value: 10
14:57:31.831 [debug] Block returned: %{variant: :leaf}
14:57:31.831 [debug] Fun returned result: %{variant: :leaf}
14:57:31.831 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.831 [debug] do_bend final result: %{variant: :leaf}
14:57:31.831 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.831 [debug] Executing bend with initial: 9
14:57:31.831 [debug] Executing fun with value: 9
14:57:31.831 [debug] Evaluating bend block with value: 9
14:57:31.831 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Executing bend with initial: 10
14:57:31.831 [debug] Executing fun with value: 10
14:57:31.831 [debug] Evaluating bend block with value: 10
14:57:31.831 [debug] Block returned: %{variant: :leaf}
14:57:31.831 [debug] Fun returned result: %{variant: :leaf}
14:57:31.831 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.831 [debug] do_bend final result: %{variant: :leaf}
14:57:31.831 [debug] Executing bend with initial: 10
14:57:31.831 [debug] Executing fun with value: 10
14:57:31.831 [debug] Evaluating bend block with value: 10
14:57:31.831 [debug] Block returned: %{variant: :leaf}
14:57:31.831 [debug] Fun returned result: %{variant: :leaf}
14:57:31.831 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.831 [debug] do_bend final result: %{variant: :leaf}
14:57:31.831 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.831 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.831 [debug] Executing bend with initial: 8
14:57:31.831 [debug] Executing fun with value: 8
14:57:31.831 [debug] Evaluating bend block with value: 8
14:57:31.831 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.831 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.831 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.831 [debug] Executing bend with initial: 9
14:57:31.831 [debug] Executing fun with value: 9
14:57:31.831 [debug] Evaluating bend block with value: 9
14:57:31.831 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.831 [debug] Executing bend with initial: 10
14:57:31.831 [debug] Executing fun with value: 10
14:57:31.831 [debug] Evaluating bend block with value: 10
14:57:31.831 [debug] Block returned: %{variant: :leaf}
14:57:31.831 [debug] Fun returned result: %{variant: :leaf}
14:57:31.831 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.831 [debug] do_bend final result: %{variant: :leaf}
14:57:31.832 [debug] Executing bend with initial: 10
14:57:31.832 [debug] Executing fun with value: 10
14:57:31.832 [debug] Evaluating bend block with value: 10
14:57:31.832 [debug] Block returned: %{variant: :leaf}
14:57:31.832 [debug] Fun returned result: %{variant: :leaf}
14:57:31.832 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.832 [debug] do_bend final result: %{variant: :leaf}
14:57:31.832 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.832 [debug] Executing bend with initial: 9
14:57:31.832 [debug] Executing fun with value: 9
14:57:31.832 [debug] Evaluating bend block with value: 9
14:57:31.832 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.832 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.832 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.832 [debug] Executing bend with initial: 10
14:57:31.832 [debug] Executing fun with value: 10
14:57:31.832 [debug] Evaluating bend block with value: 10
14:57:31.832 [debug] Block returned: %{variant: :leaf}
14:57:31.832 [debug] Fun returned result: %{variant: :leaf}
14:57:31.832 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.832 [debug] do_bend final result: %{variant: :leaf}
14:57:31.832 [debug] Executing bend with initial: 10
14:57:31.832 [debug] Executing fun with value: 10
14:57:31.832 [debug] Evaluating bend block with value: 10
14:57:31.832 [debug] Block returned: %{variant: :leaf}
14:57:31.832 [debug] Fun returned result: %{variant: :leaf}
14:57:31.832 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.832 [debug] do_bend final result: %{variant: :leaf}
14:57:31.832 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.832 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.832 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.832 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.832 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.832 [debug] Executing bend with initial: 5
14:57:31.832 [debug] Executing fun with value: 5
14:57:31.833 [debug] Evaluating bend block with value: 5
14:57:31.833 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.833 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.833 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.833 [debug] Executing bend with initial: 6
14:57:31.833 [debug] Executing fun with value: 6
14:57:31.833 [debug] Evaluating bend block with value: 6
14:57:31.833 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.833 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.833 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.833 [debug] Executing bend with initial: 7
14:57:31.833 [debug] Executing fun with value: 7
14:57:31.833 [debug] Evaluating bend block with value: 7
14:57:31.833 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.833 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.833 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.833 [debug] Executing bend with initial: 8
14:57:31.833 [debug] Executing fun with value: 8
14:57:31.833 [debug] Evaluating bend block with value: 8
14:57:31.833 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.833 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.833 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.833 [debug] Executing bend with initial: 9
14:57:31.833 [debug] Executing fun with value: 9
14:57:31.833 [debug] Evaluating bend block with value: 9
14:57:31.833 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.833 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.833 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.833 [debug] Executing bend with initial: 10
14:57:31.833 [debug] Executing fun with value: 10
14:57:31.833 [debug] Evaluating bend block with value: 10
14:57:31.833 [debug] Block returned: %{variant: :leaf}
14:57:31.833 [debug] Fun returned result: %{variant: :leaf}
14:57:31.833 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.833 [debug] do_bend final result: %{variant: :leaf}
14:57:31.833 [debug] Executing bend with initial: 10
14:57:31.833 [debug] Executing fun with value: 10
14:57:31.833 [debug] Evaluating bend block with value: 10
14:57:31.833 [debug] Block returned: %{variant: :leaf}
14:57:31.833 [debug] Fun returned result: %{variant: :leaf}
14:57:31.833 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.833 [debug] do_bend final result: %{variant: :leaf}
14:57:31.833 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.833 [debug] Executing bend with initial: 9
14:57:31.833 [debug] Executing fun with value: 9
14:57:31.833 [debug] Evaluating bend block with value: 9
14:57:31.833 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.833 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.833 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.833 [debug] Executing bend with initial: 10
14:57:31.833 [debug] Executing fun with value: 10
14:57:31.833 [debug] Evaluating bend block with value: 10
14:57:31.833 [debug] Block returned: %{variant: :leaf}
14:57:31.833 [debug] Fun returned result: %{variant: :leaf}
14:57:31.835 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.835 [debug] do_bend final result: %{variant: :leaf}
14:57:31.835 [debug] Executing bend with initial: 10
14:57:31.835 [debug] Executing fun with value: 10
14:57:31.835 [debug] Evaluating bend block with value: 10
14:57:31.835 [debug] Block returned: %{variant: :leaf}
14:57:31.835 [debug] Fun returned result: %{variant: :leaf}
14:57:31.835 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.835 [debug] do_bend final result: %{variant: :leaf}
14:57:31.835 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.835 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.835 [debug] Executing bend with initial: 8
14:57:31.835 [debug] Executing fun with value: 8
14:57:31.835 [debug] Evaluating bend block with value: 8
14:57:31.835 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.835 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.835 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.835 [debug] Executing bend with initial: 9
14:57:31.835 [debug] Executing fun with value: 9
14:57:31.835 [debug] Evaluating bend block with value: 9
14:57:31.835 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.835 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.835 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.835 [debug] Executing bend with initial: 10
14:57:31.835 [debug] Executing fun with value: 10
14:57:31.835 [debug] Evaluating bend block with value: 10
14:57:31.836 [debug] Block returned: %{variant: :leaf}
14:57:31.836 [debug] Fun returned result: %{variant: :leaf}
14:57:31.836 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.836 [debug] do_bend final result: %{variant: :leaf}
14:57:31.836 [debug] Executing bend with initial: 10
14:57:31.836 [debug] Executing fun with value: 10
14:57:31.836 [debug] Evaluating bend block with value: 10
14:57:31.836 [debug] Block returned: %{variant: :leaf}
14:57:31.836 [debug] Fun returned result: %{variant: :leaf}
14:57:31.836 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.836 [debug] do_bend final result: %{variant: :leaf}
14:57:31.836 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.836 [debug] Executing bend with initial: 9
14:57:31.836 [debug] Executing fun with value: 9
14:57:31.836 [debug] Evaluating bend block with value: 9
14:57:31.836 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.836 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.836 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.836 [debug] Executing bend with initial: 10
14:57:31.836 [debug] Executing fun with value: 10
14:57:31.836 [debug] Evaluating bend block with value: 10
14:57:31.836 [debug] Block returned: %{variant: :leaf}
14:57:31.836 [debug] Fun returned result: %{variant: :leaf}
14:57:31.836 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.836 [debug] do_bend final result: %{variant: :leaf}
14:57:31.836 [debug] Executing bend with initial: 10
14:57:31.836 [debug] Executing fun with value: 10
14:57:31.836 [debug] Evaluating bend block with value: 10
14:57:31.836 [debug] Block returned: %{variant: :leaf}
14:57:31.836 [debug] Fun returned result: %{variant: :leaf}
14:57:31.836 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.836 [debug] do_bend final result: %{variant: :leaf}
14:57:31.836 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.836 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.836 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.836 [debug] Executing bend with initial: 7
14:57:31.836 [debug] Executing fun with value: 7
14:57:31.836 [debug] Evaluating bend block with value: 7
14:57:31.836 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.836 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.836 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.836 [debug] Executing bend with initial: 8
14:57:31.836 [debug] Executing fun with value: 8
14:57:31.836 [debug] Evaluating bend block with value: 8
14:57:31.836 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.836 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.836 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.836 [debug] Executing bend with initial: 9
14:57:31.836 [debug] Executing fun with value: 9
14:57:31.836 [debug] Evaluating bend block with value: 9
14:57:31.836 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.836 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.836 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.836 [debug] Executing bend with initial: 10
14:57:31.836 [debug] Executing fun with value: 10
14:57:31.836 [debug] Evaluating bend block with value: 10
14:57:31.836 [debug] Block returned: %{variant: :leaf}
14:57:31.836 [debug] Fun returned result: %{variant: :leaf}
14:57:31.836 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.836 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] Executing bend with initial: 10
14:57:31.837 [debug] Executing fun with value: 10
14:57:31.837 [debug] Evaluating bend block with value: 10
14:57:31.837 [debug] Block returned: %{variant: :leaf}
14:57:31.837 [debug] Fun returned result: %{variant: :leaf}
14:57:31.837 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.837 [debug] Executing bend with initial: 9
14:57:31.837 [debug] Executing fun with value: 9
14:57:31.837 [debug] Evaluating bend block with value: 9
14:57:31.837 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Executing bend with initial: 10
14:57:31.837 [debug] Executing fun with value: 10
14:57:31.837 [debug] Evaluating bend block with value: 10
14:57:31.837 [debug] Block returned: %{variant: :leaf}
14:57:31.837 [debug] Fun returned result: %{variant: :leaf}
14:57:31.837 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] Executing bend with initial: 10
14:57:31.837 [debug] Executing fun with value: 10
14:57:31.837 [debug] Evaluating bend block with value: 10
14:57:31.837 [debug] Block returned: %{variant: :leaf}
14:57:31.837 [debug] Fun returned result: %{variant: :leaf}
14:57:31.837 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.837 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.837 [debug] Executing bend with initial: 8
14:57:31.837 [debug] Executing fun with value: 8
14:57:31.837 [debug] Evaluating bend block with value: 8
14:57:31.837 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.837 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.837 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.837 [debug] Executing bend with initial: 9
14:57:31.837 [debug] Executing fun with value: 9
14:57:31.837 [debug] Evaluating bend block with value: 9
14:57:31.837 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Executing bend with initial: 10
14:57:31.837 [debug] Executing fun with value: 10
14:57:31.837 [debug] Evaluating bend block with value: 10
14:57:31.837 [debug] Block returned: %{variant: :leaf}
14:57:31.837 [debug] Fun returned result: %{variant: :leaf}
14:57:31.837 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] Executing bend with initial: 10
14:57:31.837 [debug] Executing fun with value: 10
14:57:31.837 [debug] Evaluating bend block with value: 10
14:57:31.837 [debug] Block returned: %{variant: :leaf}
14:57:31.837 [debug] Fun returned result: %{variant: :leaf}
14:57:31.837 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.837 [debug] Executing bend with initial: 9
14:57:31.837 [debug] Executing fun with value: 9
14:57:31.837 [debug] Evaluating bend block with value: 9
14:57:31.837 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.837 [debug] Executing bend with initial: 10
14:57:31.837 [debug] Executing fun with value: 10
14:57:31.837 [debug] Evaluating bend block with value: 10
14:57:31.837 [debug] Block returned: %{variant: :leaf}
14:57:31.837 [debug] Fun returned result: %{variant: :leaf}
14:57:31.837 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] Executing bend with initial: 10
14:57:31.837 [debug] Executing fun with value: 10
14:57:31.837 [debug] Evaluating bend block with value: 10
14:57:31.837 [debug] Block returned: %{variant: :leaf}
14:57:31.837 [debug] Fun returned result: %{variant: :leaf}
14:57:31.837 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{variant: :leaf}
14:57:31.837 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.837 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.837 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.838 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 6
14:57:31.838 [debug] Executing fun with value: 6
14:57:31.838 [debug] Evaluating bend block with value: 6
14:57:31.838 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.838 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.838 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 7
14:57:31.838 [debug] Executing fun with value: 7
14:57:31.838 [debug] Evaluating bend block with value: 7
14:57:31.838 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.838 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.838 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 8
14:57:31.838 [debug] Executing fun with value: 8
14:57:31.838 [debug] Evaluating bend block with value: 8
14:57:31.838 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.838 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.838 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 9
14:57:31.838 [debug] Executing fun with value: 9
14:57:31.838 [debug] Evaluating bend block with value: 9
14:57:31.838 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 10
14:57:31.838 [debug] Executing fun with value: 10
14:57:31.838 [debug] Evaluating bend block with value: 10
14:57:31.838 [debug] Block returned: %{variant: :leaf}
14:57:31.838 [debug] Fun returned result: %{variant: :leaf}
14:57:31.838 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.838 [debug] do_bend final result: %{variant: :leaf}
14:57:31.838 [debug] Executing bend with initial: 10
14:57:31.838 [debug] Executing fun with value: 10
14:57:31.838 [debug] Evaluating bend block with value: 10
14:57:31.838 [debug] Block returned: %{variant: :leaf}
14:57:31.838 [debug] Fun returned result: %{variant: :leaf}
14:57:31.838 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.838 [debug] do_bend final result: %{variant: :leaf}
14:57:31.838 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 9
14:57:31.838 [debug] Executing fun with value: 9
14:57:31.838 [debug] Evaluating bend block with value: 9
14:57:31.838 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 10
14:57:31.838 [debug] Executing fun with value: 10
14:57:31.838 [debug] Evaluating bend block with value: 10
14:57:31.838 [debug] Block returned: %{variant: :leaf}
14:57:31.838 [debug] Fun returned result: %{variant: :leaf}
14:57:31.838 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.838 [debug] do_bend final result: %{variant: :leaf}
14:57:31.838 [debug] Executing bend with initial: 10
14:57:31.838 [debug] Executing fun with value: 10
14:57:31.838 [debug] Evaluating bend block with value: 10
14:57:31.838 [debug] Block returned: %{variant: :leaf}
14:57:31.838 [debug] Fun returned result: %{variant: :leaf}
14:57:31.838 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.838 [debug] do_bend final result: %{variant: :leaf}
14:57:31.838 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.838 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 8
14:57:31.838 [debug] Executing fun with value: 8
14:57:31.838 [debug] Evaluating bend block with value: 8
14:57:31.838 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.838 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.838 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 9
14:57:31.838 [debug] Executing fun with value: 9
14:57:31.838 [debug] Evaluating bend block with value: 9
14:57:31.838 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.838 [debug] Executing bend with initial: 10
14:57:31.838 [debug] Executing fun with value: 10
14:57:31.838 [debug] Evaluating bend block with value: 10
14:57:31.838 [debug] Block returned: %{variant: :leaf}
14:57:31.838 [debug] Fun returned result: %{variant: :leaf}
14:57:31.838 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.838 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 9
14:57:31.839 [debug] Executing fun with value: 9
14:57:31.839 [debug] Evaluating bend block with value: 9
14:57:31.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.839 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.839 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 7
14:57:31.839 [debug] Executing fun with value: 7
14:57:31.839 [debug] Evaluating bend block with value: 7
14:57:31.839 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.839 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.839 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 8
14:57:31.839 [debug] Executing fun with value: 8
14:57:31.839 [debug] Evaluating bend block with value: 8
14:57:31.839 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.839 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.839 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 9
14:57:31.839 [debug] Executing fun with value: 9
14:57:31.839 [debug] Evaluating bend block with value: 9
14:57:31.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 9
14:57:31.839 [debug] Executing fun with value: 9
14:57:31.839 [debug] Evaluating bend block with value: 9
14:57:31.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.839 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 8
14:57:31.839 [debug] Executing fun with value: 8
14:57:31.839 [debug] Evaluating bend block with value: 8
14:57:31.839 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.839 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.839 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 9
14:57:31.839 [debug] Executing fun with value: 9
14:57:31.839 [debug] Evaluating bend block with value: 9
14:57:31.839 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.839 [debug] Executing bend with initial: 10
14:57:31.839 [debug] Executing fun with value: 10
14:57:31.839 [debug] Evaluating bend block with value: 10
14:57:31.839 [debug] Block returned: %{variant: :leaf}
14:57:31.839 [debug] Fun returned result: %{variant: :leaf}
14:57:31.839 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.839 [debug] do_bend final result: %{variant: :leaf}
14:57:31.840 [debug] Executing bend with initial: 10
14:57:31.840 [debug] Executing fun with value: 10
14:57:31.840 [debug] Evaluating bend block with value: 10
14:57:31.840 [debug] Block returned: %{variant: :leaf}
14:57:31.840 [debug] Fun returned result: %{variant: :leaf}
14:57:31.840 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.840 [debug] do_bend final result: %{variant: :leaf}
14:57:31.840 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.840 [debug] Executing bend with initial: 9
14:57:31.840 [debug] Executing fun with value: 9
14:57:31.840 [debug] Evaluating bend block with value: 9
14:57:31.840 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.840 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.840 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.840 [debug] Executing bend with initial: 10
14:57:31.840 [debug] Executing fun with value: 10
14:57:31.840 [debug] Evaluating bend block with value: 10
14:57:31.840 [debug] Block returned: %{variant: :leaf}
14:57:31.840 [debug] Fun returned result: %{variant: :leaf}
14:57:31.840 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.840 [debug] do_bend final result: %{variant: :leaf}
14:57:31.840 [debug] Executing bend with initial: 10
14:57:31.840 [debug] Executing fun with value: 10
14:57:31.840 [debug] Evaluating bend block with value: 10
14:57:31.840 [debug] Block returned: %{variant: :leaf}
14:57:31.840 [debug] Fun returned result: %{variant: :leaf}
14:57:31.840 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.840 [debug] do_bend final result: %{variant: :leaf}
14:57:31.840 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.840 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.840 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.840 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.840 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.840 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.841 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.842 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
14:57:31.842 [debug] Executing bend with initial: 2
14:57:31.842 [debug] Executing fun with value: 2
14:57:31.842 [debug] Evaluating bend block with value: 2
14:57:31.842 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.842 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.842 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
14:57:31.842 [debug] Executing bend with initial: 3
14:57:31.842 [debug] Executing fun with value: 3
14:57:31.842 [debug] Evaluating bend block with value: 3
14:57:31.842 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 4
14:57:31.843 [debug] Executing fun with value: 4
14:57:31.843 [debug] Evaluating bend block with value: 4
14:57:31.843 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 5
14:57:31.843 [debug] Executing fun with value: 5
14:57:31.843 [debug] Evaluating bend block with value: 5
14:57:31.843 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 6
14:57:31.843 [debug] Executing fun with value: 6
14:57:31.843 [debug] Evaluating bend block with value: 6
14:57:31.843 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 7
14:57:31.843 [debug] Executing fun with value: 7
14:57:31.843 [debug] Evaluating bend block with value: 7
14:57:31.843 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 8
14:57:31.843 [debug] Executing fun with value: 8
14:57:31.843 [debug] Evaluating bend block with value: 8
14:57:31.843 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 9
14:57:31.843 [debug] Executing fun with value: 9
14:57:31.843 [debug] Evaluating bend block with value: 9
14:57:31.843 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 10
14:57:31.843 [debug] Executing fun with value: 10
14:57:31.843 [debug] Evaluating bend block with value: 10
14:57:31.843 [debug] Block returned: %{variant: :leaf}
14:57:31.843 [debug] Fun returned result: %{variant: :leaf}
14:57:31.843 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.843 [debug] do_bend final result: %{variant: :leaf}
14:57:31.843 [debug] Executing bend with initial: 10
14:57:31.843 [debug] Executing fun with value: 10
14:57:31.843 [debug] Evaluating bend block with value: 10
14:57:31.843 [debug] Block returned: %{variant: :leaf}
14:57:31.843 [debug] Fun returned result: %{variant: :leaf}
14:57:31.843 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.843 [debug] do_bend final result: %{variant: :leaf}
14:57:31.843 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 9
14:57:31.843 [debug] Executing fun with value: 9
14:57:31.843 [debug] Evaluating bend block with value: 9
14:57:31.843 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 10
14:57:31.843 [debug] Executing fun with value: 10
14:57:31.843 [debug] Evaluating bend block with value: 10
14:57:31.843 [debug] Block returned: %{variant: :leaf}
14:57:31.843 [debug] Fun returned result: %{variant: :leaf}
14:57:31.843 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.843 [debug] do_bend final result: %{variant: :leaf}
14:57:31.843 [debug] Executing bend with initial: 10
14:57:31.843 [debug] Executing fun with value: 10
14:57:31.843 [debug] Evaluating bend block with value: 10
14:57:31.843 [debug] Block returned: %{variant: :leaf}
14:57:31.843 [debug] Fun returned result: %{variant: :leaf}
14:57:31.843 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.843 [debug] do_bend final result: %{variant: :leaf}
14:57:31.843 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.843 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 8
14:57:31.843 [debug] Executing fun with value: 8
14:57:31.843 [debug] Evaluating bend block with value: 8
14:57:31.843 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.843 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.843 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.843 [debug] Executing bend with initial: 9
14:57:31.843 [debug] Executing fun with value: 9
14:57:31.844 [debug] Evaluating bend block with value: 9
14:57:31.844 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.844 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.844 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.844 [debug] Executing bend with initial: 10
14:57:31.844 [debug] Executing fun with value: 10
14:57:31.844 [debug] Evaluating bend block with value: 10
14:57:31.844 [debug] Block returned: %{variant: :leaf}
14:57:31.844 [debug] Fun returned result: %{variant: :leaf}
14:57:31.844 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.844 [debug] do_bend final result: %{variant: :leaf}
14:57:31.844 [debug] Executing bend with initial: 10
14:57:31.844 [debug] Executing fun with value: 10
14:57:31.844 [debug] Evaluating bend block with value: 10
14:57:31.844 [debug] Block returned: %{variant: :leaf}
14:57:31.844 [debug] Fun returned result: %{variant: :leaf}
14:57:31.844 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.844 [debug] do_bend final result: %{variant: :leaf}
14:57:31.844 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.844 [debug] Executing bend with initial: 9
14:57:31.844 [debug] Executing fun with value: 9
14:57:31.844 [debug] Evaluating bend block with value: 9
14:57:31.844 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.845 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.845 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.845 [debug] Executing bend with initial: 10
14:57:31.845 [debug] Executing fun with value: 10
14:57:31.845 [debug] Evaluating bend block with value: 10
14:57:31.845 [debug] Block returned: %{variant: :leaf}
14:57:31.845 [debug] Fun returned result: %{variant: :leaf}
14:57:31.845 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.845 [debug] do_bend final result: %{variant: :leaf}
14:57:31.845 [debug] Executing bend with initial: 10
14:57:31.845 [debug] Executing fun with value: 10
14:57:31.845 [debug] Evaluating bend block with value: 10
14:57:31.845 [debug] Block returned: %{variant: :leaf}
14:57:31.845 [debug] Fun returned result: %{variant: :leaf}
14:57:31.845 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.845 [debug] do_bend final result: %{variant: :leaf}
14:57:31.845 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.845 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.845 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.845 [debug] Executing bend with initial: 7
14:57:31.845 [debug] Executing fun with value: 7
14:57:31.845 [debug] Evaluating bend block with value: 7
14:57:31.845 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.845 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.845 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.845 [debug] Executing bend with initial: 8
14:57:31.845 [debug] Executing fun with value: 8
14:57:31.845 [debug] Evaluating bend block with value: 8
14:57:31.845 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.845 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.845 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.845 [debug] Executing bend with initial: 9
14:57:31.845 [debug] Executing fun with value: 9
14:57:31.845 [debug] Evaluating bend block with value: 9
14:57:31.845 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.845 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.845 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.845 [debug] Executing bend with initial: 10
14:57:31.845 [debug] Executing fun with value: 10
14:57:31.845 [debug] Evaluating bend block with value: 10
14:57:31.845 [debug] Block returned: %{variant: :leaf}
14:57:31.845 [debug] Fun returned result: %{variant: :leaf}
14:57:31.845 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.845 [debug] do_bend final result: %{variant: :leaf}
14:57:31.845 [debug] Executing bend with initial: 10
14:57:31.845 [debug] Executing fun with value: 10
14:57:31.845 [debug] Evaluating bend block with value: 10
14:57:31.845 [debug] Block returned: %{variant: :leaf}
14:57:31.845 [debug] Fun returned result: %{variant: :leaf}
14:57:31.847 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.847 [debug] do_bend final result: %{variant: :leaf}
14:57:31.847 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.847 [debug] Executing bend with initial: 9
14:57:31.847 [debug] Executing fun with value: 9
14:57:31.847 [debug] Evaluating bend block with value: 9
14:57:31.847 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.847 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.847 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.847 [debug] Executing bend with initial: 10
14:57:31.847 [debug] Executing fun with value: 10
14:57:31.847 [debug] Evaluating bend block with value: 10
14:57:31.847 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.848 [debug] Executing bend with initial: 10
14:57:31.848 [debug] Executing fun with value: 10
14:57:31.848 [debug] Evaluating bend block with value: 10
14:57:31.848 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.848 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 8
14:57:31.848 [debug] Executing fun with value: 8
14:57:31.848 [debug] Evaluating bend block with value: 8
14:57:31.848 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.848 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.848 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 9
14:57:31.848 [debug] Executing fun with value: 9
14:57:31.848 [debug] Evaluating bend block with value: 9
14:57:31.848 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 10
14:57:31.848 [debug] Executing fun with value: 10
14:57:31.848 [debug] Evaluating bend block with value: 10
14:57:31.848 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.848 [debug] Executing bend with initial: 10
14:57:31.848 [debug] Executing fun with value: 10
14:57:31.848 [debug] Evaluating bend block with value: 10
14:57:31.848 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 9
14:57:31.848 [debug] Executing fun with value: 9
14:57:31.848 [debug] Evaluating bend block with value: 9
14:57:31.848 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 10
14:57:31.848 [debug] Executing fun with value: 10
14:57:31.848 [debug] Evaluating bend block with value: 10
14:57:31.848 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.848 [debug] Executing bend with initial: 10
14:57:31.848 [debug] Executing fun with value: 10
14:57:31.848 [debug] Evaluating bend block with value: 10
14:57:31.848 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.848 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.848 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.848 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 6
14:57:31.848 [debug] Executing fun with value: 6
14:57:31.848 [debug] Evaluating bend block with value: 6
14:57:31.848 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.848 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.848 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 7
14:57:31.848 [debug] Executing fun with value: 7
14:57:31.848 [debug] Evaluating bend block with value: 7
14:57:31.848 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.848 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.848 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 8
14:57:31.848 [debug] Executing fun with value: 8
14:57:31.848 [debug] Evaluating bend block with value: 8
14:57:31.848 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.848 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.848 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 9
14:57:31.848 [debug] Executing fun with value: 9
14:57:31.848 [debug] Evaluating bend block with value: 9
14:57:31.848 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.848 [debug] Executing bend with initial: 10
14:57:31.848 [debug] Executing fun with value: 10
14:57:31.848 [debug] Evaluating bend block with value: 10
14:57:31.848 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.848 [debug] Executing bend with initial: 10
14:57:31.848 [debug] Executing fun with value: 10
14:57:31.848 [debug] Evaluating bend block with value: 10
14:57:31.848 [debug] Block returned: %{variant: :leaf}
14:57:31.848 [debug] Fun returned result: %{variant: :leaf}
14:57:31.848 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.848 [debug] do_bend final result: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 9
14:57:31.849 [debug] Executing fun with value: 9
14:57:31.849 [debug] Evaluating bend block with value: 9
14:57:31.849 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 10
14:57:31.849 [debug] Executing fun with value: 10
14:57:31.849 [debug] Evaluating bend block with value: 10
14:57:31.849 [debug] Block returned: %{variant: :leaf}
14:57:31.849 [debug] Fun returned result: %{variant: :leaf}
14:57:31.849 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{variant: :leaf}
14:57:31.849 [debug] Executing bend with initial: 10
14:57:31.849 [debug] Executing fun with value: 10
14:57:31.849 [debug] Evaluating bend block with value: 10
14:57:31.849 [debug] Block returned: %{variant: :leaf}
14:57:31.849 [debug] Fun returned result: %{variant: :leaf}
14:57:31.849 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.849 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 8
14:57:31.849 [debug] Executing fun with value: 8
14:57:31.849 [debug] Evaluating bend block with value: 8
14:57:31.849 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.849 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.849 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 9
14:57:31.849 [debug] Executing fun with value: 9
14:57:31.849 [debug] Evaluating bend block with value: 9
14:57:31.849 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 10
14:57:31.849 [debug] Executing fun with value: 10
14:57:31.849 [debug] Evaluating bend block with value: 10
14:57:31.849 [debug] Block returned: %{variant: :leaf}
14:57:31.849 [debug] Fun returned result: %{variant: :leaf}
14:57:31.849 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{variant: :leaf}
14:57:31.849 [debug] Executing bend with initial: 10
14:57:31.849 [debug] Executing fun with value: 10
14:57:31.849 [debug] Evaluating bend block with value: 10
14:57:31.849 [debug] Block returned: %{variant: :leaf}
14:57:31.849 [debug] Fun returned result: %{variant: :leaf}
14:57:31.849 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 9
14:57:31.849 [debug] Executing fun with value: 9
14:57:31.849 [debug] Evaluating bend block with value: 9
14:57:31.849 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 10
14:57:31.849 [debug] Executing fun with value: 10
14:57:31.849 [debug] Evaluating bend block with value: 10
14:57:31.849 [debug] Block returned: %{variant: :leaf}
14:57:31.849 [debug] Fun returned result: %{variant: :leaf}
14:57:31.849 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{variant: :leaf}
14:57:31.849 [debug] Executing bend with initial: 10
14:57:31.849 [debug] Executing fun with value: 10
14:57:31.849 [debug] Evaluating bend block with value: 10
14:57:31.849 [debug] Block returned: %{variant: :leaf}
14:57:31.849 [debug] Fun returned result: %{variant: :leaf}
14:57:31.849 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{variant: :leaf}
14:57:31.849 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.849 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.849 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 7
14:57:31.849 [debug] Executing fun with value: 7
14:57:31.849 [debug] Evaluating bend block with value: 7
14:57:31.849 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.849 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.849 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 8
14:57:31.849 [debug] Executing fun with value: 8
14:57:31.849 [debug] Evaluating bend block with value: 8
14:57:31.849 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.849 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.849 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.849 [debug] Executing bend with initial: 9
14:57:31.850 [debug] Executing fun with value: 9
14:57:31.850 [debug] Evaluating bend block with value: 9
14:57:31.850 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.850 [debug] Fun returned result: %{variant: :leaf}
14:57:31.850 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{variant: :leaf}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.850 [debug] Fun returned result: %{variant: :leaf}
14:57:31.850 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 9
14:57:31.850 [debug] Executing fun with value: 9
14:57:31.850 [debug] Evaluating bend block with value: 9
14:57:31.850 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.850 [debug] Fun returned result: %{variant: :leaf}
14:57:31.850 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{variant: :leaf}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.850 [debug] Fun returned result: %{variant: :leaf}
14:57:31.850 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.850 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 8
14:57:31.850 [debug] Executing fun with value: 8
14:57:31.850 [debug] Evaluating bend block with value: 8
14:57:31.850 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.850 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.850 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 9
14:57:31.850 [debug] Executing fun with value: 9
14:57:31.850 [debug] Evaluating bend block with value: 9
14:57:31.850 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.850 [debug] Fun returned result: %{variant: :leaf}
14:57:31.850 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{variant: :leaf}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.850 [debug] Fun returned result: %{variant: :leaf}
14:57:31.850 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 9
14:57:31.850 [debug] Executing fun with value: 9
14:57:31.850 [debug] Evaluating bend block with value: 9
14:57:31.850 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.850 [debug] Fun returned result: %{variant: :leaf}
14:57:31.850 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.850 [debug] do_bend final result: %{variant: :leaf}
14:57:31.850 [debug] Executing bend with initial: 10
14:57:31.850 [debug] Executing fun with value: 10
14:57:31.850 [debug] Evaluating bend block with value: 10
14:57:31.850 [debug] Block returned: %{variant: :leaf}
14:57:31.851 [debug] Fun returned result: %{variant: :leaf}
14:57:31.851 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.851 [debug] do_bend final result: %{variant: :leaf}
14:57:31.851 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.851 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.851 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.851 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.851 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 5
14:57:31.851 [debug] Executing fun with value: 5
14:57:31.851 [debug] Evaluating bend block with value: 5
14:57:31.851 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.851 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.851 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 6
14:57:31.851 [debug] Executing fun with value: 6
14:57:31.851 [debug] Evaluating bend block with value: 6
14:57:31.851 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.851 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.851 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 7
14:57:31.851 [debug] Executing fun with value: 7
14:57:31.851 [debug] Evaluating bend block with value: 7
14:57:31.851 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.851 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.851 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 8
14:57:31.851 [debug] Executing fun with value: 8
14:57:31.851 [debug] Evaluating bend block with value: 8
14:57:31.851 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.851 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.851 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 9
14:57:31.851 [debug] Executing fun with value: 9
14:57:31.851 [debug] Evaluating bend block with value: 9
14:57:31.851 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.851 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.851 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 10
14:57:31.851 [debug] Executing fun with value: 10
14:57:31.851 [debug] Evaluating bend block with value: 10
14:57:31.851 [debug] Block returned: %{variant: :leaf}
14:57:31.851 [debug] Fun returned result: %{variant: :leaf}
14:57:31.851 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.851 [debug] do_bend final result: %{variant: :leaf}
14:57:31.851 [debug] Executing bend with initial: 10
14:57:31.851 [debug] Executing fun with value: 10
14:57:31.851 [debug] Evaluating bend block with value: 10
14:57:31.851 [debug] Block returned: %{variant: :leaf}
14:57:31.851 [debug] Fun returned result: %{variant: :leaf}
14:57:31.851 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.851 [debug] do_bend final result: %{variant: :leaf}
14:57:31.851 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 9
14:57:31.851 [debug] Executing fun with value: 9
14:57:31.851 [debug] Evaluating bend block with value: 9
14:57:31.851 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.851 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.851 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.851 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{variant: :leaf}
14:57:31.852 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.852 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 8
14:57:31.852 [debug] Executing fun with value: 8
14:57:31.852 [debug] Evaluating bend block with value: 8
14:57:31.852 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.852 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.852 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 9
14:57:31.852 [debug] Executing fun with value: 9
14:57:31.852 [debug] Evaluating bend block with value: 9
14:57:31.852 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{variant: :leaf}
14:57:31.852 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 9
14:57:31.852 [debug] Executing fun with value: 9
14:57:31.852 [debug] Evaluating bend block with value: 9
14:57:31.852 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{variant: :leaf}
14:57:31.852 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.852 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.852 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 7
14:57:31.852 [debug] Executing fun with value: 7
14:57:31.852 [debug] Evaluating bend block with value: 7
14:57:31.852 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.852 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.852 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 8
14:57:31.852 [debug] Executing fun with value: 8
14:57:31.852 [debug] Evaluating bend block with value: 8
14:57:31.852 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.852 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.852 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 9
14:57:31.852 [debug] Executing fun with value: 9
14:57:31.852 [debug] Evaluating bend block with value: 9
14:57:31.852 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.852 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.852 [debug] do_bend final result: %{variant: :leaf}
14:57:31.852 [debug] Executing bend with initial: 10
14:57:31.852 [debug] Executing fun with value: 10
14:57:31.852 [debug] Evaluating bend block with value: 10
14:57:31.852 [debug] Block returned: %{variant: :leaf}
14:57:31.852 [debug] Fun returned result: %{variant: :leaf}
14:57:31.852 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 9
14:57:31.853 [debug] Executing fun with value: 9
14:57:31.853 [debug] Evaluating bend block with value: 9
14:57:31.853 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 10
14:57:31.853 [debug] Executing fun with value: 10
14:57:31.853 [debug] Evaluating bend block with value: 10
14:57:31.853 [debug] Block returned: %{variant: :leaf}
14:57:31.853 [debug] Fun returned result: %{variant: :leaf}
14:57:31.853 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{variant: :leaf}
14:57:31.853 [debug] Executing bend with initial: 10
14:57:31.853 [debug] Executing fun with value: 10
14:57:31.853 [debug] Evaluating bend block with value: 10
14:57:31.853 [debug] Block returned: %{variant: :leaf}
14:57:31.853 [debug] Fun returned result: %{variant: :leaf}
14:57:31.853 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.853 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 8
14:57:31.853 [debug] Executing fun with value: 8
14:57:31.853 [debug] Evaluating bend block with value: 8
14:57:31.853 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.853 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.853 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 9
14:57:31.853 [debug] Executing fun with value: 9
14:57:31.853 [debug] Evaluating bend block with value: 9
14:57:31.853 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 10
14:57:31.853 [debug] Executing fun with value: 10
14:57:31.853 [debug] Evaluating bend block with value: 10
14:57:31.853 [debug] Block returned: %{variant: :leaf}
14:57:31.853 [debug] Fun returned result: %{variant: :leaf}
14:57:31.853 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{variant: :leaf}
14:57:31.853 [debug] Executing bend with initial: 10
14:57:31.853 [debug] Executing fun with value: 10
14:57:31.853 [debug] Evaluating bend block with value: 10
14:57:31.853 [debug] Block returned: %{variant: :leaf}
14:57:31.853 [debug] Fun returned result: %{variant: :leaf}
14:57:31.853 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 9
14:57:31.853 [debug] Executing fun with value: 9
14:57:31.853 [debug] Evaluating bend block with value: 9
14:57:31.853 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 10
14:57:31.853 [debug] Executing fun with value: 10
14:57:31.853 [debug] Evaluating bend block with value: 10
14:57:31.853 [debug] Block returned: %{variant: :leaf}
14:57:31.853 [debug] Fun returned result: %{variant: :leaf}
14:57:31.853 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{variant: :leaf}
14:57:31.853 [debug] Executing bend with initial: 10
14:57:31.853 [debug] Executing fun with value: 10
14:57:31.853 [debug] Evaluating bend block with value: 10
14:57:31.853 [debug] Block returned: %{variant: :leaf}
14:57:31.853 [debug] Fun returned result: %{variant: :leaf}
14:57:31.853 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{variant: :leaf}
14:57:31.853 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.853 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.853 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.853 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.853 [debug] Executing bend with initial: 6
14:57:31.853 [debug] Executing fun with value: 6
14:57:31.853 [debug] Evaluating bend block with value: 6
14:57:31.853 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.854 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.854 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.854 [debug] Executing bend with initial: 7
14:57:31.854 [debug] Executing fun with value: 7
14:57:31.854 [debug] Evaluating bend block with value: 7
14:57:31.854 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.854 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.854 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.854 [debug] Executing bend with initial: 8
14:57:31.854 [debug] Executing fun with value: 8
14:57:31.854 [debug] Evaluating bend block with value: 8
14:57:31.854 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.854 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.854 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.854 [debug] Executing bend with initial: 9
14:57:31.854 [debug] Executing fun with value: 9
14:57:31.854 [debug] Evaluating bend block with value: 9
14:57:31.854 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.854 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.854 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.854 [debug] Executing bend with initial: 10
14:57:31.854 [debug] Executing fun with value: 10
14:57:31.854 [debug] Evaluating bend block with value: 10
14:57:31.854 [debug] Block returned: %{variant: :leaf}
14:57:31.854 [debug] Fun returned result: %{variant: :leaf}
14:57:31.854 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.854 [debug] do_bend final result: %{variant: :leaf}
14:57:31.854 [debug] Executing bend with initial: 10
14:57:31.854 [debug] Executing fun with value: 10
14:57:31.854 [debug] Evaluating bend block with value: 10
14:57:31.854 [debug] Block returned: %{variant: :leaf}
14:57:31.854 [debug] Fun returned result: %{variant: :leaf}
14:57:31.854 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.854 [debug] do_bend final result: %{variant: :leaf}
14:57:31.854 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.854 [debug] Executing bend with initial: 9
14:57:31.854 [debug] Executing fun with value: 9
14:57:31.855 [debug] Evaluating bend block with value: 9
14:57:31.855 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.855 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.855 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.855 [debug] Executing bend with initial: 10
14:57:31.855 [debug] Executing fun with value: 10
14:57:31.855 [debug] Evaluating bend block with value: 10
14:57:31.855 [debug] Block returned: %{variant: :leaf}
14:57:31.855 [debug] Fun returned result: %{variant: :leaf}
14:57:31.855 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.855 [debug] do_bend final result: %{variant: :leaf}
14:57:31.855 [debug] Executing bend with initial: 10
14:57:31.855 [debug] Executing fun with value: 10
14:57:31.855 [debug] Evaluating bend block with value: 10
14:57:31.855 [debug] Block returned: %{variant: :leaf}
14:57:31.855 [debug] Fun returned result: %{variant: :leaf}
14:57:31.855 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.855 [debug] do_bend final result: %{variant: :leaf}
14:57:31.855 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.855 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.855 [debug] Executing bend with initial: 8
14:57:31.855 [debug] Executing fun with value: 8
14:57:31.855 [debug] Evaluating bend block with value: 8
14:57:31.855 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.855 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.855 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.855 [debug] Executing bend with initial: 9
14:57:31.855 [debug] Executing fun with value: 9
14:57:31.855 [debug] Evaluating bend block with value: 9
14:57:31.856 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Executing bend with initial: 10
14:57:31.856 [debug] Executing fun with value: 10
14:57:31.856 [debug] Evaluating bend block with value: 10
14:57:31.856 [debug] Block returned: %{variant: :leaf}
14:57:31.856 [debug] Fun returned result: %{variant: :leaf}
14:57:31.856 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.856 [debug] do_bend final result: %{variant: :leaf}
14:57:31.856 [debug] Executing bend with initial: 10
14:57:31.856 [debug] Executing fun with value: 10
14:57:31.856 [debug] Evaluating bend block with value: 10
14:57:31.856 [debug] Block returned: %{variant: :leaf}
14:57:31.856 [debug] Fun returned result: %{variant: :leaf}
14:57:31.856 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.856 [debug] do_bend final result: %{variant: :leaf}
14:57:31.856 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.856 [debug] Executing bend with initial: 9
14:57:31.856 [debug] Executing fun with value: 9
14:57:31.856 [debug] Evaluating bend block with value: 9
14:57:31.856 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Executing bend with initial: 10
14:57:31.856 [debug] Executing fun with value: 10
14:57:31.856 [debug] Evaluating bend block with value: 10
14:57:31.856 [debug] Block returned: %{variant: :leaf}
14:57:31.856 [debug] Fun returned result: %{variant: :leaf}
14:57:31.856 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.856 [debug] do_bend final result: %{variant: :leaf}
14:57:31.856 [debug] Executing bend with initial: 10
14:57:31.856 [debug] Executing fun with value: 10
14:57:31.856 [debug] Evaluating bend block with value: 10
14:57:31.856 [debug] Block returned: %{variant: :leaf}
14:57:31.856 [debug] Fun returned result: %{variant: :leaf}
14:57:31.856 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.856 [debug] do_bend final result: %{variant: :leaf}
14:57:31.856 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.856 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.856 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.856 [debug] Executing bend with initial: 7
14:57:31.856 [debug] Executing fun with value: 7
14:57:31.856 [debug] Evaluating bend block with value: 7
14:57:31.856 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.856 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.856 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.856 [debug] Executing bend with initial: 8
14:57:31.856 [debug] Executing fun with value: 8
14:57:31.856 [debug] Evaluating bend block with value: 8
14:57:31.856 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.856 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.856 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.856 [debug] Executing bend with initial: 9
14:57:31.856 [debug] Executing fun with value: 9
14:57:31.856 [debug] Evaluating bend block with value: 9
14:57:31.856 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.856 [debug] Executing bend with initial: 10
14:57:31.856 [debug] Executing fun with value: 10
14:57:31.856 [debug] Evaluating bend block with value: 10
14:57:31.856 [debug] Block returned: %{variant: :leaf}
14:57:31.856 [debug] Fun returned result: %{variant: :leaf}
14:57:31.856 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.857 [debug] do_bend final result: %{variant: :leaf}
14:57:31.857 [debug] Executing bend with initial: 10
14:57:31.857 [debug] Executing fun with value: 10
14:57:31.857 [debug] Evaluating bend block with value: 10
14:57:31.857 [debug] Block returned: %{variant: :leaf}
14:57:31.857 [debug] Fun returned result: %{variant: :leaf}
14:57:31.857 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.857 [debug] do_bend final result: %{variant: :leaf}
14:57:31.857 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.857 [debug] Executing bend with initial: 9
14:57:31.857 [debug] Executing fun with value: 9
14:57:31.857 [debug] Evaluating bend block with value: 9
14:57:31.857 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.857 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.857 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.857 [debug] Executing bend with initial: 10
14:57:31.857 [debug] Executing fun with value: 10
14:57:31.857 [debug] Evaluating bend block with value: 10
14:57:31.857 [debug] Block returned: %{variant: :leaf}
14:57:31.857 [debug] Fun returned result: %{variant: :leaf}
14:57:31.857 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.857 [debug] do_bend final result: %{variant: :leaf}
14:57:31.857 [debug] Executing bend with initial: 10
14:57:31.857 [debug] Executing fun with value: 10
14:57:31.857 [debug] Evaluating bend block with value: 10
14:57:31.857 [debug] Block returned: %{variant: :leaf}
14:57:31.857 [debug] Fun returned result: %{variant: :leaf}
14:57:31.857 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.857 [debug] do_bend final result: %{variant: :leaf}
14:57:31.857 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.857 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.857 [debug] Executing bend with initial: 8
14:57:31.857 [debug] Executing fun with value: 8
14:57:31.857 [debug] Evaluating bend block with value: 8
14:57:31.857 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.857 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.857 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.857 [debug] Executing bend with initial: 9
14:57:31.857 [debug] Executing fun with value: 9
14:57:31.857 [debug] Evaluating bend block with value: 9
14:57:31.857 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.857 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.857 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.857 [debug] Executing bend with initial: 10
14:57:31.857 [debug] Executing fun with value: 10
14:57:31.857 [debug] Evaluating bend block with value: 10
14:57:31.857 [debug] Block returned: %{variant: :leaf}
14:57:31.857 [debug] Fun returned result: %{variant: :leaf}
14:57:31.858 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.858 [debug] do_bend final result: %{variant: :leaf}
14:57:31.858 [debug] Executing bend with initial: 10
14:57:31.858 [debug] Executing fun with value: 10
14:57:31.858 [debug] Evaluating bend block with value: 10
14:57:31.858 [debug] Block returned: %{variant: :leaf}
14:57:31.858 [debug] Fun returned result: %{variant: :leaf}
14:57:31.858 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.858 [debug] do_bend final result: %{variant: :leaf}
14:57:31.858 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.858 [debug] Executing bend with initial: 9
14:57:31.858 [debug] Executing fun with value: 9
14:57:31.858 [debug] Evaluating bend block with value: 9
14:57:31.858 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.858 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.858 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.858 [debug] Executing bend with initial: 10
14:57:31.858 [debug] Executing fun with value: 10
14:57:31.858 [debug] Evaluating bend block with value: 10
14:57:31.858 [debug] Block returned: %{variant: :leaf}
14:57:31.858 [debug] Fun returned result: %{variant: :leaf}
14:57:31.858 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.858 [debug] do_bend final result: %{variant: :leaf}
14:57:31.858 [debug] Executing bend with initial: 10
14:57:31.858 [debug] Executing fun with value: 10
14:57:31.858 [debug] Evaluating bend block with value: 10
14:57:31.858 [debug] Block returned: %{variant: :leaf}
14:57:31.858 [debug] Fun returned result: %{variant: :leaf}
14:57:31.858 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.858 [debug] do_bend final result: %{variant: :leaf}
14:57:31.858 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.859 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.859 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.859 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.859 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.859 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 4
14:57:31.859 [debug] Executing fun with value: 4
14:57:31.859 [debug] Evaluating bend block with value: 4
14:57:31.859 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.859 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.859 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 5
14:57:31.859 [debug] Executing fun with value: 5
14:57:31.859 [debug] Evaluating bend block with value: 5
14:57:31.859 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.859 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.859 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 6
14:57:31.859 [debug] Executing fun with value: 6
14:57:31.859 [debug] Evaluating bend block with value: 6
14:57:31.859 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.859 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.859 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 7
14:57:31.859 [debug] Executing fun with value: 7
14:57:31.859 [debug] Evaluating bend block with value: 7
14:57:31.859 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.859 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.859 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 8
14:57:31.859 [debug] Executing fun with value: 8
14:57:31.859 [debug] Evaluating bend block with value: 8
14:57:31.859 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.859 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.859 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 9
14:57:31.859 [debug] Executing fun with value: 9
14:57:31.859 [debug] Evaluating bend block with value: 9
14:57:31.859 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.859 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.859 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 10
14:57:31.859 [debug] Executing fun with value: 10
14:57:31.859 [debug] Evaluating bend block with value: 10
14:57:31.859 [debug] Block returned: %{variant: :leaf}
14:57:31.859 [debug] Fun returned result: %{variant: :leaf}
14:57:31.859 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.859 [debug] do_bend final result: %{variant: :leaf}
14:57:31.859 [debug] Executing bend with initial: 10
14:57:31.859 [debug] Executing fun with value: 10
14:57:31.859 [debug] Evaluating bend block with value: 10
14:57:31.859 [debug] Block returned: %{variant: :leaf}
14:57:31.859 [debug] Fun returned result: %{variant: :leaf}
14:57:31.859 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.859 [debug] do_bend final result: %{variant: :leaf}
14:57:31.859 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.859 [debug] Executing bend with initial: 9
14:57:31.859 [debug] Executing fun with value: 9
14:57:31.859 [debug] Evaluating bend block with value: 9
14:57:31.859 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 10
14:57:31.860 [debug] Executing fun with value: 10
14:57:31.860 [debug] Evaluating bend block with value: 10
14:57:31.860 [debug] Block returned: %{variant: :leaf}
14:57:31.860 [debug] Fun returned result: %{variant: :leaf}
14:57:31.860 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{variant: :leaf}
14:57:31.860 [debug] Executing bend with initial: 10
14:57:31.860 [debug] Executing fun with value: 10
14:57:31.860 [debug] Evaluating bend block with value: 10
14:57:31.860 [debug] Block returned: %{variant: :leaf}
14:57:31.860 [debug] Fun returned result: %{variant: :leaf}
14:57:31.860 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.860 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 8
14:57:31.860 [debug] Executing fun with value: 8
14:57:31.860 [debug] Evaluating bend block with value: 8
14:57:31.860 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.860 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.860 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 9
14:57:31.860 [debug] Executing fun with value: 9
14:57:31.860 [debug] Evaluating bend block with value: 9
14:57:31.860 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 10
14:57:31.860 [debug] Executing fun with value: 10
14:57:31.860 [debug] Evaluating bend block with value: 10
14:57:31.860 [debug] Block returned: %{variant: :leaf}
14:57:31.860 [debug] Fun returned result: %{variant: :leaf}
14:57:31.860 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{variant: :leaf}
14:57:31.860 [debug] Executing bend with initial: 10
14:57:31.860 [debug] Executing fun with value: 10
14:57:31.860 [debug] Evaluating bend block with value: 10
14:57:31.860 [debug] Block returned: %{variant: :leaf}
14:57:31.860 [debug] Fun returned result: %{variant: :leaf}
14:57:31.860 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 9
14:57:31.860 [debug] Executing fun with value: 9
14:57:31.860 [debug] Evaluating bend block with value: 9
14:57:31.860 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 10
14:57:31.860 [debug] Executing fun with value: 10
14:57:31.860 [debug] Evaluating bend block with value: 10
14:57:31.860 [debug] Block returned: %{variant: :leaf}
14:57:31.860 [debug] Fun returned result: %{variant: :leaf}
14:57:31.860 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{variant: :leaf}
14:57:31.860 [debug] Executing bend with initial: 10
14:57:31.860 [debug] Executing fun with value: 10
14:57:31.860 [debug] Evaluating bend block with value: 10
14:57:31.860 [debug] Block returned: %{variant: :leaf}
14:57:31.860 [debug] Fun returned result: %{variant: :leaf}
14:57:31.860 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.860 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.860 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 7
14:57:31.860 [debug] Executing fun with value: 7
14:57:31.860 [debug] Evaluating bend block with value: 7
14:57:31.860 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.860 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.860 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 8
14:57:31.860 [debug] Executing fun with value: 8
14:57:31.860 [debug] Evaluating bend block with value: 8
14:57:31.860 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.860 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.860 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 9
14:57:31.860 [debug] Executing fun with value: 9
14:57:31.860 [debug] Evaluating bend block with value: 9
14:57:31.860 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.860 [debug] Executing bend with initial: 10
14:57:31.860 [debug] Executing fun with value: 10
14:57:31.860 [debug] Evaluating bend block with value: 10
14:57:31.860 [debug] Block returned: %{variant: :leaf}
14:57:31.860 [debug] Fun returned result: %{variant: :leaf}
14:57:31.860 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.860 [debug] do_bend final result: %{variant: :leaf}
14:57:31.861 [debug] Executing bend with initial: 10
14:57:31.861 [debug] Executing fun with value: 10
14:57:31.861 [debug] Evaluating bend block with value: 10
14:57:31.861 [debug] Block returned: %{variant: :leaf}
14:57:31.861 [debug] Fun returned result: %{variant: :leaf}
14:57:31.861 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.861 [debug] do_bend final result: %{variant: :leaf}
14:57:31.861 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.861 [debug] Executing bend with initial: 9
14:57:31.861 [debug] Executing fun with value: 9
14:57:31.861 [debug] Evaluating bend block with value: 9
14:57:31.861 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.861 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.861 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.861 [debug] Executing bend with initial: 10
14:57:31.861 [debug] Executing fun with value: 10
14:57:31.861 [debug] Evaluating bend block with value: 10
14:57:31.861 [debug] Block returned: %{variant: :leaf}
14:57:31.861 [debug] Fun returned result: %{variant: :leaf}
14:57:31.863 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.863 [debug] do_bend final result: %{variant: :leaf}
14:57:31.863 [debug] Executing bend with initial: 10
14:57:31.863 [debug] Executing fun with value: 10
14:57:31.863 [debug] Evaluating bend block with value: 10
14:57:31.863 [debug] Block returned: %{variant: :leaf}
14:57:31.863 [debug] Fun returned result: %{variant: :leaf}
14:57:31.863 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.863 [debug] do_bend final result: %{variant: :leaf}
14:57:31.863 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.863 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.863 [debug] Executing bend with initial: 8
14:57:31.863 [debug] Executing fun with value: 8
14:57:31.863 [debug] Evaluating bend block with value: 8
14:57:31.863 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.863 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.863 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.863 [debug] Executing bend with initial: 9
14:57:31.863 [debug] Executing fun with value: 9
14:57:31.863 [debug] Evaluating bend block with value: 9
14:57:31.863 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.863 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.863 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.863 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 9
14:57:31.864 [debug] Executing fun with value: 9
14:57:31.864 [debug] Evaluating bend block with value: 9
14:57:31.864 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.864 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.864 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.864 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 6
14:57:31.864 [debug] Executing fun with value: 6
14:57:31.864 [debug] Evaluating bend block with value: 6
14:57:31.864 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.864 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.864 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 7
14:57:31.864 [debug] Executing fun with value: 7
14:57:31.864 [debug] Evaluating bend block with value: 7
14:57:31.864 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.864 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.864 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 8
14:57:31.864 [debug] Executing fun with value: 8
14:57:31.864 [debug] Evaluating bend block with value: 8
14:57:31.864 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.864 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.864 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 9
14:57:31.864 [debug] Executing fun with value: 9
14:57:31.864 [debug] Evaluating bend block with value: 9
14:57:31.864 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 9
14:57:31.864 [debug] Executing fun with value: 9
14:57:31.864 [debug] Evaluating bend block with value: 9
14:57:31.864 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.864 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] Executing bend with initial: 10
14:57:31.864 [debug] Executing fun with value: 10
14:57:31.864 [debug] Evaluating bend block with value: 10
14:57:31.864 [debug] Block returned: %{variant: :leaf}
14:57:31.864 [debug] Fun returned result: %{variant: :leaf}
14:57:31.864 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{variant: :leaf}
14:57:31.864 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.864 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.865 [debug] Executing bend with initial: 8
14:57:31.865 [debug] Executing fun with value: 8
14:57:31.865 [debug] Evaluating bend block with value: 8
14:57:31.865 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.865 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.865 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.865 [debug] Executing bend with initial: 9
14:57:31.865 [debug] Executing fun with value: 9
14:57:31.865 [debug] Evaluating bend block with value: 9
14:57:31.865 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.865 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.865 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.865 [debug] Executing bend with initial: 10
14:57:31.865 [debug] Executing fun with value: 10
14:57:31.865 [debug] Evaluating bend block with value: 10
14:57:31.865 [debug] Block returned: %{variant: :leaf}
14:57:31.865 [debug] Fun returned result: %{variant: :leaf}
14:57:31.865 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.865 [debug] do_bend final result: %{variant: :leaf}
14:57:31.865 [debug] Executing bend with initial: 10
14:57:31.865 [debug] Executing fun with value: 10
14:57:31.865 [debug] Evaluating bend block with value: 10
14:57:31.865 [debug] Block returned: %{variant: :leaf}
14:57:31.865 [debug] Fun returned result: %{variant: :leaf}
14:57:31.865 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.865 [debug] do_bend final result: %{variant: :leaf}
14:57:31.865 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.865 [debug] Executing bend with initial: 9
14:57:31.865 [debug] Executing fun with value: 9
14:57:31.865 [debug] Evaluating bend block with value: 9
14:57:31.865 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.865 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.865 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.865 [debug] Executing bend with initial: 10
14:57:31.865 [debug] Executing fun with value: 10
14:57:31.865 [debug] Evaluating bend block with value: 10
14:57:31.865 [debug] Block returned: %{variant: :leaf}
14:57:31.865 [debug] Fun returned result: %{variant: :leaf}
14:57:31.865 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.865 [debug] do_bend final result: %{variant: :leaf}
14:57:31.865 [debug] Executing bend with initial: 10
14:57:31.865 [debug] Executing fun with value: 10
14:57:31.865 [debug] Evaluating bend block with value: 10
14:57:31.865 [debug] Block returned: %{variant: :leaf}
14:57:31.865 [debug] Fun returned result: %{variant: :leaf}
14:57:31.865 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.865 [debug] do_bend final result: %{variant: :leaf}
14:57:31.865 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.865 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.865 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.865 [debug] Executing bend with initial: 7
14:57:31.865 [debug] Executing fun with value: 7
14:57:31.865 [debug] Evaluating bend block with value: 7
14:57:31.865 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.865 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.865 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.865 [debug] Executing bend with initial: 8
14:57:31.865 [debug] Executing fun with value: 8
14:57:31.865 [debug] Evaluating bend block with value: 8
14:57:31.865 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.866 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.866 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.866 [debug] Executing bend with initial: 9
14:57:31.866 [debug] Executing fun with value: 9
14:57:31.866 [debug] Evaluating bend block with value: 9
14:57:31.866 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 9
14:57:31.867 [debug] Executing fun with value: 9
14:57:31.867 [debug] Evaluating bend block with value: 9
14:57:31.867 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.867 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 8
14:57:31.867 [debug] Executing fun with value: 8
14:57:31.867 [debug] Evaluating bend block with value: 8
14:57:31.867 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.867 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.867 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 9
14:57:31.867 [debug] Executing fun with value: 9
14:57:31.867 [debug] Evaluating bend block with value: 9
14:57:31.867 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 9
14:57:31.867 [debug] Executing fun with value: 9
14:57:31.867 [debug] Evaluating bend block with value: 9
14:57:31.867 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] Executing bend with initial: 10
14:57:31.867 [debug] Executing fun with value: 10
14:57:31.867 [debug] Evaluating bend block with value: 10
14:57:31.867 [debug] Block returned: %{variant: :leaf}
14:57:31.867 [debug] Fun returned result: %{variant: :leaf}
14:57:31.867 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{variant: :leaf}
14:57:31.867 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.868 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.868 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.868 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.868 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 5
14:57:31.868 [debug] Executing fun with value: 5
14:57:31.868 [debug] Evaluating bend block with value: 5
14:57:31.868 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 6
14:57:31.868 [debug] Executing fun with value: 6
14:57:31.868 [debug] Evaluating bend block with value: 6
14:57:31.868 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 7
14:57:31.868 [debug] Executing fun with value: 7
14:57:31.868 [debug] Evaluating bend block with value: 7
14:57:31.868 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 8
14:57:31.868 [debug] Executing fun with value: 8
14:57:31.868 [debug] Evaluating bend block with value: 8
14:57:31.868 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 9
14:57:31.868 [debug] Executing fun with value: 9
14:57:31.868 [debug] Evaluating bend block with value: 9
14:57:31.868 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 10
14:57:31.868 [debug] Executing fun with value: 10
14:57:31.868 [debug] Evaluating bend block with value: 10
14:57:31.868 [debug] Block returned: %{variant: :leaf}
14:57:31.868 [debug] Fun returned result: %{variant: :leaf}
14:57:31.868 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.868 [debug] do_bend final result: %{variant: :leaf}
14:57:31.868 [debug] Executing bend with initial: 10
14:57:31.868 [debug] Executing fun with value: 10
14:57:31.868 [debug] Evaluating bend block with value: 10
14:57:31.868 [debug] Block returned: %{variant: :leaf}
14:57:31.868 [debug] Fun returned result: %{variant: :leaf}
14:57:31.868 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.868 [debug] do_bend final result: %{variant: :leaf}
14:57:31.868 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 9
14:57:31.868 [debug] Executing fun with value: 9
14:57:31.868 [debug] Evaluating bend block with value: 9
14:57:31.868 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 10
14:57:31.868 [debug] Executing fun with value: 10
14:57:31.868 [debug] Evaluating bend block with value: 10
14:57:31.868 [debug] Block returned: %{variant: :leaf}
14:57:31.868 [debug] Fun returned result: %{variant: :leaf}
14:57:31.868 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.868 [debug] do_bend final result: %{variant: :leaf}
14:57:31.868 [debug] Executing bend with initial: 10
14:57:31.868 [debug] Executing fun with value: 10
14:57:31.868 [debug] Evaluating bend block with value: 10
14:57:31.868 [debug] Block returned: %{variant: :leaf}
14:57:31.868 [debug] Fun returned result: %{variant: :leaf}
14:57:31.868 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.868 [debug] do_bend final result: %{variant: :leaf}
14:57:31.868 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.868 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 8
14:57:31.868 [debug] Executing fun with value: 8
14:57:31.868 [debug] Evaluating bend block with value: 8
14:57:31.868 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 9
14:57:31.868 [debug] Executing fun with value: 9
14:57:31.868 [debug] Evaluating bend block with value: 9
14:57:31.868 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.868 [debug] Executing bend with initial: 10
14:57:31.868 [debug] Executing fun with value: 10
14:57:31.868 [debug] Evaluating bend block with value: 10
14:57:31.868 [debug] Block returned: %{variant: :leaf}
14:57:31.868 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{variant: :leaf}
14:57:31.869 [debug] Executing bend with initial: 10
14:57:31.869 [debug] Executing fun with value: 10
14:57:31.869 [debug] Evaluating bend block with value: 10
14:57:31.869 [debug] Block returned: %{variant: :leaf}
14:57:31.869 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 9
14:57:31.869 [debug] Executing fun with value: 9
14:57:31.869 [debug] Evaluating bend block with value: 9
14:57:31.869 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 10
14:57:31.869 [debug] Executing fun with value: 10
14:57:31.869 [debug] Evaluating bend block with value: 10
14:57:31.869 [debug] Block returned: %{variant: :leaf}
14:57:31.869 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{variant: :leaf}
14:57:31.869 [debug] Executing bend with initial: 10
14:57:31.869 [debug] Executing fun with value: 10
14:57:31.869 [debug] Evaluating bend block with value: 10
14:57:31.869 [debug] Block returned: %{variant: :leaf}
14:57:31.869 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.869 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.869 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 7
14:57:31.869 [debug] Executing fun with value: 7
14:57:31.869 [debug] Evaluating bend block with value: 7
14:57:31.869 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.869 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.869 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 8
14:57:31.869 [debug] Executing fun with value: 8
14:57:31.869 [debug] Evaluating bend block with value: 8
14:57:31.869 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.869 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.869 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 9
14:57:31.869 [debug] Executing fun with value: 9
14:57:31.869 [debug] Evaluating bend block with value: 9
14:57:31.869 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 10
14:57:31.869 [debug] Executing fun with value: 10
14:57:31.869 [debug] Evaluating bend block with value: 10
14:57:31.869 [debug] Block returned: %{variant: :leaf}
14:57:31.869 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{variant: :leaf}
14:57:31.869 [debug] Executing bend with initial: 10
14:57:31.869 [debug] Executing fun with value: 10
14:57:31.869 [debug] Evaluating bend block with value: 10
14:57:31.869 [debug] Block returned: %{variant: :leaf}
14:57:31.869 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 9
14:57:31.869 [debug] Executing fun with value: 9
14:57:31.869 [debug] Evaluating bend block with value: 9
14:57:31.869 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.869 [debug] Executing bend with initial: 10
14:57:31.869 [debug] Executing fun with value: 10
14:57:31.869 [debug] Evaluating bend block with value: 10
14:57:31.869 [debug] Block returned: %{variant: :leaf}
14:57:31.869 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.869 [debug] do_bend final result: %{variant: :leaf}
14:57:31.869 [debug] Executing bend with initial: 10
14:57:31.869 [debug] Executing fun with value: 10
14:57:31.869 [debug] Evaluating bend block with value: 10
14:57:31.869 [debug] Block returned: %{variant: :leaf}
14:57:31.869 [debug] Fun returned result: %{variant: :leaf}
14:57:31.869 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.871 [debug] do_bend final result: %{variant: :leaf}
14:57:31.871 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.871 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.871 [debug] Executing bend with initial: 8
14:57:31.871 [debug] Executing fun with value: 8
14:57:31.871 [debug] Evaluating bend block with value: 8
14:57:31.871 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.871 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.871 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.871 [debug] Executing bend with initial: 9
14:57:31.871 [debug] Executing fun with value: 9
14:57:31.871 [debug] Evaluating bend block with value: 9
14:57:31.871 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.871 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.871 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.871 [debug] Executing bend with initial: 10
14:57:31.871 [debug] Executing fun with value: 10
14:57:31.871 [debug] Evaluating bend block with value: 10
14:57:31.871 [debug] Block returned: %{variant: :leaf}
14:57:31.871 [debug] Fun returned result: %{variant: :leaf}
14:57:31.871 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.871 [debug] do_bend final result: %{variant: :leaf}
14:57:31.871 [debug] Executing bend with initial: 10
14:57:31.871 [debug] Executing fun with value: 10
14:57:31.871 [debug] Evaluating bend block with value: 10
14:57:31.871 [debug] Block returned: %{variant: :leaf}
14:57:31.871 [debug] Fun returned result: %{variant: :leaf}
14:57:31.871 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 9
14:57:31.872 [debug] Executing fun with value: 9
14:57:31.872 [debug] Evaluating bend block with value: 9
14:57:31.872 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.872 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.872 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 10
14:57:31.872 [debug] Executing fun with value: 10
14:57:31.872 [debug] Evaluating bend block with value: 10
14:57:31.872 [debug] Block returned: %{variant: :leaf}
14:57:31.872 [debug] Fun returned result: %{variant: :leaf}
14:57:31.872 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{variant: :leaf}
14:57:31.872 [debug] Executing bend with initial: 10
14:57:31.872 [debug] Executing fun with value: 10
14:57:31.872 [debug] Evaluating bend block with value: 10
14:57:31.872 [debug] Block returned: %{variant: :leaf}
14:57:31.872 [debug] Fun returned result: %{variant: :leaf}
14:57:31.872 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.872 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.872 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.872 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 6
14:57:31.872 [debug] Executing fun with value: 6
14:57:31.872 [debug] Evaluating bend block with value: 6
14:57:31.872 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.872 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.872 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 7
14:57:31.872 [debug] Executing fun with value: 7
14:57:31.872 [debug] Evaluating bend block with value: 7
14:57:31.872 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.872 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.872 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 8
14:57:31.872 [debug] Executing fun with value: 8
14:57:31.872 [debug] Evaluating bend block with value: 8
14:57:31.872 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.872 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.872 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 9
14:57:31.872 [debug] Executing fun with value: 9
14:57:31.872 [debug] Evaluating bend block with value: 9
14:57:31.872 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.872 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.872 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 10
14:57:31.872 [debug] Executing fun with value: 10
14:57:31.872 [debug] Evaluating bend block with value: 10
14:57:31.872 [debug] Block returned: %{variant: :leaf}
14:57:31.872 [debug] Fun returned result: %{variant: :leaf}
14:57:31.872 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{variant: :leaf}
14:57:31.872 [debug] Executing bend with initial: 10
14:57:31.872 [debug] Executing fun with value: 10
14:57:31.872 [debug] Evaluating bend block with value: 10
14:57:31.872 [debug] Block returned: %{variant: :leaf}
14:57:31.872 [debug] Fun returned result: %{variant: :leaf}
14:57:31.872 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{variant: :leaf}
14:57:31.872 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.872 [debug] Executing bend with initial: 9
14:57:31.872 [debug] Executing fun with value: 9
14:57:31.872 [debug] Evaluating bend block with value: 9
14:57:31.873 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 10
14:57:31.873 [debug] Executing fun with value: 10
14:57:31.873 [debug] Evaluating bend block with value: 10
14:57:31.873 [debug] Block returned: %{variant: :leaf}
14:57:31.873 [debug] Fun returned result: %{variant: :leaf}
14:57:31.873 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{variant: :leaf}
14:57:31.873 [debug] Executing bend with initial: 10
14:57:31.873 [debug] Executing fun with value: 10
14:57:31.873 [debug] Evaluating bend block with value: 10
14:57:31.873 [debug] Block returned: %{variant: :leaf}
14:57:31.873 [debug] Fun returned result: %{variant: :leaf}
14:57:31.873 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.873 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 8
14:57:31.873 [debug] Executing fun with value: 8
14:57:31.873 [debug] Evaluating bend block with value: 8
14:57:31.873 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.873 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.873 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 9
14:57:31.873 [debug] Executing fun with value: 9
14:57:31.873 [debug] Evaluating bend block with value: 9
14:57:31.873 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 10
14:57:31.873 [debug] Executing fun with value: 10
14:57:31.873 [debug] Evaluating bend block with value: 10
14:57:31.873 [debug] Block returned: %{variant: :leaf}
14:57:31.873 [debug] Fun returned result: %{variant: :leaf}
14:57:31.873 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{variant: :leaf}
14:57:31.873 [debug] Executing bend with initial: 10
14:57:31.873 [debug] Executing fun with value: 10
14:57:31.873 [debug] Evaluating bend block with value: 10
14:57:31.873 [debug] Block returned: %{variant: :leaf}
14:57:31.873 [debug] Fun returned result: %{variant: :leaf}
14:57:31.873 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 9
14:57:31.873 [debug] Executing fun with value: 9
14:57:31.873 [debug] Evaluating bend block with value: 9
14:57:31.873 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 10
14:57:31.873 [debug] Executing fun with value: 10
14:57:31.873 [debug] Evaluating bend block with value: 10
14:57:31.873 [debug] Block returned: %{variant: :leaf}
14:57:31.873 [debug] Fun returned result: %{variant: :leaf}
14:57:31.873 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{variant: :leaf}
14:57:31.873 [debug] Executing bend with initial: 10
14:57:31.873 [debug] Executing fun with value: 10
14:57:31.873 [debug] Evaluating bend block with value: 10
14:57:31.873 [debug] Block returned: %{variant: :leaf}
14:57:31.873 [debug] Fun returned result: %{variant: :leaf}
14:57:31.873 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{variant: :leaf}
14:57:31.873 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.873 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.873 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 7
14:57:31.873 [debug] Executing fun with value: 7
14:57:31.873 [debug] Evaluating bend block with value: 7
14:57:31.873 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.873 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.873 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.873 [debug] Executing bend with initial: 8
14:57:31.873 [debug] Executing fun with value: 8
14:57:31.873 [debug] Evaluating bend block with value: 8
14:57:31.874 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.874 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.874 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.874 [debug] Executing bend with initial: 9
14:57:31.874 [debug] Executing fun with value: 9
14:57:31.874 [debug] Evaluating bend block with value: 9
14:57:31.874 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Executing bend with initial: 10
14:57:31.874 [debug] Executing fun with value: 10
14:57:31.874 [debug] Evaluating bend block with value: 10
14:57:31.874 [debug] Block returned: %{variant: :leaf}
14:57:31.874 [debug] Fun returned result: %{variant: :leaf}
14:57:31.874 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.874 [debug] do_bend final result: %{variant: :leaf}
14:57:31.874 [debug] Executing bend with initial: 10
14:57:31.874 [debug] Executing fun with value: 10
14:57:31.874 [debug] Evaluating bend block with value: 10
14:57:31.874 [debug] Block returned: %{variant: :leaf}
14:57:31.874 [debug] Fun returned result: %{variant: :leaf}
14:57:31.874 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.874 [debug] do_bend final result: %{variant: :leaf}
14:57:31.874 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.874 [debug] Executing bend with initial: 9
14:57:31.874 [debug] Executing fun with value: 9
14:57:31.874 [debug] Evaluating bend block with value: 9
14:57:31.874 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Executing bend with initial: 10
14:57:31.874 [debug] Executing fun with value: 10
14:57:31.874 [debug] Evaluating bend block with value: 10
14:57:31.874 [debug] Block returned: %{variant: :leaf}
14:57:31.874 [debug] Fun returned result: %{variant: :leaf}
14:57:31.874 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.874 [debug] do_bend final result: %{variant: :leaf}
14:57:31.874 [debug] Executing bend with initial: 10
14:57:31.874 [debug] Executing fun with value: 10
14:57:31.874 [debug] Evaluating bend block with value: 10
14:57:31.874 [debug] Block returned: %{variant: :leaf}
14:57:31.874 [debug] Fun returned result: %{variant: :leaf}
14:57:31.874 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.874 [debug] do_bend final result: %{variant: :leaf}
14:57:31.874 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.874 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.874 [debug] Executing bend with initial: 8
14:57:31.874 [debug] Executing fun with value: 8
14:57:31.874 [debug] Evaluating bend block with value: 8
14:57:31.874 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.874 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.874 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.874 [debug] Executing bend with initial: 9
14:57:31.874 [debug] Executing fun with value: 9
14:57:31.874 [debug] Evaluating bend block with value: 9
14:57:31.874 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.874 [debug] Executing bend with initial: 10
14:57:31.874 [debug] Executing fun with value: 10
14:57:31.874 [debug] Evaluating bend block with value: 10
14:57:31.874 [debug] Block returned: %{variant: :leaf}
14:57:31.874 [debug] Fun returned result: %{variant: :leaf}
14:57:31.874 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.874 [debug] do_bend final result: %{variant: :leaf}
14:57:31.875 [debug] Executing bend with initial: 10
14:57:31.875 [debug] Executing fun with value: 10
14:57:31.875 [debug] Evaluating bend block with value: 10
14:57:31.875 [debug] Block returned: %{variant: :leaf}
14:57:31.875 [debug] Fun returned result: %{variant: :leaf}
14:57:31.875 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.875 [debug] do_bend final result: %{variant: :leaf}
14:57:31.875 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.875 [debug] Executing bend with initial: 9
14:57:31.875 [debug] Executing fun with value: 9
14:57:31.875 [debug] Evaluating bend block with value: 9
14:57:31.875 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.875 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.875 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.875 [debug] Executing bend with initial: 10
14:57:31.875 [debug] Executing fun with value: 10
14:57:31.875 [debug] Evaluating bend block with value: 10
14:57:31.875 [debug] Block returned: %{variant: :leaf}
14:57:31.875 [debug] Fun returned result: %{variant: :leaf}
14:57:31.875 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.875 [debug] do_bend final result: %{variant: :leaf}
14:57:31.875 [debug] Executing bend with initial: 10
14:57:31.875 [debug] Executing fun with value: 10
14:57:31.875 [debug] Evaluating bend block with value: 10
14:57:31.875 [debug] Block returned: %{variant: :leaf}
14:57:31.875 [debug] Fun returned result: %{variant: :leaf}
14:57:31.875 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.875 [debug] do_bend final result: %{variant: :leaf}
14:57:31.875 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.875 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.875 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.875 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.875 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.876 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.876 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.876 [debug] Executing bend with initial: 3
14:57:31.876 [debug] Executing fun with value: 3
14:57:31.876 [debug] Evaluating bend block with value: 3
14:57:31.876 [debug] Block returned: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.876 [debug] Fun returned result: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.876 [debug] Processing constructed value: %{left: {:fork, 4}, right: {:fork, 4}, val: 3, variant: :node}
14:57:31.876 [debug] Executing bend with initial: 4
14:57:31.876 [debug] Executing fun with value: 4
14:57:31.876 [debug] Evaluating bend block with value: 4
14:57:31.876 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.876 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.876 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.876 [debug] Executing bend with initial: 5
14:57:31.876 [debug] Executing fun with value: 5
14:57:31.876 [debug] Evaluating bend block with value: 5
14:57:31.876 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.876 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.876 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.876 [debug] Executing bend with initial: 6
14:57:31.876 [debug] Executing fun with value: 6
14:57:31.876 [debug] Evaluating bend block with value: 6
14:57:31.877 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.877 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.877 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.877 [debug] Executing bend with initial: 7
14:57:31.877 [debug] Executing fun with value: 7
14:57:31.877 [debug] Evaluating bend block with value: 7
14:57:31.877 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.877 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.877 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.877 [debug] Executing bend with initial: 8
14:57:31.877 [debug] Executing fun with value: 8
14:57:31.877 [debug] Evaluating bend block with value: 8
14:57:31.877 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.877 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.877 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.877 [debug] Executing bend with initial: 9
14:57:31.877 [debug] Executing fun with value: 9
14:57:31.877 [debug] Evaluating bend block with value: 9
14:57:31.877 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.877 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.877 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.877 [debug] Executing bend with initial: 10
14:57:31.877 [debug] Executing fun with value: 10
14:57:31.877 [debug] Evaluating bend block with value: 10
14:57:31.877 [debug] Block returned: %{variant: :leaf}
14:57:31.877 [debug] Fun returned result: %{variant: :leaf}
14:57:31.877 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.877 [debug] do_bend final result: %{variant: :leaf}
14:57:31.877 [debug] Executing bend with initial: 10
14:57:31.877 [debug] Executing fun with value: 10
14:57:31.877 [debug] Evaluating bend block with value: 10
14:57:31.877 [debug] Block returned: %{variant: :leaf}
14:57:31.877 [debug] Fun returned result: %{variant: :leaf}
14:57:31.877 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.877 [debug] do_bend final result: %{variant: :leaf}
14:57:31.877 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.877 [debug] Executing bend with initial: 9
14:57:31.877 [debug] Executing fun with value: 9
14:57:31.877 [debug] Evaluating bend block with value: 9
14:57:31.877 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.877 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.877 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.878 [debug] Executing bend with initial: 10
14:57:31.878 [debug] Executing fun with value: 10
14:57:31.878 [debug] Evaluating bend block with value: 10
14:57:31.878 [debug] Block returned: %{variant: :leaf}
14:57:31.878 [debug] Fun returned result: %{variant: :leaf}
14:57:31.878 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{variant: :leaf}
14:57:31.878 [debug] Executing bend with initial: 10
14:57:31.878 [debug] Executing fun with value: 10
14:57:31.878 [debug] Evaluating bend block with value: 10
14:57:31.878 [debug] Block returned: %{variant: :leaf}
14:57:31.878 [debug] Fun returned result: %{variant: :leaf}
14:57:31.878 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.878 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.878 [debug] Executing bend with initial: 8
14:57:31.878 [debug] Executing fun with value: 8
14:57:31.878 [debug] Evaluating bend block with value: 8
14:57:31.878 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.878 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.878 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.878 [debug] Executing bend with initial: 9
14:57:31.878 [debug] Executing fun with value: 9
14:57:31.878 [debug] Evaluating bend block with value: 9
14:57:31.878 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.878 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.878 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.878 [debug] Executing bend with initial: 10
14:57:31.878 [debug] Executing fun with value: 10
14:57:31.878 [debug] Evaluating bend block with value: 10
14:57:31.878 [debug] Block returned: %{variant: :leaf}
14:57:31.878 [debug] Fun returned result: %{variant: :leaf}
14:57:31.878 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{variant: :leaf}
14:57:31.878 [debug] Executing bend with initial: 10
14:57:31.878 [debug] Executing fun with value: 10
14:57:31.878 [debug] Evaluating bend block with value: 10
14:57:31.878 [debug] Block returned: %{variant: :leaf}
14:57:31.878 [debug] Fun returned result: %{variant: :leaf}
14:57:31.878 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.878 [debug] Executing bend with initial: 9
14:57:31.878 [debug] Executing fun with value: 9
14:57:31.878 [debug] Evaluating bend block with value: 9
14:57:31.878 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.878 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.878 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.878 [debug] Executing bend with initial: 10
14:57:31.878 [debug] Executing fun with value: 10
14:57:31.878 [debug] Evaluating bend block with value: 10
14:57:31.878 [debug] Block returned: %{variant: :leaf}
14:57:31.878 [debug] Fun returned result: %{variant: :leaf}
14:57:31.878 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{variant: :leaf}
14:57:31.878 [debug] Executing bend with initial: 10
14:57:31.878 [debug] Executing fun with value: 10
14:57:31.878 [debug] Evaluating bend block with value: 10
14:57:31.878 [debug] Block returned: %{variant: :leaf}
14:57:31.878 [debug] Fun returned result: %{variant: :leaf}
14:57:31.878 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{variant: :leaf}
14:57:31.878 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.878 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.878 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.878 [debug] Executing bend with initial: 7
14:57:31.878 [debug] Executing fun with value: 7
14:57:31.878 [debug] Evaluating bend block with value: 7
14:57:31.878 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.879 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.879 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 8
14:57:31.879 [debug] Executing fun with value: 8
14:57:31.879 [debug] Evaluating bend block with value: 8
14:57:31.879 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.879 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.879 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 9
14:57:31.879 [debug] Executing fun with value: 9
14:57:31.879 [debug] Evaluating bend block with value: 9
14:57:31.879 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 9
14:57:31.879 [debug] Executing fun with value: 9
14:57:31.879 [debug] Evaluating bend block with value: 9
14:57:31.879 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.879 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 8
14:57:31.879 [debug] Executing fun with value: 8
14:57:31.879 [debug] Evaluating bend block with value: 8
14:57:31.879 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.879 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.879 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 9
14:57:31.879 [debug] Executing fun with value: 9
14:57:31.879 [debug] Evaluating bend block with value: 9
14:57:31.879 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 9
14:57:31.879 [debug] Executing fun with value: 9
14:57:31.879 [debug] Evaluating bend block with value: 9
14:57:31.879 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] Executing bend with initial: 10
14:57:31.879 [debug] Executing fun with value: 10
14:57:31.879 [debug] Evaluating bend block with value: 10
14:57:31.879 [debug] Block returned: %{variant: :leaf}
14:57:31.879 [debug] Fun returned result: %{variant: :leaf}
14:57:31.879 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{variant: :leaf}
14:57:31.879 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.879 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.879 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.880 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.880 [debug] Executing bend with initial: 6
14:57:31.880 [debug] Executing fun with value: 6
14:57:31.880 [debug] Evaluating bend block with value: 6
14:57:31.880 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.880 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.880 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.880 [debug] Executing bend with initial: 7
14:57:31.880 [debug] Executing fun with value: 7
14:57:31.880 [debug] Evaluating bend block with value: 7
14:57:31.880 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.880 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.880 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.880 [debug] Executing bend with initial: 8
14:57:31.880 [debug] Executing fun with value: 8
14:57:31.880 [debug] Evaluating bend block with value: 8
14:57:31.880 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.880 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.880 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.880 [debug] Executing bend with initial: 9
14:57:31.880 [debug] Executing fun with value: 9
14:57:31.880 [debug] Evaluating bend block with value: 9
14:57:31.880 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.880 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.880 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.880 [debug] Executing bend with initial: 10
14:57:31.880 [debug] Executing fun with value: 10
14:57:31.880 [debug] Evaluating bend block with value: 10
14:57:31.880 [debug] Block returned: %{variant: :leaf}
14:57:31.885 [debug] Fun returned result: %{variant: :leaf}
14:57:31.885 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.885 [debug] do_bend final result: %{variant: :leaf}
14:57:31.885 [debug] Executing bend with initial: 10
14:57:31.885 [debug] Executing fun with value: 10
14:57:31.885 [debug] Evaluating bend block with value: 10
14:57:31.885 [debug] Block returned: %{variant: :leaf}
14:57:31.885 [debug] Fun returned result: %{variant: :leaf}
14:57:31.885 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.885 [debug] do_bend final result: %{variant: :leaf}
14:57:31.885 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.885 [debug] Executing bend with initial: 9
14:57:31.885 [debug] Executing fun with value: 9
14:57:31.885 [debug] Evaluating bend block with value: 9
14:57:31.885 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.885 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.885 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.885 [debug] Executing bend with initial: 10
14:57:31.885 [debug] Executing fun with value: 10
14:57:31.885 [debug] Evaluating bend block with value: 10
14:57:31.885 [debug] Block returned: %{variant: :leaf}
14:57:31.885 [debug] Fun returned result: %{variant: :leaf}
14:57:31.885 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.885 [debug] do_bend final result: %{variant: :leaf}
14:57:31.885 [debug] Executing bend with initial: 10
14:57:31.885 [debug] Executing fun with value: 10
14:57:31.885 [debug] Evaluating bend block with value: 10
14:57:31.885 [debug] Block returned: %{variant: :leaf}
14:57:31.885 [debug] Fun returned result: %{variant: :leaf}
14:57:31.885 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.885 [debug] do_bend final result: %{variant: :leaf}
14:57:31.886 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.886 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 8
14:57:31.886 [debug] Executing fun with value: 8
14:57:31.886 [debug] Evaluating bend block with value: 8
14:57:31.886 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.886 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.886 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 9
14:57:31.886 [debug] Executing fun with value: 9
14:57:31.886 [debug] Evaluating bend block with value: 9
14:57:31.886 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.886 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.886 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 10
14:57:31.886 [debug] Executing fun with value: 10
14:57:31.886 [debug] Evaluating bend block with value: 10
14:57:31.886 [debug] Block returned: %{variant: :leaf}
14:57:31.886 [debug] Fun returned result: %{variant: :leaf}
14:57:31.886 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.886 [debug] do_bend final result: %{variant: :leaf}
14:57:31.886 [debug] Executing bend with initial: 10
14:57:31.886 [debug] Executing fun with value: 10
14:57:31.886 [debug] Evaluating bend block with value: 10
14:57:31.886 [debug] Block returned: %{variant: :leaf}
14:57:31.886 [debug] Fun returned result: %{variant: :leaf}
14:57:31.886 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.886 [debug] do_bend final result: %{variant: :leaf}
14:57:31.886 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 9
14:57:31.886 [debug] Executing fun with value: 9
14:57:31.886 [debug] Evaluating bend block with value: 9
14:57:31.886 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.886 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.886 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 10
14:57:31.886 [debug] Executing fun with value: 10
14:57:31.886 [debug] Evaluating bend block with value: 10
14:57:31.886 [debug] Block returned: %{variant: :leaf}
14:57:31.886 [debug] Fun returned result: %{variant: :leaf}
14:57:31.886 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.886 [debug] do_bend final result: %{variant: :leaf}
14:57:31.886 [debug] Executing bend with initial: 10
14:57:31.886 [debug] Executing fun with value: 10
14:57:31.886 [debug] Evaluating bend block with value: 10
14:57:31.886 [debug] Block returned: %{variant: :leaf}
14:57:31.886 [debug] Fun returned result: %{variant: :leaf}
14:57:31.886 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.886 [debug] do_bend final result: %{variant: :leaf}
14:57:31.886 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.886 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.886 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 7
14:57:31.886 [debug] Executing fun with value: 7
14:57:31.886 [debug] Evaluating bend block with value: 7
14:57:31.886 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.886 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.886 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 8
14:57:31.886 [debug] Executing fun with value: 8
14:57:31.886 [debug] Evaluating bend block with value: 8
14:57:31.886 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.886 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.886 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.886 [debug] Executing bend with initial: 9
14:57:31.886 [debug] Executing fun with value: 9
14:57:31.886 [debug] Evaluating bend block with value: 9
14:57:31.886 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 9
14:57:31.887 [debug] Executing fun with value: 9
14:57:31.887 [debug] Evaluating bend block with value: 9
14:57:31.887 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.887 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 8
14:57:31.887 [debug] Executing fun with value: 8
14:57:31.887 [debug] Evaluating bend block with value: 8
14:57:31.887 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.887 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.887 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 9
14:57:31.887 [debug] Executing fun with value: 9
14:57:31.887 [debug] Evaluating bend block with value: 9
14:57:31.887 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 9
14:57:31.887 [debug] Executing fun with value: 9
14:57:31.887 [debug] Evaluating bend block with value: 9
14:57:31.887 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] Executing bend with initial: 10
14:57:31.887 [debug] Executing fun with value: 10
14:57:31.887 [debug] Evaluating bend block with value: 10
14:57:31.887 [debug] Block returned: %{variant: :leaf}
14:57:31.887 [debug] Fun returned result: %{variant: :leaf}
14:57:31.887 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{variant: :leaf}
14:57:31.887 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.887 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.887 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.887 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.887 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.887 [debug] Executing bend with initial: 5
14:57:31.887 [debug] Executing fun with value: 5
14:57:31.887 [debug] Evaluating bend block with value: 5
14:57:31.888 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.888 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.888 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.888 [debug] Executing bend with initial: 6
14:57:31.888 [debug] Executing fun with value: 6
14:57:31.888 [debug] Evaluating bend block with value: 6
14:57:31.888 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.888 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.888 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.888 [debug] Executing bend with initial: 7
14:57:31.888 [debug] Executing fun with value: 7
14:57:31.888 [debug] Evaluating bend block with value: 7
14:57:31.888 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.888 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.888 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.888 [debug] Executing bend with initial: 8
14:57:31.888 [debug] Executing fun with value: 8
14:57:31.888 [debug] Evaluating bend block with value: 8
14:57:31.888 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.888 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.888 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.888 [debug] Executing bend with initial: 9
14:57:31.888 [debug] Executing fun with value: 9
14:57:31.888 [debug] Evaluating bend block with value: 9
14:57:31.888 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.888 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.888 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.888 [debug] Executing bend with initial: 10
14:57:31.888 [debug] Executing fun with value: 10
14:57:31.888 [debug] Evaluating bend block with value: 10
14:57:31.888 [debug] Block returned: %{variant: :leaf}
14:57:31.888 [debug] Fun returned result: %{variant: :leaf}
14:57:31.888 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.888 [debug] do_bend final result: %{variant: :leaf}
14:57:31.888 [debug] Executing bend with initial: 10
14:57:31.888 [debug] Executing fun with value: 10
14:57:31.888 [debug] Evaluating bend block with value: 10
14:57:31.888 [debug] Block returned: %{variant: :leaf}
14:57:31.888 [debug] Fun returned result: %{variant: :leaf}
14:57:31.888 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.888 [debug] do_bend final result: %{variant: :leaf}
14:57:31.888 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.888 [debug] Executing bend with initial: 9
14:57:31.888 [debug] Executing fun with value: 9
14:57:31.888 [debug] Evaluating bend block with value: 9
14:57:31.888 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.888 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.888 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.888 [debug] Executing bend with initial: 10
14:57:31.888 [debug] Executing fun with value: 10
14:57:31.890 [debug] Evaluating bend block with value: 10
14:57:31.890 [debug] Block returned: %{variant: :leaf}
14:57:31.890 [debug] Fun returned result: %{variant: :leaf}
14:57:31.890 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.890 [debug] do_bend final result: %{variant: :leaf}
14:57:31.890 [debug] Executing bend with initial: 10
14:57:31.890 [debug] Executing fun with value: 10
14:57:31.890 [debug] Evaluating bend block with value: 10
14:57:31.890 [debug] Block returned: %{variant: :leaf}
14:57:31.890 [debug] Fun returned result: %{variant: :leaf}
14:57:31.890 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.890 [debug] do_bend final result: %{variant: :leaf}
14:57:31.890 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.890 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.890 [debug] Executing bend with initial: 8
14:57:31.890 [debug] Executing fun with value: 8
14:57:31.890 [debug] Evaluating bend block with value: 8
14:57:31.890 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.890 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.890 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.890 [debug] Executing bend with initial: 9
14:57:31.890 [debug] Executing fun with value: 9
14:57:31.890 [debug] Evaluating bend block with value: 9
14:57:31.890 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.890 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.890 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.890 [debug] Executing bend with initial: 10
14:57:31.890 [debug] Executing fun with value: 10
14:57:31.890 [debug] Evaluating bend block with value: 10
14:57:31.890 [debug] Block returned: %{variant: :leaf}
14:57:31.890 [debug] Fun returned result: %{variant: :leaf}
14:57:31.890 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.890 [debug] do_bend final result: %{variant: :leaf}
14:57:31.890 [debug] Executing bend with initial: 10
14:57:31.890 [debug] Executing fun with value: 10
14:57:31.890 [debug] Evaluating bend block with value: 10
14:57:31.890 [debug] Block returned: %{variant: :leaf}
14:57:31.890 [debug] Fun returned result: %{variant: :leaf}
14:57:31.890 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 9
14:57:31.891 [debug] Executing fun with value: 9
14:57:31.891 [debug] Evaluating bend block with value: 9
14:57:31.891 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 10
14:57:31.891 [debug] Executing fun with value: 10
14:57:31.891 [debug] Evaluating bend block with value: 10
14:57:31.891 [debug] Block returned: %{variant: :leaf}
14:57:31.891 [debug] Fun returned result: %{variant: :leaf}
14:57:31.891 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{variant: :leaf}
14:57:31.891 [debug] Executing bend with initial: 10
14:57:31.891 [debug] Executing fun with value: 10
14:57:31.891 [debug] Evaluating bend block with value: 10
14:57:31.891 [debug] Block returned: %{variant: :leaf}
14:57:31.891 [debug] Fun returned result: %{variant: :leaf}
14:57:31.891 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.891 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.891 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 7
14:57:31.891 [debug] Executing fun with value: 7
14:57:31.891 [debug] Evaluating bend block with value: 7
14:57:31.891 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.891 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.891 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 8
14:57:31.891 [debug] Executing fun with value: 8
14:57:31.891 [debug] Evaluating bend block with value: 8
14:57:31.891 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.891 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.891 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 9
14:57:31.891 [debug] Executing fun with value: 9
14:57:31.891 [debug] Evaluating bend block with value: 9
14:57:31.891 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 10
14:57:31.891 [debug] Executing fun with value: 10
14:57:31.891 [debug] Evaluating bend block with value: 10
14:57:31.891 [debug] Block returned: %{variant: :leaf}
14:57:31.891 [debug] Fun returned result: %{variant: :leaf}
14:57:31.891 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{variant: :leaf}
14:57:31.891 [debug] Executing bend with initial: 10
14:57:31.891 [debug] Executing fun with value: 10
14:57:31.891 [debug] Evaluating bend block with value: 10
14:57:31.891 [debug] Block returned: %{variant: :leaf}
14:57:31.891 [debug] Fun returned result: %{variant: :leaf}
14:57:31.891 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 9
14:57:31.891 [debug] Executing fun with value: 9
14:57:31.891 [debug] Evaluating bend block with value: 9
14:57:31.891 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 10
14:57:31.891 [debug] Executing fun with value: 10
14:57:31.891 [debug] Evaluating bend block with value: 10
14:57:31.891 [debug] Block returned: %{variant: :leaf}
14:57:31.891 [debug] Fun returned result: %{variant: :leaf}
14:57:31.891 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{variant: :leaf}
14:57:31.891 [debug] Executing bend with initial: 10
14:57:31.891 [debug] Executing fun with value: 10
14:57:31.891 [debug] Evaluating bend block with value: 10
14:57:31.891 [debug] Block returned: %{variant: :leaf}
14:57:31.891 [debug] Fun returned result: %{variant: :leaf}
14:57:31.891 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{variant: :leaf}
14:57:31.891 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.891 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 8
14:57:31.891 [debug] Executing fun with value: 8
14:57:31.891 [debug] Evaluating bend block with value: 8
14:57:31.891 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.891 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.891 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 9
14:57:31.891 [debug] Executing fun with value: 9
14:57:31.891 [debug] Evaluating bend block with value: 9
14:57:31.891 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.891 [debug] Executing bend with initial: 10
14:57:31.892 [debug] Executing fun with value: 10
14:57:31.892 [debug] Evaluating bend block with value: 10
14:57:31.892 [debug] Block returned: %{variant: :leaf}
14:57:31.892 [debug] Fun returned result: %{variant: :leaf}
14:57:31.892 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.892 [debug] do_bend final result: %{variant: :leaf}
14:57:31.892 [debug] Executing bend with initial: 10
14:57:31.892 [debug] Executing fun with value: 10
14:57:31.892 [debug] Evaluating bend block with value: 10
14:57:31.892 [debug] Block returned: %{variant: :leaf}
14:57:31.892 [debug] Fun returned result: %{variant: :leaf}
14:57:31.892 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.892 [debug] do_bend final result: %{variant: :leaf}
14:57:31.892 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.892 [debug] Executing bend with initial: 9
14:57:31.892 [debug] Executing fun with value: 9
14:57:31.892 [debug] Evaluating bend block with value: 9
14:57:31.892 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.892 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.892 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.892 [debug] Executing bend with initial: 10
14:57:31.892 [debug] Executing fun with value: 10
14:57:31.892 [debug] Evaluating bend block with value: 10
14:57:31.892 [debug] Block returned: %{variant: :leaf}
14:57:31.892 [debug] Fun returned result: %{variant: :leaf}
14:57:31.892 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.892 [debug] do_bend final result: %{variant: :leaf}
14:57:31.892 [debug] Executing bend with initial: 10
14:57:31.892 [debug] Executing fun with value: 10
14:57:31.892 [debug] Evaluating bend block with value: 10
14:57:31.892 [debug] Block returned: %{variant: :leaf}
14:57:31.892 [debug] Fun returned result: %{variant: :leaf}
14:57:31.892 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.892 [debug] do_bend final result: %{variant: :leaf}
14:57:31.892 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.892 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.892 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.892 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.892 [debug] Executing bend with initial: 6
14:57:31.892 [debug] Executing fun with value: 6
14:57:31.892 [debug] Evaluating bend block with value: 6
14:57:31.892 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.892 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.892 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.892 [debug] Executing bend with initial: 7
14:57:31.892 [debug] Executing fun with value: 7
14:57:31.892 [debug] Evaluating bend block with value: 7
14:57:31.892 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.892 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.892 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.892 [debug] Executing bend with initial: 8
14:57:31.892 [debug] Executing fun with value: 8
14:57:31.892 [debug] Evaluating bend block with value: 8
14:57:31.892 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.892 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.892 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.892 [debug] Executing bend with initial: 9
14:57:31.892 [debug] Executing fun with value: 9
14:57:31.892 [debug] Evaluating bend block with value: 9
14:57:31.892 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.892 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.892 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.892 [debug] Executing bend with initial: 10
14:57:31.892 [debug] Executing fun with value: 10
14:57:31.892 [debug] Evaluating bend block with value: 10
14:57:31.892 [debug] Block returned: %{variant: :leaf}
14:57:31.892 [debug] Fun returned result: %{variant: :leaf}
14:57:31.892 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.892 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] Executing bend with initial: 10
14:57:31.893 [debug] Executing fun with value: 10
14:57:31.893 [debug] Evaluating bend block with value: 10
14:57:31.893 [debug] Block returned: %{variant: :leaf}
14:57:31.893 [debug] Fun returned result: %{variant: :leaf}
14:57:31.893 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.893 [debug] Executing bend with initial: 9
14:57:31.893 [debug] Executing fun with value: 9
14:57:31.893 [debug] Evaluating bend block with value: 9
14:57:31.893 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Executing bend with initial: 10
14:57:31.893 [debug] Executing fun with value: 10
14:57:31.893 [debug] Evaluating bend block with value: 10
14:57:31.893 [debug] Block returned: %{variant: :leaf}
14:57:31.893 [debug] Fun returned result: %{variant: :leaf}
14:57:31.893 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] Executing bend with initial: 10
14:57:31.893 [debug] Executing fun with value: 10
14:57:31.893 [debug] Evaluating bend block with value: 10
14:57:31.893 [debug] Block returned: %{variant: :leaf}
14:57:31.893 [debug] Fun returned result: %{variant: :leaf}
14:57:31.893 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.893 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.893 [debug] Executing bend with initial: 8
14:57:31.893 [debug] Executing fun with value: 8
14:57:31.893 [debug] Evaluating bend block with value: 8
14:57:31.893 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.893 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.893 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.893 [debug] Executing bend with initial: 9
14:57:31.893 [debug] Executing fun with value: 9
14:57:31.893 [debug] Evaluating bend block with value: 9
14:57:31.893 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Executing bend with initial: 10
14:57:31.893 [debug] Executing fun with value: 10
14:57:31.893 [debug] Evaluating bend block with value: 10
14:57:31.893 [debug] Block returned: %{variant: :leaf}
14:57:31.893 [debug] Fun returned result: %{variant: :leaf}
14:57:31.893 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] Executing bend with initial: 10
14:57:31.893 [debug] Executing fun with value: 10
14:57:31.893 [debug] Evaluating bend block with value: 10
14:57:31.893 [debug] Block returned: %{variant: :leaf}
14:57:31.893 [debug] Fun returned result: %{variant: :leaf}
14:57:31.893 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.893 [debug] Executing bend with initial: 9
14:57:31.893 [debug] Executing fun with value: 9
14:57:31.893 [debug] Evaluating bend block with value: 9
14:57:31.893 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.893 [debug] Executing bend with initial: 10
14:57:31.893 [debug] Executing fun with value: 10
14:57:31.893 [debug] Evaluating bend block with value: 10
14:57:31.893 [debug] Block returned: %{variant: :leaf}
14:57:31.893 [debug] Fun returned result: %{variant: :leaf}
14:57:31.893 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] Executing bend with initial: 10
14:57:31.893 [debug] Executing fun with value: 10
14:57:31.893 [debug] Evaluating bend block with value: 10
14:57:31.893 [debug] Block returned: %{variant: :leaf}
14:57:31.893 [debug] Fun returned result: %{variant: :leaf}
14:57:31.893 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{variant: :leaf}
14:57:31.893 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.893 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.894 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 7
14:57:31.894 [debug] Executing fun with value: 7
14:57:31.894 [debug] Evaluating bend block with value: 7
14:57:31.894 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.894 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.894 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 8
14:57:31.894 [debug] Executing fun with value: 8
14:57:31.894 [debug] Evaluating bend block with value: 8
14:57:31.894 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.894 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.894 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 9
14:57:31.894 [debug] Executing fun with value: 9
14:57:31.894 [debug] Evaluating bend block with value: 9
14:57:31.894 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 9
14:57:31.894 [debug] Executing fun with value: 9
14:57:31.894 [debug] Evaluating bend block with value: 9
14:57:31.894 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.894 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 8
14:57:31.894 [debug] Executing fun with value: 8
14:57:31.894 [debug] Evaluating bend block with value: 8
14:57:31.894 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.894 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.894 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 9
14:57:31.894 [debug] Executing fun with value: 9
14:57:31.894 [debug] Evaluating bend block with value: 9
14:57:31.894 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 9
14:57:31.894 [debug] Executing fun with value: 9
14:57:31.894 [debug] Evaluating bend block with value: 9
14:57:31.894 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] Executing bend with initial: 10
14:57:31.894 [debug] Executing fun with value: 10
14:57:31.894 [debug] Evaluating bend block with value: 10
14:57:31.894 [debug] Block returned: %{variant: :leaf}
14:57:31.894 [debug] Fun returned result: %{variant: :leaf}
14:57:31.894 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{variant: :leaf}
14:57:31.894 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.894 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.894 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.894 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.895 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.895 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.895 [debug] Executing bend with initial: 4
14:57:31.895 [debug] Executing fun with value: 4
14:57:31.895 [debug] Evaluating bend block with value: 4
14:57:31.895 [debug] Block returned: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.895 [debug] Fun returned result: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.895 [debug] Processing constructed value: %{left: {:fork, 5}, right: {:fork, 5}, val: 4, variant: :node}
14:57:31.895 [debug] Executing bend with initial: 5
14:57:31.895 [debug] Executing fun with value: 5
14:57:31.895 [debug] Evaluating bend block with value: 5
14:57:31.895 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.895 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.895 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.895 [debug] Executing bend with initial: 6
14:57:31.895 [debug] Executing fun with value: 6
14:57:31.895 [debug] Evaluating bend block with value: 6
14:57:31.895 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.895 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.895 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.895 [debug] Executing bend with initial: 7
14:57:31.895 [debug] Executing fun with value: 7
14:57:31.895 [debug] Evaluating bend block with value: 7
14:57:31.895 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.895 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.895 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.895 [debug] Executing bend with initial: 8
14:57:31.895 [debug] Executing fun with value: 8
14:57:31.895 [debug] Evaluating bend block with value: 8
14:57:31.895 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.896 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.896 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.896 [debug] Executing bend with initial: 9
14:57:31.896 [debug] Executing fun with value: 9
14:57:31.896 [debug] Evaluating bend block with value: 9
14:57:31.896 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.896 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.896 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.896 [debug] Executing bend with initial: 10
14:57:31.896 [debug] Executing fun with value: 10
14:57:31.896 [debug] Evaluating bend block with value: 10
14:57:31.896 [debug] Block returned: %{variant: :leaf}
14:57:31.896 [debug] Fun returned result: %{variant: :leaf}
14:57:31.896 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.896 [debug] do_bend final result: %{variant: :leaf}
14:57:31.896 [debug] Executing bend with initial: 10
14:57:31.896 [debug] Executing fun with value: 10
14:57:31.896 [debug] Evaluating bend block with value: 10
14:57:31.896 [debug] Block returned: %{variant: :leaf}
14:57:31.896 [debug] Fun returned result: %{variant: :leaf}
14:57:31.896 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.896 [debug] do_bend final result: %{variant: :leaf}
14:57:31.896 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.896 [debug] Executing bend with initial: 9
14:57:31.896 [debug] Executing fun with value: 9
14:57:31.896 [debug] Evaluating bend block with value: 9
14:57:31.896 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.896 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.896 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.896 [debug] Executing bend with initial: 10
14:57:31.896 [debug] Executing fun with value: 10
14:57:31.896 [debug] Evaluating bend block with value: 10
14:57:31.896 [debug] Block returned: %{variant: :leaf}
14:57:31.896 [debug] Fun returned result: %{variant: :leaf}
14:57:31.896 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.896 [debug] do_bend final result: %{variant: :leaf}
14:57:31.896 [debug] Executing bend with initial: 10
14:57:31.896 [debug] Executing fun with value: 10
14:57:31.896 [debug] Evaluating bend block with value: 10
14:57:31.896 [debug] Block returned: %{variant: :leaf}
14:57:31.896 [debug] Fun returned result: %{variant: :leaf}
14:57:31.896 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.896 [debug] do_bend final result: %{variant: :leaf}
14:57:31.896 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.896 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.896 [debug] Executing bend with initial: 8
14:57:31.896 [debug] Executing fun with value: 8
14:57:31.896 [debug] Evaluating bend block with value: 8
14:57:31.896 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.896 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.896 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.896 [debug] Executing bend with initial: 9
14:57:31.898 [debug] Executing fun with value: 9
14:57:31.898 [debug] Evaluating bend block with value: 9
14:57:31.898 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 9
14:57:31.898 [debug] Executing fun with value: 9
14:57:31.898 [debug] Evaluating bend block with value: 9
14:57:31.898 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.898 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.898 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 7
14:57:31.898 [debug] Executing fun with value: 7
14:57:31.898 [debug] Evaluating bend block with value: 7
14:57:31.898 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 8
14:57:31.898 [debug] Executing fun with value: 8
14:57:31.898 [debug] Evaluating bend block with value: 8
14:57:31.898 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 9
14:57:31.898 [debug] Executing fun with value: 9
14:57:31.898 [debug] Evaluating bend block with value: 9
14:57:31.898 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 9
14:57:31.898 [debug] Executing fun with value: 9
14:57:31.898 [debug] Evaluating bend block with value: 9
14:57:31.898 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.898 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 8
14:57:31.898 [debug] Executing fun with value: 8
14:57:31.898 [debug] Evaluating bend block with value: 8
14:57:31.898 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 9
14:57:31.898 [debug] Executing fun with value: 9
14:57:31.898 [debug] Evaluating bend block with value: 9
14:57:31.898 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.898 [debug] Evaluating bend block with value: 10
14:57:31.898 [debug] Block returned: %{variant: :leaf}
14:57:31.898 [debug] Fun returned result: %{variant: :leaf}
14:57:31.898 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.898 [debug] do_bend final result: %{variant: :leaf}
14:57:31.898 [debug] Executing bend with initial: 10
14:57:31.898 [debug] Executing fun with value: 10
14:57:31.899 [debug] Evaluating bend block with value: 10
14:57:31.899 [debug] Block returned: %{variant: :leaf}
14:57:31.899 [debug] Fun returned result: %{variant: :leaf}
14:57:31.899 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 9
14:57:31.899 [debug] Executing fun with value: 9
14:57:31.899 [debug] Evaluating bend block with value: 9
14:57:31.899 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 10
14:57:31.899 [debug] Executing fun with value: 10
14:57:31.899 [debug] Evaluating bend block with value: 10
14:57:31.899 [debug] Block returned: %{variant: :leaf}
14:57:31.899 [debug] Fun returned result: %{variant: :leaf}
14:57:31.899 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{variant: :leaf}
14:57:31.899 [debug] Executing bend with initial: 10
14:57:31.899 [debug] Executing fun with value: 10
14:57:31.899 [debug] Evaluating bend block with value: 10
14:57:31.899 [debug] Block returned: %{variant: :leaf}
14:57:31.899 [debug] Fun returned result: %{variant: :leaf}
14:57:31.899 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.899 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.899 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.899 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 6
14:57:31.899 [debug] Executing fun with value: 6
14:57:31.899 [debug] Evaluating bend block with value: 6
14:57:31.899 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.899 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.899 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 7
14:57:31.899 [debug] Executing fun with value: 7
14:57:31.899 [debug] Evaluating bend block with value: 7
14:57:31.899 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.899 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.899 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 8
14:57:31.899 [debug] Executing fun with value: 8
14:57:31.899 [debug] Evaluating bend block with value: 8
14:57:31.899 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.899 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.899 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 9
14:57:31.899 [debug] Executing fun with value: 9
14:57:31.899 [debug] Evaluating bend block with value: 9
14:57:31.899 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 10
14:57:31.899 [debug] Executing fun with value: 10
14:57:31.899 [debug] Evaluating bend block with value: 10
14:57:31.899 [debug] Block returned: %{variant: :leaf}
14:57:31.899 [debug] Fun returned result: %{variant: :leaf}
14:57:31.899 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{variant: :leaf}
14:57:31.899 [debug] Executing bend with initial: 10
14:57:31.899 [debug] Executing fun with value: 10
14:57:31.899 [debug] Evaluating bend block with value: 10
14:57:31.899 [debug] Block returned: %{variant: :leaf}
14:57:31.899 [debug] Fun returned result: %{variant: :leaf}
14:57:31.899 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 9
14:57:31.899 [debug] Executing fun with value: 9
14:57:31.899 [debug] Evaluating bend block with value: 9
14:57:31.899 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 10
14:57:31.899 [debug] Executing fun with value: 10
14:57:31.899 [debug] Evaluating bend block with value: 10
14:57:31.899 [debug] Block returned: %{variant: :leaf}
14:57:31.899 [debug] Fun returned result: %{variant: :leaf}
14:57:31.899 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{variant: :leaf}
14:57:31.899 [debug] Executing bend with initial: 10
14:57:31.899 [debug] Executing fun with value: 10
14:57:31.899 [debug] Evaluating bend block with value: 10
14:57:31.899 [debug] Block returned: %{variant: :leaf}
14:57:31.899 [debug] Fun returned result: %{variant: :leaf}
14:57:31.899 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{variant: :leaf}
14:57:31.899 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.899 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 8
14:57:31.899 [debug] Executing fun with value: 8
14:57:31.899 [debug] Evaluating bend block with value: 8
14:57:31.899 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.899 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.899 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.899 [debug] Executing bend with initial: 9
14:57:31.901 [debug] Executing fun with value: 9
14:57:31.901 [debug] Evaluating bend block with value: 9
14:57:31.901 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Executing bend with initial: 10
14:57:31.901 [debug] Executing fun with value: 10
14:57:31.901 [debug] Evaluating bend block with value: 10
14:57:31.901 [debug] Block returned: %{variant: :leaf}
14:57:31.901 [debug] Fun returned result: %{variant: :leaf}
14:57:31.901 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.901 [debug] do_bend final result: %{variant: :leaf}
14:57:31.901 [debug] Executing bend with initial: 10
14:57:31.901 [debug] Executing fun with value: 10
14:57:31.901 [debug] Evaluating bend block with value: 10
14:57:31.901 [debug] Block returned: %{variant: :leaf}
14:57:31.901 [debug] Fun returned result: %{variant: :leaf}
14:57:31.901 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.901 [debug] do_bend final result: %{variant: :leaf}
14:57:31.901 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.901 [debug] Executing bend with initial: 9
14:57:31.901 [debug] Executing fun with value: 9
14:57:31.901 [debug] Evaluating bend block with value: 9
14:57:31.901 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Executing bend with initial: 10
14:57:31.901 [debug] Executing fun with value: 10
14:57:31.901 [debug] Evaluating bend block with value: 10
14:57:31.901 [debug] Block returned: %{variant: :leaf}
14:57:31.901 [debug] Fun returned result: %{variant: :leaf}
14:57:31.901 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.901 [debug] do_bend final result: %{variant: :leaf}
14:57:31.901 [debug] Executing bend with initial: 10
14:57:31.901 [debug] Executing fun with value: 10
14:57:31.901 [debug] Evaluating bend block with value: 10
14:57:31.901 [debug] Block returned: %{variant: :leaf}
14:57:31.901 [debug] Fun returned result: %{variant: :leaf}
14:57:31.901 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.901 [debug] do_bend final result: %{variant: :leaf}
14:57:31.901 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.901 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.901 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.901 [debug] Executing bend with initial: 7
14:57:31.901 [debug] Executing fun with value: 7
14:57:31.901 [debug] Evaluating bend block with value: 7
14:57:31.901 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.901 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.901 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.901 [debug] Executing bend with initial: 8
14:57:31.901 [debug] Executing fun with value: 8
14:57:31.901 [debug] Evaluating bend block with value: 8
14:57:31.901 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.901 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.901 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.901 [debug] Executing bend with initial: 9
14:57:31.901 [debug] Executing fun with value: 9
14:57:31.901 [debug] Evaluating bend block with value: 9
14:57:31.901 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.901 [debug] Executing bend with initial: 10
14:57:31.901 [debug] Executing fun with value: 10
14:57:31.901 [debug] Evaluating bend block with value: 10
14:57:31.901 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] Executing bend with initial: 10
14:57:31.902 [debug] Executing fun with value: 10
14:57:31.902 [debug] Evaluating bend block with value: 10
14:57:31.902 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 9
14:57:31.902 [debug] Executing fun with value: 9
14:57:31.902 [debug] Evaluating bend block with value: 9
14:57:31.902 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 10
14:57:31.902 [debug] Executing fun with value: 10
14:57:31.902 [debug] Evaluating bend block with value: 10
14:57:31.902 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] Executing bend with initial: 10
14:57:31.902 [debug] Executing fun with value: 10
14:57:31.902 [debug] Evaluating bend block with value: 10
14:57:31.902 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.902 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 8
14:57:31.902 [debug] Executing fun with value: 8
14:57:31.902 [debug] Evaluating bend block with value: 8
14:57:31.902 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.902 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.902 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 9
14:57:31.902 [debug] Executing fun with value: 9
14:57:31.902 [debug] Evaluating bend block with value: 9
14:57:31.902 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 10
14:57:31.902 [debug] Executing fun with value: 10
14:57:31.902 [debug] Evaluating bend block with value: 10
14:57:31.902 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] Executing bend with initial: 10
14:57:31.902 [debug] Executing fun with value: 10
14:57:31.902 [debug] Evaluating bend block with value: 10
14:57:31.902 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 9
14:57:31.902 [debug] Executing fun with value: 9
14:57:31.902 [debug] Evaluating bend block with value: 9
14:57:31.902 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 10
14:57:31.902 [debug] Executing fun with value: 10
14:57:31.902 [debug] Evaluating bend block with value: 10
14:57:31.902 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] Executing bend with initial: 10
14:57:31.902 [debug] Executing fun with value: 10
14:57:31.902 [debug] Evaluating bend block with value: 10
14:57:31.902 [debug] Block returned: %{variant: :leaf}
14:57:31.902 [debug] Fun returned result: %{variant: :leaf}
14:57:31.902 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{variant: :leaf}
14:57:31.902 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.902 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.902 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.902 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.902 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.902 [debug] Executing bend with initial: 5
14:57:31.902 [debug] Executing fun with value: 5
14:57:31.902 [debug] Evaluating bend block with value: 5
14:57:31.902 [debug] Block returned: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.903 [debug] Fun returned result: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.903 [debug] Processing constructed value: %{left: {:fork, 6}, right: {:fork, 6}, val: 5, variant: :node}
14:57:31.903 [debug] Executing bend with initial: 6
14:57:31.903 [debug] Executing fun with value: 6
14:57:31.903 [debug] Evaluating bend block with value: 6
14:57:31.903 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.903 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.903 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.903 [debug] Executing bend with initial: 7
14:57:31.903 [debug] Executing fun with value: 7
14:57:31.903 [debug] Evaluating bend block with value: 7
14:57:31.903 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.903 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.903 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.903 [debug] Executing bend with initial: 8
14:57:31.903 [debug] Executing fun with value: 8
14:57:31.903 [debug] Evaluating bend block with value: 8
14:57:31.903 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.903 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.903 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.903 [debug] Executing bend with initial: 9
14:57:31.903 [debug] Executing fun with value: 9
14:57:31.903 [debug] Evaluating bend block with value: 9
14:57:31.903 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.903 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.903 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.903 [debug] Executing bend with initial: 10
14:57:31.903 [debug] Executing fun with value: 10
14:57:31.903 [debug] Evaluating bend block with value: 10
14:57:31.903 [debug] Block returned: %{variant: :leaf}
14:57:31.903 [debug] Fun returned result: %{variant: :leaf}
14:57:31.903 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.903 [debug] do_bend final result: %{variant: :leaf}
14:57:31.903 [debug] Executing bend with initial: 10
14:57:31.903 [debug] Executing fun with value: 10
14:57:31.903 [debug] Evaluating bend block with value: 10
14:57:31.903 [debug] Block returned: %{variant: :leaf}
14:57:31.903 [debug] Fun returned result: %{variant: :leaf}
14:57:31.903 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.903 [debug] do_bend final result: %{variant: :leaf}
14:57:31.903 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.903 [debug] Executing bend with initial: 9
14:57:31.903 [debug] Executing fun with value: 9
14:57:31.903 [debug] Evaluating bend block with value: 9
14:57:31.903 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.904 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.904 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.904 [debug] Executing bend with initial: 10
14:57:31.904 [debug] Executing fun with value: 10
14:57:31.904 [debug] Evaluating bend block with value: 10
14:57:31.904 [debug] Block returned: %{variant: :leaf}
14:57:31.904 [debug] Fun returned result: %{variant: :leaf}
14:57:31.904 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.904 [debug] do_bend final result: %{variant: :leaf}
14:57:31.904 [debug] Executing bend with initial: 10
14:57:31.904 [debug] Executing fun with value: 10
14:57:31.904 [debug] Evaluating bend block with value: 10
14:57:31.904 [debug] Block returned: %{variant: :leaf}
14:57:31.904 [debug] Fun returned result: %{variant: :leaf}
14:57:31.904 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.904 [debug] do_bend final result: %{variant: :leaf}
14:57:31.904 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.904 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.904 [debug] Executing bend with initial: 8
14:57:31.904 [debug] Executing fun with value: 8
14:57:31.904 [debug] Evaluating bend block with value: 8
14:57:31.904 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.904 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.904 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.904 [debug] Executing bend with initial: 9
14:57:31.904 [debug] Executing fun with value: 9
14:57:31.904 [debug] Evaluating bend block with value: 9
14:57:31.904 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.904 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.904 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.904 [debug] Executing bend with initial: 10
14:57:31.904 [debug] Executing fun with value: 10
14:57:31.904 [debug] Evaluating bend block with value: 10
14:57:31.904 [debug] Block returned: %{variant: :leaf}
14:57:31.904 [debug] Fun returned result: %{variant: :leaf}
14:57:31.904 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.904 [debug] do_bend final result: %{variant: :leaf}
14:57:31.904 [debug] Executing bend with initial: 10
14:57:31.904 [debug] Executing fun with value: 10
14:57:31.904 [debug] Evaluating bend block with value: 10
14:57:31.904 [debug] Block returned: %{variant: :leaf}
14:57:31.904 [debug] Fun returned result: %{variant: :leaf}
14:57:31.904 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.904 [debug] do_bend final result: %{variant: :leaf}
14:57:31.904 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.904 [debug] Executing bend with initial: 9
14:57:31.905 [debug] Executing fun with value: 9
14:57:31.905 [debug] Evaluating bend block with value: 9
14:57:31.905 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 10
14:57:31.905 [debug] Executing fun with value: 10
14:57:31.905 [debug] Evaluating bend block with value: 10
14:57:31.905 [debug] Block returned: %{variant: :leaf}
14:57:31.905 [debug] Fun returned result: %{variant: :leaf}
14:57:31.905 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{variant: :leaf}
14:57:31.905 [debug] Executing bend with initial: 10
14:57:31.905 [debug] Executing fun with value: 10
14:57:31.905 [debug] Evaluating bend block with value: 10
14:57:31.905 [debug] Block returned: %{variant: :leaf}
14:57:31.905 [debug] Fun returned result: %{variant: :leaf}
14:57:31.905 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.905 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.905 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 7
14:57:31.905 [debug] Executing fun with value: 7
14:57:31.905 [debug] Evaluating bend block with value: 7
14:57:31.905 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.905 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.905 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 8
14:57:31.905 [debug] Executing fun with value: 8
14:57:31.905 [debug] Evaluating bend block with value: 8
14:57:31.905 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.905 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.905 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 9
14:57:31.905 [debug] Executing fun with value: 9
14:57:31.905 [debug] Evaluating bend block with value: 9
14:57:31.905 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 10
14:57:31.905 [debug] Executing fun with value: 10
14:57:31.905 [debug] Evaluating bend block with value: 10
14:57:31.905 [debug] Block returned: %{variant: :leaf}
14:57:31.905 [debug] Fun returned result: %{variant: :leaf}
14:57:31.905 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{variant: :leaf}
14:57:31.905 [debug] Executing bend with initial: 10
14:57:31.905 [debug] Executing fun with value: 10
14:57:31.905 [debug] Evaluating bend block with value: 10
14:57:31.905 [debug] Block returned: %{variant: :leaf}
14:57:31.905 [debug] Fun returned result: %{variant: :leaf}
14:57:31.905 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 9
14:57:31.905 [debug] Executing fun with value: 9
14:57:31.905 [debug] Evaluating bend block with value: 9
14:57:31.905 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 10
14:57:31.905 [debug] Executing fun with value: 10
14:57:31.905 [debug] Evaluating bend block with value: 10
14:57:31.905 [debug] Block returned: %{variant: :leaf}
14:57:31.905 [debug] Fun returned result: %{variant: :leaf}
14:57:31.905 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{variant: :leaf}
14:57:31.905 [debug] Executing bend with initial: 10
14:57:31.905 [debug] Executing fun with value: 10
14:57:31.905 [debug] Evaluating bend block with value: 10
14:57:31.905 [debug] Block returned: %{variant: :leaf}
14:57:31.905 [debug] Fun returned result: %{variant: :leaf}
14:57:31.905 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.905 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 8
14:57:31.905 [debug] Executing fun with value: 8
14:57:31.905 [debug] Evaluating bend block with value: 8
14:57:31.905 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.905 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.905 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 9
14:57:31.905 [debug] Executing fun with value: 9
14:57:31.905 [debug] Evaluating bend block with value: 9
14:57:31.905 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.905 [debug] Executing bend with initial: 10
14:57:31.905 [debug] Executing fun with value: 10
14:57:31.905 [debug] Evaluating bend block with value: 10
14:57:31.905 [debug] Block returned: %{variant: :leaf}
14:57:31.905 [debug] Fun returned result: %{variant: :leaf}
14:57:31.905 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.905 [debug] do_bend final result: %{variant: :leaf}
14:57:31.907 [debug] Executing bend with initial: 10
14:57:31.907 [debug] Executing fun with value: 10
14:57:31.907 [debug] Evaluating bend block with value: 10
14:57:31.907 [debug] Block returned: %{variant: :leaf}
14:57:31.907 [debug] Fun returned result: %{variant: :leaf}
14:57:31.907 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.907 [debug] do_bend final result: %{variant: :leaf}
14:57:31.907 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.907 [debug] Executing bend with initial: 9
14:57:31.907 [debug] Executing fun with value: 9
14:57:31.907 [debug] Evaluating bend block with value: 9
14:57:31.907 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.907 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.907 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.907 [debug] Executing bend with initial: 10
14:57:31.907 [debug] Executing fun with value: 10
14:57:31.907 [debug] Evaluating bend block with value: 10
14:57:31.907 [debug] Block returned: %{variant: :leaf}
14:57:31.907 [debug] Fun returned result: %{variant: :leaf}
14:57:31.907 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.907 [debug] do_bend final result: %{variant: :leaf}
14:57:31.907 [debug] Executing bend with initial: 10
14:57:31.907 [debug] Executing fun with value: 10
14:57:31.907 [debug] Evaluating bend block with value: 10
14:57:31.907 [debug] Block returned: %{variant: :leaf}
14:57:31.907 [debug] Fun returned result: %{variant: :leaf}
14:57:31.907 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.907 [debug] do_bend final result: %{variant: :leaf}
14:57:31.907 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.907 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.907 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.907 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.907 [debug] Executing bend with initial: 6
14:57:31.907 [debug] Executing fun with value: 6
14:57:31.907 [debug] Evaluating bend block with value: 6
14:57:31.907 [debug] Block returned: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.907 [debug] Fun returned result: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.907 [debug] Processing constructed value: %{left: {:fork, 7}, right: {:fork, 7}, val: 6, variant: :node}
14:57:31.907 [debug] Executing bend with initial: 7
14:57:31.907 [debug] Executing fun with value: 7
14:57:31.907 [debug] Evaluating bend block with value: 7
14:57:31.907 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.907 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.907 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 8
14:57:31.908 [debug] Executing fun with value: 8
14:57:31.908 [debug] Evaluating bend block with value: 8
14:57:31.908 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.908 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.908 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 9
14:57:31.908 [debug] Executing fun with value: 9
14:57:31.908 [debug] Evaluating bend block with value: 9
14:57:31.908 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 9
14:57:31.908 [debug] Executing fun with value: 9
14:57:31.908 [debug] Evaluating bend block with value: 9
14:57:31.908 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.908 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 8
14:57:31.908 [debug] Executing fun with value: 8
14:57:31.908 [debug] Evaluating bend block with value: 8
14:57:31.908 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.908 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.908 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 9
14:57:31.908 [debug] Executing fun with value: 9
14:57:31.908 [debug] Evaluating bend block with value: 9
14:57:31.908 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 9
14:57:31.908 [debug] Executing fun with value: 9
14:57:31.908 [debug] Evaluating bend block with value: 9
14:57:31.908 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] Executing bend with initial: 10
14:57:31.908 [debug] Executing fun with value: 10
14:57:31.908 [debug] Evaluating bend block with value: 10
14:57:31.908 [debug] Block returned: %{variant: :leaf}
14:57:31.908 [debug] Fun returned result: %{variant: :leaf}
14:57:31.908 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{variant: :leaf}
14:57:31.908 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.908 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.908 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.908 [debug] Executing bend with initial: 7
14:57:31.908 [debug] Executing fun with value: 7
14:57:31.908 [debug] Evaluating bend block with value: 7
14:57:31.908 [debug] Block returned: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.908 [debug] Fun returned result: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.908 [debug] Processing constructed value: %{left: {:fork, 8}, right: {:fork, 8}, val: 7, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 8
14:57:31.909 [debug] Executing fun with value: 8
14:57:31.909 [debug] Evaluating bend block with value: 8
14:57:31.909 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.909 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.909 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 9
14:57:31.909 [debug] Executing fun with value: 9
14:57:31.909 [debug] Evaluating bend block with value: 9
14:57:31.909 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 9
14:57:31.909 [debug] Executing fun with value: 9
14:57:31.909 [debug] Evaluating bend block with value: 9
14:57:31.909 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.909 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 8
14:57:31.909 [debug] Executing fun with value: 8
14:57:31.909 [debug] Evaluating bend block with value: 8
14:57:31.909 [debug] Block returned: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.909 [debug] Fun returned result: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.909 [debug] Processing constructed value: %{left: {:fork, 9}, right: {:fork, 9}, val: 8, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 9
14:57:31.909 [debug] Executing fun with value: 9
14:57:31.909 [debug] Evaluating bend block with value: 9
14:57:31.909 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 9
14:57:31.909 [debug] Executing fun with value: 9
14:57:31.909 [debug] Evaluating bend block with value: 9
14:57:31.909 [debug] Block returned: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Fun returned result: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Processing constructed value: %{left: {:fork, 10}, right: {:fork, 10}, val: 9, variant: :node}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] Executing bend with initial: 10
14:57:31.909 [debug] Executing fun with value: 10
14:57:31.909 [debug] Evaluating bend block with value: 10
14:57:31.909 [debug] Block returned: %{variant: :leaf}
14:57:31.909 [debug] Fun returned result: %{variant: :leaf}
14:57:31.909 [debug] Processing constructed value: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{variant: :leaf}
14:57:31.909 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.909 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.910 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.910 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.910 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.910 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.911 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.912 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, (truncated)
14:57:31.916 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, (truncated)
14:57:31.926 [debug] do_bend final result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: (truncated)
14:57:31.934 [debug] Final bend result: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :l (truncated)
14:57:31.940 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{vari (truncated)
14:57:31.945 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right:  (truncated)
14:57:31.948 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :le (truncated)
14:57:31.950 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{varian (truncated)
14:57:31.951 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
14:57:31.952 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
14:57:31.953 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:31.953 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.954 [debug] Recursive field result for left: 0
14:57:31.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.954 [debug] Recursive field result for right: 0
14:57:31.954 [debug] do_fold called with non-variant data: 0
14:57:31.954 [debug] do_fold called with non-variant data: 0
14:57:31.954 [debug] Recursive field result for left: 9
14:57:31.954 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.954 [debug] Recursive field result for left: 0
14:57:31.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.954 [debug] Recursive field result for right: 0
14:57:31.954 [debug] do_fold called with non-variant data: 0
14:57:31.954 [debug] do_fold called with non-variant data: 0
14:57:31.954 [debug] Recursive field result for right: 9
14:57:31.954 [debug] do_fold called with non-variant data: 9
14:57:31.954 [debug] do_fold called with non-variant data: 9
14:57:31.954 [debug] Recursive field result for left: 26
14:57:31.954 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.954 [debug] Recursive field result for left: 0
14:57:31.954 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.954 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.954 [debug] Recursive field result for right: 0
14:57:31.954 [debug] do_fold called with non-variant data: 0
14:57:31.954 [debug] do_fold called with non-variant data: 0
14:57:31.954 [debug] Recursive field result for left: 9
14:57:31.954 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for left: 0
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for right: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] Recursive field result for right: 9
14:57:31.955 [debug] do_fold called with non-variant data: 9
14:57:31.955 [debug] do_fold called with non-variant data: 9
14:57:31.955 [debug] Recursive field result for right: 26
14:57:31.955 [debug] do_fold called with non-variant data: 26
14:57:31.955 [debug] do_fold called with non-variant data: 26
14:57:31.955 [debug] Recursive field result for left: 59
14:57:31.955 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for left: 0
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for right: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] Recursive field result for left: 9
14:57:31.955 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for left: 0
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for right: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] Recursive field result for right: 9
14:57:31.955 [debug] do_fold called with non-variant data: 9
14:57:31.955 [debug] do_fold called with non-variant data: 9
14:57:31.955 [debug] Recursive field result for left: 26
14:57:31.955 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for left: 0
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for right: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] Recursive field result for left: 9
14:57:31.955 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for left: 0
14:57:31.955 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.955 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.955 [debug] Recursive field result for right: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] do_fold called with non-variant data: 0
14:57:31.955 [debug] Recursive field result for right: 9
14:57:31.955 [debug] do_fold called with non-variant data: 9
14:57:31.955 [debug] do_fold called with non-variant data: 9
14:57:31.955 [debug] Recursive field result for right: 26
14:57:31.955 [debug] do_fold called with non-variant data: 26
14:57:31.955 [debug] do_fold called with non-variant data: 26
14:57:31.955 [debug] Recursive field result for right: 59
14:57:31.955 [debug] do_fold called with non-variant data: 59
14:57:31.955 [debug] do_fold called with non-variant data: 59
14:57:31.955 [debug] Recursive field result for left: 124
14:57:31.956 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.956 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.956 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.956 [debug] Recursive field result for left: 0
14:57:31.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.956 [debug] Recursive field result for right: 0
14:57:31.956 [debug] do_fold called with non-variant data: 0
14:57:31.956 [debug] do_fold called with non-variant data: 0
14:57:31.956 [debug] Recursive field result for left: 9
14:57:31.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.956 [debug] Recursive field result for left: 0
14:57:31.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.956 [debug] Recursive field result for right: 0
14:57:31.956 [debug] do_fold called with non-variant data: 0
14:57:31.956 [debug] do_fold called with non-variant data: 0
14:57:31.956 [debug] Recursive field result for right: 9
14:57:31.956 [debug] do_fold called with non-variant data: 9
14:57:31.956 [debug] do_fold called with non-variant data: 9
14:57:31.956 [debug] Recursive field result for left: 26
14:57:31.956 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.956 [debug] Recursive field result for left: 0
14:57:31.956 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.956 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.956 [debug] Recursive field result for right: 0
14:57:31.956 [debug] do_fold called with non-variant data: 0
14:57:31.956 [debug] do_fold called with non-variant data: 0
14:57:31.956 [debug] Recursive field result for left: 9
14:57:31.956 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for left: 0
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for right: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] Recursive field result for right: 9
14:57:31.957 [debug] do_fold called with non-variant data: 9
14:57:31.957 [debug] do_fold called with non-variant data: 9
14:57:31.957 [debug] Recursive field result for right: 26
14:57:31.957 [debug] do_fold called with non-variant data: 26
14:57:31.957 [debug] do_fold called with non-variant data: 26
14:57:31.957 [debug] Recursive field result for left: 59
14:57:31.957 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for left: 0
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for right: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] Recursive field result for left: 9
14:57:31.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for left: 0
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for right: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] Recursive field result for right: 9
14:57:31.957 [debug] do_fold called with non-variant data: 9
14:57:31.957 [debug] do_fold called with non-variant data: 9
14:57:31.957 [debug] Recursive field result for left: 26
14:57:31.957 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for left: 0
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for right: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.957 [debug] Recursive field result for left: 9
14:57:31.957 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for left: 0
14:57:31.957 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.957 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.957 [debug] Recursive field result for right: 0
14:57:31.957 [debug] do_fold called with non-variant data: 0
14:57:31.958 [debug] do_fold called with non-variant data: 0
14:57:31.958 [debug] Recursive field result for right: 9
14:57:31.958 [debug] do_fold called with non-variant data: 9
14:57:31.958 [debug] do_fold called with non-variant data: 9
14:57:31.958 [debug] Recursive field result for right: 26
14:57:31.958 [debug] do_fold called with non-variant data: 26
14:57:31.958 [debug] do_fold called with non-variant data: 26
14:57:31.958 [debug] Recursive field result for right: 59
14:57:31.958 [debug] do_fold called with non-variant data: 59
14:57:31.958 [debug] do_fold called with non-variant data: 59
14:57:31.958 [debug] Recursive field result for right: 124
14:57:31.958 [debug] do_fold called with non-variant data: 124
14:57:31.958 [debug] do_fold called with non-variant data: 124
14:57:31.958 [debug] Recursive field result for left: 253
14:57:31.958 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:31.958 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.958 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.958 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.959 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.959 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.959 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.959 [debug] Recursive field result for left: 0
14:57:31.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.959 [debug] Recursive field result for right: 0
14:57:31.959 [debug] do_fold called with non-variant data: 0
14:57:31.959 [debug] do_fold called with non-variant data: 0
14:57:31.959 [debug] Recursive field result for left: 9
14:57:31.959 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.959 [debug] Recursive field result for left: 0
14:57:31.959 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.959 [debug] Recursive field result for right: 0
14:57:31.959 [debug] do_fold called with non-variant data: 0
14:57:31.959 [debug] do_fold called with non-variant data: 0
14:57:31.959 [debug] Recursive field result for right: 9
14:57:31.959 [debug] do_fold called with non-variant data: 9
14:57:31.959 [debug] do_fold called with non-variant data: 9
14:57:31.959 [debug] Recursive field result for left: 26
14:57:31.959 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.959 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.959 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for left: 0
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for right: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] Recursive field result for left: 9
14:57:31.960 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for left: 0
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for right: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] Recursive field result for right: 9
14:57:31.960 [debug] do_fold called with non-variant data: 9
14:57:31.960 [debug] do_fold called with non-variant data: 9
14:57:31.960 [debug] Recursive field result for right: 26
14:57:31.960 [debug] do_fold called with non-variant data: 26
14:57:31.960 [debug] do_fold called with non-variant data: 26
14:57:31.960 [debug] Recursive field result for left: 59
14:57:31.960 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.960 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.960 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for left: 0
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for right: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] Recursive field result for left: 9
14:57:31.960 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for left: 0
14:57:31.960 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.960 [debug] Recursive field result for right: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] do_fold called with non-variant data: 0
14:57:31.960 [debug] Recursive field result for right: 9
14:57:31.960 [debug] do_fold called with non-variant data: 9
14:57:31.960 [debug] do_fold called with non-variant data: 9
14:57:31.960 [debug] Recursive field result for left: 26
14:57:31.960 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.960 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.960 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.961 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.961 [debug] Recursive field result for left: 0
14:57:31.961 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.961 [debug] Recursive field result for right: 0
14:57:31.961 [debug] do_fold called with non-variant data: 0
14:57:31.961 [debug] do_fold called with non-variant data: 0
14:57:31.961 [debug] Recursive field result for left: 9
14:57:31.961 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.961 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.961 [debug] Recursive field result for left: 0
14:57:31.961 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.961 [debug] Recursive field result for right: 0
14:57:31.961 [debug] do_fold called with non-variant data: 0
14:57:31.961 [debug] do_fold called with non-variant data: 0
14:57:31.961 [debug] Recursive field result for right: 9
14:57:31.961 [debug] do_fold called with non-variant data: 9
14:57:31.961 [debug] do_fold called with non-variant data: 9
14:57:31.961 [debug] Recursive field result for right: 26
14:57:31.961 [debug] do_fold called with non-variant data: 26
14:57:31.961 [debug] do_fold called with non-variant data: 26
14:57:31.961 [debug] Recursive field result for right: 59
14:57:31.961 [debug] do_fold called with non-variant data: 59
14:57:31.961 [debug] do_fold called with non-variant data: 59
14:57:31.961 [debug] Recursive field result for left: 124
14:57:31.961 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.961 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.961 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.961 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.961 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.961 [debug] Recursive field result for left: 0
14:57:31.961 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.961 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.961 [debug] Recursive field result for right: 0
14:57:31.961 [debug] do_fold called with non-variant data: 0
14:57:31.961 [debug] do_fold called with non-variant data: 0
14:57:31.961 [debug] Recursive field result for left: 9
14:57:31.962 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for left: 0
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for right: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] Recursive field result for right: 9
14:57:31.962 [debug] do_fold called with non-variant data: 9
14:57:31.962 [debug] do_fold called with non-variant data: 9
14:57:31.962 [debug] Recursive field result for left: 26
14:57:31.962 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for left: 0
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for right: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] Recursive field result for left: 9
14:57:31.962 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for left: 0
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for right: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] Recursive field result for right: 9
14:57:31.962 [debug] do_fold called with non-variant data: 9
14:57:31.962 [debug] do_fold called with non-variant data: 9
14:57:31.962 [debug] Recursive field result for right: 26
14:57:31.962 [debug] do_fold called with non-variant data: 26
14:57:31.962 [debug] do_fold called with non-variant data: 26
14:57:31.962 [debug] Recursive field result for left: 59
14:57:31.962 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for left: 0
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for right: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] Recursive field result for left: 9
14:57:31.962 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for left: 0
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.962 [debug] Recursive field result for right: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] do_fold called with non-variant data: 0
14:57:31.962 [debug] Recursive field result for right: 9
14:57:31.962 [debug] do_fold called with non-variant data: 9
14:57:31.962 [debug] do_fold called with non-variant data: 9
14:57:31.962 [debug] Recursive field result for left: 26
14:57:31.962 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.962 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.962 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.963 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.963 [debug] Recursive field result for left: 0
14:57:31.963 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.963 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.963 [debug] Recursive field result for right: 0
14:57:31.963 [debug] do_fold called with non-variant data: 0
14:57:31.963 [debug] do_fold called with non-variant data: 0
14:57:31.963 [debug] Recursive field result for left: 9
14:57:31.963 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.963 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.963 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.963 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.963 [debug] Recursive field result for left: 0
14:57:31.963 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.963 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.963 [debug] Recursive field result for right: 0
14:57:31.963 [debug] do_fold called with non-variant data: 0
14:57:31.963 [debug] do_fold called with non-variant data: 0
14:57:31.963 [debug] Recursive field result for right: 9
14:57:31.963 [debug] do_fold called with non-variant data: 9
14:57:31.963 [debug] do_fold called with non-variant data: 9
14:57:31.963 [debug] Recursive field result for right: 26
14:57:31.963 [debug] do_fold called with non-variant data: 26
14:57:31.963 [debug] do_fold called with non-variant data: 26
14:57:31.963 [debug] Recursive field result for right: 59
14:57:31.963 [debug] do_fold called with non-variant data: 59
14:57:31.963 [debug] do_fold called with non-variant data: 59
14:57:31.963 [debug] Recursive field result for right: 124
14:57:31.963 [debug] do_fold called with non-variant data: 124
14:57:31.963 [debug] do_fold called with non-variant data: 124
14:57:31.963 [debug] Recursive field result for right: 253
14:57:31.963 [debug] do_fold called with non-variant data: 253
14:57:31.963 [debug] do_fold called with non-variant data: 253
14:57:31.963 [debug] Recursive field result for left: 510
14:57:31.963 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for left: 0
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for right: 0
14:57:31.964 [debug] do_fold called with non-variant data: 0
14:57:31.964 [debug] do_fold called with non-variant data: 0
14:57:31.964 [debug] Recursive field result for left: 9
14:57:31.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for left: 0
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for right: 0
14:57:31.964 [debug] do_fold called with non-variant data: 0
14:57:31.964 [debug] do_fold called with non-variant data: 0
14:57:31.964 [debug] Recursive field result for right: 9
14:57:31.964 [debug] do_fold called with non-variant data: 9
14:57:31.964 [debug] do_fold called with non-variant data: 9
14:57:31.964 [debug] Recursive field result for left: 26
14:57:31.964 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for left: 0
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for right: 0
14:57:31.964 [debug] do_fold called with non-variant data: 0
14:57:31.964 [debug] do_fold called with non-variant data: 0
14:57:31.964 [debug] Recursive field result for left: 9
14:57:31.964 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for left: 0
14:57:31.964 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.964 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.964 [debug] Recursive field result for right: 0
14:57:31.965 [debug] do_fold called with non-variant data: 0
14:57:31.965 [debug] do_fold called with non-variant data: 0
14:57:31.965 [debug] Recursive field result for right: 9
14:57:31.965 [debug] do_fold called with non-variant data: 9
14:57:31.965 [debug] do_fold called with non-variant data: 9
14:57:31.965 [debug] Recursive field result for right: 26
14:57:31.965 [debug] do_fold called with non-variant data: 26
14:57:31.965 [debug] do_fold called with non-variant data: 26
14:57:31.965 [debug] Recursive field result for left: 59
14:57:31.965 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.965 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.965 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.965 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.965 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.965 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.965 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.965 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.965 [debug] Recursive field result for left: 0
14:57:31.970 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.970 [debug] Recursive field result for right: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] Recursive field result for left: 9
14:57:31.970 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.970 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.970 [debug] Recursive field result for left: 0
14:57:31.970 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.970 [debug] Recursive field result for right: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] Recursive field result for right: 9
14:57:31.970 [debug] do_fold called with non-variant data: 9
14:57:31.970 [debug] do_fold called with non-variant data: 9
14:57:31.970 [debug] Recursive field result for left: 26
14:57:31.970 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.970 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.970 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.970 [debug] Recursive field result for left: 0
14:57:31.970 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.970 [debug] Recursive field result for right: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] Recursive field result for left: 9
14:57:31.970 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.970 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.970 [debug] Recursive field result for left: 0
14:57:31.970 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.970 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.970 [debug] Recursive field result for right: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] do_fold called with non-variant data: 0
14:57:31.970 [debug] Recursive field result for right: 9
14:57:31.970 [debug] do_fold called with non-variant data: 9
14:57:31.970 [debug] do_fold called with non-variant data: 9
14:57:31.970 [debug] Recursive field result for right: 26
14:57:31.971 [debug] do_fold called with non-variant data: 26
14:57:31.971 [debug] do_fold called with non-variant data: 26
14:57:31.971 [debug] Recursive field result for right: 59
14:57:31.971 [debug] do_fold called with non-variant data: 59
14:57:31.971 [debug] do_fold called with non-variant data: 59
14:57:31.971 [debug] Recursive field result for left: 124
14:57:31.971 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for left: 0
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for right: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] Recursive field result for left: 9
14:57:31.971 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for left: 0
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for right: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] Recursive field result for right: 9
14:57:31.971 [debug] do_fold called with non-variant data: 9
14:57:31.971 [debug] do_fold called with non-variant data: 9
14:57:31.971 [debug] Recursive field result for left: 26
14:57:31.971 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for left: 0
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for right: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] Recursive field result for left: 9
14:57:31.971 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for left: 0
14:57:31.971 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.971 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.971 [debug] Recursive field result for right: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] do_fold called with non-variant data: 0
14:57:31.971 [debug] Recursive field result for right: 9
14:57:31.971 [debug] do_fold called with non-variant data: 9
14:57:31.971 [debug] do_fold called with non-variant data: 9
14:57:31.971 [debug] Recursive field result for right: 26
14:57:31.971 [debug] do_fold called with non-variant data: 26
14:57:31.971 [debug] do_fold called with non-variant data: 26
14:57:31.971 [debug] Recursive field result for left: 59
14:57:31.971 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.972 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.972 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.972 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.972 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.972 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.972 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.972 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.972 [debug] Recursive field result for left: 0
14:57:31.972 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.972 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.972 [debug] Recursive field result for right: 0
14:57:31.972 [debug] do_fold called with non-variant data: 0
14:57:31.972 [debug] do_fold called with non-variant data: 0
14:57:31.972 [debug] Recursive field result for left: 9
14:57:31.972 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.972 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.972 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.972 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.972 [debug] Recursive field result for left: 0
14:57:31.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.973 [debug] Recursive field result for right: 0
14:57:31.973 [debug] do_fold called with non-variant data: 0
14:57:31.973 [debug] do_fold called with non-variant data: 0
14:57:31.973 [debug] Recursive field result for right: 9
14:57:31.973 [debug] do_fold called with non-variant data: 9
14:57:31.973 [debug] do_fold called with non-variant data: 9
14:57:31.973 [debug] Recursive field result for left: 26
14:57:31.973 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.973 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.973 [debug] Recursive field result for left: 0
14:57:31.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.973 [debug] Recursive field result for right: 0
14:57:31.973 [debug] do_fold called with non-variant data: 0
14:57:31.973 [debug] do_fold called with non-variant data: 0
14:57:31.973 [debug] Recursive field result for left: 9
14:57:31.973 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.973 [debug] Recursive field result for left: 0
14:57:31.973 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.973 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.974 [debug] Recursive field result for right: 0
14:57:31.974 [debug] do_fold called with non-variant data: 0
14:57:31.974 [debug] do_fold called with non-variant data: 0
14:57:31.974 [debug] Recursive field result for right: 9
14:57:31.974 [debug] do_fold called with non-variant data: 9
14:57:31.974 [debug] do_fold called with non-variant data: 9
14:57:31.974 [debug] Recursive field result for right: 26
14:57:31.974 [debug] do_fold called with non-variant data: 26
14:57:31.974 [debug] do_fold called with non-variant data: 26
14:57:31.974 [debug] Recursive field result for right: 59
14:57:31.974 [debug] do_fold called with non-variant data: 59
14:57:31.974 [debug] do_fold called with non-variant data: 59
14:57:31.974 [debug] Recursive field result for right: 124
14:57:31.974 [debug] do_fold called with non-variant data: 124
14:57:31.974 [debug] do_fold called with non-variant data: 124
14:57:31.974 [debug] Recursive field result for left: 253
14:57:31.974 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:31.974 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.974 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.975 [debug] Recursive field result for left: 0
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.975 [debug] Recursive field result for right: 0
14:57:31.975 [debug] do_fold called with non-variant data: 0
14:57:31.975 [debug] do_fold called with non-variant data: 0
14:57:31.975 [debug] Recursive field result for left: 9
14:57:31.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.975 [debug] Recursive field result for left: 0
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.975 [debug] Recursive field result for right: 0
14:57:31.975 [debug] do_fold called with non-variant data: 0
14:57:31.975 [debug] do_fold called with non-variant data: 0
14:57:31.975 [debug] Recursive field result for right: 9
14:57:31.975 [debug] do_fold called with non-variant data: 9
14:57:31.975 [debug] do_fold called with non-variant data: 9
14:57:31.975 [debug] Recursive field result for left: 26
14:57:31.975 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.975 [debug] Recursive field result for left: 0
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.975 [debug] Recursive field result for right: 0
14:57:31.975 [debug] do_fold called with non-variant data: 0
14:57:31.975 [debug] do_fold called with non-variant data: 0
14:57:31.975 [debug] Recursive field result for left: 9
14:57:31.975 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.975 [debug] Recursive field result for left: 0
14:57:31.975 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.975 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.976 [debug] Recursive field result for right: 0
14:57:31.976 [debug] do_fold called with non-variant data: 0
14:57:31.976 [debug] do_fold called with non-variant data: 0
14:57:31.976 [debug] Recursive field result for right: 9
14:57:31.976 [debug] do_fold called with non-variant data: 9
14:57:31.976 [debug] do_fold called with non-variant data: 9
14:57:31.976 [debug] Recursive field result for right: 26
14:57:31.976 [debug] do_fold called with non-variant data: 26
14:57:31.976 [debug] do_fold called with non-variant data: 26
14:57:31.976 [debug] Recursive field result for left: 59
14:57:31.976 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.976 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.976 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.976 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.976 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.976 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.976 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.976 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for left: 0
14:57:31.977 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for right: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] Recursive field result for left: 9
14:57:31.977 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.977 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for left: 0
14:57:31.977 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for right: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] Recursive field result for right: 9
14:57:31.977 [debug] do_fold called with non-variant data: 9
14:57:31.977 [debug] do_fold called with non-variant data: 9
14:57:31.977 [debug] Recursive field result for left: 26
14:57:31.977 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.977 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.977 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for left: 0
14:57:31.977 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for right: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] Recursive field result for left: 9
14:57:31.977 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.977 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for left: 0
14:57:31.977 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.977 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.977 [debug] Recursive field result for right: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] do_fold called with non-variant data: 0
14:57:31.977 [debug] Recursive field result for right: 9
14:57:31.977 [debug] do_fold called with non-variant data: 9
14:57:31.977 [debug] do_fold called with non-variant data: 9
14:57:31.977 [debug] Recursive field result for right: 26
14:57:31.977 [debug] do_fold called with non-variant data: 26
14:57:31.977 [debug] do_fold called with non-variant data: 26
14:57:31.977 [debug] Recursive field result for right: 59
14:57:31.977 [debug] do_fold called with non-variant data: 59
14:57:31.977 [debug] do_fold called with non-variant data: 59
14:57:31.977 [debug] Recursive field result for left: 124
14:57:31.978 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.978 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.978 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.978 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.978 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.978 [debug] Recursive field result for left: 0
14:57:31.978 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.978 [debug] Recursive field result for right: 0
14:57:31.978 [debug] do_fold called with non-variant data: 0
14:57:31.978 [debug] do_fold called with non-variant data: 0
14:57:31.978 [debug] Recursive field result for left: 9
14:57:31.978 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.978 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.978 [debug] Recursive field result for left: 0
14:57:31.978 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.978 [debug] Recursive field result for right: 0
14:57:31.978 [debug] do_fold called with non-variant data: 0
14:57:31.978 [debug] do_fold called with non-variant data: 0
14:57:31.978 [debug] Recursive field result for right: 9
14:57:31.978 [debug] do_fold called with non-variant data: 9
14:57:31.978 [debug] do_fold called with non-variant data: 9
14:57:31.978 [debug] Recursive field result for left: 26
14:57:31.978 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.978 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.978 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.978 [debug] Recursive field result for left: 0
14:57:31.978 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.978 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.978 [debug] Recursive field result for right: 0
14:57:31.978 [debug] do_fold called with non-variant data: 0
14:57:31.978 [debug] do_fold called with non-variant data: 0
14:57:31.979 [debug] Recursive field result for left: 9
14:57:31.979 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.979 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.979 [debug] Recursive field result for left: 0
14:57:31.979 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.979 [debug] Recursive field result for right: 0
14:57:31.979 [debug] do_fold called with non-variant data: 0
14:57:31.979 [debug] do_fold called with non-variant data: 0
14:57:31.979 [debug] Recursive field result for right: 9
14:57:31.979 [debug] do_fold called with non-variant data: 9
14:57:31.979 [debug] do_fold called with non-variant data: 9
14:57:31.979 [debug] Recursive field result for right: 26
14:57:31.979 [debug] do_fold called with non-variant data: 26
14:57:31.979 [debug] do_fold called with non-variant data: 26
14:57:31.979 [debug] Recursive field result for left: 59
14:57:31.979 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.979 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.979 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.979 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.979 [debug] Recursive field result for left: 0
14:57:31.979 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.979 [debug] Recursive field result for right: 0
14:57:31.979 [debug] do_fold called with non-variant data: 0
14:57:31.979 [debug] do_fold called with non-variant data: 0
14:57:31.979 [debug] Recursive field result for left: 9
14:57:31.979 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.979 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.979 [debug] Recursive field result for left: 0
14:57:31.979 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.979 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.979 [debug] Recursive field result for right: 0
14:57:31.979 [debug] do_fold called with non-variant data: 0
14:57:31.979 [debug] do_fold called with non-variant data: 0
14:57:31.979 [debug] Recursive field result for right: 9
14:57:31.979 [debug] do_fold called with non-variant data: 9
14:57:31.979 [debug] do_fold called with non-variant data: 9
14:57:31.979 [debug] Recursive field result for left: 26
14:57:31.979 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.980 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.980 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.980 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.980 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.980 [debug] Recursive field result for left: 0
14:57:31.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.980 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.980 [debug] Recursive field result for right: 0
14:57:31.980 [debug] do_fold called with non-variant data: 0
14:57:31.980 [debug] do_fold called with non-variant data: 0
14:57:31.980 [debug] Recursive field result for left: 9
14:57:31.980 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.980 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.980 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.980 [debug] Recursive field result for left: 0
14:57:31.980 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.980 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.980 [debug] Recursive field result for right: 0
14:57:31.980 [debug] do_fold called with non-variant data: 0
14:57:31.980 [debug] do_fold called with non-variant data: 0
14:57:31.980 [debug] Recursive field result for right: 9
14:57:31.980 [debug] do_fold called with non-variant data: 9
14:57:31.980 [debug] do_fold called with non-variant data: 9
14:57:31.980 [debug] Recursive field result for right: 26
14:57:31.980 [debug] do_fold called with non-variant data: 26
14:57:31.980 [debug] do_fold called with non-variant data: 26
14:57:31.980 [debug] Recursive field result for right: 59
14:57:31.980 [debug] do_fold called with non-variant data: 59
14:57:31.980 [debug] do_fold called with non-variant data: 59
14:57:31.980 [debug] Recursive field result for right: 124
14:57:31.980 [debug] do_fold called with non-variant data: 124
14:57:31.980 [debug] do_fold called with non-variant data: 124
14:57:31.980 [debug] Recursive field result for right: 253
14:57:31.980 [debug] do_fold called with non-variant data: 253
14:57:31.980 [debug] do_fold called with non-variant data: 253
14:57:31.980 [debug] Recursive field result for right: 510
14:57:31.980 [debug] do_fold called with non-variant data: 510
14:57:31.980 [debug] do_fold called with non-variant data: 510
14:57:31.980 [debug] Recursive field result for left: 1023
14:57:31.981 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:31.982 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:31.983 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:31.983 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.983 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:31.983 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for left: 0
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for right: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.984 [debug] Recursive field result for left: 9
14:57:31.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for left: 0
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for right: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.984 [debug] Recursive field result for right: 9
14:57:31.984 [debug] do_fold called with non-variant data: 9
14:57:31.984 [debug] do_fold called with non-variant data: 9
14:57:31.984 [debug] Recursive field result for left: 26
14:57:31.984 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for left: 0
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for right: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.984 [debug] Recursive field result for left: 9
14:57:31.984 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for left: 0
14:57:31.984 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.984 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.984 [debug] Recursive field result for right: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.984 [debug] do_fold called with non-variant data: 0
14:57:31.985 [debug] Recursive field result for right: 9
14:57:31.985 [debug] do_fold called with non-variant data: 9
14:57:31.985 [debug] do_fold called with non-variant data: 9
14:57:31.985 [debug] Recursive field result for right: 26
14:57:31.985 [debug] do_fold called with non-variant data: 26
14:57:31.985 [debug] do_fold called with non-variant data: 26
14:57:31.985 [debug] Recursive field result for left: 59
14:57:31.985 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.985 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.985 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.985 [debug] Recursive field result for left: 0
14:57:31.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.985 [debug] Recursive field result for right: 0
14:57:31.985 [debug] do_fold called with non-variant data: 0
14:57:31.985 [debug] do_fold called with non-variant data: 0
14:57:31.985 [debug] Recursive field result for left: 9
14:57:31.985 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.985 [debug] Recursive field result for left: 0
14:57:31.985 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.985 [debug] Recursive field result for right: 0
14:57:31.985 [debug] do_fold called with non-variant data: 0
14:57:31.985 [debug] do_fold called with non-variant data: 0
14:57:31.985 [debug] Recursive field result for right: 9
14:57:31.985 [debug] do_fold called with non-variant data: 9
14:57:31.985 [debug] do_fold called with non-variant data: 9
14:57:31.985 [debug] Recursive field result for left: 26
14:57:31.985 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.985 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.985 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.986 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.986 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.986 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.986 [debug] Recursive field result for left: 0
14:57:31.986 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.986 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.986 [debug] Recursive field result for right: 0
14:57:31.986 [debug] do_fold called with non-variant data: 0
14:57:31.986 [debug] do_fold called with non-variant data: 0
14:57:31.986 [debug] Recursive field result for left: 9
14:57:31.986 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.986 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.986 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.986 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.986 [debug] Recursive field result for left: 0
14:57:31.986 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.986 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.986 [debug] Recursive field result for right: 0
14:57:31.986 [debug] do_fold called with non-variant data: 0
14:57:31.986 [debug] do_fold called with non-variant data: 0
14:57:31.986 [debug] Recursive field result for right: 9
14:57:31.986 [debug] do_fold called with non-variant data: 9
14:57:31.986 [debug] do_fold called with non-variant data: 9
14:57:31.986 [debug] Recursive field result for right: 26
14:57:31.986 [debug] do_fold called with non-variant data: 26
14:57:31.986 [debug] do_fold called with non-variant data: 26
14:57:31.986 [debug] Recursive field result for right: 59
14:57:31.986 [debug] do_fold called with non-variant data: 59
14:57:31.986 [debug] do_fold called with non-variant data: 59
14:57:31.986 [debug] Recursive field result for left: 124
14:57:31.987 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for left: 0
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for right: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] Recursive field result for left: 9
14:57:31.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for left: 0
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for right: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] Recursive field result for right: 9
14:57:31.987 [debug] do_fold called with non-variant data: 9
14:57:31.987 [debug] do_fold called with non-variant data: 9
14:57:31.987 [debug] Recursive field result for left: 26
14:57:31.987 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for left: 0
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for right: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] Recursive field result for left: 9
14:57:31.987 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for left: 0
14:57:31.987 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.987 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.987 [debug] Recursive field result for right: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] do_fold called with non-variant data: 0
14:57:31.987 [debug] Recursive field result for right: 9
14:57:31.987 [debug] do_fold called with non-variant data: 9
14:57:31.987 [debug] do_fold called with non-variant data: 9
14:57:31.987 [debug] Recursive field result for right: 26
14:57:31.987 [debug] do_fold called with non-variant data: 26
14:57:31.987 [debug] do_fold called with non-variant data: 26
14:57:31.987 [debug] Recursive field result for left: 59
14:57:31.987 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.988 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.988 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.988 [debug] Recursive field result for left: 0
14:57:31.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.988 [debug] Recursive field result for right: 0
14:57:31.988 [debug] do_fold called with non-variant data: 0
14:57:31.988 [debug] do_fold called with non-variant data: 0
14:57:31.988 [debug] Recursive field result for left: 9
14:57:31.988 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.988 [debug] Recursive field result for left: 0
14:57:31.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.988 [debug] Recursive field result for right: 0
14:57:31.988 [debug] do_fold called with non-variant data: 0
14:57:31.988 [debug] do_fold called with non-variant data: 0
14:57:31.988 [debug] Recursive field result for right: 9
14:57:31.988 [debug] do_fold called with non-variant data: 9
14:57:31.988 [debug] do_fold called with non-variant data: 9
14:57:31.988 [debug] Recursive field result for left: 26
14:57:31.988 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.988 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.988 [debug] Recursive field result for left: 0
14:57:31.988 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.988 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.988 [debug] Recursive field result for right: 0
14:57:31.988 [debug] do_fold called with non-variant data: 0
14:57:31.988 [debug] do_fold called with non-variant data: 0
14:57:31.988 [debug] Recursive field result for left: 9
14:57:31.989 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.989 [debug] Recursive field result for left: 0
14:57:31.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.989 [debug] Recursive field result for right: 0
14:57:31.989 [debug] do_fold called with non-variant data: 0
14:57:31.989 [debug] do_fold called with non-variant data: 0
14:57:31.989 [debug] Recursive field result for right: 9
14:57:31.989 [debug] do_fold called with non-variant data: 9
14:57:31.989 [debug] do_fold called with non-variant data: 9
14:57:31.989 [debug] Recursive field result for right: 26
14:57:31.989 [debug] do_fold called with non-variant data: 26
14:57:31.989 [debug] do_fold called with non-variant data: 26
14:57:31.989 [debug] Recursive field result for right: 59
14:57:31.989 [debug] do_fold called with non-variant data: 59
14:57:31.989 [debug] do_fold called with non-variant data: 59
14:57:31.989 [debug] Recursive field result for right: 124
14:57:31.989 [debug] do_fold called with non-variant data: 124
14:57:31.989 [debug] do_fold called with non-variant data: 124
14:57:31.989 [debug] Recursive field result for left: 253
14:57:31.989 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.989 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.989 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.989 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.989 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.989 [debug] Recursive field result for left: 0
14:57:31.989 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.989 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.989 [debug] Recursive field result for right: 0
14:57:31.989 [debug] do_fold called with non-variant data: 0
14:57:31.989 [debug] do_fold called with non-variant data: 0
14:57:31.989 [debug] Recursive field result for left: 9
14:57:31.990 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.990 [debug] Recursive field result for left: 0
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.990 [debug] Recursive field result for right: 0
14:57:31.990 [debug] do_fold called with non-variant data: 0
14:57:31.990 [debug] do_fold called with non-variant data: 0
14:57:31.990 [debug] Recursive field result for right: 9
14:57:31.990 [debug] do_fold called with non-variant data: 9
14:57:31.990 [debug] do_fold called with non-variant data: 9
14:57:31.990 [debug] Recursive field result for left: 26
14:57:31.990 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.990 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.990 [debug] Recursive field result for left: 0
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.990 [debug] Recursive field result for right: 0
14:57:31.990 [debug] do_fold called with non-variant data: 0
14:57:31.990 [debug] do_fold called with non-variant data: 0
14:57:31.990 [debug] Recursive field result for left: 9
14:57:31.990 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.990 [debug] Recursive field result for left: 0
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.990 [debug] Recursive field result for right: 0
14:57:31.990 [debug] do_fold called with non-variant data: 0
14:57:31.990 [debug] do_fold called with non-variant data: 0
14:57:31.990 [debug] Recursive field result for right: 9
14:57:31.990 [debug] do_fold called with non-variant data: 9
14:57:31.990 [debug] do_fold called with non-variant data: 9
14:57:31.990 [debug] Recursive field result for right: 26
14:57:31.990 [debug] do_fold called with non-variant data: 26
14:57:31.990 [debug] do_fold called with non-variant data: 26
14:57:31.990 [debug] Recursive field result for left: 59
14:57:31.990 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.990 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.990 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.990 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.990 [debug] Recursive field result for left: 0
14:57:31.990 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.991 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.991 [debug] Recursive field result for right: 0
14:57:31.991 [debug] do_fold called with non-variant data: 0
14:57:31.991 [debug] do_fold called with non-variant data: 0
14:57:31.991 [debug] Recursive field result for left: 9
14:57:31.991 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.991 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.991 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.991 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.991 [debug] Recursive field result for left: 0
14:57:31.991 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.991 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.991 [debug] Recursive field result for right: 0
14:57:31.991 [debug] do_fold called with non-variant data: 0
14:57:31.991 [debug] do_fold called with non-variant data: 0
14:57:31.991 [debug] Recursive field result for right: 9
14:57:31.991 [debug] do_fold called with non-variant data: 9
14:57:31.991 [debug] do_fold called with non-variant data: 9
14:57:31.991 [debug] Recursive field result for left: 26
14:57:31.992 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.992 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.992 [debug] Recursive field result for left: 0
14:57:31.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.992 [debug] Recursive field result for right: 0
14:57:31.992 [debug] do_fold called with non-variant data: 0
14:57:31.992 [debug] do_fold called with non-variant data: 0
14:57:31.992 [debug] Recursive field result for left: 9
14:57:31.992 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.992 [debug] Recursive field result for left: 0
14:57:31.992 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.992 [debug] Recursive field result for right: 0
14:57:31.992 [debug] do_fold called with non-variant data: 0
14:57:31.992 [debug] do_fold called with non-variant data: 0
14:57:31.992 [debug] Recursive field result for right: 9
14:57:31.992 [debug] do_fold called with non-variant data: 9
14:57:31.992 [debug] do_fold called with non-variant data: 9
14:57:31.992 [debug] Recursive field result for right: 26
14:57:31.992 [debug] do_fold called with non-variant data: 26
14:57:31.992 [debug] do_fold called with non-variant data: 26
14:57:31.992 [debug] Recursive field result for right: 59
14:57:31.992 [debug] do_fold called with non-variant data: 59
14:57:31.992 [debug] do_fold called with non-variant data: 59
14:57:31.992 [debug] Recursive field result for left: 124
14:57:31.992 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.992 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.993 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.993 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.993 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.993 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.993 [debug] Recursive field result for left: 0
14:57:31.993 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.993 [debug] Recursive field result for right: 0
14:57:31.993 [debug] do_fold called with non-variant data: 0
14:57:31.993 [debug] do_fold called with non-variant data: 0
14:57:31.993 [debug] Recursive field result for left: 9
14:57:31.993 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.993 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.993 [debug] Recursive field result for left: 0
14:57:31.993 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.993 [debug] Recursive field result for right: 0
14:57:31.993 [debug] do_fold called with non-variant data: 0
14:57:31.993 [debug] do_fold called with non-variant data: 0
14:57:31.993 [debug] Recursive field result for right: 9
14:57:31.993 [debug] do_fold called with non-variant data: 9
14:57:31.993 [debug] do_fold called with non-variant data: 9
14:57:31.993 [debug] Recursive field result for left: 26
14:57:31.993 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.993 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.993 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.994 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.994 [debug] Recursive field result for left: 0
14:57:31.994 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.994 [debug] Recursive field result for right: 0
14:57:31.994 [debug] do_fold called with non-variant data: 0
14:57:31.994 [debug] do_fold called with non-variant data: 0
14:57:31.994 [debug] Recursive field result for left: 9
14:57:31.994 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.994 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.994 [debug] Recursive field result for left: 0
14:57:31.994 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.994 [debug] Recursive field result for right: 0
14:57:31.994 [debug] do_fold called with non-variant data: 0
14:57:31.994 [debug] do_fold called with non-variant data: 0
14:57:31.994 [debug] Recursive field result for right: 9
14:57:31.994 [debug] do_fold called with non-variant data: 9
14:57:31.994 [debug] do_fold called with non-variant data: 9
14:57:31.994 [debug] Recursive field result for right: 26
14:57:31.994 [debug] do_fold called with non-variant data: 26
14:57:31.994 [debug] do_fold called with non-variant data: 26
14:57:31.994 [debug] Recursive field result for left: 59
14:57:31.994 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.994 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.994 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.994 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.994 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.994 [debug] Recursive field result for left: 0
14:57:31.994 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.995 [debug] Recursive field result for right: 0
14:57:31.995 [debug] do_fold called with non-variant data: 0
14:57:31.995 [debug] do_fold called with non-variant data: 0
14:57:31.995 [debug] Recursive field result for left: 9
14:57:31.995 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.995 [debug] Recursive field result for left: 0
14:57:31.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.995 [debug] Recursive field result for right: 0
14:57:31.995 [debug] do_fold called with non-variant data: 0
14:57:31.995 [debug] do_fold called with non-variant data: 0
14:57:31.995 [debug] Recursive field result for right: 9
14:57:31.995 [debug] do_fold called with non-variant data: 9
14:57:31.995 [debug] do_fold called with non-variant data: 9
14:57:31.995 [debug] Recursive field result for left: 26
14:57:31.995 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.995 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.995 [debug] Recursive field result for left: 0
14:57:31.995 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.995 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.995 [debug] Recursive field result for right: 0
14:57:31.995 [debug] do_fold called with non-variant data: 0
14:57:31.995 [debug] do_fold called with non-variant data: 0
14:57:31.996 [debug] Recursive field result for left: 9
14:57:31.996 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.996 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.996 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.996 [debug] Recursive field result for left: 0
14:57:31.996 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.996 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.996 [debug] Recursive field result for right: 0
14:57:31.996 [debug] do_fold called with non-variant data: 0
14:57:31.996 [debug] do_fold called with non-variant data: 0
14:57:31.996 [debug] Recursive field result for right: 9
14:57:31.996 [debug] do_fold called with non-variant data: 9
14:57:31.996 [debug] do_fold called with non-variant data: 9
14:57:31.996 [debug] Recursive field result for right: 26
14:57:31.996 [debug] do_fold called with non-variant data: 26
14:57:31.996 [debug] do_fold called with non-variant data: 26
14:57:31.996 [debug] Recursive field result for right: 59
14:57:31.996 [debug] do_fold called with non-variant data: 59
14:57:31.996 [debug] do_fold called with non-variant data: 59
14:57:31.996 [debug] Recursive field result for right: 124
14:57:31.996 [debug] do_fold called with non-variant data: 124
14:57:31.996 [debug] do_fold called with non-variant data: 124
14:57:31.996 [debug] Recursive field result for right: 253
14:57:31.996 [debug] do_fold called with non-variant data: 253
14:57:31.996 [debug] do_fold called with non-variant data: 253
14:57:31.996 [debug] Recursive field result for left: 510
14:57:31.996 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:31.996 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:31.997 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:31.997 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:31.997 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.997 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.997 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.997 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.997 [debug] Recursive field result for left: 0
14:57:31.997 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.997 [debug] Recursive field result for right: 0
14:57:31.997 [debug] do_fold called with non-variant data: 0
14:57:31.997 [debug] do_fold called with non-variant data: 0
14:57:31.997 [debug] Recursive field result for left: 9
14:57:31.997 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.997 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.997 [debug] Recursive field result for left: 0
14:57:31.997 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.997 [debug] Recursive field result for right: 0
14:57:31.997 [debug] do_fold called with non-variant data: 0
14:57:31.997 [debug] do_fold called with non-variant data: 0
14:57:31.997 [debug] Recursive field result for right: 9
14:57:31.997 [debug] do_fold called with non-variant data: 9
14:57:31.997 [debug] do_fold called with non-variant data: 9
14:57:31.997 [debug] Recursive field result for left: 26
14:57:31.997 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.997 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for left: 0
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for right: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] Recursive field result for left: 9
14:57:31.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for left: 0
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for right: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] Recursive field result for right: 9
14:57:31.998 [debug] do_fold called with non-variant data: 9
14:57:31.998 [debug] do_fold called with non-variant data: 9
14:57:31.998 [debug] Recursive field result for right: 26
14:57:31.998 [debug] do_fold called with non-variant data: 26
14:57:31.998 [debug] do_fold called with non-variant data: 26
14:57:31.998 [debug] Recursive field result for left: 59
14:57:31.998 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for left: 0
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for right: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] Recursive field result for left: 9
14:57:31.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for left: 0
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for right: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.998 [debug] Recursive field result for right: 9
14:57:31.998 [debug] do_fold called with non-variant data: 9
14:57:31.998 [debug] do_fold called with non-variant data: 9
14:57:31.998 [debug] Recursive field result for left: 26
14:57:31.998 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for left: 0
14:57:31.998 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.998 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.998 [debug] Recursive field result for right: 0
14:57:31.998 [debug] do_fold called with non-variant data: 0
14:57:31.999 [debug] do_fold called with non-variant data: 0
14:57:31.999 [debug] Recursive field result for left: 9
14:57:31.999 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:31.999 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:31.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.999 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.999 [debug] Recursive field result for left: 0
14:57:31.999 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:31.999 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:31.999 [debug] Recursive field result for right: 0
14:57:31.999 [debug] do_fold called with non-variant data: 0
14:57:31.999 [debug] do_fold called with non-variant data: 0
14:57:32.001 [debug] Recursive field result for right: 9
14:57:32.001 [debug] do_fold called with non-variant data: 9
14:57:32.001 [debug] do_fold called with non-variant data: 9
14:57:32.001 [debug] Recursive field result for right: 26
14:57:32.001 [debug] do_fold called with non-variant data: 26
14:57:32.001 [debug] do_fold called with non-variant data: 26
14:57:32.001 [debug] Recursive field result for right: 59
14:57:32.001 [debug] do_fold called with non-variant data: 59
14:57:32.001 [debug] do_fold called with non-variant data: 59
14:57:32.001 [debug] Recursive field result for left: 124
14:57:32.001 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for left: 0
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for right: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] Recursive field result for left: 9
14:57:32.002 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for left: 0
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for right: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] Recursive field result for right: 9
14:57:32.002 [debug] do_fold called with non-variant data: 9
14:57:32.002 [debug] do_fold called with non-variant data: 9
14:57:32.002 [debug] Recursive field result for left: 26
14:57:32.002 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for left: 0
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for right: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] Recursive field result for left: 9
14:57:32.002 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for left: 0
14:57:32.002 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.002 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.002 [debug] Recursive field result for right: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] do_fold called with non-variant data: 0
14:57:32.002 [debug] Recursive field result for right: 9
14:57:32.002 [debug] do_fold called with non-variant data: 9
14:57:32.002 [debug] do_fold called with non-variant data: 9
14:57:32.002 [debug] Recursive field result for right: 26
14:57:32.002 [debug] do_fold called with non-variant data: 26
14:57:32.002 [debug] do_fold called with non-variant data: 26
14:57:32.003 [debug] Recursive field result for left: 59
14:57:32.003 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.003 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.003 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for left: 0
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for right: 0
14:57:32.003 [debug] do_fold called with non-variant data: 0
14:57:32.003 [debug] do_fold called with non-variant data: 0
14:57:32.003 [debug] Recursive field result for left: 9
14:57:32.003 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for left: 0
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for right: 0
14:57:32.003 [debug] do_fold called with non-variant data: 0
14:57:32.003 [debug] do_fold called with non-variant data: 0
14:57:32.003 [debug] Recursive field result for right: 9
14:57:32.003 [debug] do_fold called with non-variant data: 9
14:57:32.003 [debug] do_fold called with non-variant data: 9
14:57:32.003 [debug] Recursive field result for left: 26
14:57:32.003 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.003 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for left: 0
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for right: 0
14:57:32.003 [debug] do_fold called with non-variant data: 0
14:57:32.003 [debug] do_fold called with non-variant data: 0
14:57:32.003 [debug] Recursive field result for left: 9
14:57:32.003 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for left: 0
14:57:32.003 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.003 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.003 [debug] Recursive field result for right: 0
14:57:32.003 [debug] do_fold called with non-variant data: 0
14:57:32.004 [debug] do_fold called with non-variant data: 0
14:57:32.004 [debug] Recursive field result for right: 9
14:57:32.004 [debug] do_fold called with non-variant data: 9
14:57:32.004 [debug] do_fold called with non-variant data: 9
14:57:32.004 [debug] Recursive field result for right: 26
14:57:32.004 [debug] do_fold called with non-variant data: 26
14:57:32.004 [debug] do_fold called with non-variant data: 26
14:57:32.004 [debug] Recursive field result for right: 59
14:57:32.004 [debug] do_fold called with non-variant data: 59
14:57:32.004 [debug] do_fold called with non-variant data: 59
14:57:32.004 [debug] Recursive field result for right: 124
14:57:32.004 [debug] do_fold called with non-variant data: 124
14:57:32.004 [debug] do_fold called with non-variant data: 124
14:57:32.004 [debug] Recursive field result for left: 253
14:57:32.004 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.004 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.005 [debug] Recursive field result for left: 0
14:57:32.005 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.005 [debug] Recursive field result for right: 0
14:57:32.005 [debug] do_fold called with non-variant data: 0
14:57:32.005 [debug] do_fold called with non-variant data: 0
14:57:32.005 [debug] Recursive field result for left: 9
14:57:32.005 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.005 [debug] Recursive field result for left: 0
14:57:32.005 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.005 [debug] Recursive field result for right: 0
14:57:32.005 [debug] do_fold called with non-variant data: 0
14:57:32.005 [debug] do_fold called with non-variant data: 0
14:57:32.005 [debug] Recursive field result for right: 9
14:57:32.005 [debug] do_fold called with non-variant data: 9
14:57:32.005 [debug] do_fold called with non-variant data: 9
14:57:32.005 [debug] Recursive field result for left: 26
14:57:32.005 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.005 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.005 [debug] Recursive field result for left: 0
14:57:32.005 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.005 [debug] Recursive field result for right: 0
14:57:32.005 [debug] do_fold called with non-variant data: 0
14:57:32.005 [debug] do_fold called with non-variant data: 0
14:57:32.005 [debug] Recursive field result for left: 9
14:57:32.005 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.005 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.006 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.006 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.006 [debug] Recursive field result for left: 0
14:57:32.006 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.006 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.006 [debug] Recursive field result for right: 0
14:57:32.006 [debug] do_fold called with non-variant data: 0
14:57:32.006 [debug] do_fold called with non-variant data: 0
14:57:32.006 [debug] Recursive field result for right: 9
14:57:32.006 [debug] do_fold called with non-variant data: 9
14:57:32.006 [debug] do_fold called with non-variant data: 9
14:57:32.006 [debug] Recursive field result for right: 26
14:57:32.006 [debug] do_fold called with non-variant data: 26
14:57:32.006 [debug] do_fold called with non-variant data: 26
14:57:32.006 [debug] Recursive field result for left: 59
14:57:32.007 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for left: 0
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for right: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] Recursive field result for left: 9
14:57:32.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for left: 0
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for right: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] Recursive field result for right: 9
14:57:32.007 [debug] do_fold called with non-variant data: 9
14:57:32.007 [debug] do_fold called with non-variant data: 9
14:57:32.007 [debug] Recursive field result for left: 26
14:57:32.007 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for left: 0
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for right: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] Recursive field result for left: 9
14:57:32.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for left: 0
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for right: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] Recursive field result for right: 9
14:57:32.007 [debug] do_fold called with non-variant data: 9
14:57:32.007 [debug] do_fold called with non-variant data: 9
14:57:32.007 [debug] Recursive field result for right: 26
14:57:32.007 [debug] do_fold called with non-variant data: 26
14:57:32.007 [debug] do_fold called with non-variant data: 26
14:57:32.007 [debug] Recursive field result for right: 59
14:57:32.007 [debug] do_fold called with non-variant data: 59
14:57:32.007 [debug] do_fold called with non-variant data: 59
14:57:32.007 [debug] Recursive field result for left: 124
14:57:32.007 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for left: 0
14:57:32.007 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.007 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.007 [debug] Recursive field result for right: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] do_fold called with non-variant data: 0
14:57:32.007 [debug] Recursive field result for left: 9
14:57:32.007 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.008 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.008 [debug] Recursive field result for left: 0
14:57:32.008 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.008 [debug] Recursive field result for right: 0
14:57:32.008 [debug] do_fold called with non-variant data: 0
14:57:32.008 [debug] do_fold called with non-variant data: 0
14:57:32.008 [debug] Recursive field result for right: 9
14:57:32.008 [debug] do_fold called with non-variant data: 9
14:57:32.008 [debug] do_fold called with non-variant data: 9
14:57:32.008 [debug] Recursive field result for left: 26
14:57:32.008 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.008 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.008 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.008 [debug] Recursive field result for left: 0
14:57:32.008 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.008 [debug] Recursive field result for right: 0
14:57:32.008 [debug] do_fold called with non-variant data: 0
14:57:32.008 [debug] do_fold called with non-variant data: 0
14:57:32.008 [debug] Recursive field result for left: 9
14:57:32.008 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.008 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.008 [debug] Recursive field result for left: 0
14:57:32.008 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.008 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.008 [debug] Recursive field result for right: 0
14:57:32.009 [debug] do_fold called with non-variant data: 0
14:57:32.009 [debug] do_fold called with non-variant data: 0
14:57:32.009 [debug] Recursive field result for right: 9
14:57:32.009 [debug] do_fold called with non-variant data: 9
14:57:32.009 [debug] do_fold called with non-variant data: 9
14:57:32.010 [debug] Recursive field result for right: 26
14:57:32.010 [debug] do_fold called with non-variant data: 26
14:57:32.010 [debug] do_fold called with non-variant data: 26
14:57:32.010 [debug] Recursive field result for left: 59
14:57:32.010 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.010 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.010 [debug] Recursive field result for left: 0
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.010 [debug] Recursive field result for right: 0
14:57:32.010 [debug] do_fold called with non-variant data: 0
14:57:32.010 [debug] do_fold called with non-variant data: 0
14:57:32.010 [debug] Recursive field result for left: 9
14:57:32.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.010 [debug] Recursive field result for left: 0
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.010 [debug] Recursive field result for right: 0
14:57:32.010 [debug] do_fold called with non-variant data: 0
14:57:32.010 [debug] do_fold called with non-variant data: 0
14:57:32.010 [debug] Recursive field result for right: 9
14:57:32.010 [debug] do_fold called with non-variant data: 9
14:57:32.010 [debug] do_fold called with non-variant data: 9
14:57:32.010 [debug] Recursive field result for left: 26
14:57:32.010 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.010 [debug] Recursive field result for left: 0
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.010 [debug] Recursive field result for right: 0
14:57:32.010 [debug] do_fold called with non-variant data: 0
14:57:32.010 [debug] do_fold called with non-variant data: 0
14:57:32.010 [debug] Recursive field result for left: 9
14:57:32.010 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.010 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.010 [debug] Recursive field result for left: 0
14:57:32.010 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.011 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.011 [debug] Recursive field result for right: 0
14:57:32.011 [debug] do_fold called with non-variant data: 0
14:57:32.011 [debug] do_fold called with non-variant data: 0
14:57:32.011 [debug] Recursive field result for right: 9
14:57:32.011 [debug] do_fold called with non-variant data: 9
14:57:32.011 [debug] do_fold called with non-variant data: 9
14:57:32.011 [debug] Recursive field result for right: 26
14:57:32.011 [debug] do_fold called with non-variant data: 26
14:57:32.011 [debug] do_fold called with non-variant data: 26
14:57:32.011 [debug] Recursive field result for right: 59
14:57:32.011 [debug] do_fold called with non-variant data: 59
14:57:32.011 [debug] do_fold called with non-variant data: 59
14:57:32.011 [debug] Recursive field result for right: 124
14:57:32.011 [debug] do_fold called with non-variant data: 124
14:57:32.011 [debug] do_fold called with non-variant data: 124
14:57:32.011 [debug] Recursive field result for right: 253
14:57:32.011 [debug] do_fold called with non-variant data: 253
14:57:32.011 [debug] do_fold called with non-variant data: 253
14:57:32.011 [debug] Recursive field result for right: 510
14:57:32.011 [debug] do_fold called with non-variant data: 510
14:57:32.011 [debug] do_fold called with non-variant data: 510
14:57:32.011 [debug] Recursive field result for right: 1023
14:57:32.011 [debug] do_fold called with non-variant data: 1023
14:57:32.011 [debug] do_fold called with non-variant data: 1023
14:57:32.011 [debug] Recursive field result for left: 2048
14:57:32.012 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
14:57:32.014 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
14:57:32.014 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:32.015 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:32.015 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.015 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.015 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.015 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.015 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.016 [debug] Recursive field result for left: 0
14:57:32.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.016 [debug] Recursive field result for right: 0
14:57:32.016 [debug] do_fold called with non-variant data: 0
14:57:32.016 [debug] do_fold called with non-variant data: 0
14:57:32.016 [debug] Recursive field result for left: 9
14:57:32.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.016 [debug] Recursive field result for left: 0
14:57:32.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.016 [debug] Recursive field result for right: 0
14:57:32.016 [debug] do_fold called with non-variant data: 0
14:57:32.016 [debug] do_fold called with non-variant data: 0
14:57:32.016 [debug] Recursive field result for right: 9
14:57:32.016 [debug] do_fold called with non-variant data: 9
14:57:32.016 [debug] do_fold called with non-variant data: 9
14:57:32.016 [debug] Recursive field result for left: 26
14:57:32.016 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.016 [debug] Recursive field result for left: 0
14:57:32.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.016 [debug] Recursive field result for right: 0
14:57:32.016 [debug] do_fold called with non-variant data: 0
14:57:32.016 [debug] do_fold called with non-variant data: 0
14:57:32.016 [debug] Recursive field result for left: 9
14:57:32.016 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.016 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.016 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.017 [debug] Recursive field result for left: 0
14:57:32.017 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.017 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.017 [debug] Recursive field result for right: 0
14:57:32.017 [debug] do_fold called with non-variant data: 0
14:57:32.017 [debug] do_fold called with non-variant data: 0
14:57:32.017 [debug] Recursive field result for right: 9
14:57:32.017 [debug] do_fold called with non-variant data: 9
14:57:32.017 [debug] do_fold called with non-variant data: 9
14:57:32.017 [debug] Recursive field result for right: 26
14:57:32.017 [debug] do_fold called with non-variant data: 26
14:57:32.017 [debug] do_fold called with non-variant data: 26
14:57:32.017 [debug] Recursive field result for left: 59
14:57:32.017 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.017 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.017 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.017 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.017 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.017 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.017 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.017 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.017 [debug] Recursive field result for left: 0
14:57:32.017 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.017 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.017 [debug] Recursive field result for right: 0
14:57:32.017 [debug] do_fold called with non-variant data: 0
14:57:32.017 [debug] do_fold called with non-variant data: 0
14:57:32.017 [debug] Recursive field result for left: 9
14:57:32.017 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.017 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.017 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.018 [debug] Recursive field result for left: 0
14:57:32.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.018 [debug] Recursive field result for right: 0
14:57:32.018 [debug] do_fold called with non-variant data: 0
14:57:32.018 [debug] do_fold called with non-variant data: 0
14:57:32.018 [debug] Recursive field result for right: 9
14:57:32.018 [debug] do_fold called with non-variant data: 9
14:57:32.018 [debug] do_fold called with non-variant data: 9
14:57:32.018 [debug] Recursive field result for left: 26
14:57:32.018 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.018 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.018 [debug] Recursive field result for left: 0
14:57:32.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.018 [debug] Recursive field result for right: 0
14:57:32.018 [debug] do_fold called with non-variant data: 0
14:57:32.018 [debug] do_fold called with non-variant data: 0
14:57:32.018 [debug] Recursive field result for left: 9
14:57:32.018 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.018 [debug] Recursive field result for left: 0
14:57:32.018 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.018 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.018 [debug] Recursive field result for right: 0
14:57:32.018 [debug] do_fold called with non-variant data: 0
14:57:32.018 [debug] do_fold called with non-variant data: 0
14:57:32.020 [debug] Recursive field result for right: 9
14:57:32.020 [debug] do_fold called with non-variant data: 9
14:57:32.020 [debug] do_fold called with non-variant data: 9
14:57:32.020 [debug] Recursive field result for right: 26
14:57:32.020 [debug] do_fold called with non-variant data: 26
14:57:32.020 [debug] do_fold called with non-variant data: 26
14:57:32.020 [debug] Recursive field result for right: 59
14:57:32.020 [debug] do_fold called with non-variant data: 59
14:57:32.020 [debug] do_fold called with non-variant data: 59
14:57:32.020 [debug] Recursive field result for left: 124
14:57:32.020 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for left: 0
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for right: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] Recursive field result for left: 9
14:57:32.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for left: 0
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for right: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] Recursive field result for right: 9
14:57:32.021 [debug] do_fold called with non-variant data: 9
14:57:32.021 [debug] do_fold called with non-variant data: 9
14:57:32.021 [debug] Recursive field result for left: 26
14:57:32.021 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for left: 0
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for right: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] Recursive field result for left: 9
14:57:32.021 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for left: 0
14:57:32.021 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.021 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.021 [debug] Recursive field result for right: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] do_fold called with non-variant data: 0
14:57:32.021 [debug] Recursive field result for right: 9
14:57:32.022 [debug] do_fold called with non-variant data: 9
14:57:32.022 [debug] do_fold called with non-variant data: 9
14:57:32.022 [debug] Recursive field result for right: 26
14:57:32.022 [debug] do_fold called with non-variant data: 26
14:57:32.022 [debug] do_fold called with non-variant data: 26
14:57:32.022 [debug] Recursive field result for left: 59
14:57:32.022 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.022 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.022 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.022 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.022 [debug] Recursive field result for left: 0
14:57:32.022 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.022 [debug] Recursive field result for right: 0
14:57:32.022 [debug] do_fold called with non-variant data: 0
14:57:32.022 [debug] do_fold called with non-variant data: 0
14:57:32.022 [debug] Recursive field result for left: 9
14:57:32.022 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.022 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.022 [debug] Recursive field result for left: 0
14:57:32.022 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.022 [debug] Recursive field result for right: 0
14:57:32.022 [debug] do_fold called with non-variant data: 0
14:57:32.022 [debug] do_fold called with non-variant data: 0
14:57:32.022 [debug] Recursive field result for right: 9
14:57:32.022 [debug] do_fold called with non-variant data: 9
14:57:32.022 [debug] do_fold called with non-variant data: 9
14:57:32.022 [debug] Recursive field result for left: 26
14:57:32.022 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.022 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.022 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.023 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.023 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.023 [debug] Recursive field result for left: 0
14:57:32.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.023 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.023 [debug] Recursive field result for right: 0
14:57:32.023 [debug] do_fold called with non-variant data: 0
14:57:32.023 [debug] do_fold called with non-variant data: 0
14:57:32.023 [debug] Recursive field result for left: 9
14:57:32.023 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.023 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.023 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.023 [debug] Recursive field result for left: 0
14:57:32.023 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.023 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.023 [debug] Recursive field result for right: 0
14:57:32.023 [debug] do_fold called with non-variant data: 0
14:57:32.023 [debug] do_fold called with non-variant data: 0
14:57:32.023 [debug] Recursive field result for right: 9
14:57:32.023 [debug] do_fold called with non-variant data: 9
14:57:32.023 [debug] do_fold called with non-variant data: 9
14:57:32.023 [debug] Recursive field result for right: 26
14:57:32.023 [debug] do_fold called with non-variant data: 26
14:57:32.023 [debug] do_fold called with non-variant data: 26
14:57:32.024 [debug] Recursive field result for right: 59
14:57:32.024 [debug] do_fold called with non-variant data: 59
14:57:32.024 [debug] do_fold called with non-variant data: 59
14:57:32.024 [debug] Recursive field result for right: 124
14:57:32.024 [debug] do_fold called with non-variant data: 124
14:57:32.024 [debug] do_fold called with non-variant data: 124
14:57:32.024 [debug] Recursive field result for left: 253
14:57:32.024 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.024 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.024 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.024 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.024 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.024 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.024 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for left: 0
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for right: 0
14:57:32.025 [debug] do_fold called with non-variant data: 0
14:57:32.025 [debug] do_fold called with non-variant data: 0
14:57:32.025 [debug] Recursive field result for left: 9
14:57:32.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for left: 0
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for right: 0
14:57:32.025 [debug] do_fold called with non-variant data: 0
14:57:32.025 [debug] do_fold called with non-variant data: 0
14:57:32.025 [debug] Recursive field result for right: 9
14:57:32.025 [debug] do_fold called with non-variant data: 9
14:57:32.025 [debug] do_fold called with non-variant data: 9
14:57:32.025 [debug] Recursive field result for left: 26
14:57:32.025 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for left: 0
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for right: 0
14:57:32.025 [debug] do_fold called with non-variant data: 0
14:57:32.025 [debug] do_fold called with non-variant data: 0
14:57:32.025 [debug] Recursive field result for left: 9
14:57:32.025 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for left: 0
14:57:32.025 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.025 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.025 [debug] Recursive field result for right: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] Recursive field result for right: 9
14:57:32.027 [debug] do_fold called with non-variant data: 9
14:57:32.027 [debug] do_fold called with non-variant data: 9
14:57:32.027 [debug] Recursive field result for right: 26
14:57:32.027 [debug] do_fold called with non-variant data: 26
14:57:32.027 [debug] do_fold called with non-variant data: 26
14:57:32.027 [debug] Recursive field result for left: 59
14:57:32.027 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.027 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.027 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.027 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.027 [debug] Recursive field result for left: 0
14:57:32.027 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.027 [debug] Recursive field result for right: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] Recursive field result for left: 9
14:57:32.027 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.027 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.027 [debug] Recursive field result for left: 0
14:57:32.027 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.027 [debug] Recursive field result for right: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] Recursive field result for right: 9
14:57:32.027 [debug] do_fold called with non-variant data: 9
14:57:32.027 [debug] do_fold called with non-variant data: 9
14:57:32.027 [debug] Recursive field result for left: 26
14:57:32.027 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.027 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.027 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.027 [debug] Recursive field result for left: 0
14:57:32.027 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.027 [debug] Recursive field result for right: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] do_fold called with non-variant data: 0
14:57:32.027 [debug] Recursive field result for left: 9
14:57:32.027 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.027 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.027 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for left: 0
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for right: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] Recursive field result for right: 9
14:57:32.028 [debug] do_fold called with non-variant data: 9
14:57:32.028 [debug] do_fold called with non-variant data: 9
14:57:32.028 [debug] Recursive field result for right: 26
14:57:32.028 [debug] do_fold called with non-variant data: 26
14:57:32.028 [debug] do_fold called with non-variant data: 26
14:57:32.028 [debug] Recursive field result for right: 59
14:57:32.028 [debug] do_fold called with non-variant data: 59
14:57:32.028 [debug] do_fold called with non-variant data: 59
14:57:32.028 [debug] Recursive field result for left: 124
14:57:32.028 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for left: 0
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for right: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] Recursive field result for left: 9
14:57:32.028 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for left: 0
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for right: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] Recursive field result for right: 9
14:57:32.028 [debug] do_fold called with non-variant data: 9
14:57:32.028 [debug] do_fold called with non-variant data: 9
14:57:32.028 [debug] Recursive field result for left: 26
14:57:32.028 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for left: 0
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for right: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] Recursive field result for left: 9
14:57:32.028 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for left: 0
14:57:32.028 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.028 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.028 [debug] Recursive field result for right: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] do_fold called with non-variant data: 0
14:57:32.028 [debug] Recursive field result for right: 9
14:57:32.028 [debug] do_fold called with non-variant data: 9
14:57:32.038 [debug] do_fold called with non-variant data: 9
14:57:32.038 [debug] Recursive field result for right: 26
14:57:32.038 [debug] do_fold called with non-variant data: 26
14:57:32.038 [debug] do_fold called with non-variant data: 26
14:57:32.038 [debug] Recursive field result for left: 59
14:57:32.038 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.038 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.038 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.038 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.038 [debug] Recursive field result for left: 0
14:57:32.038 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.038 [debug] Recursive field result for right: 0
14:57:32.038 [debug] do_fold called with non-variant data: 0
14:57:32.038 [debug] do_fold called with non-variant data: 0
14:57:32.038 [debug] Recursive field result for left: 9
14:57:32.038 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.038 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.038 [debug] Recursive field result for left: 0
14:57:32.038 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.038 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.038 [debug] Recursive field result for right: 0
14:57:32.039 [debug] do_fold called with non-variant data: 0
14:57:32.039 [debug] do_fold called with non-variant data: 0
14:57:32.039 [debug] Recursive field result for right: 9
14:57:32.039 [debug] do_fold called with non-variant data: 9
14:57:32.039 [debug] do_fold called with non-variant data: 9
14:57:32.039 [debug] Recursive field result for left: 26
14:57:32.039 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.039 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.039 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.039 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.039 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.039 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.039 [debug] Recursive field result for left: 0
14:57:32.039 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.039 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.039 [debug] Recursive field result for right: 0
14:57:32.039 [debug] do_fold called with non-variant data: 0
14:57:32.039 [debug] do_fold called with non-variant data: 0
14:57:32.039 [debug] Recursive field result for left: 9
14:57:32.039 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.039 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.039 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.039 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.039 [debug] Recursive field result for left: 0
14:57:32.039 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.039 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.039 [debug] Recursive field result for right: 0
14:57:32.039 [debug] do_fold called with non-variant data: 0
14:57:32.039 [debug] do_fold called with non-variant data: 0
14:57:32.039 [debug] Recursive field result for right: 9
14:57:32.039 [debug] do_fold called with non-variant data: 9
14:57:32.039 [debug] do_fold called with non-variant data: 9
14:57:32.039 [debug] Recursive field result for right: 26
14:57:32.039 [debug] do_fold called with non-variant data: 26
14:57:32.039 [debug] do_fold called with non-variant data: 26
14:57:32.039 [debug] Recursive field result for right: 59
14:57:32.039 [debug] do_fold called with non-variant data: 59
14:57:32.039 [debug] do_fold called with non-variant data: 59
14:57:32.039 [debug] Recursive field result for right: 124
14:57:32.039 [debug] do_fold called with non-variant data: 124
14:57:32.039 [debug] do_fold called with non-variant data: 124
14:57:32.039 [debug] Recursive field result for right: 253
14:57:32.039 [debug] do_fold called with non-variant data: 253
14:57:32.039 [debug] do_fold called with non-variant data: 253
14:57:32.039 [debug] Recursive field result for left: 510
14:57:32.039 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.042 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.042 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.042 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.042 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.042 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.042 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.042 [debug] Recursive field result for left: 0
14:57:32.042 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.042 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.042 [debug] Recursive field result for right: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] Recursive field result for left: 9
14:57:32.043 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.043 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.043 [debug] Recursive field result for left: 0
14:57:32.043 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.043 [debug] Recursive field result for right: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] Recursive field result for right: 9
14:57:32.043 [debug] do_fold called with non-variant data: 9
14:57:32.043 [debug] do_fold called with non-variant data: 9
14:57:32.043 [debug] Recursive field result for left: 26
14:57:32.043 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.043 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.043 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.043 [debug] Recursive field result for left: 0
14:57:32.043 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.043 [debug] Recursive field result for right: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] Recursive field result for left: 9
14:57:32.043 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.043 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.043 [debug] Recursive field result for left: 0
14:57:32.043 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.043 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.043 [debug] Recursive field result for right: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] do_fold called with non-variant data: 0
14:57:32.043 [debug] Recursive field result for right: 9
14:57:32.043 [debug] do_fold called with non-variant data: 9
14:57:32.043 [debug] do_fold called with non-variant data: 9
14:57:32.043 [debug] Recursive field result for right: 26
14:57:32.043 [debug] do_fold called with non-variant data: 26
14:57:32.043 [debug] do_fold called with non-variant data: 26
14:57:32.043 [debug] Recursive field result for left: 59
14:57:32.044 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.044 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.044 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.044 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.044 [debug] Recursive field result for left: 0
14:57:32.044 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.044 [debug] Recursive field result for right: 0
14:57:32.044 [debug] do_fold called with non-variant data: 0
14:57:32.044 [debug] do_fold called with non-variant data: 0
14:57:32.044 [debug] Recursive field result for left: 9
14:57:32.044 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.044 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.044 [debug] Recursive field result for left: 0
14:57:32.044 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.044 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.044 [debug] Recursive field result for right: 0
14:57:32.044 [debug] do_fold called with non-variant data: 0
14:57:32.044 [debug] do_fold called with non-variant data: 0
14:57:32.044 [debug] Recursive field result for right: 9
14:57:32.044 [debug] do_fold called with non-variant data: 9
14:57:32.044 [debug] do_fold called with non-variant data: 9
14:57:32.045 [debug] Recursive field result for left: 26
14:57:32.045 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.045 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.045 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.045 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.045 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.045 [debug] Recursive field result for left: 0
14:57:32.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.045 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.045 [debug] Recursive field result for right: 0
14:57:32.045 [debug] do_fold called with non-variant data: 0
14:57:32.045 [debug] do_fold called with non-variant data: 0
14:57:32.045 [debug] Recursive field result for left: 9
14:57:32.045 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.045 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.045 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.045 [debug] Recursive field result for left: 0
14:57:32.045 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.045 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.045 [debug] Recursive field result for right: 0
14:57:32.045 [debug] do_fold called with non-variant data: 0
14:57:32.045 [debug] do_fold called with non-variant data: 0
14:57:32.045 [debug] Recursive field result for right: 9
14:57:32.045 [debug] do_fold called with non-variant data: 9
14:57:32.045 [debug] do_fold called with non-variant data: 9
14:57:32.045 [debug] Recursive field result for right: 26
14:57:32.045 [debug] do_fold called with non-variant data: 26
14:57:32.045 [debug] do_fold called with non-variant data: 26
14:57:32.045 [debug] Recursive field result for right: 59
14:57:32.045 [debug] do_fold called with non-variant data: 59
14:57:32.045 [debug] do_fold called with non-variant data: 59
14:57:32.045 [debug] Recursive field result for left: 124
14:57:32.046 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for left: 0
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for right: 0
14:57:32.046 [debug] do_fold called with non-variant data: 0
14:57:32.046 [debug] do_fold called with non-variant data: 0
14:57:32.046 [debug] Recursive field result for left: 9
14:57:32.046 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for left: 0
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for right: 0
14:57:32.046 [debug] do_fold called with non-variant data: 0
14:57:32.046 [debug] do_fold called with non-variant data: 0
14:57:32.046 [debug] Recursive field result for right: 9
14:57:32.046 [debug] do_fold called with non-variant data: 9
14:57:32.046 [debug] do_fold called with non-variant data: 9
14:57:32.046 [debug] Recursive field result for left: 26
14:57:32.046 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for left: 0
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for right: 0
14:57:32.046 [debug] do_fold called with non-variant data: 0
14:57:32.046 [debug] do_fold called with non-variant data: 0
14:57:32.046 [debug] Recursive field result for left: 9
14:57:32.046 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for left: 0
14:57:32.046 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.046 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.046 [debug] Recursive field result for right: 0
14:57:32.048 [debug] do_fold called with non-variant data: 0
14:57:32.048 [debug] do_fold called with non-variant data: 0
14:57:32.048 [debug] Recursive field result for right: 9
14:57:32.048 [debug] do_fold called with non-variant data: 9
14:57:32.048 [debug] do_fold called with non-variant data: 9
14:57:32.048 [debug] Recursive field result for right: 26
14:57:32.048 [debug] do_fold called with non-variant data: 26
14:57:32.048 [debug] do_fold called with non-variant data: 26
14:57:32.048 [debug] Recursive field result for left: 59
14:57:32.048 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.048 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.049 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.049 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for left: 0
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for right: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] Recursive field result for left: 9
14:57:32.049 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for left: 0
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for right: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] Recursive field result for right: 9
14:57:32.049 [debug] do_fold called with non-variant data: 9
14:57:32.049 [debug] do_fold called with non-variant data: 9
14:57:32.049 [debug] Recursive field result for left: 26
14:57:32.049 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.049 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for left: 0
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for right: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] Recursive field result for left: 9
14:57:32.049 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for left: 0
14:57:32.049 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.049 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.049 [debug] Recursive field result for right: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] do_fold called with non-variant data: 0
14:57:32.049 [debug] Recursive field result for right: 9
14:57:32.049 [debug] do_fold called with non-variant data: 9
14:57:32.049 [debug] do_fold called with non-variant data: 9
14:57:32.049 [debug] Recursive field result for right: 26
14:57:32.049 [debug] do_fold called with non-variant data: 26
14:57:32.049 [debug] do_fold called with non-variant data: 26
14:57:32.049 [debug] Recursive field result for right: 59
14:57:32.049 [debug] do_fold called with non-variant data: 59
14:57:32.049 [debug] do_fold called with non-variant data: 59
14:57:32.049 [debug] Recursive field result for right: 124
14:57:32.049 [debug] do_fold called with non-variant data: 124
14:57:32.049 [debug] do_fold called with non-variant data: 124
14:57:32.049 [debug] Recursive field result for left: 253
14:57:32.050 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.050 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.050 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.050 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.050 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.050 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.050 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.050 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.050 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.050 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.050 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.050 [debug] Recursive field result for left: 0
14:57:32.050 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.050 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.050 [debug] Recursive field result for right: 0
14:57:32.050 [debug] do_fold called with non-variant data: 0
14:57:32.050 [debug] do_fold called with non-variant data: 0
14:57:32.050 [debug] Recursive field result for left: 9
14:57:32.051 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for left: 0
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for right: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] Recursive field result for right: 9
14:57:32.051 [debug] do_fold called with non-variant data: 9
14:57:32.051 [debug] do_fold called with non-variant data: 9
14:57:32.051 [debug] Recursive field result for left: 26
14:57:32.051 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for left: 0
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for right: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] Recursive field result for left: 9
14:57:32.051 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for left: 0
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for right: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] Recursive field result for right: 9
14:57:32.051 [debug] do_fold called with non-variant data: 9
14:57:32.051 [debug] do_fold called with non-variant data: 9
14:57:32.051 [debug] Recursive field result for right: 26
14:57:32.051 [debug] do_fold called with non-variant data: 26
14:57:32.051 [debug] do_fold called with non-variant data: 26
14:57:32.051 [debug] Recursive field result for left: 59
14:57:32.051 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for left: 0
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for right: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] Recursive field result for left: 9
14:57:32.051 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for left: 0
14:57:32.051 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.051 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.051 [debug] Recursive field result for right: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] do_fold called with non-variant data: 0
14:57:32.051 [debug] Recursive field result for right: 9
14:57:32.051 [debug] do_fold called with non-variant data: 9
14:57:32.051 [debug] do_fold called with non-variant data: 9
14:57:32.056 [debug] Recursive field result for left: 26
14:57:32.056 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.056 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.056 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for left: 0
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for right: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] Recursive field result for left: 9
14:57:32.057 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for left: 0
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for right: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] Recursive field result for right: 9
14:57:32.057 [debug] do_fold called with non-variant data: 9
14:57:32.057 [debug] do_fold called with non-variant data: 9
14:57:32.057 [debug] Recursive field result for right: 26
14:57:32.057 [debug] do_fold called with non-variant data: 26
14:57:32.057 [debug] do_fold called with non-variant data: 26
14:57:32.057 [debug] Recursive field result for right: 59
14:57:32.057 [debug] do_fold called with non-variant data: 59
14:57:32.057 [debug] do_fold called with non-variant data: 59
14:57:32.057 [debug] Recursive field result for left: 124
14:57:32.057 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.057 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.057 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.057 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for left: 0
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for right: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] Recursive field result for left: 9
14:57:32.057 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for left: 0
14:57:32.057 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.057 [debug] Recursive field result for right: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] do_fold called with non-variant data: 0
14:57:32.057 [debug] Recursive field result for right: 9
14:57:32.057 [debug] do_fold called with non-variant data: 9
14:57:32.057 [debug] do_fold called with non-variant data: 9
14:57:32.057 [debug] Recursive field result for left: 26
14:57:32.057 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.057 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for left: 0
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for right: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] Recursive field result for left: 9
14:57:32.058 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for left: 0
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for right: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] Recursive field result for right: 9
14:57:32.058 [debug] do_fold called with non-variant data: 9
14:57:32.058 [debug] do_fold called with non-variant data: 9
14:57:32.058 [debug] Recursive field result for right: 26
14:57:32.058 [debug] do_fold called with non-variant data: 26
14:57:32.058 [debug] do_fold called with non-variant data: 26
14:57:32.058 [debug] Recursive field result for left: 59
14:57:32.058 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for left: 0
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for right: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] Recursive field result for left: 9
14:57:32.058 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for left: 0
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.058 [debug] Recursive field result for right: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] do_fold called with non-variant data: 0
14:57:32.058 [debug] Recursive field result for right: 9
14:57:32.058 [debug] do_fold called with non-variant data: 9
14:57:32.058 [debug] do_fold called with non-variant data: 9
14:57:32.058 [debug] Recursive field result for left: 26
14:57:32.058 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.058 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.058 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.059 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.059 [debug] Recursive field result for left: 0
14:57:32.059 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.060 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.060 [debug] Recursive field result for right: 0
14:57:32.060 [debug] do_fold called with non-variant data: 0
14:57:32.060 [debug] do_fold called with non-variant data: 0
14:57:32.060 [debug] Recursive field result for left: 9
14:57:32.060 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.060 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.060 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.060 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.060 [debug] Recursive field result for left: 0
14:57:32.060 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.060 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.060 [debug] Recursive field result for right: 0
14:57:32.060 [debug] do_fold called with non-variant data: 0
14:57:32.060 [debug] do_fold called with non-variant data: 0
14:57:32.060 [debug] Recursive field result for right: 9
14:57:32.060 [debug] do_fold called with non-variant data: 9
14:57:32.060 [debug] do_fold called with non-variant data: 9
14:57:32.060 [debug] Recursive field result for right: 26
14:57:32.060 [debug] do_fold called with non-variant data: 26
14:57:32.060 [debug] do_fold called with non-variant data: 26
14:57:32.060 [debug] Recursive field result for right: 59
14:57:32.060 [debug] do_fold called with non-variant data: 59
14:57:32.060 [debug] do_fold called with non-variant data: 59
14:57:32.060 [debug] Recursive field result for right: 124
14:57:32.060 [debug] do_fold called with non-variant data: 124
14:57:32.060 [debug] do_fold called with non-variant data: 124
14:57:32.060 [debug] Recursive field result for right: 253
14:57:32.060 [debug] do_fold called with non-variant data: 253
14:57:32.060 [debug] do_fold called with non-variant data: 253
14:57:32.060 [debug] Recursive field result for right: 510
14:57:32.060 [debug] do_fold called with non-variant data: 510
14:57:32.060 [debug] do_fold called with non-variant data: 510
14:57:32.060 [debug] Recursive field result for left: 1023
14:57:32.061 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:32.061 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:32.062 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.062 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.062 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.062 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.062 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for left: 0
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for right: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] Recursive field result for left: 9
14:57:32.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for left: 0
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for right: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] Recursive field result for right: 9
14:57:32.063 [debug] do_fold called with non-variant data: 9
14:57:32.063 [debug] do_fold called with non-variant data: 9
14:57:32.063 [debug] Recursive field result for left: 26
14:57:32.063 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for left: 0
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for right: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] Recursive field result for left: 9
14:57:32.063 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for left: 0
14:57:32.063 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.063 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.063 [debug] Recursive field result for right: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] do_fold called with non-variant data: 0
14:57:32.063 [debug] Recursive field result for right: 9
14:57:32.063 [debug] do_fold called with non-variant data: 9
14:57:32.063 [debug] do_fold called with non-variant data: 9
14:57:32.063 [debug] Recursive field result for right: 26
14:57:32.063 [debug] do_fold called with non-variant data: 26
14:57:32.063 [debug] do_fold called with non-variant data: 26
14:57:32.063 [debug] Recursive field result for left: 59
14:57:32.063 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.064 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.064 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for left: 0
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for right: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.064 [debug] Recursive field result for left: 9
14:57:32.064 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for left: 0
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for right: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.064 [debug] Recursive field result for right: 9
14:57:32.064 [debug] do_fold called with non-variant data: 9
14:57:32.064 [debug] do_fold called with non-variant data: 9
14:57:32.064 [debug] Recursive field result for left: 26
14:57:32.064 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.064 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for left: 0
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for right: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.064 [debug] Recursive field result for left: 9
14:57:32.064 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for left: 0
14:57:32.064 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.064 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.064 [debug] Recursive field result for right: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.064 [debug] do_fold called with non-variant data: 0
14:57:32.067 [debug] Recursive field result for right: 9
14:57:32.067 [debug] do_fold called with non-variant data: 9
14:57:32.067 [debug] do_fold called with non-variant data: 9
14:57:32.067 [debug] Recursive field result for right: 26
14:57:32.067 [debug] do_fold called with non-variant data: 26
14:57:32.067 [debug] do_fold called with non-variant data: 26
14:57:32.067 [debug] Recursive field result for right: 59
14:57:32.067 [debug] do_fold called with non-variant data: 59
14:57:32.067 [debug] do_fold called with non-variant data: 59
14:57:32.067 [debug] Recursive field result for left: 124
14:57:32.067 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.067 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.067 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.067 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.067 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.067 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.067 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.067 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.067 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.067 [debug] Recursive field result for left: 0
14:57:32.067 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.067 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.067 [debug] Recursive field result for right: 0
14:57:32.067 [debug] do_fold called with non-variant data: 0
14:57:32.067 [debug] do_fold called with non-variant data: 0
14:57:32.067 [debug] Recursive field result for left: 9
14:57:32.067 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.067 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for left: 0
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for right: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] Recursive field result for right: 9
14:57:32.068 [debug] do_fold called with non-variant data: 9
14:57:32.068 [debug] do_fold called with non-variant data: 9
14:57:32.068 [debug] Recursive field result for left: 26
14:57:32.068 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for left: 0
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for right: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] Recursive field result for left: 9
14:57:32.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for left: 0
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for right: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] Recursive field result for right: 9
14:57:32.068 [debug] do_fold called with non-variant data: 9
14:57:32.068 [debug] do_fold called with non-variant data: 9
14:57:32.068 [debug] Recursive field result for right: 26
14:57:32.068 [debug] do_fold called with non-variant data: 26
14:57:32.068 [debug] do_fold called with non-variant data: 26
14:57:32.068 [debug] Recursive field result for left: 59
14:57:32.068 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for left: 0
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.068 [debug] Recursive field result for right: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] do_fold called with non-variant data: 0
14:57:32.068 [debug] Recursive field result for left: 9
14:57:32.068 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.068 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.068 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.069 [debug] Recursive field result for left: 0
14:57:32.069 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.069 [debug] Recursive field result for right: 0
14:57:32.069 [debug] do_fold called with non-variant data: 0
14:57:32.069 [debug] do_fold called with non-variant data: 0
14:57:32.069 [debug] Recursive field result for right: 9
14:57:32.069 [debug] do_fold called with non-variant data: 9
14:57:32.069 [debug] do_fold called with non-variant data: 9
14:57:32.069 [debug] Recursive field result for left: 26
14:57:32.069 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.069 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.069 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.069 [debug] Recursive field result for left: 0
14:57:32.069 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.069 [debug] Recursive field result for right: 0
14:57:32.069 [debug] do_fold called with non-variant data: 0
14:57:32.069 [debug] do_fold called with non-variant data: 0
14:57:32.069 [debug] Recursive field result for left: 9
14:57:32.069 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.069 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.069 [debug] Recursive field result for left: 0
14:57:32.069 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.069 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.069 [debug] Recursive field result for right: 0
14:57:32.069 [debug] do_fold called with non-variant data: 0
14:57:32.069 [debug] do_fold called with non-variant data: 0
14:57:32.069 [debug] Recursive field result for right: 9
14:57:32.069 [debug] do_fold called with non-variant data: 9
14:57:32.069 [debug] do_fold called with non-variant data: 9
14:57:32.069 [debug] Recursive field result for right: 26
14:57:32.069 [debug] do_fold called with non-variant data: 26
14:57:32.069 [debug] do_fold called with non-variant data: 26
14:57:32.069 [debug] Recursive field result for right: 59
14:57:32.069 [debug] do_fold called with non-variant data: 59
14:57:32.069 [debug] do_fold called with non-variant data: 59
14:57:32.069 [debug] Recursive field result for right: 124
14:57:32.069 [debug] do_fold called with non-variant data: 124
14:57:32.069 [debug] do_fold called with non-variant data: 124
14:57:32.069 [debug] Recursive field result for left: 253
14:57:32.070 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.070 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.070 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.070 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.070 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.071 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.071 [debug] Recursive field result for left: 0
14:57:32.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.071 [debug] Recursive field result for right: 0
14:57:32.071 [debug] do_fold called with non-variant data: 0
14:57:32.071 [debug] do_fold called with non-variant data: 0
14:57:32.071 [debug] Recursive field result for left: 9
14:57:32.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.071 [debug] Recursive field result for left: 0
14:57:32.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.071 [debug] Recursive field result for right: 0
14:57:32.071 [debug] do_fold called with non-variant data: 0
14:57:32.071 [debug] do_fold called with non-variant data: 0
14:57:32.071 [debug] Recursive field result for right: 9
14:57:32.071 [debug] do_fold called with non-variant data: 9
14:57:32.071 [debug] do_fold called with non-variant data: 9
14:57:32.071 [debug] Recursive field result for left: 26
14:57:32.071 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.071 [debug] Recursive field result for left: 0
14:57:32.071 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.071 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.071 [debug] Recursive field result for right: 0
14:57:32.071 [debug] do_fold called with non-variant data: 0
14:57:32.071 [debug] do_fold called with non-variant data: 0
14:57:32.071 [debug] Recursive field result for left: 9
14:57:32.071 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.072 [debug] Recursive field result for left: 0
14:57:32.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.072 [debug] Recursive field result for right: 0
14:57:32.072 [debug] do_fold called with non-variant data: 0
14:57:32.072 [debug] do_fold called with non-variant data: 0
14:57:32.072 [debug] Recursive field result for right: 9
14:57:32.072 [debug] do_fold called with non-variant data: 9
14:57:32.072 [debug] do_fold called with non-variant data: 9
14:57:32.072 [debug] Recursive field result for right: 26
14:57:32.072 [debug] do_fold called with non-variant data: 26
14:57:32.072 [debug] do_fold called with non-variant data: 26
14:57:32.072 [debug] Recursive field result for left: 59
14:57:32.072 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.072 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.072 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.072 [debug] Recursive field result for left: 0
14:57:32.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.072 [debug] Recursive field result for right: 0
14:57:32.072 [debug] do_fold called with non-variant data: 0
14:57:32.072 [debug] do_fold called with non-variant data: 0
14:57:32.072 [debug] Recursive field result for left: 9
14:57:32.072 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.072 [debug] Recursive field result for left: 0
14:57:32.072 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.072 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.072 [debug] Recursive field result for right: 0
14:57:32.072 [debug] do_fold called with non-variant data: 0
14:57:32.073 [debug] do_fold called with non-variant data: 0
14:57:32.073 [debug] Recursive field result for right: 9
14:57:32.073 [debug] do_fold called with non-variant data: 9
14:57:32.073 [debug] do_fold called with non-variant data: 9
14:57:32.073 [debug] Recursive field result for left: 26
14:57:32.073 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.073 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.073 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.073 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.073 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.073 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.073 [debug] Recursive field result for left: 0
14:57:32.073 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.073 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.073 [debug] Recursive field result for right: 0
14:57:32.073 [debug] do_fold called with non-variant data: 0
14:57:32.073 [debug] do_fold called with non-variant data: 0
14:57:32.073 [debug] Recursive field result for left: 9
14:57:32.073 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.073 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.073 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.073 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.073 [debug] Recursive field result for left: 0
14:57:32.073 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.073 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.073 [debug] Recursive field result for right: 0
14:57:32.073 [debug] do_fold called with non-variant data: 0
14:57:32.073 [debug] do_fold called with non-variant data: 0
14:57:32.073 [debug] Recursive field result for right: 9
14:57:32.073 [debug] do_fold called with non-variant data: 9
14:57:32.075 [debug] do_fold called with non-variant data: 9
14:57:32.075 [debug] Recursive field result for right: 26
14:57:32.075 [debug] do_fold called with non-variant data: 26
14:57:32.075 [debug] do_fold called with non-variant data: 26
14:57:32.075 [debug] Recursive field result for right: 59
14:57:32.075 [debug] do_fold called with non-variant data: 59
14:57:32.075 [debug] do_fold called with non-variant data: 59
14:57:32.075 [debug] Recursive field result for left: 124
14:57:32.075 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.076 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.076 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.076 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.076 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.076 [debug] Recursive field result for left: 0
14:57:32.076 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.076 [debug] Recursive field result for right: 0
14:57:32.076 [debug] do_fold called with non-variant data: 0
14:57:32.076 [debug] do_fold called with non-variant data: 0
14:57:32.076 [debug] Recursive field result for left: 9
14:57:32.076 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.076 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.076 [debug] Recursive field result for left: 0
14:57:32.076 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.076 [debug] Recursive field result for right: 0
14:57:32.076 [debug] do_fold called with non-variant data: 0
14:57:32.076 [debug] do_fold called with non-variant data: 0
14:57:32.076 [debug] Recursive field result for right: 9
14:57:32.076 [debug] do_fold called with non-variant data: 9
14:57:32.076 [debug] do_fold called with non-variant data: 9
14:57:32.076 [debug] Recursive field result for left: 26
14:57:32.076 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.076 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.076 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.076 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.076 [debug] Recursive field result for left: 0
14:57:32.077 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.077 [debug] Recursive field result for right: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] Recursive field result for left: 9
14:57:32.077 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.077 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.077 [debug] Recursive field result for left: 0
14:57:32.077 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.077 [debug] Recursive field result for right: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] Recursive field result for right: 9
14:57:32.077 [debug] do_fold called with non-variant data: 9
14:57:32.077 [debug] do_fold called with non-variant data: 9
14:57:32.077 [debug] Recursive field result for right: 26
14:57:32.077 [debug] do_fold called with non-variant data: 26
14:57:32.077 [debug] do_fold called with non-variant data: 26
14:57:32.077 [debug] Recursive field result for left: 59
14:57:32.077 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.077 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.077 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.077 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.077 [debug] Recursive field result for left: 0
14:57:32.077 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.077 [debug] Recursive field result for right: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] Recursive field result for left: 9
14:57:32.077 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.077 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.077 [debug] Recursive field result for left: 0
14:57:32.077 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.077 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.077 [debug] Recursive field result for right: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] do_fold called with non-variant data: 0
14:57:32.077 [debug] Recursive field result for right: 9
14:57:32.077 [debug] do_fold called with non-variant data: 9
14:57:32.078 [debug] do_fold called with non-variant data: 9
14:57:32.078 [debug] Recursive field result for left: 26
14:57:32.078 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.078 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.078 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.078 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.078 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.078 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.078 [debug] Recursive field result for left: 0
14:57:32.078 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.078 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.078 [debug] Recursive field result for right: 0
14:57:32.078 [debug] do_fold called with non-variant data: 0
14:57:32.078 [debug] do_fold called with non-variant data: 0
14:57:32.078 [debug] Recursive field result for left: 9
14:57:32.079 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.079 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.079 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.079 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.079 [debug] Recursive field result for left: 0
14:57:32.079 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.079 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.079 [debug] Recursive field result for right: 0
14:57:32.079 [debug] do_fold called with non-variant data: 0
14:57:32.079 [debug] do_fold called with non-variant data: 0
14:57:32.079 [debug] Recursive field result for right: 9
14:57:32.079 [debug] do_fold called with non-variant data: 9
14:57:32.079 [debug] do_fold called with non-variant data: 9
14:57:32.079 [debug] Recursive field result for right: 26
14:57:32.079 [debug] do_fold called with non-variant data: 26
14:57:32.079 [debug] do_fold called with non-variant data: 26
14:57:32.079 [debug] Recursive field result for right: 59
14:57:32.079 [debug] do_fold called with non-variant data: 59
14:57:32.079 [debug] do_fold called with non-variant data: 59
14:57:32.079 [debug] Recursive field result for right: 124
14:57:32.079 [debug] do_fold called with non-variant data: 124
14:57:32.079 [debug] do_fold called with non-variant data: 124
14:57:32.079 [debug] Recursive field result for right: 253
14:57:32.079 [debug] do_fold called with non-variant data: 253
14:57:32.079 [debug] do_fold called with non-variant data: 253
14:57:32.079 [debug] Recursive field result for left: 510
14:57:32.079 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.080 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.080 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.080 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.081 [debug] Recursive field result for left: 0
14:57:32.081 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.081 [debug] Recursive field result for right: 0
14:57:32.081 [debug] do_fold called with non-variant data: 0
14:57:32.081 [debug] do_fold called with non-variant data: 0
14:57:32.081 [debug] Recursive field result for left: 9
14:57:32.081 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.081 [debug] Recursive field result for left: 0
14:57:32.081 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.081 [debug] Recursive field result for right: 0
14:57:32.081 [debug] do_fold called with non-variant data: 0
14:57:32.081 [debug] do_fold called with non-variant data: 0
14:57:32.081 [debug] Recursive field result for right: 9
14:57:32.081 [debug] do_fold called with non-variant data: 9
14:57:32.081 [debug] do_fold called with non-variant data: 9
14:57:32.081 [debug] Recursive field result for left: 26
14:57:32.081 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.081 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.081 [debug] Recursive field result for left: 0
14:57:32.081 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.081 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.081 [debug] Recursive field result for right: 0
14:57:32.081 [debug] do_fold called with non-variant data: 0
14:57:32.081 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] Recursive field result for left: 9
14:57:32.082 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for left: 0
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for right: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] Recursive field result for right: 9
14:57:32.082 [debug] do_fold called with non-variant data: 9
14:57:32.082 [debug] do_fold called with non-variant data: 9
14:57:32.082 [debug] Recursive field result for right: 26
14:57:32.082 [debug] do_fold called with non-variant data: 26
14:57:32.082 [debug] do_fold called with non-variant data: 26
14:57:32.082 [debug] Recursive field result for left: 59
14:57:32.082 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.082 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.082 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for left: 0
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for right: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] Recursive field result for left: 9
14:57:32.082 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for left: 0
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for right: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] Recursive field result for right: 9
14:57:32.082 [debug] do_fold called with non-variant data: 9
14:57:32.082 [debug] do_fold called with non-variant data: 9
14:57:32.082 [debug] Recursive field result for left: 26
14:57:32.082 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.082 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for left: 0
14:57:32.082 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.082 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.082 [debug] Recursive field result for right: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.082 [debug] do_fold called with non-variant data: 0
14:57:32.083 [debug] Recursive field result for left: 9
14:57:32.083 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.083 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.083 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.083 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.083 [debug] Recursive field result for left: 0
14:57:32.083 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.083 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.083 [debug] Recursive field result for right: 0
14:57:32.083 [debug] do_fold called with non-variant data: 0
14:57:32.083 [debug] do_fold called with non-variant data: 0
14:57:32.083 [debug] Recursive field result for right: 9
14:57:32.084 [debug] do_fold called with non-variant data: 9
14:57:32.084 [debug] do_fold called with non-variant data: 9
14:57:32.084 [debug] Recursive field result for right: 26
14:57:32.084 [debug] do_fold called with non-variant data: 26
14:57:32.084 [debug] do_fold called with non-variant data: 26
14:57:32.084 [debug] Recursive field result for right: 59
14:57:32.084 [debug] do_fold called with non-variant data: 59
14:57:32.084 [debug] do_fold called with non-variant data: 59
14:57:32.084 [debug] Recursive field result for left: 124
14:57:32.084 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.084 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.084 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.084 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.084 [debug] Recursive field result for left: 0
14:57:32.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.084 [debug] Recursive field result for right: 0
14:57:32.084 [debug] do_fold called with non-variant data: 0
14:57:32.084 [debug] do_fold called with non-variant data: 0
14:57:32.084 [debug] Recursive field result for left: 9
14:57:32.084 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.084 [debug] Recursive field result for left: 0
14:57:32.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.084 [debug] Recursive field result for right: 0
14:57:32.084 [debug] do_fold called with non-variant data: 0
14:57:32.084 [debug] do_fold called with non-variant data: 0
14:57:32.084 [debug] Recursive field result for right: 9
14:57:32.084 [debug] do_fold called with non-variant data: 9
14:57:32.084 [debug] do_fold called with non-variant data: 9
14:57:32.084 [debug] Recursive field result for left: 26
14:57:32.084 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.084 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.084 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.084 [debug] Recursive field result for left: 0
14:57:32.084 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.085 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.085 [debug] Recursive field result for right: 0
14:57:32.085 [debug] do_fold called with non-variant data: 0
14:57:32.085 [debug] do_fold called with non-variant data: 0
14:57:32.085 [debug] Recursive field result for left: 9
14:57:32.085 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.085 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.085 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.085 [debug] Recursive field result for left: 0
14:57:32.085 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.085 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.085 [debug] Recursive field result for right: 0
14:57:32.085 [debug] do_fold called with non-variant data: 0
14:57:32.085 [debug] do_fold called with non-variant data: 0
14:57:32.085 [debug] Recursive field result for right: 9
14:57:32.085 [debug] do_fold called with non-variant data: 9
14:57:32.085 [debug] do_fold called with non-variant data: 9
14:57:32.085 [debug] Recursive field result for right: 26
14:57:32.085 [debug] do_fold called with non-variant data: 26
14:57:32.085 [debug] do_fold called with non-variant data: 26
14:57:32.085 [debug] Recursive field result for left: 59
14:57:32.085 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.085 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.086 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.086 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for left: 0
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for right: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] Recursive field result for left: 9
14:57:32.086 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for left: 0
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for right: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] Recursive field result for right: 9
14:57:32.086 [debug] do_fold called with non-variant data: 9
14:57:32.086 [debug] do_fold called with non-variant data: 9
14:57:32.086 [debug] Recursive field result for left: 26
14:57:32.086 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.086 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for left: 0
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for right: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] Recursive field result for left: 9
14:57:32.086 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for left: 0
14:57:32.086 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.086 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.086 [debug] Recursive field result for right: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] do_fold called with non-variant data: 0
14:57:32.086 [debug] Recursive field result for right: 9
14:57:32.086 [debug] do_fold called with non-variant data: 9
14:57:32.086 [debug] do_fold called with non-variant data: 9
14:57:32.086 [debug] Recursive field result for right: 26
14:57:32.086 [debug] do_fold called with non-variant data: 26
14:57:32.086 [debug] do_fold called with non-variant data: 26
14:57:32.086 [debug] Recursive field result for right: 59
14:57:32.086 [debug] do_fold called with non-variant data: 59
14:57:32.086 [debug] do_fold called with non-variant data: 59
14:57:32.086 [debug] Recursive field result for right: 124
14:57:32.086 [debug] do_fold called with non-variant data: 124
14:57:32.086 [debug] do_fold called with non-variant data: 124
14:57:32.086 [debug] Recursive field result for left: 253
14:57:32.086 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.087 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.087 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.089 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.089 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.089 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.089 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.089 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.089 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.089 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.089 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.089 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.089 [debug] Recursive field result for left: 0
14:57:32.089 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.089 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.089 [debug] Recursive field result for right: 0
14:57:32.089 [debug] do_fold called with non-variant data: 0
14:57:32.089 [debug] do_fold called with non-variant data: 0
14:57:32.089 [debug] Recursive field result for left: 9
14:57:32.089 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for left: 0
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for right: 0
14:57:32.090 [debug] do_fold called with non-variant data: 0
14:57:32.090 [debug] do_fold called with non-variant data: 0
14:57:32.090 [debug] Recursive field result for right: 9
14:57:32.090 [debug] do_fold called with non-variant data: 9
14:57:32.090 [debug] do_fold called with non-variant data: 9
14:57:32.090 [debug] Recursive field result for left: 26
14:57:32.090 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.090 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for left: 0
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for right: 0
14:57:32.090 [debug] do_fold called with non-variant data: 0
14:57:32.090 [debug] do_fold called with non-variant data: 0
14:57:32.090 [debug] Recursive field result for left: 9
14:57:32.090 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for left: 0
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for right: 0
14:57:32.090 [debug] do_fold called with non-variant data: 0
14:57:32.090 [debug] do_fold called with non-variant data: 0
14:57:32.090 [debug] Recursive field result for right: 9
14:57:32.090 [debug] do_fold called with non-variant data: 9
14:57:32.090 [debug] do_fold called with non-variant data: 9
14:57:32.090 [debug] Recursive field result for right: 26
14:57:32.090 [debug] do_fold called with non-variant data: 26
14:57:32.090 [debug] do_fold called with non-variant data: 26
14:57:32.090 [debug] Recursive field result for left: 59
14:57:32.090 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.090 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.090 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for left: 0
14:57:32.090 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.090 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.090 [debug] Recursive field result for right: 0
14:57:32.090 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] Recursive field result for left: 9
14:57:32.091 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.091 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.091 [debug] Recursive field result for left: 0
14:57:32.091 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.091 [debug] Recursive field result for right: 0
14:57:32.091 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] Recursive field result for right: 9
14:57:32.091 [debug] do_fold called with non-variant data: 9
14:57:32.091 [debug] do_fold called with non-variant data: 9
14:57:32.091 [debug] Recursive field result for left: 26
14:57:32.091 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.091 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.091 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.091 [debug] Recursive field result for left: 0
14:57:32.091 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.091 [debug] Recursive field result for right: 0
14:57:32.091 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] Recursive field result for left: 9
14:57:32.091 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.091 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.091 [debug] Recursive field result for left: 0
14:57:32.091 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.091 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.091 [debug] Recursive field result for right: 0
14:57:32.091 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] do_fold called with non-variant data: 0
14:57:32.091 [debug] Recursive field result for right: 9
14:57:32.091 [debug] do_fold called with non-variant data: 9
14:57:32.091 [debug] do_fold called with non-variant data: 9
14:57:32.091 [debug] Recursive field result for right: 26
14:57:32.091 [debug] do_fold called with non-variant data: 26
14:57:32.091 [debug] do_fold called with non-variant data: 26
14:57:32.091 [debug] Recursive field result for right: 59
14:57:32.091 [debug] do_fold called with non-variant data: 59
14:57:32.091 [debug] do_fold called with non-variant data: 59
14:57:32.091 [debug] Recursive field result for left: 124
14:57:32.092 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.092 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.092 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.092 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.092 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.092 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.092 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.092 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.092 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.092 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.092 [debug] Recursive field result for left: 0
14:57:32.092 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.092 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.092 [debug] Recursive field result for right: 0
14:57:32.092 [debug] do_fold called with non-variant data: 0
14:57:32.092 [debug] do_fold called with non-variant data: 0
14:57:32.092 [debug] Recursive field result for left: 9
14:57:32.092 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.092 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.093 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.093 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.094 [debug] Recursive field result for left: 0
14:57:32.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.094 [debug] Recursive field result for right: 0
14:57:32.094 [debug] do_fold called with non-variant data: 0
14:57:32.094 [debug] do_fold called with non-variant data: 0
14:57:32.094 [debug] Recursive field result for right: 9
14:57:32.094 [debug] do_fold called with non-variant data: 9
14:57:32.094 [debug] do_fold called with non-variant data: 9
14:57:32.094 [debug] Recursive field result for left: 26
14:57:32.094 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.094 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.094 [debug] Recursive field result for left: 0
14:57:32.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.094 [debug] Recursive field result for right: 0
14:57:32.094 [debug] do_fold called with non-variant data: 0
14:57:32.094 [debug] do_fold called with non-variant data: 0
14:57:32.094 [debug] Recursive field result for left: 9
14:57:32.094 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.094 [debug] Recursive field result for left: 0
14:57:32.094 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.094 [debug] Recursive field result for right: 0
14:57:32.094 [debug] do_fold called with non-variant data: 0
14:57:32.094 [debug] do_fold called with non-variant data: 0
14:57:32.094 [debug] Recursive field result for right: 9
14:57:32.094 [debug] do_fold called with non-variant data: 9
14:57:32.094 [debug] do_fold called with non-variant data: 9
14:57:32.094 [debug] Recursive field result for right: 26
14:57:32.094 [debug] do_fold called with non-variant data: 26
14:57:32.094 [debug] do_fold called with non-variant data: 26
14:57:32.094 [debug] Recursive field result for left: 59
14:57:32.094 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.094 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.094 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.094 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for left: 0
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for right: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] Recursive field result for left: 9
14:57:32.095 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for left: 0
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for right: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] Recursive field result for right: 9
14:57:32.095 [debug] do_fold called with non-variant data: 9
14:57:32.095 [debug] do_fold called with non-variant data: 9
14:57:32.095 [debug] Recursive field result for left: 26
14:57:32.095 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.095 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for left: 0
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for right: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] Recursive field result for left: 9
14:57:32.095 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for left: 0
14:57:32.095 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.095 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.095 [debug] Recursive field result for right: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] do_fold called with non-variant data: 0
14:57:32.095 [debug] Recursive field result for right: 9
14:57:32.095 [debug] do_fold called with non-variant data: 9
14:57:32.095 [debug] do_fold called with non-variant data: 9
14:57:32.095 [debug] Recursive field result for right: 26
14:57:32.095 [debug] do_fold called with non-variant data: 26
14:57:32.095 [debug] do_fold called with non-variant data: 26
14:57:32.095 [debug] Recursive field result for right: 59
14:57:32.095 [debug] do_fold called with non-variant data: 59
14:57:32.095 [debug] do_fold called with non-variant data: 59
14:57:32.095 [debug] Recursive field result for right: 124
14:57:32.095 [debug] do_fold called with non-variant data: 124
14:57:32.095 [debug] do_fold called with non-variant data: 124
14:57:32.095 [debug] Recursive field result for right: 253
14:57:32.095 [debug] do_fold called with non-variant data: 253
14:57:32.095 [debug] do_fold called with non-variant data: 253
14:57:32.095 [debug] Recursive field result for right: 510
14:57:32.095 [debug] do_fold called with non-variant data: 510
14:57:32.095 [debug] do_fold called with non-variant data: 510
14:57:32.095 [debug] Recursive field result for right: 1023
14:57:32.095 [debug] do_fold called with non-variant data: 1023
14:57:32.095 [debug] do_fold called with non-variant data: 1023
14:57:32.095 [debug] Recursive field result for right: 2048
14:57:32.096 [debug] do_fold called with non-variant data: 2048
14:57:32.096 [debug] do_fold called with non-variant data: 2048
14:57:32.096 [debug] Recursive field result for left: 4097
14:57:32.100 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :le (truncated)
14:57:32.102 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{varian (truncated)
14:57:32.103 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
14:57:32.105 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
14:57:32.105 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:32.106 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:32.106 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.106 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.106 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.106 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.106 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.106 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.106 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.107 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.107 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for left: 0
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for right: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.107 [debug] Recursive field result for left: 9
14:57:32.107 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for left: 0
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for right: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.107 [debug] Recursive field result for right: 9
14:57:32.107 [debug] do_fold called with non-variant data: 9
14:57:32.107 [debug] do_fold called with non-variant data: 9
14:57:32.107 [debug] Recursive field result for left: 26
14:57:32.107 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.107 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for left: 0
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for right: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.107 [debug] Recursive field result for left: 9
14:57:32.107 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for left: 0
14:57:32.107 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.107 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.107 [debug] Recursive field result for right: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.107 [debug] do_fold called with non-variant data: 0
14:57:32.111 [debug] Recursive field result for right: 9
14:57:32.111 [debug] do_fold called with non-variant data: 9
14:57:32.111 [debug] do_fold called with non-variant data: 9
14:57:32.111 [debug] Recursive field result for right: 26
14:57:32.111 [debug] do_fold called with non-variant data: 26
14:57:32.111 [debug] do_fold called with non-variant data: 26
14:57:32.111 [debug] Recursive field result for left: 59
14:57:32.111 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.112 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.112 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for left: 0
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for right: 0
14:57:32.112 [debug] do_fold called with non-variant data: 0
14:57:32.112 [debug] do_fold called with non-variant data: 0
14:57:32.112 [debug] Recursive field result for left: 9
14:57:32.112 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for left: 0
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for right: 0
14:57:32.112 [debug] do_fold called with non-variant data: 0
14:57:32.112 [debug] do_fold called with non-variant data: 0
14:57:32.112 [debug] Recursive field result for right: 9
14:57:32.112 [debug] do_fold called with non-variant data: 9
14:57:32.112 [debug] do_fold called with non-variant data: 9
14:57:32.112 [debug] Recursive field result for left: 26
14:57:32.112 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.112 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for left: 0
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for right: 0
14:57:32.112 [debug] do_fold called with non-variant data: 0
14:57:32.112 [debug] do_fold called with non-variant data: 0
14:57:32.112 [debug] Recursive field result for left: 9
14:57:32.112 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for left: 0
14:57:32.112 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.112 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.112 [debug] Recursive field result for right: 0
14:57:32.113 [debug] do_fold called with non-variant data: 0
14:57:32.113 [debug] do_fold called with non-variant data: 0
14:57:32.113 [debug] Recursive field result for right: 9
14:57:32.113 [debug] do_fold called with non-variant data: 9
14:57:32.113 [debug] do_fold called with non-variant data: 9
14:57:32.113 [debug] Recursive field result for right: 26
14:57:32.113 [debug] do_fold called with non-variant data: 26
14:57:32.113 [debug] do_fold called with non-variant data: 26
14:57:32.113 [debug] Recursive field result for right: 59
14:57:32.113 [debug] do_fold called with non-variant data: 59
14:57:32.113 [debug] do_fold called with non-variant data: 59
14:57:32.113 [debug] Recursive field result for left: 124
14:57:32.113 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.113 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.113 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.113 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.113 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.113 [debug] Recursive field result for left: 0
14:57:32.113 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.113 [debug] Recursive field result for right: 0
14:57:32.113 [debug] do_fold called with non-variant data: 0
14:57:32.113 [debug] do_fold called with non-variant data: 0
14:57:32.113 [debug] Recursive field result for left: 9
14:57:32.113 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.113 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.113 [debug] Recursive field result for left: 0
14:57:32.113 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.113 [debug] Recursive field result for right: 0
14:57:32.113 [debug] do_fold called with non-variant data: 0
14:57:32.113 [debug] do_fold called with non-variant data: 0
14:57:32.113 [debug] Recursive field result for right: 9
14:57:32.113 [debug] do_fold called with non-variant data: 9
14:57:32.113 [debug] do_fold called with non-variant data: 9
14:57:32.113 [debug] Recursive field result for left: 26
14:57:32.113 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.113 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.113 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.113 [debug] Recursive field result for left: 0
14:57:32.113 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.113 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.113 [debug] Recursive field result for right: 0
14:57:32.113 [debug] do_fold called with non-variant data: 0
14:57:32.114 [debug] do_fold called with non-variant data: 0
14:57:32.114 [debug] Recursive field result for left: 9
14:57:32.114 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.114 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.114 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.114 [debug] Recursive field result for left: 0
14:57:32.114 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.114 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.114 [debug] Recursive field result for right: 0
14:57:32.114 [debug] do_fold called with non-variant data: 0
14:57:32.114 [debug] do_fold called with non-variant data: 0
14:57:32.114 [debug] Recursive field result for right: 9
14:57:32.114 [debug] do_fold called with non-variant data: 9
14:57:32.114 [debug] do_fold called with non-variant data: 9
14:57:32.114 [debug] Recursive field result for right: 26
14:57:32.115 [debug] do_fold called with non-variant data: 26
14:57:32.115 [debug] do_fold called with non-variant data: 26
14:57:32.115 [debug] Recursive field result for left: 59
14:57:32.115 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.115 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.115 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.115 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.115 [debug] Recursive field result for left: 0
14:57:32.115 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.115 [debug] Recursive field result for right: 0
14:57:32.115 [debug] do_fold called with non-variant data: 0
14:57:32.115 [debug] do_fold called with non-variant data: 0
14:57:32.115 [debug] Recursive field result for left: 9
14:57:32.115 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.115 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.115 [debug] Recursive field result for left: 0
14:57:32.115 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.115 [debug] Recursive field result for right: 0
14:57:32.115 [debug] do_fold called with non-variant data: 0
14:57:32.115 [debug] do_fold called with non-variant data: 0
14:57:32.115 [debug] Recursive field result for right: 9
14:57:32.115 [debug] do_fold called with non-variant data: 9
14:57:32.115 [debug] do_fold called with non-variant data: 9
14:57:32.115 [debug] Recursive field result for left: 26
14:57:32.115 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.115 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.115 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.116 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.116 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.116 [debug] Recursive field result for left: 0
14:57:32.116 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.116 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.116 [debug] Recursive field result for right: 0
14:57:32.116 [debug] do_fold called with non-variant data: 0
14:57:32.116 [debug] do_fold called with non-variant data: 0
14:57:32.116 [debug] Recursive field result for left: 9
14:57:32.116 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.116 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.116 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.116 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.116 [debug] Recursive field result for left: 0
14:57:32.116 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.116 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.116 [debug] Recursive field result for right: 0
14:57:32.116 [debug] do_fold called with non-variant data: 0
14:57:32.116 [debug] do_fold called with non-variant data: 0
14:57:32.116 [debug] Recursive field result for right: 9
14:57:32.116 [debug] do_fold called with non-variant data: 9
14:57:32.116 [debug] do_fold called with non-variant data: 9
14:57:32.116 [debug] Recursive field result for right: 26
14:57:32.116 [debug] do_fold called with non-variant data: 26
14:57:32.116 [debug] do_fold called with non-variant data: 26
14:57:32.116 [debug] Recursive field result for right: 59
14:57:32.116 [debug] do_fold called with non-variant data: 59
14:57:32.116 [debug] do_fold called with non-variant data: 59
14:57:32.116 [debug] Recursive field result for right: 124
14:57:32.116 [debug] do_fold called with non-variant data: 124
14:57:32.116 [debug] do_fold called with non-variant data: 124
14:57:32.116 [debug] Recursive field result for left: 253
14:57:32.117 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.117 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.117 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.117 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.117 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.117 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.117 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.117 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.117 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.117 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.117 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.117 [debug] Recursive field result for left: 0
14:57:32.117 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.117 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for right: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] Recursive field result for left: 9
14:57:32.118 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for left: 0
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for right: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] Recursive field result for right: 9
14:57:32.118 [debug] do_fold called with non-variant data: 9
14:57:32.118 [debug] do_fold called with non-variant data: 9
14:57:32.118 [debug] Recursive field result for left: 26
14:57:32.118 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for left: 0
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for right: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] Recursive field result for left: 9
14:57:32.118 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for left: 0
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for right: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] Recursive field result for right: 9
14:57:32.118 [debug] do_fold called with non-variant data: 9
14:57:32.118 [debug] do_fold called with non-variant data: 9
14:57:32.118 [debug] Recursive field result for right: 26
14:57:32.118 [debug] do_fold called with non-variant data: 26
14:57:32.118 [debug] do_fold called with non-variant data: 26
14:57:32.118 [debug] Recursive field result for left: 59
14:57:32.118 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for left: 0
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for right: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] Recursive field result for left: 9
14:57:32.118 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for left: 0
14:57:32.118 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.118 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.118 [debug] Recursive field result for right: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] do_fold called with non-variant data: 0
14:57:32.118 [debug] Recursive field result for right: 9
14:57:32.118 [debug] do_fold called with non-variant data: 9
14:57:32.118 [debug] do_fold called with non-variant data: 9
14:57:32.118 [debug] Recursive field result for left: 26
14:57:32.119 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.119 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.119 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.119 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.119 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.119 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.119 [debug] Recursive field result for left: 0
14:57:32.119 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.119 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.119 [debug] Recursive field result for right: 0
14:57:32.119 [debug] do_fold called with non-variant data: 0
14:57:32.119 [debug] do_fold called with non-variant data: 0
14:57:32.119 [debug] Recursive field result for left: 9
14:57:32.119 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.119 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.119 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.119 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.119 [debug] Recursive field result for left: 0
14:57:32.119 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.119 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.119 [debug] Recursive field result for right: 0
14:57:32.119 [debug] do_fold called with non-variant data: 0
14:57:32.119 [debug] do_fold called with non-variant data: 0
14:57:32.119 [debug] Recursive field result for right: 9
14:57:32.119 [debug] do_fold called with non-variant data: 9
14:57:32.119 [debug] do_fold called with non-variant data: 9
14:57:32.119 [debug] Recursive field result for right: 26
14:57:32.119 [debug] do_fold called with non-variant data: 26
14:57:32.119 [debug] do_fold called with non-variant data: 26
14:57:32.119 [debug] Recursive field result for right: 59
14:57:32.120 [debug] do_fold called with non-variant data: 59
14:57:32.120 [debug] do_fold called with non-variant data: 59
14:57:32.120 [debug] Recursive field result for left: 124
14:57:32.120 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.120 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.120 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.120 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.120 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.120 [debug] Recursive field result for left: 0
14:57:32.120 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.120 [debug] Recursive field result for right: 0
14:57:32.120 [debug] do_fold called with non-variant data: 0
14:57:32.120 [debug] do_fold called with non-variant data: 0
14:57:32.120 [debug] Recursive field result for left: 9
14:57:32.120 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.120 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.120 [debug] Recursive field result for left: 0
14:57:32.120 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.120 [debug] Recursive field result for right: 0
14:57:32.120 [debug] do_fold called with non-variant data: 0
14:57:32.120 [debug] do_fold called with non-variant data: 0
14:57:32.120 [debug] Recursive field result for right: 9
14:57:32.120 [debug] do_fold called with non-variant data: 9
14:57:32.120 [debug] do_fold called with non-variant data: 9
14:57:32.120 [debug] Recursive field result for left: 26
14:57:32.120 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.120 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.120 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.121 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.121 [debug] Recursive field result for left: 0
14:57:32.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.121 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.121 [debug] Recursive field result for right: 0
14:57:32.121 [debug] do_fold called with non-variant data: 0
14:57:32.121 [debug] do_fold called with non-variant data: 0
14:57:32.121 [debug] Recursive field result for left: 9
14:57:32.121 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.121 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.121 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.121 [debug] Recursive field result for left: 0
14:57:32.121 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.121 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.121 [debug] Recursive field result for right: 0
14:57:32.121 [debug] do_fold called with non-variant data: 0
14:57:32.121 [debug] do_fold called with non-variant data: 0
14:57:32.121 [debug] Recursive field result for right: 9
14:57:32.121 [debug] do_fold called with non-variant data: 9
14:57:32.121 [debug] do_fold called with non-variant data: 9
14:57:32.121 [debug] Recursive field result for right: 26
14:57:32.127 [debug] do_fold called with non-variant data: 26
14:57:32.127 [debug] do_fold called with non-variant data: 26
14:57:32.127 [debug] Recursive field result for left: 59
14:57:32.127 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.127 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.127 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.128 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for left: 0
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for right: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] Recursive field result for left: 9
14:57:32.128 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for left: 0
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for right: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] Recursive field result for right: 9
14:57:32.128 [debug] do_fold called with non-variant data: 9
14:57:32.128 [debug] do_fold called with non-variant data: 9
14:57:32.128 [debug] Recursive field result for left: 26
14:57:32.128 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.128 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for left: 0
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for right: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] Recursive field result for left: 9
14:57:32.128 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for left: 0
14:57:32.128 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.128 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.128 [debug] Recursive field result for right: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] do_fold called with non-variant data: 0
14:57:32.128 [debug] Recursive field result for right: 9
14:57:32.128 [debug] do_fold called with non-variant data: 9
14:57:32.128 [debug] do_fold called with non-variant data: 9
14:57:32.128 [debug] Recursive field result for right: 26
14:57:32.128 [debug] do_fold called with non-variant data: 26
14:57:32.128 [debug] do_fold called with non-variant data: 26
14:57:32.128 [debug] Recursive field result for right: 59
14:57:32.128 [debug] do_fold called with non-variant data: 59
14:57:32.128 [debug] do_fold called with non-variant data: 59
14:57:32.128 [debug] Recursive field result for right: 124
14:57:32.128 [debug] do_fold called with non-variant data: 124
14:57:32.128 [debug] do_fold called with non-variant data: 124
14:57:32.128 [debug] Recursive field result for right: 253
14:57:32.128 [debug] do_fold called with non-variant data: 253
14:57:32.128 [debug] do_fold called with non-variant data: 253
14:57:32.128 [debug] Recursive field result for left: 510
14:57:32.129 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.129 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.129 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for left: 0
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for right: 0
14:57:32.130 [debug] do_fold called with non-variant data: 0
14:57:32.130 [debug] do_fold called with non-variant data: 0
14:57:32.130 [debug] Recursive field result for left: 9
14:57:32.130 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for left: 0
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for right: 0
14:57:32.130 [debug] do_fold called with non-variant data: 0
14:57:32.130 [debug] do_fold called with non-variant data: 0
14:57:32.130 [debug] Recursive field result for right: 9
14:57:32.130 [debug] do_fold called with non-variant data: 9
14:57:32.130 [debug] do_fold called with non-variant data: 9
14:57:32.130 [debug] Recursive field result for left: 26
14:57:32.130 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for left: 0
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for right: 0
14:57:32.130 [debug] do_fold called with non-variant data: 0
14:57:32.130 [debug] do_fold called with non-variant data: 0
14:57:32.130 [debug] Recursive field result for left: 9
14:57:32.130 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for left: 0
14:57:32.130 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.130 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.130 [debug] Recursive field result for right: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] Recursive field result for right: 9
14:57:32.131 [debug] do_fold called with non-variant data: 9
14:57:32.131 [debug] do_fold called with non-variant data: 9
14:57:32.131 [debug] Recursive field result for right: 26
14:57:32.131 [debug] do_fold called with non-variant data: 26
14:57:32.131 [debug] do_fold called with non-variant data: 26
14:57:32.131 [debug] Recursive field result for left: 59
14:57:32.131 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.131 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.131 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for left: 0
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for right: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] Recursive field result for left: 9
14:57:32.131 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for left: 0
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for right: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] Recursive field result for right: 9
14:57:32.131 [debug] do_fold called with non-variant data: 9
14:57:32.131 [debug] do_fold called with non-variant data: 9
14:57:32.131 [debug] Recursive field result for left: 26
14:57:32.131 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.131 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for left: 0
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for right: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] Recursive field result for left: 9
14:57:32.131 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for left: 0
14:57:32.131 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.131 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.131 [debug] Recursive field result for right: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.131 [debug] do_fold called with non-variant data: 0
14:57:32.132 [debug] Recursive field result for right: 9
14:57:32.132 [debug] do_fold called with non-variant data: 9
14:57:32.132 [debug] do_fold called with non-variant data: 9
14:57:32.132 [debug] Recursive field result for right: 26
14:57:32.132 [debug] do_fold called with non-variant data: 26
14:57:32.132 [debug] do_fold called with non-variant data: 26
14:57:32.132 [debug] Recursive field result for right: 59
14:57:32.132 [debug] do_fold called with non-variant data: 59
14:57:32.132 [debug] do_fold called with non-variant data: 59
14:57:32.133 [debug] Recursive field result for left: 124
14:57:32.133 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.133 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.133 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.133 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.133 [debug] Recursive field result for left: 0
14:57:32.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.133 [debug] Recursive field result for right: 0
14:57:32.133 [debug] do_fold called with non-variant data: 0
14:57:32.133 [debug] do_fold called with non-variant data: 0
14:57:32.133 [debug] Recursive field result for left: 9
14:57:32.133 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.133 [debug] Recursive field result for left: 0
14:57:32.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.133 [debug] Recursive field result for right: 0
14:57:32.133 [debug] do_fold called with non-variant data: 0
14:57:32.133 [debug] do_fold called with non-variant data: 0
14:57:32.133 [debug] Recursive field result for right: 9
14:57:32.133 [debug] do_fold called with non-variant data: 9
14:57:32.133 [debug] do_fold called with non-variant data: 9
14:57:32.133 [debug] Recursive field result for left: 26
14:57:32.133 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.133 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.133 [debug] Recursive field result for left: 0
14:57:32.133 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.133 [debug] Recursive field result for right: 0
14:57:32.133 [debug] do_fold called with non-variant data: 0
14:57:32.133 [debug] do_fold called with non-variant data: 0
14:57:32.133 [debug] Recursive field result for left: 9
14:57:32.133 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.133 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.136 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.136 [debug] Recursive field result for left: 0
14:57:32.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.136 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.136 [debug] Recursive field result for right: 0
14:57:32.136 [debug] do_fold called with non-variant data: 0
14:57:32.136 [debug] do_fold called with non-variant data: 0
14:57:32.136 [debug] Recursive field result for right: 9
14:57:32.136 [debug] do_fold called with non-variant data: 9
14:57:32.136 [debug] do_fold called with non-variant data: 9
14:57:32.136 [debug] Recursive field result for right: 26
14:57:32.136 [debug] do_fold called with non-variant data: 26
14:57:32.136 [debug] do_fold called with non-variant data: 26
14:57:32.136 [debug] Recursive field result for left: 59
14:57:32.136 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.136 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.136 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.136 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.136 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.136 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.136 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.136 [debug] Recursive field result for left: 0
14:57:32.136 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.137 [debug] Recursive field result for right: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] Recursive field result for left: 9
14:57:32.137 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.137 [debug] Recursive field result for left: 0
14:57:32.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.137 [debug] Recursive field result for right: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] Recursive field result for right: 9
14:57:32.137 [debug] do_fold called with non-variant data: 9
14:57:32.137 [debug] do_fold called with non-variant data: 9
14:57:32.137 [debug] Recursive field result for left: 26
14:57:32.137 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.137 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.137 [debug] Recursive field result for left: 0
14:57:32.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.137 [debug] Recursive field result for right: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] Recursive field result for left: 9
14:57:32.137 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.137 [debug] Recursive field result for left: 0
14:57:32.137 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.137 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.137 [debug] Recursive field result for right: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] do_fold called with non-variant data: 0
14:57:32.137 [debug] Recursive field result for right: 9
14:57:32.137 [debug] do_fold called with non-variant data: 9
14:57:32.137 [debug] do_fold called with non-variant data: 9
14:57:32.137 [debug] Recursive field result for right: 26
14:57:32.137 [debug] do_fold called with non-variant data: 26
14:57:32.137 [debug] do_fold called with non-variant data: 26
14:57:32.137 [debug] Recursive field result for right: 59
14:57:32.137 [debug] do_fold called with non-variant data: 59
14:57:32.137 [debug] do_fold called with non-variant data: 59
14:57:32.137 [debug] Recursive field result for right: 124
14:57:32.137 [debug] do_fold called with non-variant data: 124
14:57:32.137 [debug] do_fold called with non-variant data: 124
14:57:32.137 [debug] Recursive field result for left: 253
14:57:32.137 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.138 [debug] Recursive field result for left: 0
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.138 [debug] Recursive field result for right: 0
14:57:32.138 [debug] do_fold called with non-variant data: 0
14:57:32.138 [debug] do_fold called with non-variant data: 0
14:57:32.138 [debug] Recursive field result for left: 9
14:57:32.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.138 [debug] Recursive field result for left: 0
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.138 [debug] Recursive field result for right: 0
14:57:32.138 [debug] do_fold called with non-variant data: 0
14:57:32.138 [debug] do_fold called with non-variant data: 0
14:57:32.138 [debug] Recursive field result for right: 9
14:57:32.138 [debug] do_fold called with non-variant data: 9
14:57:32.138 [debug] do_fold called with non-variant data: 9
14:57:32.138 [debug] Recursive field result for left: 26
14:57:32.138 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.138 [debug] Recursive field result for left: 0
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.138 [debug] Recursive field result for right: 0
14:57:32.138 [debug] do_fold called with non-variant data: 0
14:57:32.138 [debug] do_fold called with non-variant data: 0
14:57:32.138 [debug] Recursive field result for left: 9
14:57:32.138 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.138 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.138 [debug] Recursive field result for left: 0
14:57:32.138 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.139 [debug] Recursive field result for right: 0
14:57:32.139 [debug] do_fold called with non-variant data: 0
14:57:32.139 [debug] do_fold called with non-variant data: 0
14:57:32.139 [debug] Recursive field result for right: 9
14:57:32.139 [debug] do_fold called with non-variant data: 9
14:57:32.139 [debug] do_fold called with non-variant data: 9
14:57:32.139 [debug] Recursive field result for right: 26
14:57:32.139 [debug] do_fold called with non-variant data: 26
14:57:32.139 [debug] do_fold called with non-variant data: 26
14:57:32.139 [debug] Recursive field result for left: 59
14:57:32.139 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.139 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.139 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.139 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.139 [debug] Recursive field result for left: 0
14:57:32.139 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.139 [debug] Recursive field result for right: 0
14:57:32.139 [debug] do_fold called with non-variant data: 0
14:57:32.139 [debug] do_fold called with non-variant data: 0
14:57:32.139 [debug] Recursive field result for left: 9
14:57:32.139 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.139 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.139 [debug] Recursive field result for left: 0
14:57:32.139 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.139 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.139 [debug] Recursive field result for right: 0
14:57:32.139 [debug] do_fold called with non-variant data: 0
14:57:32.139 [debug] do_fold called with non-variant data: 0
14:57:32.139 [debug] Recursive field result for right: 9
14:57:32.139 [debug] do_fold called with non-variant data: 9
14:57:32.139 [debug] do_fold called with non-variant data: 9
14:57:32.139 [debug] Recursive field result for left: 26
14:57:32.139 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.140 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.140 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.140 [debug] Recursive field result for left: 0
14:57:32.140 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.140 [debug] Recursive field result for right: 0
14:57:32.140 [debug] do_fold called with non-variant data: 0
14:57:32.140 [debug] do_fold called with non-variant data: 0
14:57:32.140 [debug] Recursive field result for left: 9
14:57:32.140 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.140 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.140 [debug] Recursive field result for left: 0
14:57:32.140 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.140 [debug] Recursive field result for right: 0
14:57:32.140 [debug] do_fold called with non-variant data: 0
14:57:32.140 [debug] do_fold called with non-variant data: 0
14:57:32.140 [debug] Recursive field result for right: 9
14:57:32.140 [debug] do_fold called with non-variant data: 9
14:57:32.140 [debug] do_fold called with non-variant data: 9
14:57:32.140 [debug] Recursive field result for right: 26
14:57:32.140 [debug] do_fold called with non-variant data: 26
14:57:32.140 [debug] do_fold called with non-variant data: 26
14:57:32.140 [debug] Recursive field result for right: 59
14:57:32.140 [debug] do_fold called with non-variant data: 59
14:57:32.140 [debug] do_fold called with non-variant data: 59
14:57:32.140 [debug] Recursive field result for left: 124
14:57:32.140 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.140 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.140 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.140 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.141 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for left: 0
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for right: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] Recursive field result for left: 9
14:57:32.141 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for left: 0
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for right: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] Recursive field result for right: 9
14:57:32.141 [debug] do_fold called with non-variant data: 9
14:57:32.141 [debug] do_fold called with non-variant data: 9
14:57:32.141 [debug] Recursive field result for left: 26
14:57:32.141 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.141 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for left: 0
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for right: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] Recursive field result for left: 9
14:57:32.141 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for left: 0
14:57:32.141 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.141 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.141 [debug] Recursive field result for right: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] do_fold called with non-variant data: 0
14:57:32.141 [debug] Recursive field result for right: 9
14:57:32.141 [debug] do_fold called with non-variant data: 9
14:57:32.143 [debug] do_fold called with non-variant data: 9
14:57:32.143 [debug] Recursive field result for right: 26
14:57:32.143 [debug] do_fold called with non-variant data: 26
14:57:32.143 [debug] do_fold called with non-variant data: 26
14:57:32.143 [debug] Recursive field result for left: 59
14:57:32.143 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.143 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.143 [debug] Recursive field result for left: 0
14:57:32.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.143 [debug] Recursive field result for right: 0
14:57:32.143 [debug] do_fold called with non-variant data: 0
14:57:32.143 [debug] do_fold called with non-variant data: 0
14:57:32.143 [debug] Recursive field result for left: 9
14:57:32.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.143 [debug] Recursive field result for left: 0
14:57:32.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.143 [debug] Recursive field result for right: 0
14:57:32.143 [debug] do_fold called with non-variant data: 0
14:57:32.143 [debug] do_fold called with non-variant data: 0
14:57:32.143 [debug] Recursive field result for right: 9
14:57:32.143 [debug] do_fold called with non-variant data: 9
14:57:32.143 [debug] do_fold called with non-variant data: 9
14:57:32.143 [debug] Recursive field result for left: 26
14:57:32.143 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.143 [debug] Recursive field result for left: 0
14:57:32.143 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.143 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.143 [debug] Recursive field result for right: 0
14:57:32.143 [debug] do_fold called with non-variant data: 0
14:57:32.143 [debug] do_fold called with non-variant data: 0
14:57:32.143 [debug] Recursive field result for left: 9
14:57:32.143 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.144 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.144 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.144 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.144 [debug] Recursive field result for left: 0
14:57:32.144 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.144 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.144 [debug] Recursive field result for right: 0
14:57:32.144 [debug] do_fold called with non-variant data: 0
14:57:32.144 [debug] do_fold called with non-variant data: 0
14:57:32.144 [debug] Recursive field result for right: 9
14:57:32.144 [debug] do_fold called with non-variant data: 9
14:57:32.144 [debug] do_fold called with non-variant data: 9
14:57:32.144 [debug] Recursive field result for right: 26
14:57:32.144 [debug] do_fold called with non-variant data: 26
14:57:32.144 [debug] do_fold called with non-variant data: 26
14:57:32.144 [debug] Recursive field result for right: 59
14:57:32.144 [debug] do_fold called with non-variant data: 59
14:57:32.144 [debug] do_fold called with non-variant data: 59
14:57:32.144 [debug] Recursive field result for right: 124
14:57:32.144 [debug] do_fold called with non-variant data: 124
14:57:32.144 [debug] do_fold called with non-variant data: 124
14:57:32.144 [debug] Recursive field result for right: 253
14:57:32.144 [debug] do_fold called with non-variant data: 253
14:57:32.144 [debug] do_fold called with non-variant data: 253
14:57:32.144 [debug] Recursive field result for right: 510
14:57:32.144 [debug] do_fold called with non-variant data: 510
14:57:32.144 [debug] do_fold called with non-variant data: 510
14:57:32.144 [debug] Recursive field result for left: 1023
14:57:32.145 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:32.146 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:32.146 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.146 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.146 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.146 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.147 [debug] Recursive field result for left: 0
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.147 [debug] Recursive field result for right: 0
14:57:32.147 [debug] do_fold called with non-variant data: 0
14:57:32.147 [debug] do_fold called with non-variant data: 0
14:57:32.147 [debug] Recursive field result for left: 9
14:57:32.147 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.147 [debug] Recursive field result for left: 0
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.147 [debug] Recursive field result for right: 0
14:57:32.147 [debug] do_fold called with non-variant data: 0
14:57:32.147 [debug] do_fold called with non-variant data: 0
14:57:32.147 [debug] Recursive field result for right: 9
14:57:32.147 [debug] do_fold called with non-variant data: 9
14:57:32.147 [debug] do_fold called with non-variant data: 9
14:57:32.147 [debug] Recursive field result for left: 26
14:57:32.147 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.147 [debug] Recursive field result for left: 0
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.147 [debug] Recursive field result for right: 0
14:57:32.147 [debug] do_fold called with non-variant data: 0
14:57:32.147 [debug] do_fold called with non-variant data: 0
14:57:32.147 [debug] Recursive field result for left: 9
14:57:32.147 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.147 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.147 [debug] Recursive field result for left: 0
14:57:32.147 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.148 [debug] Recursive field result for right: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] Recursive field result for right: 9
14:57:32.148 [debug] do_fold called with non-variant data: 9
14:57:32.148 [debug] do_fold called with non-variant data: 9
14:57:32.148 [debug] Recursive field result for right: 26
14:57:32.148 [debug] do_fold called with non-variant data: 26
14:57:32.148 [debug] do_fold called with non-variant data: 26
14:57:32.148 [debug] Recursive field result for left: 59
14:57:32.148 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.148 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.148 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.148 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.148 [debug] Recursive field result for left: 0
14:57:32.148 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.148 [debug] Recursive field result for right: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] Recursive field result for left: 9
14:57:32.148 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.148 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.148 [debug] Recursive field result for left: 0
14:57:32.148 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.148 [debug] Recursive field result for right: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] Recursive field result for right: 9
14:57:32.148 [debug] do_fold called with non-variant data: 9
14:57:32.148 [debug] do_fold called with non-variant data: 9
14:57:32.148 [debug] Recursive field result for left: 26
14:57:32.148 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.148 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.148 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.148 [debug] Recursive field result for left: 0
14:57:32.148 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.148 [debug] Recursive field result for right: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] do_fold called with non-variant data: 0
14:57:32.148 [debug] Recursive field result for left: 9
14:57:32.148 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.148 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.148 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.155 [debug] Recursive field result for left: 0
14:57:32.155 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.155 [debug] Recursive field result for right: 0
14:57:32.155 [debug] do_fold called with non-variant data: 0
14:57:32.155 [debug] do_fold called with non-variant data: 0
14:57:32.155 [debug] Recursive field result for right: 9
14:57:32.155 [debug] do_fold called with non-variant data: 9
14:57:32.155 [debug] do_fold called with non-variant data: 9
14:57:32.155 [debug] Recursive field result for right: 26
14:57:32.155 [debug] do_fold called with non-variant data: 26
14:57:32.155 [debug] do_fold called with non-variant data: 26
14:57:32.155 [debug] Recursive field result for right: 59
14:57:32.155 [debug] do_fold called with non-variant data: 59
14:57:32.155 [debug] do_fold called with non-variant data: 59
14:57:32.155 [debug] Recursive field result for left: 124
14:57:32.155 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.155 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.155 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.155 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.155 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.155 [debug] Recursive field result for left: 0
14:57:32.155 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.155 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.155 [debug] Recursive field result for right: 0
14:57:32.155 [debug] do_fold called with non-variant data: 0
14:57:32.155 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] Recursive field result for left: 9
14:57:32.156 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for left: 0
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for right: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] Recursive field result for right: 9
14:57:32.156 [debug] do_fold called with non-variant data: 9
14:57:32.156 [debug] do_fold called with non-variant data: 9
14:57:32.156 [debug] Recursive field result for left: 26
14:57:32.156 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for left: 0
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for right: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] Recursive field result for left: 9
14:57:32.156 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for left: 0
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for right: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] Recursive field result for right: 9
14:57:32.156 [debug] do_fold called with non-variant data: 9
14:57:32.156 [debug] do_fold called with non-variant data: 9
14:57:32.156 [debug] Recursive field result for right: 26
14:57:32.156 [debug] do_fold called with non-variant data: 26
14:57:32.156 [debug] do_fold called with non-variant data: 26
14:57:32.156 [debug] Recursive field result for left: 59
14:57:32.156 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for left: 0
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for right: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] do_fold called with non-variant data: 0
14:57:32.156 [debug] Recursive field result for left: 9
14:57:32.156 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.156 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.156 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.156 [debug] Recursive field result for left: 0
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for right: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] Recursive field result for right: 9
14:57:32.157 [debug] do_fold called with non-variant data: 9
14:57:32.157 [debug] do_fold called with non-variant data: 9
14:57:32.157 [debug] Recursive field result for left: 26
14:57:32.157 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for left: 0
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for right: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] Recursive field result for left: 9
14:57:32.157 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for left: 0
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for right: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] Recursive field result for right: 9
14:57:32.157 [debug] do_fold called with non-variant data: 9
14:57:32.157 [debug] do_fold called with non-variant data: 9
14:57:32.157 [debug] Recursive field result for right: 26
14:57:32.157 [debug] do_fold called with non-variant data: 26
14:57:32.157 [debug] do_fold called with non-variant data: 26
14:57:32.157 [debug] Recursive field result for right: 59
14:57:32.157 [debug] do_fold called with non-variant data: 59
14:57:32.157 [debug] do_fold called with non-variant data: 59
14:57:32.157 [debug] Recursive field result for right: 124
14:57:32.157 [debug] do_fold called with non-variant data: 124
14:57:32.157 [debug] do_fold called with non-variant data: 124
14:57:32.157 [debug] Recursive field result for left: 253
14:57:32.157 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for left: 0
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for right: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] do_fold called with non-variant data: 0
14:57:32.157 [debug] Recursive field result for left: 9
14:57:32.157 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.157 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.157 [debug] Recursive field result for left: 0
14:57:32.157 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.158 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.158 [debug] Recursive field result for right: 0
14:57:32.158 [debug] do_fold called with non-variant data: 0
14:57:32.158 [debug] do_fold called with non-variant data: 0
14:57:32.158 [debug] Recursive field result for right: 9
14:57:32.158 [debug] do_fold called with non-variant data: 9
14:57:32.158 [debug] do_fold called with non-variant data: 9
14:57:32.158 [debug] Recursive field result for left: 26
14:57:32.158 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.158 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.158 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.158 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.158 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.158 [debug] Recursive field result for left: 0
14:57:32.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.158 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.158 [debug] Recursive field result for right: 0
14:57:32.158 [debug] do_fold called with non-variant data: 0
14:57:32.158 [debug] do_fold called with non-variant data: 0
14:57:32.158 [debug] Recursive field result for left: 9
14:57:32.158 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.158 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.158 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.158 [debug] Recursive field result for left: 0
14:57:32.158 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.160 [debug] Recursive field result for right: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] Recursive field result for right: 9
14:57:32.160 [debug] do_fold called with non-variant data: 9
14:57:32.160 [debug] do_fold called with non-variant data: 9
14:57:32.160 [debug] Recursive field result for right: 26
14:57:32.160 [debug] do_fold called with non-variant data: 26
14:57:32.160 [debug] do_fold called with non-variant data: 26
14:57:32.160 [debug] Recursive field result for left: 59
14:57:32.160 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.160 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.160 [debug] Recursive field result for left: 0
14:57:32.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.160 [debug] Recursive field result for right: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] Recursive field result for left: 9
14:57:32.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.160 [debug] Recursive field result for left: 0
14:57:32.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.160 [debug] Recursive field result for right: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] Recursive field result for right: 9
14:57:32.160 [debug] do_fold called with non-variant data: 9
14:57:32.160 [debug] do_fold called with non-variant data: 9
14:57:32.160 [debug] Recursive field result for left: 26
14:57:32.160 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.160 [debug] Recursive field result for left: 0
14:57:32.160 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.160 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.160 [debug] Recursive field result for right: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] do_fold called with non-variant data: 0
14:57:32.160 [debug] Recursive field result for left: 9
14:57:32.160 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.161 [debug] Recursive field result for left: 0
14:57:32.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.161 [debug] Recursive field result for right: 0
14:57:32.161 [debug] do_fold called with non-variant data: 0
14:57:32.161 [debug] do_fold called with non-variant data: 0
14:57:32.161 [debug] Recursive field result for right: 9
14:57:32.161 [debug] do_fold called with non-variant data: 9
14:57:32.161 [debug] do_fold called with non-variant data: 9
14:57:32.161 [debug] Recursive field result for right: 26
14:57:32.161 [debug] do_fold called with non-variant data: 26
14:57:32.161 [debug] do_fold called with non-variant data: 26
14:57:32.161 [debug] Recursive field result for right: 59
14:57:32.161 [debug] do_fold called with non-variant data: 59
14:57:32.161 [debug] do_fold called with non-variant data: 59
14:57:32.161 [debug] Recursive field result for left: 124
14:57:32.161 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.161 [debug] Recursive field result for left: 0
14:57:32.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.161 [debug] Recursive field result for right: 0
14:57:32.161 [debug] do_fold called with non-variant data: 0
14:57:32.161 [debug] do_fold called with non-variant data: 0
14:57:32.161 [debug] Recursive field result for left: 9
14:57:32.161 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.161 [debug] Recursive field result for left: 0
14:57:32.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.161 [debug] Recursive field result for right: 0
14:57:32.161 [debug] do_fold called with non-variant data: 0
14:57:32.161 [debug] do_fold called with non-variant data: 0
14:57:32.161 [debug] Recursive field result for right: 9
14:57:32.161 [debug] do_fold called with non-variant data: 9
14:57:32.161 [debug] do_fold called with non-variant data: 9
14:57:32.161 [debug] Recursive field result for left: 26
14:57:32.161 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.161 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.161 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.161 [debug] Recursive field result for left: 0
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for right: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] Recursive field result for left: 9
14:57:32.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for left: 0
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for right: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] Recursive field result for right: 9
14:57:32.164 [debug] do_fold called with non-variant data: 9
14:57:32.164 [debug] do_fold called with non-variant data: 9
14:57:32.164 [debug] Recursive field result for right: 26
14:57:32.164 [debug] do_fold called with non-variant data: 26
14:57:32.164 [debug] do_fold called with non-variant data: 26
14:57:32.164 [debug] Recursive field result for left: 59
14:57:32.164 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for left: 0
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for right: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] Recursive field result for left: 9
14:57:32.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for left: 0
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for right: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] Recursive field result for right: 9
14:57:32.164 [debug] do_fold called with non-variant data: 9
14:57:32.164 [debug] do_fold called with non-variant data: 9
14:57:32.164 [debug] Recursive field result for left: 26
14:57:32.164 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for left: 0
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for right: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] Recursive field result for left: 9
14:57:32.164 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for left: 0
14:57:32.164 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.164 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.164 [debug] Recursive field result for right: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] do_fold called with non-variant data: 0
14:57:32.164 [debug] Recursive field result for right: 9
14:57:32.164 [debug] do_fold called with non-variant data: 9
14:57:32.164 [debug] do_fold called with non-variant data: 9
14:57:32.164 [debug] Recursive field result for right: 26
14:57:32.164 [debug] do_fold called with non-variant data: 26
14:57:32.164 [debug] do_fold called with non-variant data: 26
14:57:32.164 [debug] Recursive field result for right: 59
14:57:32.164 [debug] do_fold called with non-variant data: 59
14:57:32.164 [debug] do_fold called with non-variant data: 59
14:57:32.164 [debug] Recursive field result for right: 124
14:57:32.164 [debug] do_fold called with non-variant data: 124
14:57:32.164 [debug] do_fold called with non-variant data: 124
14:57:32.164 [debug] Recursive field result for right: 253
14:57:32.164 [debug] do_fold called with non-variant data: 253
14:57:32.164 [debug] do_fold called with non-variant data: 253
14:57:32.165 [debug] Recursive field result for left: 510
14:57:32.165 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.166 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.166 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.166 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.166 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.166 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.166 [debug] Recursive field result for left: 0
14:57:32.166 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.166 [debug] Recursive field result for right: 0
14:57:32.166 [debug] do_fold called with non-variant data: 0
14:57:32.166 [debug] do_fold called with non-variant data: 0
14:57:32.166 [debug] Recursive field result for left: 9
14:57:32.166 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.166 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.167 [debug] Recursive field result for left: 0
14:57:32.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.167 [debug] Recursive field result for right: 0
14:57:32.167 [debug] do_fold called with non-variant data: 0
14:57:32.167 [debug] do_fold called with non-variant data: 0
14:57:32.167 [debug] Recursive field result for right: 9
14:57:32.167 [debug] do_fold called with non-variant data: 9
14:57:32.167 [debug] do_fold called with non-variant data: 9
14:57:32.167 [debug] Recursive field result for left: 26
14:57:32.167 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.167 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.167 [debug] Recursive field result for left: 0
14:57:32.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.167 [debug] Recursive field result for right: 0
14:57:32.167 [debug] do_fold called with non-variant data: 0
14:57:32.167 [debug] do_fold called with non-variant data: 0
14:57:32.167 [debug] Recursive field result for left: 9
14:57:32.167 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.167 [debug] Recursive field result for left: 0
14:57:32.167 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.167 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.167 [debug] Recursive field result for right: 0
14:57:32.167 [debug] do_fold called with non-variant data: 0
14:57:32.167 [debug] do_fold called with non-variant data: 0
14:57:32.167 [debug] Recursive field result for right: 9
14:57:32.167 [debug] do_fold called with non-variant data: 9
14:57:32.167 [debug] do_fold called with non-variant data: 9
14:57:32.167 [debug] Recursive field result for right: 26
14:57:32.167 [debug] do_fold called with non-variant data: 26
14:57:32.167 [debug] do_fold called with non-variant data: 26
14:57:32.167 [debug] Recursive field result for left: 59
14:57:32.167 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.168 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.168 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.168 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.168 [debug] Recursive field result for left: 0
14:57:32.168 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.168 [debug] Recursive field result for right: 0
14:57:32.168 [debug] do_fold called with non-variant data: 0
14:57:32.168 [debug] do_fold called with non-variant data: 0
14:57:32.168 [debug] Recursive field result for left: 9
14:57:32.168 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.168 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.168 [debug] Recursive field result for left: 0
14:57:32.168 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.168 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.169 [debug] Recursive field result for right: 0
14:57:32.169 [debug] do_fold called with non-variant data: 0
14:57:32.169 [debug] do_fold called with non-variant data: 0
14:57:32.169 [debug] Recursive field result for right: 9
14:57:32.169 [debug] do_fold called with non-variant data: 9
14:57:32.169 [debug] do_fold called with non-variant data: 9
14:57:32.169 [debug] Recursive field result for left: 26
14:57:32.169 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.169 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.169 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.169 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.169 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.169 [debug] Recursive field result for left: 0
14:57:32.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.169 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.169 [debug] Recursive field result for right: 0
14:57:32.169 [debug] do_fold called with non-variant data: 0
14:57:32.169 [debug] do_fold called with non-variant data: 0
14:57:32.169 [debug] Recursive field result for left: 9
14:57:32.169 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.169 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.169 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.169 [debug] Recursive field result for left: 0
14:57:32.169 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.169 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.169 [debug] Recursive field result for right: 0
14:57:32.169 [debug] do_fold called with non-variant data: 0
14:57:32.169 [debug] do_fold called with non-variant data: 0
14:57:32.169 [debug] Recursive field result for right: 9
14:57:32.169 [debug] do_fold called with non-variant data: 9
14:57:32.169 [debug] do_fold called with non-variant data: 9
14:57:32.169 [debug] Recursive field result for right: 26
14:57:32.169 [debug] do_fold called with non-variant data: 26
14:57:32.169 [debug] do_fold called with non-variant data: 26
14:57:32.169 [debug] Recursive field result for right: 59
14:57:32.169 [debug] do_fold called with non-variant data: 59
14:57:32.169 [debug] do_fold called with non-variant data: 59
14:57:32.169 [debug] Recursive field result for left: 124
14:57:32.169 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.170 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.170 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.170 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.170 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.170 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.170 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.170 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.170 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.170 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.170 [debug] Recursive field result for left: 0
14:57:32.170 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.173 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.173 [debug] Recursive field result for right: 0
14:57:32.173 [debug] do_fold called with non-variant data: 0
14:57:32.173 [debug] do_fold called with non-variant data: 0
14:57:32.173 [debug] Recursive field result for left: 9
14:57:32.173 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.173 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.173 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.174 [debug] Recursive field result for left: 0
14:57:32.174 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.174 [debug] Recursive field result for right: 0
14:57:32.174 [debug] do_fold called with non-variant data: 0
14:57:32.174 [debug] do_fold called with non-variant data: 0
14:57:32.174 [debug] Recursive field result for right: 9
14:57:32.174 [debug] do_fold called with non-variant data: 9
14:57:32.174 [debug] do_fold called with non-variant data: 9
14:57:32.174 [debug] Recursive field result for left: 26
14:57:32.174 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.174 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.174 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.174 [debug] Recursive field result for left: 0
14:57:32.174 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.174 [debug] Recursive field result for right: 0
14:57:32.174 [debug] do_fold called with non-variant data: 0
14:57:32.174 [debug] do_fold called with non-variant data: 0
14:57:32.174 [debug] Recursive field result for left: 9
14:57:32.174 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.174 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.174 [debug] Recursive field result for left: 0
14:57:32.174 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.174 [debug] Recursive field result for right: 0
14:57:32.174 [debug] do_fold called with non-variant data: 0
14:57:32.174 [debug] do_fold called with non-variant data: 0
14:57:32.174 [debug] Recursive field result for right: 9
14:57:32.174 [debug] do_fold called with non-variant data: 9
14:57:32.174 [debug] do_fold called with non-variant data: 9
14:57:32.174 [debug] Recursive field result for right: 26
14:57:32.174 [debug] do_fold called with non-variant data: 26
14:57:32.174 [debug] do_fold called with non-variant data: 26
14:57:32.174 [debug] Recursive field result for left: 59
14:57:32.174 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.174 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.174 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.174 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.174 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.175 [debug] Recursive field result for left: 0
14:57:32.175 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.175 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.175 [debug] Recursive field result for right: 0
14:57:32.175 [debug] do_fold called with non-variant data: 0
14:57:32.175 [debug] do_fold called with non-variant data: 0
14:57:32.175 [debug] Recursive field result for left: 9
14:57:32.175 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.175 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.175 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.175 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.175 [debug] Recursive field result for left: 0
14:57:32.175 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.175 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.175 [debug] Recursive field result for right: 0
14:57:32.175 [debug] do_fold called with non-variant data: 0
14:57:32.175 [debug] do_fold called with non-variant data: 0
14:57:32.175 [debug] Recursive field result for right: 9
14:57:32.175 [debug] do_fold called with non-variant data: 9
14:57:32.175 [debug] do_fold called with non-variant data: 9
14:57:32.175 [debug] Recursive field result for left: 26
14:57:32.175 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.175 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.175 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.175 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.175 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.175 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.177 [debug] Recursive field result for left: 0
14:57:32.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.177 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.177 [debug] Recursive field result for right: 0
14:57:32.177 [debug] do_fold called with non-variant data: 0
14:57:32.177 [debug] do_fold called with non-variant data: 0
14:57:32.177 [debug] Recursive field result for left: 9
14:57:32.177 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.177 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.177 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.177 [debug] Recursive field result for left: 0
14:57:32.177 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.177 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.177 [debug] Recursive field result for right: 0
14:57:32.177 [debug] do_fold called with non-variant data: 0
14:57:32.177 [debug] do_fold called with non-variant data: 0
14:57:32.177 [debug] Recursive field result for right: 9
14:57:32.177 [debug] do_fold called with non-variant data: 9
14:57:32.177 [debug] do_fold called with non-variant data: 9
14:57:32.177 [debug] Recursive field result for right: 26
14:57:32.177 [debug] do_fold called with non-variant data: 26
14:57:32.177 [debug] do_fold called with non-variant data: 26
14:57:32.177 [debug] Recursive field result for right: 59
14:57:32.177 [debug] do_fold called with non-variant data: 59
14:57:32.177 [debug] do_fold called with non-variant data: 59
14:57:32.177 [debug] Recursive field result for right: 124
14:57:32.177 [debug] do_fold called with non-variant data: 124
14:57:32.177 [debug] do_fold called with non-variant data: 124
14:57:32.177 [debug] Recursive field result for left: 253
14:57:32.177 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for left: 0
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for right: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] Recursive field result for left: 9
14:57:32.178 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for left: 0
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for right: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] Recursive field result for right: 9
14:57:32.178 [debug] do_fold called with non-variant data: 9
14:57:32.178 [debug] do_fold called with non-variant data: 9
14:57:32.178 [debug] Recursive field result for left: 26
14:57:32.178 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for left: 0
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for right: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] Recursive field result for left: 9
14:57:32.178 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for left: 0
14:57:32.178 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.178 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.178 [debug] Recursive field result for right: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] do_fold called with non-variant data: 0
14:57:32.178 [debug] Recursive field result for right: 9
14:57:32.178 [debug] do_fold called with non-variant data: 9
14:57:32.179 [debug] do_fold called with non-variant data: 9
14:57:32.179 [debug] Recursive field result for right: 26
14:57:32.179 [debug] do_fold called with non-variant data: 26
14:57:32.179 [debug] do_fold called with non-variant data: 26
14:57:32.179 [debug] Recursive field result for left: 59
14:57:32.179 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.179 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for left: 0
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for right: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] Recursive field result for left: 9
14:57:32.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for left: 0
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for right: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] Recursive field result for right: 9
14:57:32.179 [debug] do_fold called with non-variant data: 9
14:57:32.179 [debug] do_fold called with non-variant data: 9
14:57:32.179 [debug] Recursive field result for left: 26
14:57:32.179 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for left: 0
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for right: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] Recursive field result for left: 9
14:57:32.179 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for left: 0
14:57:32.179 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.179 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.179 [debug] Recursive field result for right: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] do_fold called with non-variant data: 0
14:57:32.179 [debug] Recursive field result for right: 9
14:57:32.179 [debug] do_fold called with non-variant data: 9
14:57:32.180 [debug] do_fold called with non-variant data: 9
14:57:32.180 [debug] Recursive field result for right: 26
14:57:32.180 [debug] do_fold called with non-variant data: 26
14:57:32.180 [debug] do_fold called with non-variant data: 26
14:57:32.180 [debug] Recursive field result for right: 59
14:57:32.180 [debug] do_fold called with non-variant data: 59
14:57:32.180 [debug] do_fold called with non-variant data: 59
14:57:32.180 [debug] Recursive field result for left: 124
14:57:32.180 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.180 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.180 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.180 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.180 [debug] Recursive field result for left: 0
14:57:32.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.180 [debug] Recursive field result for right: 0
14:57:32.180 [debug] do_fold called with non-variant data: 0
14:57:32.180 [debug] do_fold called with non-variant data: 0
14:57:32.180 [debug] Recursive field result for left: 9
14:57:32.180 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.180 [debug] Recursive field result for left: 0
14:57:32.180 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.180 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.180 [debug] Recursive field result for right: 0
14:57:32.180 [debug] do_fold called with non-variant data: 0
14:57:32.180 [debug] do_fold called with non-variant data: 0
14:57:32.180 [debug] Recursive field result for right: 9
14:57:32.180 [debug] do_fold called with non-variant data: 9
14:57:32.182 [debug] do_fold called with non-variant data: 9
14:57:32.182 [debug] Recursive field result for left: 26
14:57:32.182 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.182 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.182 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.182 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.182 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.182 [debug] Recursive field result for left: 0
14:57:32.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.182 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.182 [debug] Recursive field result for right: 0
14:57:32.182 [debug] do_fold called with non-variant data: 0
14:57:32.182 [debug] do_fold called with non-variant data: 0
14:57:32.182 [debug] Recursive field result for left: 9
14:57:32.182 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.182 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.182 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.182 [debug] Recursive field result for left: 0
14:57:32.182 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.182 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.182 [debug] Recursive field result for right: 0
14:57:32.182 [debug] do_fold called with non-variant data: 0
14:57:32.182 [debug] do_fold called with non-variant data: 0
14:57:32.182 [debug] Recursive field result for right: 9
14:57:32.182 [debug] do_fold called with non-variant data: 9
14:57:32.182 [debug] do_fold called with non-variant data: 9
14:57:32.182 [debug] Recursive field result for right: 26
14:57:32.182 [debug] do_fold called with non-variant data: 26
14:57:32.182 [debug] do_fold called with non-variant data: 26
14:57:32.182 [debug] Recursive field result for left: 59
14:57:32.183 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.183 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.183 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for left: 0
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for right: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] Recursive field result for left: 9
14:57:32.183 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for left: 0
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for right: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] Recursive field result for right: 9
14:57:32.183 [debug] do_fold called with non-variant data: 9
14:57:32.183 [debug] do_fold called with non-variant data: 9
14:57:32.183 [debug] Recursive field result for left: 26
14:57:32.183 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.183 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for left: 0
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for right: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] Recursive field result for left: 9
14:57:32.183 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for left: 0
14:57:32.183 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.183 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.183 [debug] Recursive field result for right: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] do_fold called with non-variant data: 0
14:57:32.183 [debug] Recursive field result for right: 9
14:57:32.183 [debug] do_fold called with non-variant data: 9
14:57:32.183 [debug] do_fold called with non-variant data: 9
14:57:32.183 [debug] Recursive field result for right: 26
14:57:32.183 [debug] do_fold called with non-variant data: 26
14:57:32.183 [debug] do_fold called with non-variant data: 26
14:57:32.183 [debug] Recursive field result for right: 59
14:57:32.183 [debug] do_fold called with non-variant data: 59
14:57:32.183 [debug] do_fold called with non-variant data: 59
14:57:32.183 [debug] Recursive field result for right: 124
14:57:32.183 [debug] do_fold called with non-variant data: 124
14:57:32.183 [debug] do_fold called with non-variant data: 124
14:57:32.183 [debug] Recursive field result for right: 253
14:57:32.183 [debug] do_fold called with non-variant data: 253
14:57:32.183 [debug] do_fold called with non-variant data: 253
14:57:32.183 [debug] Recursive field result for right: 510
14:57:32.183 [debug] do_fold called with non-variant data: 510
14:57:32.183 [debug] do_fold called with non-variant data: 510
14:57:32.183 [debug] Recursive field result for right: 1023
14:57:32.183 [debug] do_fold called with non-variant data: 1023
14:57:32.183 [debug] do_fold called with non-variant data: 1023
14:57:32.183 [debug] Recursive field result for left: 2048
14:57:32.186 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val (truncated)
14:57:32.188 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf (truncated)
14:57:32.188 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:32.189 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:32.189 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.189 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.189 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.190 [debug] Recursive field result for left: 0
14:57:32.190 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.190 [debug] Recursive field result for right: 0
14:57:32.190 [debug] do_fold called with non-variant data: 0
14:57:32.190 [debug] do_fold called with non-variant data: 0
14:57:32.190 [debug] Recursive field result for left: 9
14:57:32.190 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.190 [debug] Recursive field result for left: 0
14:57:32.190 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.190 [debug] Recursive field result for right: 0
14:57:32.190 [debug] do_fold called with non-variant data: 0
14:57:32.190 [debug] do_fold called with non-variant data: 0
14:57:32.190 [debug] Recursive field result for right: 9
14:57:32.190 [debug] do_fold called with non-variant data: 9
14:57:32.190 [debug] do_fold called with non-variant data: 9
14:57:32.190 [debug] Recursive field result for left: 26
14:57:32.190 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.190 [debug] Recursive field result for left: 0
14:57:32.190 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.190 [debug] Recursive field result for right: 0
14:57:32.190 [debug] do_fold called with non-variant data: 0
14:57:32.190 [debug] do_fold called with non-variant data: 0
14:57:32.190 [debug] Recursive field result for left: 9
14:57:32.190 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.190 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.190 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for left: 0
14:57:32.195 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for right: 0
14:57:32.195 [debug] do_fold called with non-variant data: 0
14:57:32.195 [debug] do_fold called with non-variant data: 0
14:57:32.195 [debug] Recursive field result for right: 9
14:57:32.195 [debug] do_fold called with non-variant data: 9
14:57:32.195 [debug] do_fold called with non-variant data: 9
14:57:32.195 [debug] Recursive field result for right: 26
14:57:32.195 [debug] do_fold called with non-variant data: 26
14:57:32.195 [debug] do_fold called with non-variant data: 26
14:57:32.195 [debug] Recursive field result for left: 59
14:57:32.195 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.195 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.195 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.195 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for left: 0
14:57:32.195 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for right: 0
14:57:32.195 [debug] do_fold called with non-variant data: 0
14:57:32.195 [debug] do_fold called with non-variant data: 0
14:57:32.195 [debug] Recursive field result for left: 9
14:57:32.195 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.195 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for left: 0
14:57:32.195 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for right: 0
14:57:32.195 [debug] do_fold called with non-variant data: 0
14:57:32.195 [debug] do_fold called with non-variant data: 0
14:57:32.195 [debug] Recursive field result for right: 9
14:57:32.195 [debug] do_fold called with non-variant data: 9
14:57:32.195 [debug] do_fold called with non-variant data: 9
14:57:32.195 [debug] Recursive field result for left: 26
14:57:32.195 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.195 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.195 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for left: 0
14:57:32.195 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.195 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.195 [debug] Recursive field result for right: 0
14:57:32.195 [debug] do_fold called with non-variant data: 0
14:57:32.196 [debug] do_fold called with non-variant data: 0
14:57:32.196 [debug] Recursive field result for left: 9
14:57:32.196 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.196 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.196 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.196 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.196 [debug] Recursive field result for left: 0
14:57:32.196 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.196 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.196 [debug] Recursive field result for right: 0
14:57:32.196 [debug] do_fold called with non-variant data: 0
14:57:32.196 [debug] do_fold called with non-variant data: 0
14:57:32.198 [debug] Recursive field result for right: 9
14:57:32.198 [debug] do_fold called with non-variant data: 9
14:57:32.198 [debug] do_fold called with non-variant data: 9
14:57:32.198 [debug] Recursive field result for right: 26
14:57:32.198 [debug] do_fold called with non-variant data: 26
14:57:32.198 [debug] do_fold called with non-variant data: 26
14:57:32.198 [debug] Recursive field result for right: 59
14:57:32.198 [debug] do_fold called with non-variant data: 59
14:57:32.198 [debug] do_fold called with non-variant data: 59
14:57:32.198 [debug] Recursive field result for left: 124
14:57:32.199 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for left: 0
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for right: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] Recursive field result for left: 9
14:57:32.199 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for left: 0
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for right: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] Recursive field result for right: 9
14:57:32.199 [debug] do_fold called with non-variant data: 9
14:57:32.199 [debug] do_fold called with non-variant data: 9
14:57:32.199 [debug] Recursive field result for left: 26
14:57:32.199 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for left: 0
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for right: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] Recursive field result for left: 9
14:57:32.199 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for left: 0
14:57:32.199 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.199 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.199 [debug] Recursive field result for right: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] do_fold called with non-variant data: 0
14:57:32.199 [debug] Recursive field result for right: 9
14:57:32.200 [debug] do_fold called with non-variant data: 9
14:57:32.200 [debug] do_fold called with non-variant data: 9
14:57:32.200 [debug] Recursive field result for right: 26
14:57:32.200 [debug] do_fold called with non-variant data: 26
14:57:32.200 [debug] do_fold called with non-variant data: 26
14:57:32.200 [debug] Recursive field result for left: 59
14:57:32.200 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.200 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.200 [debug] Recursive field result for left: 0
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.200 [debug] Recursive field result for right: 0
14:57:32.200 [debug] do_fold called with non-variant data: 0
14:57:32.200 [debug] do_fold called with non-variant data: 0
14:57:32.200 [debug] Recursive field result for left: 9
14:57:32.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.200 [debug] Recursive field result for left: 0
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.200 [debug] Recursive field result for right: 0
14:57:32.200 [debug] do_fold called with non-variant data: 0
14:57:32.200 [debug] do_fold called with non-variant data: 0
14:57:32.200 [debug] Recursive field result for right: 9
14:57:32.200 [debug] do_fold called with non-variant data: 9
14:57:32.200 [debug] do_fold called with non-variant data: 9
14:57:32.200 [debug] Recursive field result for left: 26
14:57:32.200 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.200 [debug] Recursive field result for left: 0
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.200 [debug] Recursive field result for right: 0
14:57:32.200 [debug] do_fold called with non-variant data: 0
14:57:32.200 [debug] do_fold called with non-variant data: 0
14:57:32.200 [debug] Recursive field result for left: 9
14:57:32.200 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.200 [debug] Recursive field result for left: 0
14:57:32.200 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.200 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.202 [debug] Recursive field result for right: 0
14:57:32.202 [debug] do_fold called with non-variant data: 0
14:57:32.202 [debug] do_fold called with non-variant data: 0
14:57:32.202 [debug] Recursive field result for right: 9
14:57:32.202 [debug] do_fold called with non-variant data: 9
14:57:32.202 [debug] do_fold called with non-variant data: 9
14:57:32.202 [debug] Recursive field result for right: 26
14:57:32.202 [debug] do_fold called with non-variant data: 26
14:57:32.202 [debug] do_fold called with non-variant data: 26
14:57:32.202 [debug] Recursive field result for right: 59
14:57:32.202 [debug] do_fold called with non-variant data: 59
14:57:32.202 [debug] do_fold called with non-variant data: 59
14:57:32.202 [debug] Recursive field result for right: 124
14:57:32.202 [debug] do_fold called with non-variant data: 124
14:57:32.202 [debug] do_fold called with non-variant data: 124
14:57:32.202 [debug] Recursive field result for left: 253
14:57:32.202 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.202 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.202 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.202 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.202 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.202 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.202 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.202 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.202 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.202 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.202 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.202 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for left: 0
14:57:32.203 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for right: 0
14:57:32.203 [debug] do_fold called with non-variant data: 0
14:57:32.203 [debug] do_fold called with non-variant data: 0
14:57:32.203 [debug] Recursive field result for left: 9
14:57:32.203 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.203 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for left: 0
14:57:32.203 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for right: 0
14:57:32.203 [debug] do_fold called with non-variant data: 0
14:57:32.203 [debug] do_fold called with non-variant data: 0
14:57:32.203 [debug] Recursive field result for right: 9
14:57:32.203 [debug] do_fold called with non-variant data: 9
14:57:32.203 [debug] do_fold called with non-variant data: 9
14:57:32.203 [debug] Recursive field result for left: 26
14:57:32.203 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.203 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.203 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for left: 0
14:57:32.203 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for right: 0
14:57:32.203 [debug] do_fold called with non-variant data: 0
14:57:32.203 [debug] do_fold called with non-variant data: 0
14:57:32.203 [debug] Recursive field result for left: 9
14:57:32.203 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.203 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for left: 0
14:57:32.203 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.203 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.203 [debug] Recursive field result for right: 0
14:57:32.206 [debug] do_fold called with non-variant data: 0
14:57:32.206 [debug] do_fold called with non-variant data: 0
14:57:32.206 [debug] Recursive field result for right: 9
14:57:32.206 [debug] do_fold called with non-variant data: 9
14:57:32.206 [debug] do_fold called with non-variant data: 9
14:57:32.206 [debug] Recursive field result for right: 26
14:57:32.206 [debug] do_fold called with non-variant data: 26
14:57:32.206 [debug] do_fold called with non-variant data: 26
14:57:32.206 [debug] Recursive field result for left: 59
14:57:32.206 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.206 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.206 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.206 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.206 [debug] Recursive field result for left: 0
14:57:32.206 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.206 [debug] Recursive field result for right: 0
14:57:32.206 [debug] do_fold called with non-variant data: 0
14:57:32.206 [debug] do_fold called with non-variant data: 0
14:57:32.206 [debug] Recursive field result for left: 9
14:57:32.206 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.206 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.206 [debug] Recursive field result for left: 0
14:57:32.206 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.206 [debug] Recursive field result for right: 0
14:57:32.206 [debug] do_fold called with non-variant data: 0
14:57:32.206 [debug] do_fold called with non-variant data: 0
14:57:32.206 [debug] Recursive field result for right: 9
14:57:32.206 [debug] do_fold called with non-variant data: 9
14:57:32.206 [debug] do_fold called with non-variant data: 9
14:57:32.206 [debug] Recursive field result for left: 26
14:57:32.206 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.206 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.206 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for left: 0
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for right: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] Recursive field result for left: 9
14:57:32.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for left: 0
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for right: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] Recursive field result for right: 9
14:57:32.207 [debug] do_fold called with non-variant data: 9
14:57:32.207 [debug] do_fold called with non-variant data: 9
14:57:32.207 [debug] Recursive field result for right: 26
14:57:32.207 [debug] do_fold called with non-variant data: 26
14:57:32.207 [debug] do_fold called with non-variant data: 26
14:57:32.207 [debug] Recursive field result for right: 59
14:57:32.207 [debug] do_fold called with non-variant data: 59
14:57:32.207 [debug] do_fold called with non-variant data: 59
14:57:32.207 [debug] Recursive field result for left: 124
14:57:32.207 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for left: 0
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for right: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] Recursive field result for left: 9
14:57:32.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for left: 0
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for right: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] Recursive field result for right: 9
14:57:32.207 [debug] do_fold called with non-variant data: 9
14:57:32.207 [debug] do_fold called with non-variant data: 9
14:57:32.207 [debug] Recursive field result for left: 26
14:57:32.207 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for left: 0
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for right: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] Recursive field result for left: 9
14:57:32.207 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for left: 0
14:57:32.207 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.207 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.207 [debug] Recursive field result for right: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] do_fold called with non-variant data: 0
14:57:32.207 [debug] Recursive field result for right: 9
14:57:32.209 [debug] do_fold called with non-variant data: 9
14:57:32.209 [debug] do_fold called with non-variant data: 9
14:57:32.209 [debug] Recursive field result for right: 26
14:57:32.209 [debug] do_fold called with non-variant data: 26
14:57:32.209 [debug] do_fold called with non-variant data: 26
14:57:32.209 [debug] Recursive field result for left: 59
14:57:32.209 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.209 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.210 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.210 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for left: 0
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for right: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] Recursive field result for left: 9
14:57:32.210 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for left: 0
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for right: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] Recursive field result for right: 9
14:57:32.210 [debug] do_fold called with non-variant data: 9
14:57:32.210 [debug] do_fold called with non-variant data: 9
14:57:32.210 [debug] Recursive field result for left: 26
14:57:32.210 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.210 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for left: 0
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for right: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] Recursive field result for left: 9
14:57:32.210 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for left: 0
14:57:32.210 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.210 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.210 [debug] Recursive field result for right: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] do_fold called with non-variant data: 0
14:57:32.210 [debug] Recursive field result for right: 9
14:57:32.210 [debug] do_fold called with non-variant data: 9
14:57:32.210 [debug] do_fold called with non-variant data: 9
14:57:32.210 [debug] Recursive field result for right: 26
14:57:32.210 [debug] do_fold called with non-variant data: 26
14:57:32.210 [debug] do_fold called with non-variant data: 26
14:57:32.210 [debug] Recursive field result for right: 59
14:57:32.210 [debug] do_fold called with non-variant data: 59
14:57:32.210 [debug] do_fold called with non-variant data: 59
14:57:32.210 [debug] Recursive field result for right: 124
14:57:32.210 [debug] do_fold called with non-variant data: 124
14:57:32.210 [debug] do_fold called with non-variant data: 124
14:57:32.210 [debug] Recursive field result for right: 253
14:57:32.210 [debug] do_fold called with non-variant data: 253
14:57:32.210 [debug] do_fold called with non-variant data: 253
14:57:32.210 [debug] Recursive field result for left: 510
14:57:32.211 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.213 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.213 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.213 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for left: 0
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for right: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] Recursive field result for left: 9
14:57:32.214 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for left: 0
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for right: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] Recursive field result for right: 9
14:57:32.214 [debug] do_fold called with non-variant data: 9
14:57:32.214 [debug] do_fold called with non-variant data: 9
14:57:32.214 [debug] Recursive field result for left: 26
14:57:32.214 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for left: 0
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for right: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] Recursive field result for left: 9
14:57:32.214 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for left: 0
14:57:32.214 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.214 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.214 [debug] Recursive field result for right: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] do_fold called with non-variant data: 0
14:57:32.214 [debug] Recursive field result for right: 9
14:57:32.214 [debug] do_fold called with non-variant data: 9
14:57:32.214 [debug] do_fold called with non-variant data: 9
14:57:32.215 [debug] Recursive field result for right: 26
14:57:32.215 [debug] do_fold called with non-variant data: 26
14:57:32.215 [debug] do_fold called with non-variant data: 26
14:57:32.215 [debug] Recursive field result for left: 59
14:57:32.215 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.215 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.215 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.215 [debug] Recursive field result for left: 0
14:57:32.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.215 [debug] Recursive field result for right: 0
14:57:32.215 [debug] do_fold called with non-variant data: 0
14:57:32.215 [debug] do_fold called with non-variant data: 0
14:57:32.215 [debug] Recursive field result for left: 9
14:57:32.215 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.215 [debug] Recursive field result for left: 0
14:57:32.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.215 [debug] Recursive field result for right: 0
14:57:32.215 [debug] do_fold called with non-variant data: 0
14:57:32.215 [debug] do_fold called with non-variant data: 0
14:57:32.215 [debug] Recursive field result for right: 9
14:57:32.215 [debug] do_fold called with non-variant data: 9
14:57:32.215 [debug] do_fold called with non-variant data: 9
14:57:32.215 [debug] Recursive field result for left: 26
14:57:32.215 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.215 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.215 [debug] Recursive field result for left: 0
14:57:32.215 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.215 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.215 [debug] Recursive field result for right: 0
14:57:32.215 [debug] do_fold called with non-variant data: 0
14:57:32.215 [debug] do_fold called with non-variant data: 0
14:57:32.215 [debug] Recursive field result for left: 9
14:57:32.215 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.216 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.216 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.216 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.216 [debug] Recursive field result for left: 0
14:57:32.216 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.216 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.216 [debug] Recursive field result for right: 0
14:57:32.216 [debug] do_fold called with non-variant data: 0
14:57:32.216 [debug] do_fold called with non-variant data: 0
14:57:32.216 [debug] Recursive field result for right: 9
14:57:32.216 [debug] do_fold called with non-variant data: 9
14:57:32.216 [debug] do_fold called with non-variant data: 9
14:57:32.216 [debug] Recursive field result for right: 26
14:57:32.216 [debug] do_fold called with non-variant data: 26
14:57:32.216 [debug] do_fold called with non-variant data: 26
14:57:32.216 [debug] Recursive field result for right: 59
14:57:32.216 [debug] do_fold called with non-variant data: 59
14:57:32.216 [debug] do_fold called with non-variant data: 59
14:57:32.216 [debug] Recursive field result for left: 124
14:57:32.216 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.216 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.217 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.217 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.217 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.217 [debug] Recursive field result for left: 0
14:57:32.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.217 [debug] Recursive field result for right: 0
14:57:32.217 [debug] do_fold called with non-variant data: 0
14:57:32.217 [debug] do_fold called with non-variant data: 0
14:57:32.217 [debug] Recursive field result for left: 9
14:57:32.217 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.217 [debug] Recursive field result for left: 0
14:57:32.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.217 [debug] Recursive field result for right: 0
14:57:32.217 [debug] do_fold called with non-variant data: 0
14:57:32.217 [debug] do_fold called with non-variant data: 0
14:57:32.217 [debug] Recursive field result for right: 9
14:57:32.217 [debug] do_fold called with non-variant data: 9
14:57:32.217 [debug] do_fold called with non-variant data: 9
14:57:32.217 [debug] Recursive field result for left: 26
14:57:32.217 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.217 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.217 [debug] Recursive field result for left: 0
14:57:32.217 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.217 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.217 [debug] Recursive field result for right: 0
14:57:32.217 [debug] do_fold called with non-variant data: 0
14:57:32.218 [debug] do_fold called with non-variant data: 0
14:57:32.218 [debug] Recursive field result for left: 9
14:57:32.218 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.218 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.218 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.218 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.218 [debug] Recursive field result for left: 0
14:57:32.218 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for right: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] Recursive field result for right: 9
14:57:32.219 [debug] do_fold called with non-variant data: 9
14:57:32.219 [debug] do_fold called with non-variant data: 9
14:57:32.219 [debug] Recursive field result for right: 26
14:57:32.219 [debug] do_fold called with non-variant data: 26
14:57:32.219 [debug] do_fold called with non-variant data: 26
14:57:32.219 [debug] Recursive field result for left: 59
14:57:32.219 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.219 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.219 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for left: 0
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for right: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] Recursive field result for left: 9
14:57:32.219 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for left: 0
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for right: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] Recursive field result for right: 9
14:57:32.219 [debug] do_fold called with non-variant data: 9
14:57:32.219 [debug] do_fold called with non-variant data: 9
14:57:32.219 [debug] Recursive field result for left: 26
14:57:32.219 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.219 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for left: 0
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for right: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] Recursive field result for left: 9
14:57:32.219 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for left: 0
14:57:32.219 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.219 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.219 [debug] Recursive field result for right: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] do_fold called with non-variant data: 0
14:57:32.219 [debug] Recursive field result for right: 9
14:57:32.219 [debug] do_fold called with non-variant data: 9
14:57:32.220 [debug] do_fold called with non-variant data: 9
14:57:32.220 [debug] Recursive field result for right: 26
14:57:32.220 [debug] do_fold called with non-variant data: 26
14:57:32.220 [debug] do_fold called with non-variant data: 26
14:57:32.220 [debug] Recursive field result for right: 59
14:57:32.220 [debug] do_fold called with non-variant data: 59
14:57:32.220 [debug] do_fold called with non-variant data: 59
14:57:32.220 [debug] Recursive field result for right: 124
14:57:32.220 [debug] do_fold called with non-variant data: 124
14:57:32.220 [debug] do_fold called with non-variant data: 124
14:57:32.220 [debug] Recursive field result for left: 253
14:57:32.221 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.221 [debug] Recursive field result for left: 0
14:57:32.221 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.221 [debug] Recursive field result for right: 0
14:57:32.221 [debug] do_fold called with non-variant data: 0
14:57:32.221 [debug] do_fold called with non-variant data: 0
14:57:32.221 [debug] Recursive field result for left: 9
14:57:32.221 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.221 [debug] Recursive field result for left: 0
14:57:32.221 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.221 [debug] Recursive field result for right: 0
14:57:32.221 [debug] do_fold called with non-variant data: 0
14:57:32.221 [debug] do_fold called with non-variant data: 0
14:57:32.221 [debug] Recursive field result for right: 9
14:57:32.221 [debug] do_fold called with non-variant data: 9
14:57:32.221 [debug] do_fold called with non-variant data: 9
14:57:32.221 [debug] Recursive field result for left: 26
14:57:32.221 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.221 [debug] Recursive field result for left: 0
14:57:32.221 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.221 [debug] Recursive field result for right: 0
14:57:32.221 [debug] do_fold called with non-variant data: 0
14:57:32.221 [debug] do_fold called with non-variant data: 0
14:57:32.221 [debug] Recursive field result for left: 9
14:57:32.221 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.221 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.221 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for left: 0
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for right: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] Recursive field result for right: 9
14:57:32.222 [debug] do_fold called with non-variant data: 9
14:57:32.222 [debug] do_fold called with non-variant data: 9
14:57:32.222 [debug] Recursive field result for right: 26
14:57:32.222 [debug] do_fold called with non-variant data: 26
14:57:32.222 [debug] do_fold called with non-variant data: 26
14:57:32.222 [debug] Recursive field result for left: 59
14:57:32.222 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.222 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.222 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for left: 0
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for right: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] Recursive field result for left: 9
14:57:32.222 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for left: 0
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for right: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] Recursive field result for right: 9
14:57:32.222 [debug] do_fold called with non-variant data: 9
14:57:32.222 [debug] do_fold called with non-variant data: 9
14:57:32.222 [debug] Recursive field result for left: 26
14:57:32.222 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.222 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for left: 0
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for right: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.222 [debug] Recursive field result for left: 9
14:57:32.222 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for left: 0
14:57:32.222 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.222 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.222 [debug] Recursive field result for right: 0
14:57:32.222 [debug] do_fold called with non-variant data: 0
14:57:32.223 [debug] do_fold called with non-variant data: 0
14:57:32.223 [debug] Recursive field result for right: 9
14:57:32.223 [debug] do_fold called with non-variant data: 9
14:57:32.223 [debug] do_fold called with non-variant data: 9
14:57:32.223 [debug] Recursive field result for right: 26
14:57:32.223 [debug] do_fold called with non-variant data: 26
14:57:32.223 [debug] do_fold called with non-variant data: 26
14:57:32.223 [debug] Recursive field result for right: 59
14:57:32.223 [debug] do_fold called with non-variant data: 59
14:57:32.223 [debug] do_fold called with non-variant data: 59
14:57:32.223 [debug] Recursive field result for left: 124
14:57:32.223 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.223 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.223 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.223 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.223 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.223 [debug] Recursive field result for left: 0
14:57:32.223 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.223 [debug] Recursive field result for right: 0
14:57:32.223 [debug] do_fold called with non-variant data: 0
14:57:32.223 [debug] do_fold called with non-variant data: 0
14:57:32.223 [debug] Recursive field result for left: 9
14:57:32.223 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.223 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.223 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for left: 0
14:57:32.226 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for right: 0
14:57:32.226 [debug] do_fold called with non-variant data: 0
14:57:32.226 [debug] do_fold called with non-variant data: 0
14:57:32.226 [debug] Recursive field result for right: 9
14:57:32.226 [debug] do_fold called with non-variant data: 9
14:57:32.226 [debug] do_fold called with non-variant data: 9
14:57:32.226 [debug] Recursive field result for left: 26
14:57:32.226 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.226 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.226 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for left: 0
14:57:32.226 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for right: 0
14:57:32.226 [debug] do_fold called with non-variant data: 0
14:57:32.226 [debug] do_fold called with non-variant data: 0
14:57:32.226 [debug] Recursive field result for left: 9
14:57:32.226 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.226 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for left: 0
14:57:32.226 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for right: 0
14:57:32.226 [debug] do_fold called with non-variant data: 0
14:57:32.226 [debug] do_fold called with non-variant data: 0
14:57:32.226 [debug] Recursive field result for right: 9
14:57:32.226 [debug] do_fold called with non-variant data: 9
14:57:32.226 [debug] do_fold called with non-variant data: 9
14:57:32.226 [debug] Recursive field result for right: 26
14:57:32.226 [debug] do_fold called with non-variant data: 26
14:57:32.226 [debug] do_fold called with non-variant data: 26
14:57:32.226 [debug] Recursive field result for left: 59
14:57:32.226 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.226 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.226 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.226 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for left: 0
14:57:32.226 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.226 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.226 [debug] Recursive field result for right: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] Recursive field result for left: 9
14:57:32.227 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.227 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.227 [debug] Recursive field result for left: 0
14:57:32.227 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.227 [debug] Recursive field result for right: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] Recursive field result for right: 9
14:57:32.227 [debug] do_fold called with non-variant data: 9
14:57:32.227 [debug] do_fold called with non-variant data: 9
14:57:32.227 [debug] Recursive field result for left: 26
14:57:32.227 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.227 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.227 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.227 [debug] Recursive field result for left: 0
14:57:32.227 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.227 [debug] Recursive field result for right: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] Recursive field result for left: 9
14:57:32.227 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.227 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.227 [debug] Recursive field result for left: 0
14:57:32.227 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.227 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.227 [debug] Recursive field result for right: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] do_fold called with non-variant data: 0
14:57:32.227 [debug] Recursive field result for right: 9
14:57:32.227 [debug] do_fold called with non-variant data: 9
14:57:32.227 [debug] do_fold called with non-variant data: 9
14:57:32.227 [debug] Recursive field result for right: 26
14:57:32.227 [debug] do_fold called with non-variant data: 26
14:57:32.227 [debug] do_fold called with non-variant data: 26
14:57:32.227 [debug] Recursive field result for right: 59
14:57:32.227 [debug] do_fold called with non-variant data: 59
14:57:32.227 [debug] do_fold called with non-variant data: 59
14:57:32.227 [debug] Recursive field result for right: 124
14:57:32.227 [debug] do_fold called with non-variant data: 124
14:57:32.227 [debug] do_fold called with non-variant data: 124
14:57:32.227 [debug] Recursive field result for right: 253
14:57:32.227 [debug] do_fold called with non-variant data: 253
14:57:32.227 [debug] do_fold called with non-variant data: 253
14:57:32.227 [debug] Recursive field result for right: 510
14:57:32.227 [debug] do_fold called with non-variant data: 510
14:57:32.227 [debug] do_fold called with non-variant data: 510
14:57:32.227 [debug] Recursive field result for left: 1023
14:57:32.228 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}, variant_type: :node, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, val: 3, variant: :node}
14:57:32.229 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.229 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.229 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.229 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.229 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.229 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.229 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.229 [debug] Recursive field result for left: 0
14:57:32.229 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.229 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.229 [debug] Recursive field result for right: 0
14:57:32.229 [debug] do_fold called with non-variant data: 0
14:57:32.229 [debug] do_fold called with non-variant data: 0
14:57:32.229 [debug] Recursive field result for left: 9
14:57:32.230 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.230 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.230 [debug] Recursive field result for left: 0
14:57:32.230 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.230 [debug] Recursive field result for right: 0
14:57:32.230 [debug] do_fold called with non-variant data: 0
14:57:32.230 [debug] do_fold called with non-variant data: 0
14:57:32.230 [debug] Recursive field result for right: 9
14:57:32.230 [debug] do_fold called with non-variant data: 9
14:57:32.230 [debug] do_fold called with non-variant data: 9
14:57:32.230 [debug] Recursive field result for left: 26
14:57:32.230 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.230 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.230 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.230 [debug] Recursive field result for left: 0
14:57:32.230 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.230 [debug] Recursive field result for right: 0
14:57:32.230 [debug] do_fold called with non-variant data: 0
14:57:32.230 [debug] do_fold called with non-variant data: 0
14:57:32.230 [debug] Recursive field result for left: 9
14:57:32.230 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.230 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.230 [debug] Recursive field result for left: 0
14:57:32.230 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.230 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.230 [debug] Recursive field result for right: 0
14:57:32.230 [debug] do_fold called with non-variant data: 0
14:57:32.237 [debug] do_fold called with non-variant data: 0
14:57:32.237 [debug] Recursive field result for right: 9
14:57:32.237 [debug] do_fold called with non-variant data: 9
14:57:32.237 [debug] do_fold called with non-variant data: 9
14:57:32.237 [debug] Recursive field result for right: 26
14:57:32.237 [debug] do_fold called with non-variant data: 26
14:57:32.237 [debug] do_fold called with non-variant data: 26
14:57:32.237 [debug] Recursive field result for left: 59
14:57:32.238 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.238 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.238 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for left: 0
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for right: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] Recursive field result for left: 9
14:57:32.238 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for left: 0
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for right: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] Recursive field result for right: 9
14:57:32.238 [debug] do_fold called with non-variant data: 9
14:57:32.238 [debug] do_fold called with non-variant data: 9
14:57:32.238 [debug] Recursive field result for left: 26
14:57:32.238 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.238 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for left: 0
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for right: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] Recursive field result for left: 9
14:57:32.238 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for left: 0
14:57:32.238 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.238 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.238 [debug] Recursive field result for right: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] do_fold called with non-variant data: 0
14:57:32.238 [debug] Recursive field result for right: 9
14:57:32.238 [debug] do_fold called with non-variant data: 9
14:57:32.238 [debug] do_fold called with non-variant data: 9
14:57:32.238 [debug] Recursive field result for right: 26
14:57:32.238 [debug] do_fold called with non-variant data: 26
14:57:32.238 [debug] do_fold called with non-variant data: 26
14:57:32.239 [debug] Recursive field result for right: 59
14:57:32.239 [debug] do_fold called with non-variant data: 59
14:57:32.239 [debug] do_fold called with non-variant data: 59
14:57:32.239 [debug] Recursive field result for left: 124
14:57:32.239 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.239 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.239 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.239 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.239 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.239 [debug] Recursive field result for left: 0
14:57:32.239 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.239 [debug] Recursive field result for right: 0
14:57:32.239 [debug] do_fold called with non-variant data: 0
14:57:32.239 [debug] do_fold called with non-variant data: 0
14:57:32.239 [debug] Recursive field result for left: 9
14:57:32.239 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.239 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.239 [debug] Recursive field result for left: 0
14:57:32.239 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.239 [debug] Recursive field result for right: 0
14:57:32.239 [debug] do_fold called with non-variant data: 0
14:57:32.239 [debug] do_fold called with non-variant data: 0
14:57:32.239 [debug] Recursive field result for right: 9
14:57:32.239 [debug] do_fold called with non-variant data: 9
14:57:32.239 [debug] do_fold called with non-variant data: 9
14:57:32.239 [debug] Recursive field result for left: 26
14:57:32.239 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.239 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.239 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.239 [debug] Recursive field result for left: 0
14:57:32.239 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.239 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.239 [debug] Recursive field result for right: 0
14:57:32.239 [debug] do_fold called with non-variant data: 0
14:57:32.239 [debug] do_fold called with non-variant data: 0
14:57:32.239 [debug] Recursive field result for left: 9
14:57:32.240 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.240 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.240 [debug] Recursive field result for left: 0
14:57:32.240 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.240 [debug] Recursive field result for right: 0
14:57:32.240 [debug] do_fold called with non-variant data: 0
14:57:32.240 [debug] do_fold called with non-variant data: 0
14:57:32.240 [debug] Recursive field result for right: 9
14:57:32.240 [debug] do_fold called with non-variant data: 9
14:57:32.240 [debug] do_fold called with non-variant data: 9
14:57:32.240 [debug] Recursive field result for right: 26
14:57:32.240 [debug] do_fold called with non-variant data: 26
14:57:32.240 [debug] do_fold called with non-variant data: 26
14:57:32.240 [debug] Recursive field result for left: 59
14:57:32.240 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.240 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.240 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.240 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.240 [debug] Recursive field result for left: 0
14:57:32.240 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.240 [debug] Recursive field result for right: 0
14:57:32.240 [debug] do_fold called with non-variant data: 0
14:57:32.240 [debug] do_fold called with non-variant data: 0
14:57:32.240 [debug] Recursive field result for left: 9
14:57:32.240 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.240 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.240 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.240 [debug] Recursive field result for left: 0
14:57:32.241 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.241 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.241 [debug] Recursive field result for right: 0
14:57:32.241 [debug] do_fold called with non-variant data: 0
14:57:32.241 [debug] do_fold called with non-variant data: 0
14:57:32.241 [debug] Recursive field result for right: 9
14:57:32.241 [debug] do_fold called with non-variant data: 9
14:57:32.241 [debug] do_fold called with non-variant data: 9
14:57:32.241 [debug] Recursive field result for left: 26
14:57:32.241 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.241 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.241 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.241 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.241 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.241 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.241 [debug] Recursive field result for left: 0
14:57:32.241 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.242 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.242 [debug] Recursive field result for right: 0
14:57:32.242 [debug] do_fold called with non-variant data: 0
14:57:32.242 [debug] do_fold called with non-variant data: 0
14:57:32.242 [debug] Recursive field result for left: 9
14:57:32.242 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.243 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.243 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.243 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.243 [debug] Recursive field result for left: 0
14:57:32.243 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.243 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.243 [debug] Recursive field result for right: 0
14:57:32.243 [debug] do_fold called with non-variant data: 0
14:57:32.243 [debug] do_fold called with non-variant data: 0
14:57:32.243 [debug] Recursive field result for right: 9
14:57:32.243 [debug] do_fold called with non-variant data: 9
14:57:32.243 [debug] do_fold called with non-variant data: 9
14:57:32.243 [debug] Recursive field result for right: 26
14:57:32.243 [debug] do_fold called with non-variant data: 26
14:57:32.243 [debug] do_fold called with non-variant data: 26
14:57:32.243 [debug] Recursive field result for right: 59
14:57:32.243 [debug] do_fold called with non-variant data: 59
14:57:32.243 [debug] do_fold called with non-variant data: 59
14:57:32.243 [debug] Recursive field result for right: 124
14:57:32.243 [debug] do_fold called with non-variant data: 124
14:57:32.243 [debug] do_fold called with non-variant data: 124
14:57:32.243 [debug] Recursive field result for left: 253
14:57:32.243 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.243 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.243 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.243 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.243 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.244 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.244 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for left: 0
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for right: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] Recursive field result for left: 9
14:57:32.244 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for left: 0
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for right: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] Recursive field result for right: 9
14:57:32.244 [debug] do_fold called with non-variant data: 9
14:57:32.244 [debug] do_fold called with non-variant data: 9
14:57:32.244 [debug] Recursive field result for left: 26
14:57:32.244 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.244 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for left: 0
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for right: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] Recursive field result for left: 9
14:57:32.244 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for left: 0
14:57:32.244 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.244 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.244 [debug] Recursive field result for right: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] do_fold called with non-variant data: 0
14:57:32.244 [debug] Recursive field result for right: 9
14:57:32.246 [debug] do_fold called with non-variant data: 9
14:57:32.246 [debug] do_fold called with non-variant data: 9
14:57:32.246 [debug] Recursive field result for right: 26
14:57:32.246 [debug] do_fold called with non-variant data: 26
14:57:32.246 [debug] do_fold called with non-variant data: 26
14:57:32.246 [debug] Recursive field result for left: 59
14:57:32.246 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.246 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.246 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.246 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.246 [debug] Recursive field result for left: 0
14:57:32.246 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.246 [debug] Recursive field result for right: 0
14:57:32.246 [debug] do_fold called with non-variant data: 0
14:57:32.246 [debug] do_fold called with non-variant data: 0
14:57:32.246 [debug] Recursive field result for left: 9
14:57:32.246 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.246 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.246 [debug] Recursive field result for left: 0
14:57:32.246 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.246 [debug] Recursive field result for right: 0
14:57:32.246 [debug] do_fold called with non-variant data: 0
14:57:32.246 [debug] do_fold called with non-variant data: 0
14:57:32.246 [debug] Recursive field result for right: 9
14:57:32.246 [debug] do_fold called with non-variant data: 9
14:57:32.246 [debug] do_fold called with non-variant data: 9
14:57:32.246 [debug] Recursive field result for left: 26
14:57:32.246 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.246 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.246 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.246 [debug] Recursive field result for left: 0
14:57:32.246 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.246 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.246 [debug] Recursive field result for right: 0
14:57:32.246 [debug] do_fold called with non-variant data: 0
14:57:32.246 [debug] do_fold called with non-variant data: 0
14:57:32.246 [debug] Recursive field result for left: 9
14:57:32.246 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.247 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.247 [debug] Recursive field result for left: 0
14:57:32.247 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.247 [debug] Recursive field result for right: 0
14:57:32.247 [debug] do_fold called with non-variant data: 0
14:57:32.247 [debug] do_fold called with non-variant data: 0
14:57:32.247 [debug] Recursive field result for right: 9
14:57:32.247 [debug] do_fold called with non-variant data: 9
14:57:32.247 [debug] do_fold called with non-variant data: 9
14:57:32.247 [debug] Recursive field result for right: 26
14:57:32.247 [debug] do_fold called with non-variant data: 26
14:57:32.247 [debug] do_fold called with non-variant data: 26
14:57:32.247 [debug] Recursive field result for right: 59
14:57:32.247 [debug] do_fold called with non-variant data: 59
14:57:32.247 [debug] do_fold called with non-variant data: 59
14:57:32.247 [debug] Recursive field result for left: 124
14:57:32.247 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.247 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.247 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.247 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.247 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.247 [debug] Recursive field result for left: 0
14:57:32.247 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.247 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.248 [debug] Recursive field result for right: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.248 [debug] Recursive field result for left: 9
14:57:32.248 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.248 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.248 [debug] Recursive field result for left: 0
14:57:32.248 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.248 [debug] Recursive field result for right: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.248 [debug] Recursive field result for right: 9
14:57:32.248 [debug] do_fold called with non-variant data: 9
14:57:32.248 [debug] do_fold called with non-variant data: 9
14:57:32.248 [debug] Recursive field result for left: 26
14:57:32.248 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.248 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.248 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.248 [debug] Recursive field result for left: 0
14:57:32.248 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.248 [debug] Recursive field result for right: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.248 [debug] Recursive field result for left: 9
14:57:32.248 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.248 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.248 [debug] Recursive field result for left: 0
14:57:32.248 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.248 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.248 [debug] Recursive field result for right: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.248 [debug] do_fold called with non-variant data: 0
14:57:32.249 [debug] Recursive field result for right: 9
14:57:32.249 [debug] do_fold called with non-variant data: 9
14:57:32.249 [debug] do_fold called with non-variant data: 9
14:57:32.249 [debug] Recursive field result for right: 26
14:57:32.249 [debug] do_fold called with non-variant data: 26
14:57:32.249 [debug] do_fold called with non-variant data: 26
14:57:32.249 [debug] Recursive field result for left: 59
14:57:32.250 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.250 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.250 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.250 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.250 [debug] Recursive field result for left: 0
14:57:32.250 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.250 [debug] Recursive field result for right: 0
14:57:32.250 [debug] do_fold called with non-variant data: 0
14:57:32.250 [debug] do_fold called with non-variant data: 0
14:57:32.250 [debug] Recursive field result for left: 9
14:57:32.250 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.250 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.250 [debug] Recursive field result for left: 0
14:57:32.250 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.250 [debug] Recursive field result for right: 0
14:57:32.250 [debug] do_fold called with non-variant data: 0
14:57:32.250 [debug] do_fold called with non-variant data: 0
14:57:32.250 [debug] Recursive field result for right: 9
14:57:32.250 [debug] do_fold called with non-variant data: 9
14:57:32.250 [debug] do_fold called with non-variant data: 9
14:57:32.250 [debug] Recursive field result for left: 26
14:57:32.250 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.250 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.250 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.250 [debug] Recursive field result for left: 0
14:57:32.250 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.250 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.250 [debug] Recursive field result for right: 0
14:57:32.250 [debug] do_fold called with non-variant data: 0
14:57:32.250 [debug] do_fold called with non-variant data: 0
14:57:32.250 [debug] Recursive field result for left: 9
14:57:32.251 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.251 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.251 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.251 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.251 [debug] Recursive field result for left: 0
14:57:32.251 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.251 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.251 [debug] Recursive field result for right: 0
14:57:32.251 [debug] do_fold called with non-variant data: 0
14:57:32.251 [debug] do_fold called with non-variant data: 0
14:57:32.251 [debug] Recursive field result for right: 9
14:57:32.251 [debug] do_fold called with non-variant data: 9
14:57:32.251 [debug] do_fold called with non-variant data: 9
14:57:32.251 [debug] Recursive field result for right: 26
14:57:32.251 [debug] do_fold called with non-variant data: 26
14:57:32.251 [debug] do_fold called with non-variant data: 26
14:57:32.251 [debug] Recursive field result for right: 59
14:57:32.251 [debug] do_fold called with non-variant data: 59
14:57:32.251 [debug] do_fold called with non-variant data: 59
14:57:32.251 [debug] Recursive field result for right: 124
14:57:32.251 [debug] do_fold called with non-variant data: 124
14:57:32.251 [debug] do_fold called with non-variant data: 124
14:57:32.251 [debug] Recursive field result for right: 253
14:57:32.251 [debug] do_fold called with non-variant data: 253
14:57:32.251 [debug] do_fold called with non-variant data: 253
14:57:32.251 [debug] Recursive field result for left: 510
14:57:32.252 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}, variant_type: :node, state: nil
14:57:32.252 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, right: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, val: 4, variant: :node}
14:57:32.253 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.253 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.253 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.253 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.253 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.253 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.253 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.253 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.253 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.253 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for left: 0
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for right: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] Recursive field result for left: 9
14:57:32.254 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for left: 0
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for right: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] Recursive field result for right: 9
14:57:32.254 [debug] do_fold called with non-variant data: 9
14:57:32.254 [debug] do_fold called with non-variant data: 9
14:57:32.254 [debug] Recursive field result for left: 26
14:57:32.254 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for left: 0
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for right: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] Recursive field result for left: 9
14:57:32.254 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for left: 0
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for right: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] Recursive field result for right: 9
14:57:32.254 [debug] do_fold called with non-variant data: 9
14:57:32.254 [debug] do_fold called with non-variant data: 9
14:57:32.254 [debug] Recursive field result for right: 26
14:57:32.254 [debug] do_fold called with non-variant data: 26
14:57:32.254 [debug] do_fold called with non-variant data: 26
14:57:32.254 [debug] Recursive field result for left: 59
14:57:32.254 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for left: 0
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for right: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] do_fold called with non-variant data: 0
14:57:32.254 [debug] Recursive field result for left: 9
14:57:32.254 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.254 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.254 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.254 [debug] Recursive field result for left: 0
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for right: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] Recursive field result for right: 9
14:57:32.255 [debug] do_fold called with non-variant data: 9
14:57:32.255 [debug] do_fold called with non-variant data: 9
14:57:32.255 [debug] Recursive field result for left: 26
14:57:32.255 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for left: 0
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for right: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] Recursive field result for left: 9
14:57:32.255 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for left: 0
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for right: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] Recursive field result for right: 9
14:57:32.255 [debug] do_fold called with non-variant data: 9
14:57:32.255 [debug] do_fold called with non-variant data: 9
14:57:32.255 [debug] Recursive field result for right: 26
14:57:32.255 [debug] do_fold called with non-variant data: 26
14:57:32.255 [debug] do_fold called with non-variant data: 26
14:57:32.255 [debug] Recursive field result for right: 59
14:57:32.255 [debug] do_fold called with non-variant data: 59
14:57:32.255 [debug] do_fold called with non-variant data: 59
14:57:32.255 [debug] Recursive field result for left: 124
14:57:32.255 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for left: 0
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for right: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] do_fold called with non-variant data: 0
14:57:32.255 [debug] Recursive field result for left: 9
14:57:32.255 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.255 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.255 [debug] Recursive field result for left: 0
14:57:32.255 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.258 [debug] Recursive field result for right: 0
14:57:32.258 [debug] do_fold called with non-variant data: 0
14:57:32.258 [debug] do_fold called with non-variant data: 0
14:57:32.258 [debug] Recursive field result for right: 9
14:57:32.258 [debug] do_fold called with non-variant data: 9
14:57:32.258 [debug] do_fold called with non-variant data: 9
14:57:32.258 [debug] Recursive field result for left: 26
14:57:32.258 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.258 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.258 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.258 [debug] Recursive field result for left: 0
14:57:32.258 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.258 [debug] Recursive field result for right: 0
14:57:32.258 [debug] do_fold called with non-variant data: 0
14:57:32.258 [debug] do_fold called with non-variant data: 0
14:57:32.258 [debug] Recursive field result for left: 9
14:57:32.258 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.258 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.258 [debug] Recursive field result for left: 0
14:57:32.258 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.258 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.258 [debug] Recursive field result for right: 0
14:57:32.258 [debug] do_fold called with non-variant data: 0
14:57:32.258 [debug] do_fold called with non-variant data: 0
14:57:32.258 [debug] Recursive field result for right: 9
14:57:32.258 [debug] do_fold called with non-variant data: 9
14:57:32.258 [debug] do_fold called with non-variant data: 9
14:57:32.258 [debug] Recursive field result for right: 26
14:57:32.258 [debug] do_fold called with non-variant data: 26
14:57:32.258 [debug] do_fold called with non-variant data: 26
14:57:32.258 [debug] Recursive field result for left: 59
14:57:32.258 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.259 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.259 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.259 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.259 [debug] Recursive field result for left: 0
14:57:32.259 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.259 [debug] Recursive field result for right: 0
14:57:32.259 [debug] do_fold called with non-variant data: 0
14:57:32.259 [debug] do_fold called with non-variant data: 0
14:57:32.259 [debug] Recursive field result for left: 9
14:57:32.259 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.259 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.259 [debug] Recursive field result for left: 0
14:57:32.259 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.259 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.259 [debug] Recursive field result for right: 0
14:57:32.259 [debug] do_fold called with non-variant data: 0
14:57:32.259 [debug] do_fold called with non-variant data: 0
14:57:32.259 [debug] Recursive field result for right: 9
14:57:32.259 [debug] do_fold called with non-variant data: 9
14:57:32.259 [debug] do_fold called with non-variant data: 9
14:57:32.259 [debug] Recursive field result for left: 26
14:57:32.259 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.260 [debug] Recursive field result for left: 0
14:57:32.260 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.260 [debug] Recursive field result for right: 0
14:57:32.260 [debug] do_fold called with non-variant data: 0
14:57:32.260 [debug] do_fold called with non-variant data: 0
14:57:32.260 [debug] Recursive field result for left: 9
14:57:32.260 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.260 [debug] Recursive field result for left: 0
14:57:32.260 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.260 [debug] Recursive field result for right: 0
14:57:32.260 [debug] do_fold called with non-variant data: 0
14:57:32.260 [debug] do_fold called with non-variant data: 0
14:57:32.260 [debug] Recursive field result for right: 9
14:57:32.260 [debug] do_fold called with non-variant data: 9
14:57:32.260 [debug] do_fold called with non-variant data: 9
14:57:32.260 [debug] Recursive field result for right: 26
14:57:32.260 [debug] do_fold called with non-variant data: 26
14:57:32.260 [debug] do_fold called with non-variant data: 26
14:57:32.260 [debug] Recursive field result for right: 59
14:57:32.260 [debug] do_fold called with non-variant data: 59
14:57:32.260 [debug] do_fold called with non-variant data: 59
14:57:32.260 [debug] Recursive field result for right: 124
14:57:32.260 [debug] do_fold called with non-variant data: 124
14:57:32.260 [debug] do_fold called with non-variant data: 124
14:57:32.260 [debug] Recursive field result for left: 253
14:57:32.260 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, right: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, val: 5, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.260 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.260 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for left: 0
14:57:32.261 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for right: 0
14:57:32.261 [debug] do_fold called with non-variant data: 0
14:57:32.261 [debug] do_fold called with non-variant data: 0
14:57:32.261 [debug] Recursive field result for left: 9
14:57:32.261 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.261 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for left: 0
14:57:32.261 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for right: 0
14:57:32.261 [debug] do_fold called with non-variant data: 0
14:57:32.261 [debug] do_fold called with non-variant data: 0
14:57:32.261 [debug] Recursive field result for right: 9
14:57:32.261 [debug] do_fold called with non-variant data: 9
14:57:32.261 [debug] do_fold called with non-variant data: 9
14:57:32.261 [debug] Recursive field result for left: 26
14:57:32.261 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.261 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.261 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for left: 0
14:57:32.261 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for right: 0
14:57:32.261 [debug] do_fold called with non-variant data: 0
14:57:32.261 [debug] do_fold called with non-variant data: 0
14:57:32.261 [debug] Recursive field result for left: 9
14:57:32.261 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.261 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for left: 0
14:57:32.261 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.261 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.261 [debug] Recursive field result for right: 0
14:57:32.261 [debug] do_fold called with non-variant data: 0
14:57:32.263 [debug] do_fold called with non-variant data: 0
14:57:32.263 [debug] Recursive field result for right: 9
14:57:32.263 [debug] do_fold called with non-variant data: 9
14:57:32.263 [debug] do_fold called with non-variant data: 9
14:57:32.263 [debug] Recursive field result for right: 26
14:57:32.263 [debug] do_fold called with non-variant data: 26
14:57:32.263 [debug] do_fold called with non-variant data: 26
14:57:32.263 [debug] Recursive field result for left: 59
14:57:32.263 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.263 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.263 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.263 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.263 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.263 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.263 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.263 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for left: 0
14:57:32.264 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for right: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] Recursive field result for left: 9
14:57:32.264 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.264 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for left: 0
14:57:32.264 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for right: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] Recursive field result for right: 9
14:57:32.264 [debug] do_fold called with non-variant data: 9
14:57:32.264 [debug] do_fold called with non-variant data: 9
14:57:32.264 [debug] Recursive field result for left: 26
14:57:32.264 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.264 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.264 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for left: 0
14:57:32.264 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for right: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] Recursive field result for left: 9
14:57:32.264 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.264 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for left: 0
14:57:32.264 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.264 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.264 [debug] Recursive field result for right: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] do_fold called with non-variant data: 0
14:57:32.264 [debug] Recursive field result for right: 9
14:57:32.264 [debug] do_fold called with non-variant data: 9
14:57:32.264 [debug] do_fold called with non-variant data: 9
14:57:32.264 [debug] Recursive field result for right: 26
14:57:32.264 [debug] do_fold called with non-variant data: 26
14:57:32.264 [debug] do_fold called with non-variant data: 26
14:57:32.264 [debug] Recursive field result for right: 59
14:57:32.264 [debug] do_fold called with non-variant data: 59
14:57:32.264 [debug] do_fold called with non-variant data: 59
14:57:32.264 [debug] Recursive field result for left: 124
14:57:32.265 [debug] do_fold called with data: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, right: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, val: 6, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.265 [debug] Recursive field result for left: 0
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.265 [debug] Recursive field result for right: 0
14:57:32.265 [debug] do_fold called with non-variant data: 0
14:57:32.265 [debug] do_fold called with non-variant data: 0
14:57:32.265 [debug] Recursive field result for left: 9
14:57:32.265 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.265 [debug] Recursive field result for left: 0
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.265 [debug] Recursive field result for right: 0
14:57:32.265 [debug] do_fold called with non-variant data: 0
14:57:32.265 [debug] do_fold called with non-variant data: 0
14:57:32.265 [debug] Recursive field result for right: 9
14:57:32.265 [debug] do_fold called with non-variant data: 9
14:57:32.265 [debug] do_fold called with non-variant data: 9
14:57:32.265 [debug] Recursive field result for left: 26
14:57:32.265 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.265 [debug] Recursive field result for left: 0
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.265 [debug] Recursive field result for right: 0
14:57:32.265 [debug] do_fold called with non-variant data: 0
14:57:32.265 [debug] do_fold called with non-variant data: 0
14:57:32.265 [debug] Recursive field result for left: 9
14:57:32.265 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.265 [debug] Recursive field result for left: 0
14:57:32.265 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.265 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for right: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] Recursive field result for right: 9
14:57:32.266 [debug] do_fold called with non-variant data: 9
14:57:32.266 [debug] do_fold called with non-variant data: 9
14:57:32.266 [debug] Recursive field result for right: 26
14:57:32.266 [debug] do_fold called with non-variant data: 26
14:57:32.266 [debug] do_fold called with non-variant data: 26
14:57:32.266 [debug] Recursive field result for left: 59
14:57:32.266 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}, variant_type: :node, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, val: 7, variant: :node}
14:57:32.266 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.266 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for left: 0
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for right: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] Recursive field result for left: 9
14:57:32.266 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for left: 0
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for right: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] Recursive field result for right: 9
14:57:32.266 [debug] do_fold called with non-variant data: 9
14:57:32.266 [debug] do_fold called with non-variant data: 9
14:57:32.266 [debug] Recursive field result for left: 26
14:57:32.266 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}, variant_type: :node, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, val: 8, variant: :node}
14:57:32.266 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for left: 0
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for right: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] Recursive field result for left: 9
14:57:32.266 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}, variant_type: :node, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 9, variant: :node}
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for left: 0
14:57:32.266 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
14:57:32.266 [debug] Processing recursive fields of: %{variant: :leaf}
14:57:32.266 [debug] Recursive field result for right: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] do_fold called with non-variant data: 0
14:57:32.266 [debug] Recursive field result for right: 9
14:57:32.266 [debug] do_fold called with non-variant data: 9
14:57:32.266 [debug] do_fold called with non-variant data: 9
14:57:32.266 [debug] Recursive field result for right: 26
14:57:32.266 [debug] do_fold called with non-variant data: 26
14:57:32.266 [debug] do_fold called with non-variant data: 26
14:57:32.266 [debug] Recursive field result for right: 59
14:57:32.266 [debug] do_fold called with non-variant data: 59
14:57:32.266 [debug] do_fold called with non-variant data: 59
14:57:32.266 [debug] Recursive field result for right: 124
14:57:32.266 [debug] do_fold called with non-variant data: 124
14:57:32.266 [debug] do_fold called with non-variant data: 124
14:57:32.266 [debug] Recursive field result for right: 253
14:57:32.266 [debug] do_fold called with non-variant data: 253
14:57:32.266 [debug] do_fold called with non-variant data: 253
14:57:32.266 [debug] Recursive field result for right: 510
14:57:32.266 [debug] do_fold called with non-variant data: 510
14:57:32.266 [debug] do_fold called with non-variant data: 510
14:57:32.266 [debug] Recursive field result for right: 1023
14:57:32.266 [debug] do_fold called with non-variant data: 1023
14:57:32.266 [debug] do_fold called with non-variant data: 1023
14:57:32.266 [debug] Recursive field result for right: 2048
14:57:32.266 [debug] do_fold called with non-variant data: 2048
14:57:32.266 [debug] do_fold called with non-variant data: 2048
14:57:32.266 [debug] Recursive field result for right: 4097
14:57:32.266 [debug] do_fold called with non-variant data: 4097
14:57:32.266 [debug] do_fold called with non-variant data: 4097
.14:57:32.268 [debug] Bend initial value: 1
14:57:32.268 [debug] Executing bend with initial: 1
14:57:32.268 [debug] Executing fun with value: 1
14:57:32.268 [debug] Evaluating bend block with value: 1
14:57:32.269 [debug] Block returned: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
14:57:32.269 [debug] Fun returned result: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
14:57:32.270 [debug] Processing constructed value: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
14:57:32.270 [debug] do_bend final result: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
14:57:32.270 [debug] Final bend result: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
14:57:32.270 [debug] do_fold called with data: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}, variant_type: :vertex, state: nil
14:57:32.270 [debug] Processing recursive fields of: %{edges: %{to_id: 2, variant: :edge, weight: 2}, id: 1, value: 10, variant: :vertex}
14:57:32.270 [debug] do_fold called with data: %{to_id: 2, variant: :edge, weight: 2}, variant_type: :edge, state: nil
14:57:32.270 [debug] Processing recursive fields of: %{to_id: 2, variant: :edge, weight: 2}
14:57:32.270 [debug] Recursive field result for edges: 2
14:57:32.270 [debug] do_fold called with non-variant data: 2
12
%{
  edges: %{to_id: 2, variant: :edge, weight: 2},
  id: 1,
  value: 10,
  variant: :vertex
}
.========
%{
  edges: %{to_id: 2, variant: :edge, weight: 5},
  id: 1,
  value: 10,
  variant: :vertex
}
========
14:57:32.270 [debug] do_fold called with data: %{edges: %{to_id: 2, variant: :edge, weight: 5}, id: 1, value: 10, variant: :vertex}, variant_type: :vertex, state: nil
14:57:32.270 [debug] Processing recursive fields of: %{edges: %{to_id: 2, variant: :edge, weight: 5}, id: 1, value: 10, variant: :vertex}
14:57:32.270 [debug] do_fold called with data: %{to_id: 2, variant: :edge, weight: 5}, variant_type: :edge, state: nil
14:57:32.270 [debug] Processing recursive fields of: %{to_id: 2, variant: :edge, weight: 5}
14:57:32.270 [debug] Recursive field result for edges: 5
14:57:32.270 [debug] do_fold called with non-variant data: 5
.
Finished in 5.7 seconds (5.0s async, 0.6s sync)
42 tests, 0 failures, 9 excluded

Randomized with seed 456681

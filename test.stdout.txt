==> gen_stage
Compiling 10 files (.ex)
Generated gen_stage app
===> Analyzing applications...
===> Compiling poolboy
==> nimble_options
Compiling 3 files (.ex)
Generated nimble_options app
===> Analyzing applications...
===> Compiling telemetry
==> broadway
Compiling 17 files (.ex)
Generated broadway app
==> flow
Compiling 9 files (.ex)
Generated flow app
==> memento
Compiling 13 files (.ex)
Generated memento app
==> uuid
Compiling 1 file (.ex)
warning: use Bitwise is deprecated. import Bitwise instead
  lib/uuid.ex:2: UUID

warning: :crypto.hash/2 defined in application :crypto is used by the current application but the current application does not depend on :crypto. To fix this, you must do one of:

  1. If :crypto is part of Erlang/Elixir, you must include it under :extra_applications inside "def application" in your mix.exs

  2. If :crypto is a dependency, make sure it is listed under "def deps" in your mix.exs

  3. In case you don't want to add a requirement to :crypto, you may optionally skip this warning by adding [xref: [exclude: [:crypto]]] to your "def project" in mix.exs

Invalid call found at 2 locations:
  lib/uuid.ex:498: UUID.namebased_uuid/2
  lib/uuid.ex:502: UUID.namebased_uuid/2

warning: :crypto.strong_rand_bytes/1 defined in application :crypto is used by the current application but the current application does not depend on :crypto. To fix this, you must do one of:

  1. If :crypto is part of Erlang/Elixir, you must include it under :extra_applications inside "def application" in your mix.exs

  2. If :crypto is a dependency, make sure it is listed under "def deps" in your mix.exs

  3. In case you don't want to add a requirement to :crypto, you may optionally skip this warning by adding [xref: [exclude: [:crypto]]] to your "def project" in mix.exs

Invalid call found at 3 locations:
  lib/uuid.ex:340: UUID.uuid4/1
  lib/uuid.ex:469: UUID.uuid1_clockseq/0
  lib/uuid.ex:492: UUID.uuid1_node/1

Generated uuid app
==> bendscript
Compiling 27 files (.ex)
warning: variable "name" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/kernel_shtf/gov.ex:17: KernelShtf.Gov.fabric/2

warning: variable "where_clause" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/bridge_imo/cypher/cypher_executer.ex:84: CypherExecutor.handle_parsed_command/6

warning: variable "var" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/bridge_imo/cypher/cypher_executer.ex:117: CypherExecutor.parse_create_and_return/1

warning: variable "var" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/bridge_imo/cypher/cypher_executer.ex:129: CypherExecutor.parse_match_and_return/1

warning: clauses with the same name and arity (number of arguments) should be grouped together, "defp generate_fold_cases/2" was previously defined (lib/kernel_shtf/ben_ben.ex:140)
  lib/kernel_shtf/ben_ben.ex:177

warning: variable "other" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/kernel_shtf/ben_ben.ex:393: KernelShtf.BenBen.process_constructed/2

warning: function parse_create_and_return/1 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:115

warning: function parse_create_pattern/1 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:226

warning: function parse_match_and_return/1 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:127

warning: function parse_node/2 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:287

warning: function parse_node_match/1 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:318

warning: function parse_node_simple/1 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:100

warning: function parse_pattern/1 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:242

warning: function parse_property/2 is unused
  lib/bridge_imo/cypher/cypher_executer.ex:250

warning: function extract_bindings/1 is unused
  lib/kernel_shtf/ben_ben.ex:256

warning: function generate_pattern_match/1 is unused
  lib/kernel_shtf/ben_ben.ex:231

warning: variable "opts" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abc_law/mecha_cyph.ex:10: MechaCyph.canvas/1

warning: variable "drum" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abc_law/mecha_cyph.ex:92: MechaCyph.handle_state_event/2

warning: variable "event" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abc_law/mecha_cyph.ex:92: MechaCyph.handle_state_event/2

warning: variable "results" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abc_law/mecha_cyph.ex:158: MechaCyph.execute_query/2

warning: variable "opts" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/concrete_irl/graffiti/persistance.ex:64: Graffiti.Persistence.Worker.init/1

warning: variable "tx_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/concrete_irl/graffiti/persistance.ex:76: Graffiti.Persistence.save_vertex/2

warning: variable "tx_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/concrete_irl/graffiti/persistance.ex:86: Graffiti.Persistence.save_edge/2

warning: this clause for generate_fold_cases/2 cannot match because a previous clause at line 140 always matches
  lib/kernel_shtf/ben_ben.ex:177

warning: this clause for generate_fold_cases/2 cannot match because a previous clause at line 140 always matches
  lib/kernel_shtf/ben_ben.ex:181

warning: variable "expression" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/bridge_imo/mecha_cyph/exec_battle.ex:43: BridgeImo.MechaCyph.ExecBattle.return/1


07:20:07.905 [debug] Defining type {:__aliases__, [line: 7], [:Transaction]} with block: {:__block__, [], [{:pending, [line: 9], [{:operations, [line: 9], nil}, {:timestamp, [line: 9], nil}]}, {:committed, [line: 10], [{:changes, [line: 10], nil}, {:timestamp, [line: 10], nil}]}, {:rolled_back, [line: 11], [{:reason, [line: 11], nil}, {:timestamp, [line: 11], nil}]}]}

07:20:07.905 [debug] Defining type {:__aliases__, [line: 7], [:List]} with block: {:__block__, [], [{:cons, [line: 8], [{:head, [line: 8], nil}, {:recu, [line: 8], [{:tail, [line: 8], nil}]}]}, {:null, [line: 9], []}]}

07:20:07.905 [debug] Defining type {:__aliases__, [line: 4], [:Tree]} with block: {:__block__, [], [{:node, [line: 5], [{:value, [line: 5], nil}, {:recu, [line: 5], [{:left, [line: 5], nil}]}, {:recu, [line: 5], [{:right, [line: 5], nil}]}]}, {:leaf, [line: 6], []}]}

07:20:07.913 [debug] Extracted variants: [{:pending, [line: 9], [{:operations, [line: 9], nil}, {:timestamp, [line: 9], nil}]}, {:committed, [line: 10], [{:changes, [line: 10], nil}, {:timestamp, [line: 10], nil}]}, {:rolled_back, [line: 11], [{:reason, [line: 11], nil}, {:timestamp, [line: 11], nil}]}]

07:20:07.905 [debug] Defining type {:__aliases__, [line: 5], [:ProtoObject]} with block: {:__block__, [], [{:object, [line: 7], [{:props, [line: 7], nil}, {:recu, [line: 7], [{:proto, [line: 7], nil}]}]}, {:null, [line: 9], []}]}

07:20:07.905 [debug] Defining type {:__aliases__, [line: 5], [:Graph]} with block: {:__block__, [], [{:graph, [line: 6], [{:vertices, [line: 6], nil}, {:recu, [line: 6], [{:edges, [line: 6], nil}]}]}, {:edge, [line: 7], [{:from, [line: 7], nil}, {:to, [line: 7], nil}]}, {:empty, [line: 8], []}]}

07:20:07.913 [debug] Extracted variants: [{:cons, [line: 8], [{:head, [line: 8], nil}, {:recu, [line: 8], [{:tail, [line: 8], nil}]}]}, {:null, [line: 9], []}]

07:20:07.913 [debug] Extracted variants: [{:node, [line: 5], [{:value, [line: 5], nil}, {:recu, [line: 5], [{:left, [line: 5], nil}]}, {:recu, [line: 5], [{:right, [line: 5], nil}]}]}, {:leaf, [line: 6], []}]

07:20:07.913 [debug] Generating constructors for variants: [{:pending, [line: 9], [{:operations, [line: 9], nil}, {:timestamp, [line: 9], nil}]}, {:committed, [line: 10], [{:changes, [line: 10], nil}, {:timestamp, [line: 10], nil}]}, {:rolled_back, [line: 11], [{:reason, [line: 11], nil}, {:timestamp, [line: 11], nil}]}]

07:20:07.905 [debug] Defining type {:__aliases__, [line: 4], [:Graph]} with block: {:__block__, [], [{:graph, [line: 6], [{:vertex_map, [line: 6], nil}, {:recu, [line: 6], [{:edge_list, [line: 6], nil}]}, {:metadata, [line: 6], nil}]}, {:vertex, [line: 7], [{:vertex_id, [line: 7], nil}, {:properties, [line: 7], nil}, {:recu, [line: 7], [{:adjacency, [line: 7], nil}]}]}, {:edge, [line: 8], [{:source_id, [line: 8], nil}, {:target_id, [line: 8], nil}, {:edge_weight, [line: 8], nil}, {:edge_props, [line: 8], nil}]}, {:empty, [line: 9], []}]}

07:20:07.913 [debug] Processing variant: {:pending, [line: 9], [{:operations, [line: 9], nil}, {:timestamp, [line: 9], nil}]}

07:20:07.913 [debug] Extracted variants: [{:object, [line: 7], [{:props, [line: 7], nil}, {:recu, [line: 7], [{:proto, [line: 7], nil}]}]}, {:null, [line: 9], []}]

07:20:07.913 [debug] Generating constructors for variants: [{:node, [line: 5], [{:value, [line: 5], nil}, {:recu, [line: 5], [{:left, [line: 5], nil}]}, {:recu, [line: 5], [{:right, [line: 5], nil}]}]}, {:leaf, [line: 6], []}]

07:20:07.913 [debug] Constructor: :pending, meta: [line: 9], args: [{:operations, [line: 9], nil}, {:timestamp, [line: 9], nil}]

07:20:07.913 [debug] Extracting constructor args from: [{:operations, [line: 9], nil}, {:timestamp, [line: 9], nil}]

07:20:07.913 [debug] Generating constructors for variants: [{:cons, [line: 8], [{:head, [line: 8], nil}, {:recu, [line: 8], [{:tail, [line: 8], nil}]}]}, {:null, [line: 9], []}]

07:20:07.913 [debug] Processing variant: {:node, [line: 5], [{:value, [line: 5], nil}, {:recu, [line: 5], [{:left, [line: 5], nil}]}, {:recu, [line: 5], [{:right, [line: 5], nil}]}]}

07:20:07.913 [debug] Extracted variants: [{:graph, [line: 6], [{:vertices, [line: 6], nil}, {:recu, [line: 6], [{:edges, [line: 6], nil}]}]}, {:edge, [line: 7], [{:from, [line: 7], nil}, {:to, [line: 7], nil}]}, {:empty, [line: 8], []}]

07:20:07.913 [debug] Found value arg: :operations

07:20:07.913 [debug] Processing variant: {:cons, [line: 8], [{:head, [line: 8], nil}, {:recu, [line: 8], [{:tail, [line: 8], nil}]}]}

07:20:07.913 [debug] Found value arg: :timestamp

07:20:07.913 [debug] Constructor: :node, meta: [line: 5], args: [{:value, [line: 5], nil}, {:recu, [line: 5], [{:left, [line: 5], nil}]}, {:recu, [line: 5], [{:right, [line: 5], nil}]}]

07:20:07.913 [debug] Extracted arg_names: [:operations, :timestamp]

07:20:07.913 [debug] Generating constructors for variants: [{:object, [line: 7], [{:props, [line: 7], nil}, {:recu, [line: 7], [{:proto, [line: 7], nil}]}]}, {:null, [line: 9], []}]

07:20:07.913 [debug] Generating constructors for variants: [{:graph, [line: 6], [{:vertices, [line: 6], nil}, {:recu, [line: 6], [{:edges, [line: 6], nil}]}]}, {:edge, [line: 7], [{:from, [line: 7], nil}, {:to, [line: 7], nil}]}, {:empty, [line: 8], []}]

07:20:07.913 [debug] Extracting constructor args from: [{:value, [line: 5], nil}, {:recu, [line: 5], [{:left, [line: 5], nil}]}, {:recu, [line: 5], [{:right, [line: 5], nil}]}]

07:20:07.913 [debug] Extracted variants: [{:graph, [line: 6], [{:vertex_map, [line: 6], nil}, {:recu, [line: 6], [{:edge_list, [line: 6], nil}]}, {:metadata, [line: 6], nil}]}, {:vertex, [line: 7], [{:vertex_id, [line: 7], nil}, {:properties, [line: 7], nil}, {:recu, [line: 7], [{:adjacency, [line: 7], nil}]}]}, {:edge, [line: 8], [{:source_id, [line: 8], nil}, {:target_id, [line: 8], nil}, {:edge_weight, [line: 8], nil}, {:edge_props, [line: 8], nil}]}, {:empty, [line: 9], []}]

07:20:07.913 [debug] Processing variant: {:object, [line: 7], [{:props, [line: 7], nil}, {:recu, [line: 7], [{:proto, [line: 7], nil}]}]}

07:20:07.913 [debug] Found value arg: :value

07:20:07.913 [debug] Found recursive arg: :left

07:20:07.913 [debug] Processing variant: {:graph, [line: 6], [{:vertices, [line: 6], nil}, {:recu, [line: 6], [{:edges, [line: 6], nil}]}]}

07:20:07.913 [debug] Constructor: :cons, meta: [line: 8], args: [{:head, [line: 8], nil}, {:recu, [line: 8], [{:tail, [line: 8], nil}]}]

07:20:07.913 [debug] Found recursive arg: :right

07:20:07.913 [debug] Extracted arg_names: [:value, :left, :right]

07:20:07.913 [debug] Extracting constructor args from: [{:head, [line: 8], nil}, {:recu, [line: 8], [{:tail, [line: 8], nil}]}]

07:20:07.913 [debug] Generated arg vars: [{:value, [], nil}, {:left, [], nil}, {:right, [], nil}]

07:20:07.913 [debug] Found value arg: :head

07:20:07.913 [debug] Constructor: :graph, meta: [line: 6], args: [{:vertices, [line: 6], nil}, {:recu, [line: 6], [{:edges, [line: 6], nil}]}]

07:20:07.913 [debug] Constructor: :object, meta: [line: 7], args: [{:props, [line: 7], nil}, {:recu, [line: 7], [{:proto, [line: 7], nil}]}]

07:20:07.913 [debug] Field pairs: [value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]

07:20:07.913 [debug] Found recursive arg: :tail

07:20:07.913 [debug] Processing variant: {:leaf, [line: 6], []}

07:20:07.913 [debug] Extracting constructor args from: [{:props, [line: 7], nil}, {:recu, [line: 7], [{:proto, [line: 7], nil}]}]

07:20:07.913 [debug] Extracted arg_names: [:head, :tail]

07:20:07.913 [debug] Extracting constructor args from: [{:vertices, [line: 6], nil}, {:recu, [line: 6], [{:edges, [line: 6], nil}]}]

07:20:07.913 [debug] Constructor: :leaf, meta: [line: 6], args: []

07:20:07.913 [debug] Generated arg vars: [{:operations, [], nil}, {:timestamp, [], nil}]

07:20:07.913 [debug] Found value arg: :vertices

07:20:07.913 [debug] Generated arg vars: [{:head, [], nil}, {:tail, [], nil}]

07:20:07.913 [debug] Found value arg: :props

07:20:07.913 [debug] Extracting constructor args from: []

07:20:07.913 [debug] Field pairs: [operations: {:operations, [], nil}, timestamp: {:timestamp, [], nil}]

07:20:07.913 [debug] Found recursive arg: :edges

07:20:07.913 [debug] Found recursive arg: :proto

07:20:07.913 [debug] Extracted arg_names: []

07:20:07.913 [debug] Processing variant: {:committed, [line: 10], [{:changes, [line: 10], nil}, {:timestamp, [line: 10], nil}]}

07:20:07.913 [debug] Extracted arg_names: [:props, :proto]

07:20:07.913 [debug] Extracted arg_names: [:vertices, :edges]

07:20:07.913 [debug] Generated arg vars: []

07:20:07.913 [debug] Field pairs: [head: {:head, [], nil}, tail: {:tail, [], nil}]

07:20:07.913 [debug] Generating constructors for variants: [{:graph, [line: 6], [{:vertex_map, [line: 6], nil}, {:recu, [line: 6], [{:edge_list, [line: 6], nil}]}, {:metadata, [line: 6], nil}]}, {:vertex, [line: 7], [{:vertex_id, [line: 7], nil}, {:properties, [line: 7], nil}, {:recu, [line: 7], [{:adjacency, [line: 7], nil}]}]}, {:edge, [line: 8], [{:source_id, [line: 8], nil}, {:target_id, [line: 8], nil}, {:edge_weight, [line: 8], nil}, {:edge_props, [line: 8], nil}]}, {:empty, [line: 9], []}]

07:20:07.913 [debug] Field pairs: []

07:20:07.913 [debug] Constructor: :committed, meta: [line: 10], args: [{:changes, [line: 10], nil}, {:timestamp, [line: 10], nil}]

07:20:07.913 [debug] Generated arg vars: [{:props, [], nil}, {:proto, [], nil}]

07:20:07.913 [debug] Extracting constructor args from: [{:changes, [line: 10], nil}, {:timestamp, [line: 10], nil}]

07:20:07.913 [debug] Found value arg: :changes

07:20:07.913 [debug] Field pairs: [props: {:props, [], nil}, proto: {:proto, [], nil}]

07:20:07.913 [debug] Processing variant: {:null, [line: 9], []}

07:20:07.913 [debug] Found value arg: :timestamp

07:20:07.913 [debug] Constructor: :null, meta: [line: 9], args: []

07:20:07.913 [debug] Extracted arg_names: [:changes, :timestamp]

07:20:07.913 [debug] Extracting constructor args from: []

07:20:07.913 [debug] Generated arg vars: [{:changes, [], nil}, {:timestamp, [], nil}]

07:20:07.913 [debug] Extracted arg_names: []

07:20:07.913 [debug] Processing variant: {:null, [line: 9], []}

07:20:07.913 [debug] Generated arg vars: []

07:20:07.913 [debug] Constructor: :null, meta: [line: 9], args: []

07:20:07.913 [debug] Field pairs: []

07:20:07.913 [debug] Field pairs: [changes: {:changes, [], nil}, timestamp: {:timestamp, [], nil}]

07:20:07.913 [debug] Extracting constructor args from: []

07:20:07.913 [debug] Processing variant: {:rolled_back, [line: 11], [{:reason, [line: 11], nil}, {:timestamp, [line: 11], nil}]}

07:20:07.913 [debug] Extracted arg_names: []

07:20:07.913 [debug] Generated arg vars: []

07:20:07.913 [debug] Field pairs: []

07:20:07.913 [debug] Constructor: :rolled_back, meta: [line: 11], args: [{:reason, [line: 11], nil}, {:timestamp, [line: 11], nil}]

07:20:07.913 [debug] Processing variant: {:graph, [line: 6], [{:vertex_map, [line: 6], nil}, {:recu, [line: 6], [{:edge_list, [line: 6], nil}]}, {:metadata, [line: 6], nil}]}

07:20:07.913 [debug] Generated arg vars: [{:vertices, [], nil}, {:edges, [], nil}]

07:20:07.913 [debug] Extracting constructor args from: [{:reason, [line: 11], nil}, {:timestamp, [line: 11], nil}]

07:20:07.913 [debug] Found value arg: :reason

07:20:07.913 [debug] Found value arg: :timestamp

07:20:07.913 [debug] Extracted arg_names: [:reason, :timestamp]

07:20:07.913 [debug] Generated arg vars: [{:reason, [], nil}, {:timestamp, [], nil}]

07:20:07.913 [debug] Constructor: :graph, meta: [line: 6], args: [{:vertex_map, [line: 6], nil}, {:recu, [line: 6], [{:edge_list, [line: 6], nil}]}, {:metadata, [line: 6], nil}]

07:20:07.913 [debug] Field pairs: [reason: {:reason, [], nil}, timestamp: {:timestamp, [], nil}]

07:20:07.913 [debug] Field pairs: [vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]

07:20:07.913 [debug] Processing variant: {:edge, [line: 7], [{:from, [line: 7], nil}, {:to, [line: 7], nil}]}

07:20:07.913 [debug] Extracting constructor args from: [{:vertex_map, [line: 6], nil}, {:recu, [line: 6], [{:edge_list, [line: 6], nil}]}, {:metadata, [line: 6], nil}]

07:20:07.913 [debug] Found value arg: :vertex_map

07:20:07.913 [debug] Constructor: :edge, meta: [line: 7], args: [{:from, [line: 7], nil}, {:to, [line: 7], nil}]

07:20:07.913 [debug] Found recursive arg: :edge_list

07:20:07.913 [debug] Found value arg: :metadata

07:20:07.913 [debug] Extracting constructor args from: [{:from, [line: 7], nil}, {:to, [line: 7], nil}]

07:20:07.913 [debug] Found value arg: :from

07:20:07.913 [debug] Extracted arg_names: [:vertex_map, :edge_list, :metadata]

07:20:07.914 [debug] Found value arg: :to

07:20:07.914 [debug] Extracted arg_names: [:from, :to]

07:20:07.914 [debug] Generated arg vars: [{:from, [], nil}, {:to, [], nil}]

07:20:07.914 [debug] Generated arg vars: [{:vertex_map, [], nil}, {:edge_list, [], nil}, {:metadata, [], nil}]

07:20:07.914 [debug] Field pairs: [from: {:from, [], nil}, to: {:to, [], nil}]

07:20:07.914 [debug] Processing variant: {:empty, [line: 8], []}

07:20:07.914 [debug] Field pairs: [vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]

07:20:07.914 [debug] Constructor: :empty, meta: [line: 8], args: []

07:20:07.914 [debug] Extracting constructor args from: []

07:20:07.914 [debug] Extracted arg_names: []

07:20:07.914 [debug] Generated arg vars: []

07:20:07.914 [debug] Processing variant: {:vertex, [line: 7], [{:vertex_id, [line: 7], nil}, {:properties, [line: 7], nil}, {:recu, [line: 7], [{:adjacency, [line: 7], nil}]}]}

07:20:07.914 [debug] Field pairs: []

07:20:07.914 [debug] Constructor: :vertex, meta: [line: 7], args: [{:vertex_id, [line: 7], nil}, {:properties, [line: 7], nil}, {:recu, [line: 7], [{:adjacency, [line: 7], nil}]}]

07:20:07.914 [debug] Extracting constructor args from: [{:vertex_id, [line: 7], nil}, {:properties, [line: 7], nil}, {:recu, [line: 7], [{:adjacency, [line: 7], nil}]}]

07:20:07.914 [debug] Found value arg: :vertex_id

07:20:07.914 [debug] Found value arg: :properties

07:20:07.914 [debug] Found recursive arg: :adjacency

07:20:07.914 [debug] Extracted arg_names: [:vertex_id, :properties, :adjacency]

07:20:07.914 [debug] Generated arg vars: [{:vertex_id, [], nil}, {:properties, [], nil}, {:adjacency, [], nil}]

07:20:07.914 [debug] Field pairs: [vertex_id: {:vertex_id, [], nil}, properties: {:properties, [], nil}, adjacency: {:adjacency, [], nil}]

07:20:07.914 [debug] Processing variant: {:edge, [line: 8], [{:source_id, [line: 8], nil}, {:target_id, [line: 8], nil}, {:edge_weight, [line: 8], nil}, {:edge_props, [line: 8], nil}]}

07:20:07.914 [debug] Constructor: :edge, meta: [line: 8], args: [{:source_id, [line: 8], nil}, {:target_id, [line: 8], nil}, {:edge_weight, [line: 8], nil}, {:edge_props, [line: 8], nil}]

07:20:07.914 [debug] Extracting constructor args from: [{:source_id, [line: 8], nil}, {:target_id, [line: 8], nil}, {:edge_weight, [line: 8], nil}, {:edge_props, [line: 8], nil}]

07:20:07.914 [debug] Found value arg: :source_id

07:20:07.914 [debug] Found value arg: :target_id

07:20:07.914 [debug] Found value arg: :edge_weight

07:20:07.914 [debug] Found value arg: :edge_props

07:20:07.914 [debug] Extracted arg_names: [:source_id, :target_id, :edge_weight, :edge_props]

07:20:07.914 [debug] Generated arg vars: [{:source_id, [], nil}, {:target_id, [], nil}, {:edge_weight, [], nil}, {:edge_props, [], nil}]

07:20:07.914 [debug] Field pairs: [source_id: {:source_id, [], nil}, target_id: {:target_id, [], nil}, edge_weight: {:edge_weight, [], nil}, edge_props: {:edge_props, [], nil}]

07:20:07.914 [debug] Processing variant: {:empty, [line: 9], []}

07:20:07.914 [debug] Constructor: :empty, meta: [line: 9], args: []

07:20:07.914 [debug] Extracting constructor args from: []

07:20:07.914 [debug] Extracted arg_names: []

07:20:07.914 [debug] Generated arg vars: []

07:20:07.914 [debug] Field pairs: []
warning: unused import KernelShtf.BenBen
  lib/bridge_imo/mecha_cyph/exec_battle.ex:3

warning: module attribute @red_duration was set but never used
  lib/abc_law/intersection_signal.ex:6


07:20:07.954 [debug] Bend operation with var: :level, initial: 0

07:20:07.955 [debug] Fork operation with expression: {:+, [line: 15], [{:level, [line: 15], nil}, 1]}

07:20:07.955 [debug] Fork operation with expression: {:+, [line: 16], [{:level, [line: 16], nil}, 1]}

07:20:07.955 [debug] Fold expression: {:tree, [line: 26], nil}, opts: [], cases: [{:->, [line: 27], [[{:case, [line: 27], [{:node, [line: 27], [{:value, [line: 27], nil}, {:left, [line: 27], nil}, {:right, [line: 27], nil}]}]}], {{:., [line: 29], [{:__aliases__, [line: 29], [:Tree]}, :node]}, [line: 29], [{{:., [line: 29], [{:transform_fn, [line: 29], nil}]}, [line: 29], [{:value, [line: 29], nil}]}, {:left, [line: 29], nil}, {:right, [line: 29], nil}]}]}, {:->, [line: 31], [[{:case, [line: 31], [{:leaf, [line: 31], []}]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Tree]}, :leaf]}, [line: 32], []}]}]

07:20:07.955 [debug] Extracting cases from list: [{:->, [line: 27], [[{:case, [line: 27], [{:node, [line: 27], [{:value, [line: 27], nil}, {:left, [line: 27], nil}, {:right, [line: 27], nil}]}]}], {{:., [line: 29], [{:__aliases__, [line: 29], [:Tree]}, :node]}, [line: 29], [{{:., [line: 29], [{:transform_fn, [line: 29], nil}]}, [line: 29], [{:value, [line: 29], nil}]}, {:left, [line: 29], nil}, {:right, [line: 29], nil}]}]}, {:->, [line: 31], [[{:case, [line: 31], [{:leaf, [line: 31], []}]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Tree]}, :leaf]}, [line: 32], []}]}]

07:20:07.956 [debug] Extracted fold cases: [{:->, [line: 27], [[{:case, [line: 27], [{:node, [line: 27], [{:value, [line: 27], nil}, {:left, [line: 27], nil}, {:right, [line: 27], nil}]}]}], {{:., [line: 29], [{:__aliases__, [line: 29], [:Tree]}, :node]}, [line: 29], [{{:., [line: 29], [{:transform_fn, [line: 29], nil}]}, [line: 29], [{:value, [line: 29], nil}]}, {:left, [line: 29], nil}, {:right, [line: 29], nil}]}]}, {:->, [line: 31], [[{:case, [line: 31], [{:leaf, [line: 31], []}]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Tree]}, :leaf]}, [line: 32], []}]}]

07:20:07.956 [debug] Generating fold cases: [{:->, [line: 27], [[{:case, [line: 27], [{:node, [line: 27], [{:value, [line: 27], nil}, {:left, [line: 27], nil}, {:right, [line: 27], nil}]}]}], {{:., [line: 29], [{:__aliases__, [line: 29], [:Tree]}, :node]}, [line: 29], [{{:., [line: 29], [{:transform_fn, [line: 29], nil}]}, [line: 29], [{:value, [line: 29], nil}]}, {:left, [line: 29], nil}, {:right, [line: 29], nil}]}]}, {:->, [line: 31], [[{:case, [line: 31], [{:leaf, [line: 31], []}]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Tree]}, :leaf]}, [line: 32], []}]}]

07:20:07.956 [debug] Generated pattern: {:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]} for variant: :node

07:20:07.956 [debug] Transforming recursive refs:
Body: {{:., [line: 29], [{:__aliases__, [line: 29], [:Tree]}, :node]}, [line: 29], [{{:., [line: 29], [{:transform_fn, [line: 29], nil}]}, [line: 29], [{:value, [line: 29], nil}]}, {:left, [line: 29], nil}, {:right, [line: 29], nil}]}
Bindings: [value: true, left: true, right: true]
State: nil


07:20:07.956 [debug] Generated pattern: {:%{}, [], [variant: :leaf]} for variant: :leaf

07:20:07.956 [debug] Transforming recursive refs:
Body: {{:., [line: 32], [{:__aliases__, [line: 32], [:Tree]}, :leaf]}, [line: 32], []}
Bindings: []
State: nil


07:20:07.956 [debug] Generated fold cases after transformation: [{:->, [line: 27], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {{:., [line: 29], [{:__aliases__, [line: 29], [:Tree]}, :node]}, [line: 29], [{{:., [line: 29], [{:transform_fn, [line: 29], nil}]}, [line: 29], [{:value, [line: 29], nil}]}, {:left, [line: 29], nil}, {:right, [line: 29], nil}]}]}, {:->, [line: 31], [[{:%{}, [], [variant: :leaf]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Tree]}, :leaf]}, [line: 32], []}]}]

07:20:07.956 [debug] Final quoted expression: {:do_fold, [], [{:tree, [line: 26], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 27], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {{:., [line: 29], [{:__aliases__, [line: 29], [:Tree]}, :node]}, [line: 29], [{{:., [line: 29], [{:transform_fn, [line: 29], nil}]}, [line: 29], [{:value, [line: 29], nil}]}, {:left, [line: 29], nil}, {:right, [line: 29], nil}]}]}, {:->, [line: 31], [[{:%{}, [], [variant: :leaf]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Tree]}, :leaf]}, [line: 32], []}]}]]]}]}]}]}

07:20:07.956 [debug] Fold expression: {:obj, [line: 19], nil}, opts: [], cases: [{:->, [line: 20], [[{:case, [line: 20], [{:object, [line: 20], [{:props, [line: 20], nil}, {:proto, [line: 20], nil}]}]}], {:case, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:Map]}, :get]}, [line: 21], [{:props, [line: 21], nil}, {:key, [line: 21], nil}]}, [do: [{:->, [line: 23], [[nil], {:recu, [line: 23], [{:proto, [line: 23], nil}]}]}, {:->, [line: 25], [[{:val, [line: 25], nil}], {:val, [line: 25], nil}]}]]]}]}, {:->, [line: 28], [[{:case, [line: 28], [{:null, [line: 28], []}]}], nil]}]
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/parents.ex:26: Parents.map_tree/2


07:20:07.956 [debug] Extracting cases from list: [{:->, [line: 20], [[{:case, [line: 20], [{:object, [line: 20], [{:props, [line: 20], nil}, {:proto, [line: 20], nil}]}]}], {:case, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:Map]}, :get]}, [line: 21], [{:props, [line: 21], nil}, {:key, [line: 21], nil}]}, [do: [{:->, [line: 23], [[nil], {:recu, [line: 23], [{:proto, [line: 23], nil}]}]}, {:->, [line: 25], [[{:val, [line: 25], nil}], {:val, [line: 25], nil}]}]]]}]}, {:->, [line: 28], [[{:case, [line: 28], [{:null, [line: 28], []}]}], nil]}]

07:20:07.957 [debug] Extracted fold cases: [{:->, [line: 20], [[{:case, [line: 20], [{:object, [line: 20], [{:props, [line: 20], nil}, {:proto, [line: 20], nil}]}]}], {:case, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:Map]}, :get]}, [line: 21], [{:props, [line: 21], nil}, {:key, [line: 21], nil}]}, [do: [{:->, [line: 23], [[nil], {:recu, [line: 23], [{:proto, [line: 23], nil}]}]}, {:->, [line: 25], [[{:val, [line: 25], nil}], {:val, [line: 25], nil}]}]]]}]}, {:->, [line: 28], [[{:case, [line: 28], [{:null, [line: 28], []}]}], nil]}]

07:20:07.957 [debug] Fold expression: {:tree, [line: 38], nil}, opts: [], cases: [{:->, [line: 39], [[{:case, [line: 39], [{:node, [line: 39], [{:value, [line: 39], nil}, {:left, [line: 39], nil}, {:right, [line: 39], nil}]}]}], {:if, [line: 41], [{{:., [line: 41], [{:predicate, [line: 41], nil}]}, [line: 41], [{:value, [line: 41], nil}]}, [do: {{:., [line: 42], [{:__aliases__, [line: 42], [:Tree]}, :node]}, [line: 42], [{:value, [line: 42], nil}, {:left, [line: 42], nil}, {:right, [line: 42], nil}]}, else: {{:., [line: 46], [{:__aliases__, [line: 46], [:Tree]}, :node]}, [line: 46], [0, {:left, [line: 46], nil}, {:right, [line: 46], nil}]}]]}]}, {:->, [line: 49], [[{:case, [line: 49], [{:leaf, [line: 49], []}]}], {{:., [line: 50], [{:__aliases__, [line: 50], [:Tree]}, :leaf]}, [line: 50], []}]}]

07:20:07.957 [debug] Generating fold cases: [{:->, [line: 20], [[{:case, [line: 20], [{:object, [line: 20], [{:props, [line: 20], nil}, {:proto, [line: 20], nil}]}]}], {:case, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:Map]}, :get]}, [line: 21], [{:props, [line: 21], nil}, {:key, [line: 21], nil}]}, [do: [{:->, [line: 23], [[nil], {:recu, [line: 23], [{:proto, [line: 23], nil}]}]}, {:->, [line: 25], [[{:val, [line: 25], nil}], {:val, [line: 25], nil}]}]]]}]}, {:->, [line: 28], [[{:case, [line: 28], [{:null, [line: 28], []}]}], nil]}]

07:20:07.957 [debug] Extracting cases from list: [{:->, [line: 39], [[{:case, [line: 39], [{:node, [line: 39], [{:value, [line: 39], nil}, {:left, [line: 39], nil}, {:right, [line: 39], nil}]}]}], {:if, [line: 41], [{{:., [line: 41], [{:predicate, [line: 41], nil}]}, [line: 41], [{:value, [line: 41], nil}]}, [do: {{:., [line: 42], [{:__aliases__, [line: 42], [:Tree]}, :node]}, [line: 42], [{:value, [line: 42], nil}, {:left, [line: 42], nil}, {:right, [line: 42], nil}]}, else: {{:., [line: 46], [{:__aliases__, [line: 46], [:Tree]}, :node]}, [line: 46], [0, {:left, [line: 46], nil}, {:right, [line: 46], nil}]}]]}]}, {:->, [line: 49], [[{:case, [line: 49], [{:leaf, [line: 49], []}]}], {{:., [line: 50], [{:__aliases__, [line: 50], [:Tree]}, :leaf]}, [line: 50], []}]}]

07:20:07.957 [debug] Generated pattern: {:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]} for variant: :object

07:20:07.957 [debug] Transforming recursive refs:
Body: {:case, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:Map]}, :get]}, [line: 21], [{:props, [line: 21], nil}, {:key, [line: 21], nil}]}, [do: [{:->, [line: 23], [[nil], {:recu, [line: 23], [{:proto, [line: 23], nil}]}]}, {:->, [line: 25], [[{:val, [line: 25], nil}], {:val, [line: 25], nil}]}]]]}
Bindings: [props: true, proto: true]
State: nil


07:20:07.957 [debug] Extracted fold cases: [{:->, [line: 39], [[{:case, [line: 39], [{:node, [line: 39], [{:value, [line: 39], nil}, {:left, [line: 39], nil}, {:right, [line: 39], nil}]}]}], {:if, [line: 41], [{{:., [line: 41], [{:predicate, [line: 41], nil}]}, [line: 41], [{:value, [line: 41], nil}]}, [do: {{:., [line: 42], [{:__aliases__, [line: 42], [:Tree]}, :node]}, [line: 42], [{:value, [line: 42], nil}, {:left, [line: 42], nil}, {:right, [line: 42], nil}]}, else: {{:., [line: 46], [{:__aliases__, [line: 46], [:Tree]}, :node]}, [line: 46], [0, {:left, [line: 46], nil}, {:right, [line: 46], nil}]}]]}]}, {:->, [line: 49], [[{:case, [line: 49], [{:leaf, [line: 49], []}]}], {{:., [line: 50], [{:__aliases__, [line: 50], [:Tree]}, :leaf]}, [line: 50], []}]}]

07:20:07.957 [debug] Processing recursive reference: {:recu, [line: 23], [{:proto, [line: 23], nil}]}

07:20:07.957 [debug] Transformed recursive reference to: {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.957 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.957 [debug] Transforming recursive refs:
Body: nil
Bindings: []
State: nil


07:20:07.957 [debug] Generated fold cases after transformation: [{:->, [line: 20], [[{:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]}], {:case, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:Map]}, :get]}, [line: 21], [{:props, [line: 21], nil}, {:key, [line: 21], nil}]}, [do: [{:->, [line: 23], [[nil], {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:->, [line: 25], [[{:val, [line: 25], nil}], {:val, [line: 25], nil}]}]]]}]}, {:->, [line: 28], [[{:%{}, [], [variant: :null]}], nil]}]

07:20:07.957 [debug] Generating fold cases: [{:->, [line: 39], [[{:case, [line: 39], [{:node, [line: 39], [{:value, [line: 39], nil}, {:left, [line: 39], nil}, {:right, [line: 39], nil}]}]}], {:if, [line: 41], [{{:., [line: 41], [{:predicate, [line: 41], nil}]}, [line: 41], [{:value, [line: 41], nil}]}, [do: {{:., [line: 42], [{:__aliases__, [line: 42], [:Tree]}, :node]}, [line: 42], [{:value, [line: 42], nil}, {:left, [line: 42], nil}, {:right, [line: 42], nil}]}, else: {{:., [line: 46], [{:__aliases__, [line: 46], [:Tree]}, :node]}, [line: 46], [0, {:left, [line: 46], nil}, {:right, [line: 46], nil}]}]]}]}, {:->, [line: 49], [[{:case, [line: 49], [{:leaf, [line: 49], []}]}], {{:., [line: 50], [{:__aliases__, [line: 50], [:Tree]}, :leaf]}, [line: 50], []}]}]

07:20:07.957 [debug] Generated pattern: {:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]} for variant: :node

07:20:07.957 [debug] Transforming recursive refs:
Body: {:if, [line: 41], [{{:., [line: 41], [{:predicate, [line: 41], nil}]}, [line: 41], [{:value, [line: 41], nil}]}, [do: {{:., [line: 42], [{:__aliases__, [line: 42], [:Tree]}, :node]}, [line: 42], [{:value, [line: 42], nil}, {:left, [line: 42], nil}, {:right, [line: 42], nil}]}, else: {{:., [line: 46], [{:__aliases__, [line: 46], [:Tree]}, :node]}, [line: 46], [0, {:left, [line: 46], nil}, {:right, [line: 46], nil}]}]]}
Bindings: [value: true, left: true, right: true]
State: nil


07:20:07.957 [debug] Generated pattern: {:%{}, [], [variant: :leaf]} for variant: :leaf

07:20:07.957 [debug] Transforming recursive refs:
Body: {{:., [line: 50], [{:__aliases__, [line: 50], [:Tree]}, :leaf]}, [line: 50], []}
Bindings: []
State: nil


07:20:07.957 [debug] Fold expression: {:graph, [line: 16], nil}, opts: [], cases: [{:->, [line: 17], [[{:case, [line: 17], [{:graph, [line: 17], [{:vertices, [line: 17], nil}, {:edges, [line: 17], nil}]}]}], {{:., [line: 18], [{:__aliases__, [line: 18], [:Graph]}, :graph]}, [line: 18], [{{:., [line: 18], [{:__aliases__, [line: 18], [:MapSet]}, :put]}, [line: 18], [{:vertices, [line: 18], nil}, {:vertex, [line: 18], nil}]}, {:edges, [line: 18], nil}]}]}, {:->, [line: 20], [[{:case, [line: 20], [{:empty, [line: 20], []}]}], {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :graph]}, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:MapSet]}, :new]}, [line: 21], [[{:vertex, [line: 21], nil}]]}, {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :empty]}, [line: 21], []}]}]}]

07:20:07.957 [debug] Final quoted expression: {:do_fold, [], [{:obj, [line: 19], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 20], [[{:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]}], {:case, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:Map]}, :get]}, [line: 21], [{:props, [line: 21], nil}, {:key, [line: 21], nil}]}, [do: [{:->, [line: 23], [[nil], {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{...}, ...]], [{:value, ...}]}]}]}, {:->, [line: 25], [[{:val, [line: 25], nil}], {:val, [line: 25], nil}]}]]]}]}, {:->, [line: 28], [[{:%{}, [], [variant: :null]}], nil]}]]]}]}]}]}

07:20:07.958 [debug] Generated fold cases after transformation: [{:->, [line: 39], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:if, [line: 41], [{{:., [line: 41], [{:predicate, [line: 41], nil}]}, [line: 41], [{:value, [line: 41], nil}]}, [do: {{:., [line: 42], [{:__aliases__, [line: 42], [:Tree]}, :node]}, [line: 42], [{:value, [line: 42], nil}, {:left, [line: 42], nil}, {:right, [line: 42], nil}]}, else: {{:., [line: 46], [{:__aliases__, [line: 46], [:Tree]}, :node]}, [line: 46], [0, {:left, [line: 46], nil}, {:right, [line: 46], nil}]}]]}]}, {:->, [line: 49], [[{:%{}, [], [variant: :leaf]}], {{:., [line: 50], [{:__aliases__, [line: 50], [:Tree]}, :leaf]}, [line: 50], []}]}]

07:20:07.958 [debug] Extracting cases from list: [{:->, [line: 17], [[{:case, [line: 17], [{:graph, [line: 17], [{:vertices, [line: 17], nil}, {:edges, [line: 17], nil}]}]}], {{:., [line: 18], [{:__aliases__, [line: 18], [:Graph]}, :graph]}, [line: 18], [{{:., [line: 18], [{:__aliases__, [line: 18], [:MapSet]}, :put]}, [line: 18], [{:vertices, [line: 18], nil}, {:vertex, [line: 18], nil}]}, {:edges, [line: 18], nil}]}]}, {:->, [line: 20], [[{:case, [line: 20], [{:empty, [line: 20], []}]}], {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :graph]}, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:MapSet]}, :new]}, [line: 21], [[{:vertex, [line: 21], nil}]]}, {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :empty]}, [line: 21], []}]}]}]
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prototypal.ex:19: Prototypal.get_property/2


07:20:07.958 [debug] Extracted fold cases: [{:->, [line: 17], [[{:case, [line: 17], [{:graph, [line: 17], [{:vertices, [line: 17], nil}, {:edges, [line: 17], nil}]}]}], {{:., [line: 18], [{:__aliases__, [line: 18], [:Graph]}, :graph]}, [line: 18], [{{:., [line: 18], [{:__aliases__, [line: 18], [:MapSet]}, :put]}, [line: 18], [{:vertices, [line: 18], nil}, {:vertex, [line: 18], nil}]}, {:edges, [line: 18], nil}]}]}, {:->, [line: 20], [[{:case, [line: 20], [{:empty, [line: 20], []}]}], {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :graph]}, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:MapSet]}, :new]}, [line: 21], [[{:vertex, [line: 21], nil}]]}, {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :empty]}, [line: 21], []}]}]}]

07:20:07.958 [debug] Final quoted expression: {:do_fold, [], [{:tree, [line: 38], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 39], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:if, [line: 41], [{{:., [line: 41], [{:predicate, [line: 41], nil}]}, [line: 41], [{:value, [line: 41], nil}]}, [do: {{:., [line: 42], [{:__aliases__, [line: 42], [:Tree]}, :node]}, [line: 42], [{:value, [line: 42], nil}, {:left, [line: 42], nil}, {:right, [line: 42], nil}]}, else: {{:., [line: 46], [{:__aliases__, [line: 46], [:Tree]}, :node]}, [line: 46], [0, {:left, [line: 46], nil}, {:right, [line: 46], nil}]}]]}]}, {:->, [line: 49], [[{:%{}, [], [variant: :leaf]}], {{:., [line: 50], [{:__aliases__, [line: 50], [:Tree]}, :leaf]}, [line: 50], []}]}]]]}]}]}]}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/parents.ex:38: Parents.filter_tree/2


07:20:07.958 [debug] Generating fold cases: [{:->, [line: 17], [[{:case, [line: 17], [{:graph, [line: 17], [{:vertices, [line: 17], nil}, {:edges, [line: 17], nil}]}]}], {{:., [line: 18], [{:__aliases__, [line: 18], [:Graph]}, :graph]}, [line: 18], [{{:., [line: 18], [{:__aliases__, [line: 18], [:MapSet]}, :put]}, [line: 18], [{:vertices, [line: 18], nil}, {:vertex, [line: 18], nil}]}, {:edges, [line: 18], nil}]}]}, {:->, [line: 20], [[{:case, [line: 20], [{:empty, [line: 20], []}]}], {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :graph]}, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:MapSet]}, :new]}, [line: 21], [[{:vertex, [line: 21], nil}]]}, {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :empty]}, [line: 21], []}]}]}]

07:20:07.958 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]} for variant: :graph

07:20:07.958 [debug] Transforming recursive refs:
Body: {{:., [line: 18], [{:__aliases__, [line: 18], [:Graph]}, :graph]}, [line: 18], [{{:., [line: 18], [{:__aliases__, [line: 18], [:MapSet]}, :put]}, [line: 18], [{:vertices, [line: 18], nil}, {:vertex, [line: 18], nil}]}, {:edges, [line: 18], nil}]}
Bindings: [vertices: true, edges: true]
State: nil


07:20:07.958 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.958 [debug] Transforming recursive refs:
Body: {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :graph]}, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:MapSet]}, :new]}, [line: 21], [[{:vertex, [line: 21], nil}]]}, {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :empty]}, [line: 21], []}]}
Bindings: []
State: nil


07:20:07.958 [debug] Generated fold cases after transformation: [{:->, [line: 17], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {{:., [line: 18], [{:__aliases__, [line: 18], [:Graph]}, :graph]}, [line: 18], [{{:., [line: 18], [{:__aliases__, [line: 18], [:MapSet]}, :put]}, [line: 18], [{:vertices, [line: 18], nil}, {:vertex, [line: 18], nil}]}, {:edges, [line: 18], nil}]}]}, {:->, [line: 20], [[{:%{}, [], [variant: :empty]}], {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :graph]}, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:MapSet]}, :new]}, [line: 21], [[{:vertex, [line: 21], nil}]]}, {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :empty]}, [line: 21], []}]}]}]

07:20:07.958 [debug] Bend operation with var: :val, initial: {:enum, [line: 14], nil}

07:20:07.958 [debug] Fold expression: {:tree, [line: 56], nil}, opts: [with: {:%{}, [line: 56], [{0, 1}]}], cases: [{:->, [line: 57], [[{:case, [line: 57], [{:node, [line: 57], [{:value, [line: 57], nil}, {:left, [line: 57], nil}, {:right, [line: 57], nil}]}]}], {:__block__, [], [{:=, [line: 58], [{{:_, [line: 58], nil}, {:left_counts, [line: 58], nil}}, {:recu, [line: 58], [{:left, [line: 58], nil}]}]}, {:=, [line: 59], [{{:_, [line: 59], nil}, {:right_counts, [line: 59], nil}}, {:recu, [line: 59], [{:right, [line: 59], nil}]}]}, {:=, [line: 62], [{:new_counts, [line: 62], nil}, {:|>, [line: 65], [{:|>, [line: 64], [{{:., [line: 63], [{:__aliases__, [line: 63], [:Map]}, :merge]}, [line: 63], [{:left_counts, [line: 63], nil}, {:right_counts, [line: 63], nil}, {:fn, [line: 63], [{:->, [line: 63], [[{:_k, [line: 63], nil}, {:v1, [line: 63], nil}, {:v2, [line: 63], nil}], {:+, [line: 63], [{:v1, [line: 63], nil}, {:v2, [line: 63], nil}]}]}]}]}, {{:., [line: 64], [{:__aliases__, [line: 64], [:Map]}, :new]}, [line: 64], [{:fn, [line: 64], [{:->, [line: 64], [[{{:k, [line: 64], nil}, {:v, [line: 64], nil}}], {{:+, [line: 64], [{:k, [line: 64], nil}, 1]}, {:v, [line: 64], nil}}]}]}]}]}, {{:., [line: 65], [{:__aliases__, [line: 65], [:Map]}, :put]}, [line: 65], [0, 1]}]}]}, {{:value, [line: 67], nil}, {:new_counts, [line: 67], nil}}]}]}, {:->, [line: 69], [[{:case, [line: 69], [{:leaf, [line: 69], []}]}], {0, {:state, [line: 70], nil}}]}]

07:20:07.958 [debug] Fork operation with expression: {:tail, [line: 17], nil}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/simple_graph.ex:16: SimpleGraph.add_vertex/2


07:20:07.959 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 16], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 17], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {{:., [line: 18], [{:__aliases__, [line: 18], [:Graph]}, :graph]}, [line: 18], [{{:., [line: 18], [{:__aliases__, [line: 18], [:MapSet]}, :put]}, [line: 18], [{:vertices, [line: 18], nil}, {:vertex, [line: 18], nil}]}, {:edges, [line: 18], nil}]}]}, {:->, [line: 20], [[{:%{}, [], [variant: :empty]}], {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :graph]}, [line: 21], [{{:., [line: 21], [{:__aliases__, [line: 21], [:MapSet]}, :new]}, [line: 21], [[{:vertex, [line: 21], nil}]]}, {{:., [line: 21], [{:__aliases__, [line: 21], [:Graph]}, :empty]}, [line: 21], []}]}]}]]]}]}]}]}

07:20:07.959 [debug] Extracting cases from list: [{:->, [line: 57], [[{:case, [line: 57], [{:node, [line: 57], [{:value, [line: 57], nil}, {:left, [line: 57], nil}, {:right, [line: 57], nil}]}]}], {:__block__, [], [{:=, [line: 58], [{{:_, [line: 58], nil}, {:left_counts, [line: 58], nil}}, {:recu, [line: 58], [{:left, [line: 58], nil}]}]}, {:=, [line: 59], [{{:_, [line: 59], nil}, {:right_counts, [line: 59], nil}}, {:recu, [line: 59], [{:right, [line: 59], nil}]}]}, {:=, [line: 62], [{:new_counts, [line: 62], nil}, {:|>, [line: 65], [{:|>, [line: 64], [{{:., [line: 63], [{:__aliases__, [line: 63], [:Map]}, :merge]}, [line: 63], [{:left_counts, [line: 63], nil}, {:right_counts, [line: 63], nil}, {:fn, [line: 63], [{:->, [line: 63], [[{:_k, [line: 63], nil}, {:v1, [line: 63], nil}, {:v2, [line: 63], nil}], {:+, [line: 63], [{:v1, [line: 63], nil}, {:v2, [line: 63], nil}]}]}]}]}, {{:., [line: 64], [{:__aliases__, [line: 64], [:Map]}, :new]}, [line: 64], [{:fn, [line: 64], [{:->, [line: 64], [[{{:k, [line: 64], nil}, {:v, [line: 64], nil}}], {{:+, [line: 64], [{:k, [line: 64], nil}, 1]}, {:v, [line: 64], nil}}]}]}]}]}, {{:., [line: 65], [{:__aliases__, [line: 65], [:Map]}, :put]}, [line: 65], [0, 1]}]}]}, {{:value, [line: 67], nil}, {:new_counts, [line: 67], nil}}]}]}, {:->, [line: 69], [[{:case, [line: 69], [{:leaf, [line: 69], []}]}], {0, {:state, [line: 70], nil}}]}]

07:20:07.959 [debug] Fold expression: {:list, [line: 40], nil}, opts: [], cases: [{:->, [line: 41], [[{:case, [line: 41], [{:cons, [line: 41], [{:head, [line: 41], nil}, {:tail, [line: 41], nil}]}]}], [{:|, [line: 41], [{:head, [line: 41], nil}, {:recu, [line: 41], [{:tail, [line: 41], nil}]}]}]]}, {:->, [line: 42], [[{:case, [line: 42], [{:null, [line: 42], []}]}], []]}]

07:20:07.959 [debug] Extracting cases from list: [{:->, [line: 41], [[{:case, [line: 41], [{:cons, [line: 41], [{:head, [line: 41], nil}, {:tail, [line: 41], nil}]}]}], [{:|, [line: 41], [{:head, [line: 41], nil}, {:recu, [line: 41], [{:tail, [line: 41], nil}]}]}]]}, {:->, [line: 42], [[{:case, [line: 42], [{:null, [line: 42], []}]}], []]}]

07:20:07.959 [debug] Extracted fold cases: [{:->, [line: 41], [[{:case, [line: 41], [{:cons, [line: 41], [{:head, [line: 41], nil}, {:tail, [line: 41], nil}]}]}], [{:|, [line: 41], [{:head, [line: 41], nil}, {:recu, [line: 41], [{:tail, [line: 41], nil}]}]}]]}, {:->, [line: 42], [[{:case, [line: 42], [{:null, [line: 42], []}]}], []]}]

07:20:07.959 [debug] Generating fold cases: [{:->, [line: 41], [[{:case, [line: 41], [{:cons, [line: 41], [{:head, [line: 41], nil}, {:tail, [line: 41], nil}]}]}], [{:|, [line: 41], [{:head, [line: 41], nil}, {:recu, [line: 41], [{:tail, [line: 41], nil}]}]}]]}, {:->, [line: 42], [[{:case, [line: 42], [{:null, [line: 42], []}]}], []]}]

07:20:07.959 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons

07:20:07.959 [debug] Fold expression: {:graph, [line: 26], nil}, opts: [], cases: [{:->, [line: 27], [[{:case, [line: 27], [{:graph, [line: 27], [{:vertices, [line: 27], nil}, {:edges, [line: 27], nil}]}]}], {:if, [line: 28], [{:and, [line: 28], [{{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:from, [line: 28], nil}]}, {{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:to, [line: 28], nil}]}]}, [do: {:__block__, [], [{:=, [line: 29], [{:new_edge, [line: 29], nil}, {{:., [line: 29], [{:__aliases__, [line: 29], [:Graph]}, :edge]}, [line: 29], [{:from, [line: 29], nil}, {:to, [line: 29], nil}]}]}, {:case, [line: 31], [{:edges, [line: 31], nil}, [do: [{:->, [line: 32], [[{:%{}, [line: 32], [variant: :empty]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Graph]}, :graph]}, [line: 32], [{:vertices, [line: 32], nil}, {:new_edge, [line: 32], nil}]}]}, {:->, [line: 33], [[{:_, [line: 33], nil}], {{:., [line: 33], [{:__aliases__, [line: 33], [:Graph]}, :graph]}, [line: 33], [{:vertices, [line: 33], nil}, [{:|, [line: 33], [{:new_edge, [line: 33], nil}, {{:., [line: 33], [{:__aliases__, [line: 33], [:List]}, :wrap]}, [line: 33], [{:edges, [line: 33], nil}]}]}]]}]}]]]}]}, else: {:graph, [line: 36], nil}]]}]}, {:->, [line: 39], [[{:case, [line: 39], [{:empty, [line: 39], []}]}], {:graph, [line: 40], nil}]}]

07:20:07.959 [debug] Transforming recursive refs:
Body: [{:|, [line: 41], [{:head, [line: 41], nil}, {:recu, [line: 41], [{:tail, [line: 41], nil}]}]}]
Bindings: [head: true, tail: true]
State: nil


07:20:07.959 [debug] Extracted fold cases: [{:->, [line: 57], [[{:case, [line: 57], [{:node, [line: 57], [{:value, [line: 57], nil}, {:left, [line: 57], nil}, {:right, [line: 57], nil}]}]}], {:__block__, [], [{:=, [line: 58], [{{:_, [line: 58], nil}, {:left_counts, [line: 58], nil}}, {:recu, [line: 58], [{:left, [line: 58], nil}]}]}, {:=, [line: 59], [{{:_, [line: 59], nil}, {:right_counts, [line: 59], nil}}, {:recu, [line: 59], [{:right, [line: 59], nil}]}]}, {:=, [line: 62], [{:new_counts, [line: 62], nil}, {:|>, [line: 65], [{:|>, [line: 64], [{{:., [line: 63], [{:__aliases__, [line: 63], [:Map]}, :merge]}, [line: 63], [{:left_counts, [line: 63], nil}, {:right_counts, [line: 63], nil}, {:fn, [line: 63], [{:->, [line: 63], [[{:_k, [line: 63], nil}, {:v1, [line: 63], nil}, {:v2, [line: 63], nil}], {:+, [line: 63], [{:v1, [line: 63], nil}, {:v2, [line: 63], nil}]}]}]}]}, {{:., [line: 64], [{:__aliases__, [line: 64], [:Map]}, :new]}, [line: 64], [{:fn, [line: 64], [{:->, [line: 64], [[{{:k, [line: 64], nil}, {:v, [line: 64], nil}}], {{:+, [line: 64], [{:k, [line: 64], nil}, 1]}, {:v, [line: 64], nil}}]}]}]}]}, {{:., [line: 65], [{:__aliases__, [line: 65], [:Map]}, :put]}, [line: 65], [0, 1]}]}]}, {{:value, [line: 67], nil}, {:new_counts, [line: 67], nil}}]}]}, {:->, [line: 69], [[{:case, [line: 69], [{:leaf, [line: 69], []}]}], {0, {:state, [line: 70], nil}}]}]

07:20:07.959 [debug] Processing recursive reference: {:recu, [line: 41], [{:tail, [line: 41], nil}]}

07:20:07.959 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.959 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.959 [debug] Transforming recursive refs:
Body: []
Bindings: []
State: nil


07:20:07.959 [debug] Generated fold cases after transformation: [{:->, [line: 41], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], [{:|, [line: 41], [{:head, [line: 41], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]]}, {:->, [line: 42], [[{:%{}, [], [variant: :null]}], []]}]

07:20:07.959 [debug] Extracting cases from list: [{:->, [line: 27], [[{:case, [line: 27], [{:graph, [line: 27], [{:vertices, [line: 27], nil}, {:edges, [line: 27], nil}]}]}], {:if, [line: 28], [{:and, [line: 28], [{{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:from, [line: 28], nil}]}, {{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:to, [line: 28], nil}]}]}, [do: {:__block__, [], [{:=, [line: 29], [{:new_edge, [line: 29], nil}, {{:., [line: 29], [{:__aliases__, [line: 29], [:Graph]}, :edge]}, [line: 29], [{:from, [line: 29], nil}, {:to, [line: 29], nil}]}]}, {:case, [line: 31], [{:edges, [line: 31], nil}, [do: [{:->, [line: 32], [[{:%{}, [line: 32], [variant: :empty]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Graph]}, :graph]}, [line: 32], [{:vertices, [line: 32], nil}, {:new_edge, [line: 32], nil}]}]}, {:->, [line: 33], [[{:_, [line: 33], nil}], {{:., [line: 33], [{:__aliases__, [line: 33], [:Graph]}, :graph]}, [line: 33], [{:vertices, [line: 33], nil}, [{:|, [line: 33], [{:new_edge, [line: 33], nil}, {{:., [line: 33], [{:__aliases__, [line: 33], [:List]}, :wrap]}, [line: 33], [{:edges, [line: 33], nil}]}]}]]}]}]]]}]}, else: {:graph, [line: 36], nil}]]}]}, {:->, [line: 39], [[{:case, [line: 39], [{:empty, [line: 39], []}]}], {:graph, [line: 40], nil}]}]

07:20:07.959 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 40], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 41], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], [{:|, [line: 41], [{:head, [line: 41], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]]}, {:->, [line: 42], [[{:%{}, [], [variant: :null]}], []]}]]]}]}]}]}

07:20:07.959 [debug] Generating fold cases: [{:->, [line: 57], [[{:case, [line: 57], [{:node, [line: 57], [{:value, [line: 57], nil}, {:left, [line: 57], nil}, {:right, [line: 57], nil}]}]}], {:__block__, [], [{:=, [line: 58], [{{:_, [line: 58], nil}, {:left_counts, [line: 58], nil}}, {:recu, [line: 58], [{:left, [line: 58], nil}]}]}, {:=, [line: 59], [{{:_, [line: 59], nil}, {:right_counts, [line: 59], nil}}, {:recu, [line: 59], [{:right, [line: 59], nil}]}]}, {:=, [line: 62], [{:new_counts, [line: 62], nil}, {:|>, [line: 65], [{:|>, [line: 64], [{{:., [line: 63], [{:__aliases__, [line: 63], [:Map]}, :merge]}, [line: 63], [{:left_counts, [line: 63], nil}, {:right_counts, [line: 63], nil}, {:fn, [line: 63], [{:->, [line: 63], [[{:_k, [line: 63], nil}, {:v1, [line: 63], nil}, {:v2, [line: 63], nil}], {:+, [line: 63], [{:v1, [line: 63], nil}, {:v2, [line: 63], nil}]}]}]}]}, {{:., [line: 64], [{:__aliases__, [line: 64], [:Map]}, :new]}, [line: 64], [{:fn, [line: 64], [{:->, [line: 64], [[{{:k, [line: 64], nil}, {:v, [line: 64], nil}}], {{:+, [line: 64], [{:k, [line: 64], nil}, 1]}, {:v, [line: 64], nil}}]}]}]}]}, {{:., [line: 65], [{:__aliases__, [line: 65], [:Map]}, :put]}, [line: 65], [0, 1]}]}]}, {{:value, [line: 67], nil}, {:new_counts, [line: 67], nil}}]}]}, {:->, [line: 69], [[{:case, [line: 69], [{:leaf, [line: 69], []}]}], {0, {:state, [line: 70], nil}}]}]

07:20:07.959 [debug] Generated pattern: {:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]} for variant: :node
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/chain.ex:40: Chain.breaker/1


07:20:07.960 [debug] Transforming recursive refs:
Body: {:__block__, [], [{:=, [line: 58], [{{:_, [line: 58], nil}, {:left_counts, [line: 58], nil}}, {:recu, [line: 58], [{:left, [line: 58], nil}]}]}, {:=, [line: 59], [{{:_, [line: 59], nil}, {:right_counts, [line: 59], nil}}, {:recu, [line: 59], [{:right, [line: 59], nil}]}]}, {:=, [line: 62], [{:new_counts, [line: 62], nil}, {:|>, [line: 65], [{:|>, [line: 64], [{{:., [line: 63], [{:__aliases__, [line: 63], [:Map]}, :merge]}, [line: 63], [{:left_counts, [line: 63], nil}, {:right_counts, [line: 63], nil}, {:fn, [line: 63], [{:->, [line: 63], [[{:_k, [line: 63], nil}, {:v1, [line: 63], nil}, {:v2, [line: 63], nil}], {:+, [line: 63], [{:v1, [line: 63], nil}, {:v2, [line: 63], nil}]}]}]}]}, {{:., [line: 64], [{:__aliases__, [line: 64], [:Map]}, :new]}, [line: 64], [{:fn, [line: 64], [{:->, [line: 64], [[{{:k, [line: 64], nil}, {:v, [line: 64], nil}}], {{:+, [line: 64], [{:k, [line: 64], nil}, 1]}, {:v, [line: 64], nil}}]}]}]}]}, {{:., [line: 65], [{:__aliases__, [line: 65], [:Map]}, :put]}, [line: 65], [0, 1]}]}]}, {{:value, [line: 67], nil}, {:new_counts, [line: 67], nil}}]}
Bindings: [value: true, left: true, right: true]
State: {:%{}, [line: 56], [{0, 1}]}


07:20:07.960 [debug] Processing recursive reference: {:recu, [line: 58], [{:left, [line: 58], nil}]}

07:20:07.960 [debug] Transformed recursive reference to: {:do_fold, [], [{:left, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.960 [debug] Processing recursive reference: {:recu, [line: 59], [{:right, [line: 59], nil}]}

07:20:07.960 [debug] Fold expression: {:list, [line: 47], nil}, opts: [], cases: [{:->, [line: 48], [[{:case, [line: 48], [{:cons, [line: 48], [{:head, [line: 48], nil}, {:tail, [line: 48], nil}]}]}], [{:|, [line: 49], [{:head, [line: 49], nil}, {:recu, [line: 49], [{:tail, [line: 49], nil}]}]}]]}, {:->, [line: 51], [[{:case, [line: 51], [{:null, [line: 51], []}]}], []]}]

07:20:07.960 [debug] Transformed recursive reference to: {:do_fold, [], [{:right, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.960 [debug] Extracted fold cases: [{:->, [line: 27], [[{:case, [line: 27], [{:graph, [line: 27], [{:vertices, [line: 27], nil}, {:edges, [line: 27], nil}]}]}], {:if, [line: 28], [{:and, [line: 28], [{{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:from, [line: 28], nil}]}, {{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:to, [line: 28], nil}]}]}, [do: {:__block__, [], [{:=, [line: 29], [{:new_edge, [line: 29], nil}, {{:., [line: 29], [{:__aliases__, [line: 29], [:Graph]}, :edge]}, [line: 29], [{:from, [line: 29], nil}, {:to, [line: 29], nil}]}]}, {:case, [line: 31], [{:edges, [line: 31], nil}, [do: [{:->, [line: 32], [[{:%{}, [line: 32], [variant: :empty]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Graph]}, :graph]}, [line: 32], [{:vertices, [line: 32], nil}, {:new_edge, [line: 32], nil}]}]}, {:->, [line: 33], [[{:_, [line: 33], nil}], {{:., [line: 33], [{:__aliases__, [line: 33], [:Graph]}, :graph]}, [line: 33], [{:vertices, [line: 33], nil}, [{:|, [line: 33], [{:new_edge, [line: 33], nil}, {{:., [line: 33], [{:__aliases__, [line: 33], [:List]}, :wrap]}, [line: 33], [{:edges, [line: 33], nil}]}]}]]}]}]]]}]}, else: {:graph, [line: 36], nil}]]}]}, {:->, [line: 39], [[{:case, [line: 39], [{:empty, [line: 39], []}]}], {:graph, [line: 40], nil}]}]

07:20:07.960 [debug] Generated pattern: {:%{}, [], [variant: :leaf]} for variant: :leaf

07:20:07.960 [debug] Fold expression: {:graph, [line: 25], nil}, opts: [], cases: [{:->, [line: 26], [[{:case, [line: 26], [{:graph, [line: 26], [{:vertex_map, [line: 26], nil}, {:edge_list, [line: 26], nil}, {:metadata, [line: 26], nil}]}]}], {{:., [line: 27], [{:__aliases__, [line: 27], [:Graph]}, :graph]}, [line: 27], [{{:., [line: 28], [{:__aliases__, [line: 28], [:Map]}, :put]}, [line: 28], [{:vertex_map, [line: 28], nil}, {:id, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :vertex]}, [line: 28], [{:id, [line: 28], nil}, {:props, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :empty]}, [line: 28], []}]}]}, {:edge_list, [line: 29], nil}, {:metadata, [line: 30], nil}]}]}, {:->, [line: 34], [[{:case, [line: 34], [{:empty, [line: 34], []}]}], {{:., [line: 35], [{:__aliases__, [line: 35], [:Graph]}, :graph]}, [line: 35], [{:%{}, [line: 36], [{{:id, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :vertex]}, [line: 36], [{:id, [line: 36], nil}, {:props, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :empty]}, [line: 36], []}]}}]}, {{:., [line: 37], [{:__aliases__, [line: 37], [:Graph]}, :empty]}, [line: 37], []}, {:%{}, [line: 38], [type: :directed]}]}]}]

07:20:07.960 [debug] Transforming recursive refs:
Body: {0, {:state, [line: 70], nil}}
Bindings: []
State: {:%{}, [line: 56], [{0, 1}]}


07:20:07.960 [debug] Extracting cases from list: [{:->, [line: 48], [[{:case, [line: 48], [{:cons, [line: 48], [{:head, [line: 48], nil}, {:tail, [line: 48], nil}]}]}], [{:|, [line: 49], [{:head, [line: 49], nil}, {:recu, [line: 49], [{:tail, [line: 49], nil}]}]}]]}, {:->, [line: 51], [[{:case, [line: 51], [{:null, [line: 51], []}]}], []]}]

07:20:07.960 [debug] Extracted fold cases: [{:->, [line: 48], [[{:case, [line: 48], [{:cons, [line: 48], [{:head, [line: 48], nil}, {:tail, [line: 48], nil}]}]}], [{:|, [line: 49], [{:head, [line: 49], nil}, {:recu, [line: 49], [{:tail, [line: 49], nil}]}]}]]}, {:->, [line: 51], [[{:case, [line: 51], [{:null, [line: 51], []}]}], []]}]

07:20:07.960 [debug] Generating fold cases: [{:->, [line: 48], [[{:case, [line: 48], [{:cons, [line: 48], [{:head, [line: 48], nil}, {:tail, [line: 48], nil}]}]}], [{:|, [line: 49], [{:head, [line: 49], nil}, {:recu, [line: 49], [{:tail, [line: 49], nil}]}]}]]}, {:->, [line: 51], [[{:case, [line: 51], [{:null, [line: 51], []}]}], []]}]

07:20:07.960 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons

07:20:07.960 [debug] Extracting cases from list: [{:->, [line: 26], [[{:case, [line: 26], [{:graph, [line: 26], [{:vertex_map, [line: 26], nil}, {:edge_list, [line: 26], nil}, {:metadata, [line: 26], nil}]}]}], {{:., [line: 27], [{:__aliases__, [line: 27], [:Graph]}, :graph]}, [line: 27], [{{:., [line: 28], [{:__aliases__, [line: 28], [:Map]}, :put]}, [line: 28], [{:vertex_map, [line: 28], nil}, {:id, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :vertex]}, [line: 28], [{:id, [line: 28], nil}, {:props, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :empty]}, [line: 28], []}]}]}, {:edge_list, [line: 29], nil}, {:metadata, [line: 30], nil}]}]}, {:->, [line: 34], [[{:case, [line: 34], [{:empty, [line: 34], []}]}], {{:., [line: 35], [{:__aliases__, [line: 35], [:Graph]}, :graph]}, [line: 35], [{:%{}, [line: 36], [{{:id, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :vertex]}, [line: 36], [{:id, [line: 36], nil}, {:props, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :empty]}, [line: 36], []}]}}]}, {{:., [line: 37], [{:__aliases__, [line: 37], [:Graph]}, :empty]}, [line: 37], []}, {:%{}, [line: 38], [type: :directed]}]}]}]

07:20:07.960 [debug] Transforming recursive refs:
Body: [{:|, [line: 49], [{:head, [line: 49], nil}, {:recu, [line: 49], [{:tail, [line: 49], nil}]}]}]
Bindings: [head: true, tail: true]
State: nil


07:20:07.960 [debug] Processing recursive reference: {:recu, [line: 49], [{:tail, [line: 49], nil}]}

07:20:07.960 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.960 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.960 [debug] Transforming recursive refs:
Body: []
Bindings: []
State: nil


07:20:07.960 [debug] Generated fold cases after transformation: [{:->, [line: 57], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:__block__, [], [{:=, [line: 58], [{{:_, [line: 58], nil}, {:left_counts, [line: 58], nil}}, {:do_fold, [], [{:left, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 59], [{{:_, [line: 59], nil}, {:right_counts, [line: 59], nil}}, {:do_fold, [], [{:right, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 62], [{:new_counts, [line: 62], nil}, {:|>, [line: 65], [{:|>, [line: 64], [{{:., [line: 63], [{:__aliases__, [line: 63], [:Map]}, :merge]}, [line: 63], [{:left_counts, [line: 63], nil}, {:right_counts, [line: 63], nil}, {:fn, [line: 63], [{:->, [line: 63], [[{:_k, [line: 63], nil}, {:v1, [line: 63], nil}, {:v2, [line: 63], nil}], {:+, [line: 63], [{:v1, [line: 63], nil}, {:v2, [line: 63], nil}]}]}]}]}, {{:., [line: 64], [{:__aliases__, [line: 64], [:Map]}, :new]}, [line: 64], [{:fn, [line: 64], [{:->, [line: 64], [[{{:k, [line: 64], nil}, {:v, [line: 64], nil}}], {{:+, [line: 64], [{:k, [line: 64], nil}, 1]}, {:v, [line: 64], nil}}]}]}]}]}, {{:., [line: 65], [{:__aliases__, [line: 65], [:Map]}, :put]}, [line: 65], [0, 1]}]}]}, {{:value, [line: 67], nil}, {:new_counts, [line: 67], nil}}]}]}, {:->, [line: 69], [[{:%{}, [], [variant: :leaf]}], {0, {:state, [line: 70], nil}}]}]

07:20:07.960 [debug] Generating fold cases: [{:->, [line: 27], [[{:case, [line: 27], [{:graph, [line: 27], [{:vertices, [line: 27], nil}, {:edges, [line: 27], nil}]}]}], {:if, [line: 28], [{:and, [line: 28], [{{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:from, [line: 28], nil}]}, {{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:to, [line: 28], nil}]}]}, [do: {:__block__, [], [{:=, [line: 29], [{:new_edge, [line: 29], nil}, {{:., [line: 29], [{:__aliases__, [line: 29], [:Graph]}, :edge]}, [line: 29], [{:from, [line: 29], nil}, {:to, [line: 29], nil}]}]}, {:case, [line: 31], [{:edges, [line: 31], nil}, [do: [{:->, [line: 32], [[{:%{}, [line: 32], [variant: :empty]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Graph]}, :graph]}, [line: 32], [{:vertices, [line: 32], nil}, {:new_edge, [line: 32], nil}]}]}, {:->, [line: 33], [[{:_, [line: 33], nil}], {{:., [line: 33], [{:__aliases__, [line: 33], [:Graph]}, :graph]}, [line: 33], [{:vertices, [line: 33], nil}, [{:|, [line: 33], [{:new_edge, [line: 33], nil}, {{:., [line: 33], [{:__aliases__, [line: 33], [:List]}, :wrap]}, [line: 33], [{:edges, [line: 33], nil}]}]}]]}]}]]]}]}, else: {:graph, [line: 36], nil}]]}]}, {:->, [line: 39], [[{:case, [line: 39], [{:empty, [line: 39], []}]}], {:graph, [line: 40], nil}]}]

07:20:07.960 [debug] Generated fold cases after transformation: [{:->, [line: 48], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], [{:|, [line: 49], [{:head, [line: 49], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]]}, {:->, [line: 51], [[{:%{}, [], [variant: :null]}], []]}]

07:20:07.960 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]} for variant: :graph

07:20:07.960 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 47], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 48], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], [{:|, [line: 49], [{:head, [line: 49], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]]}, {:->, [line: 51], [[{:%{}, [], [variant: :null]}], []]}]]]}]}]}]}

07:20:07.960 [debug] Extracted fold cases: [{:->, [line: 26], [[{:case, [line: 26], [{:graph, [line: 26], [{:vertex_map, [line: 26], nil}, {:edge_list, [line: 26], nil}, {:metadata, [line: 26], nil}]}]}], {{:., [line: 27], [{:__aliases__, [line: 27], [:Graph]}, :graph]}, [line: 27], [{{:., [line: 28], [{:__aliases__, [line: 28], [:Map]}, :put]}, [line: 28], [{:vertex_map, [line: 28], nil}, {:id, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :vertex]}, [line: 28], [{:id, [line: 28], nil}, {:props, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :empty]}, [line: 28], []}]}]}, {:edge_list, [line: 29], nil}, {:metadata, [line: 30], nil}]}]}, {:->, [line: 34], [[{:case, [line: 34], [{:empty, [line: 34], []}]}], {{:., [line: 35], [{:__aliases__, [line: 35], [:Graph]}, :graph]}, [line: 35], [{:%{}, [line: 36], [{{:id, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :vertex]}, [line: 36], [{:id, [line: 36], nil}, {:props, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :empty]}, [line: 36], []}]}}]}, {{:., [line: 37], [{:__aliases__, [line: 37], [:Graph]}, :empty]}, [line: 37], []}, {:%{}, [line: 38], [type: :directed]}]}]}]

07:20:07.960 [debug] Transforming recursive refs:
Body: {:if, [line: 28], [{:and, [line: 28], [{{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:from, [line: 28], nil}]}, {{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:to, [line: 28], nil}]}]}, [do: {:__block__, [], [{:=, [line: 29], [{:new_edge, [line: 29], nil}, {{:., [line: 29], [{:__aliases__, [line: 29], [:Graph]}, :edge]}, [line: 29], [{:from, [line: 29], nil}, {:to, [line: 29], nil}]}]}, {:case, [line: 31], [{:edges, [line: 31], nil}, [do: [{:->, [line: 32], [[{:%{}, [line: 32], [variant: :empty]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Graph]}, :graph]}, [line: 32], [{:vertices, [line: 32], nil}, {:new_edge, [line: 32], nil}]}]}, {:->, [line: 33], [[{:_, [line: 33], nil}], {{:., [line: 33], [{:__aliases__, [line: 33], [:Graph]}, :graph]}, [line: 33], [{:vertices, [line: 33], nil}, [{:|, [line: 33], [{:new_edge, [line: 33], nil}, {{:., [line: 33], [{:__aliases__, [line: 33], [:List]}, :wrap]}, [line: 33], [{:edges, [line: 33], nil}]}]}]]}]}]]]}]}, else: {:graph, [line: 36], nil}]]}
Bindings: [vertices: true, edges: true]
State: nil


07:20:07.960 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.960 [debug] Transforming recursive refs:
Body: {:graph, [line: 40], nil}
Bindings: []
State: nil


07:20:07.960 [debug] Final quoted expression: {:do_fold, [], [{:tree, [line: 56], nil}, {:%{}, [line: 56], [{0, 1}]}, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 57], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:__block__, [], [{:=, [line: 58], [{{:_, [line: 58], nil}, {:left_counts, [line: 58], nil}}, {:do_fold, [], [{:left, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 59], [{{:_, [line: 59], nil}, {:right_counts, [line: 59], nil}}, {:do_fold, [], [{:right, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, ...}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 62], [{:new_counts, [line: 62], nil}, {:|>, [line: 65], [{:|>, [line: 64], [{{:., [line: 63], [...]}, [line: 63], [{...}, ...]}, {{:., [...], ...}, [line: 64], [...]}]}, {{:., [line: 65], [{:__aliases__, [...], ...}, :put]}, [line: 65], [0, 1]}]}]}, {{:value, [line: 67], nil}, {:new_counts, [line: 67], nil}}]}]}, {:->, [line: 69], [[{:%{}, [], [variant: :leaf]}], {0, {:state, [line: 70], nil}}]}]]]}]}]}]}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/chain.ex:47: Chain.breaker/1


07:20:07.960 [debug] Generating fold cases: [{:->, [line: 26], [[{:case, [line: 26], [{:graph, [line: 26], [{:vertex_map, [line: 26], nil}, {:edge_list, [line: 26], nil}, {:metadata, [line: 26], nil}]}]}], {{:., [line: 27], [{:__aliases__, [line: 27], [:Graph]}, :graph]}, [line: 27], [{{:., [line: 28], [{:__aliases__, [line: 28], [:Map]}, :put]}, [line: 28], [{:vertex_map, [line: 28], nil}, {:id, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :vertex]}, [line: 28], [{:id, [line: 28], nil}, {:props, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :empty]}, [line: 28], []}]}]}, {:edge_list, [line: 29], nil}, {:metadata, [line: 30], nil}]}]}, {:->, [line: 34], [[{:case, [line: 34], [{:empty, [line: 34], []}]}], {{:., [line: 35], [{:__aliases__, [line: 35], [:Graph]}, :graph]}, [line: 35], [{:%{}, [line: 36], [{{:id, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :vertex]}, [line: 36], [{:id, [line: 36], nil}, {:props, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :empty]}, [line: 36], []}]}}]}, {{:., [line: 37], [{:__aliases__, [line: 37], [:Graph]}, :empty]}, [line: 37], []}, {:%{}, [line: 38], [type: :directed]}]}]}]

07:20:07.960 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph

07:20:07.961 [debug] Transforming recursive refs:
Body: {{:., [line: 27], [{:__aliases__, [line: 27], [:Graph]}, :graph]}, [line: 27], [{{:., [line: 28], [{:__aliases__, [line: 28], [:Map]}, :put]}, [line: 28], [{:vertex_map, [line: 28], nil}, {:id, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :vertex]}, [line: 28], [{:id, [line: 28], nil}, {:props, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :empty]}, [line: 28], []}]}]}, {:edge_list, [line: 29], nil}, {:metadata, [line: 30], nil}]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:07.961 [debug] Fold expression: {:list, [line: 67], nil}, opts: [], cases: [{:->, [line: 68], [[{:case, [line: 68], [{:cons, [line: 68], [{:head, [line: 68], nil}, {:tail, [line: 68], nil}]}]}], {{:., [line: 69], [{:__aliases__, [line: 69], [:List]}, :cons]}, [line: 69], [{{:., [line: 69], [{:transform_fn, [line: 69], nil}]}, [line: 69], [{:head, [line: 69], nil}]}, {:recu, [line: 69], [{:tail, [line: 69], nil}]}]}]}, {:->, [line: 71], [[{:case, [line: 71], [{:null, [line: 71], []}]}], {{:., [line: 72], [{:__aliases__, [line: 72], [:List]}, :null]}, [line: 72], []}]}]

07:20:07.961 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.961 [debug] Generated fold cases after transformation: [{:->, [line: 27], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {:if, [line: 28], [{:and, [line: 28], [{{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:from, [line: 28], nil}]}, {{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:to, [line: 28], nil}]}]}, [do: {:__block__, [], [{:=, [line: 29], [{:new_edge, [line: 29], nil}, {{:., [line: 29], [{:__aliases__, [line: 29], [:Graph]}, :edge]}, [line: 29], [{:from, [line: 29], nil}, {:to, [line: 29], nil}]}]}, {:case, [line: 31], [{:edges, [line: 31], nil}, [do: [{:->, [line: 32], [[{:%{}, [line: 32], [variant: :empty]}], {{:., [line: 32], [{:__aliases__, [line: 32], [:Graph]}, :graph]}, [line: 32], [{:vertices, [line: 32], nil}, {:new_edge, [line: 32], nil}]}]}, {:->, [line: 33], [[{:_, [line: 33], nil}], {{:., [line: 33], [{:__aliases__, [line: 33], [:Graph]}, :graph]}, [line: 33], [{:vertices, [line: 33], nil}, [{:|, [line: 33], [{:new_edge, [line: 33], nil}, {{:., [line: 33], [{:__aliases__, [line: 33], [:List]}, :wrap]}, [line: 33], [{:edges, [line: 33], nil}]}]}]]}]}]]]}]}, else: {:graph, [line: 36], nil}]]}]}, {:->, [line: 39], [[{:%{}, [], [variant: :empty]}], {:graph, [line: 40], nil}]}]

07:20:07.961 [debug] Extracting cases from list: [{:->, [line: 68], [[{:case, [line: 68], [{:cons, [line: 68], [{:head, [line: 68], nil}, {:tail, [line: 68], nil}]}]}], {{:., [line: 69], [{:__aliases__, [line: 69], [:List]}, :cons]}, [line: 69], [{{:., [line: 69], [{:transform_fn, [line: 69], nil}]}, [line: 69], [{:head, [line: 69], nil}]}, {:recu, [line: 69], [{:tail, [line: 69], nil}]}]}]}, {:->, [line: 71], [[{:case, [line: 71], [{:null, [line: 71], []}]}], {{:., [line: 72], [{:__aliases__, [line: 72], [:List]}, :null]}, [line: 72], []}]}]

07:20:07.961 [debug] Transforming recursive refs:
Body: {{:., [line: 35], [{:__aliases__, [line: 35], [:Graph]}, :graph]}, [line: 35], [{:%{}, [line: 36], [{{:id, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :vertex]}, [line: 36], [{:id, [line: 36], nil}, {:props, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :empty]}, [line: 36], []}]}}]}, {{:., [line: 37], [{:__aliases__, [line: 37], [:Graph]}, :empty]}, [line: 37], []}, {:%{}, [line: 38], [type: :directed]}]}
Bindings: []
State: nil


07:20:07.961 [debug] Extracted fold cases: [{:->, [line: 68], [[{:case, [line: 68], [{:cons, [line: 68], [{:head, [line: 68], nil}, {:tail, [line: 68], nil}]}]}], {{:., [line: 69], [{:__aliases__, [line: 69], [:List]}, :cons]}, [line: 69], [{{:., [line: 69], [{:transform_fn, [line: 69], nil}]}, [line: 69], [{:head, [line: 69], nil}]}, {:recu, [line: 69], [{:tail, [line: 69], nil}]}]}]}, {:->, [line: 71], [[{:case, [line: 71], [{:null, [line: 71], []}]}], {{:., [line: 72], [{:__aliases__, [line: 72], [:List]}, :null]}, [line: 72], []}]}]

07:20:07.961 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 26], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 27], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {:if, [line: 28], [{:and, [line: 28], [{{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:from, [line: 28], nil}]}, {{:., [line: 28], [{:__aliases__, [line: 28], [:MapSet]}, :member?]}, [line: 28], [{:vertices, [line: 28], nil}, {:to, [line: 28], nil}]}]}, [do: {:__block__, [], [{:=, [line: 29], [{:new_edge, [line: 29], nil}, {{:., [line: 29], [{:__aliases__, [line: 29], [...]}, :edge]}, [line: 29], [{:from, [line: 29], nil}, {:to, [line: 29], nil}]}]}, {:case, [line: 31], [{:edges, [line: 31], nil}, [do: [{:->, [line: 32], [[{...}], {...}]}, {:->, [line: 33], [[...], ...]}]]]}]}, else: {:graph, [line: 36], nil}]]}]}, {:->, [line: 39], [[{:%{}, [], [variant: :empty]}], {:graph, [line: 40], nil}]}]]]}]}]}]}

07:20:07.961 [debug] Generated fold cases after transformation: [{:->, [line: 26], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {{:., [line: 27], [{:__aliases__, [line: 27], [:Graph]}, :graph]}, [line: 27], [{{:., [line: 28], [{:__aliases__, [line: 28], [:Map]}, :put]}, [line: 28], [{:vertex_map, [line: 28], nil}, {:id, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :vertex]}, [line: 28], [{:id, [line: 28], nil}, {:props, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :empty]}, [line: 28], []}]}]}, {:edge_list, [line: 29], nil}, {:metadata, [line: 30], nil}]}]}, {:->, [line: 34], [[{:%{}, [], [variant: :empty]}], {{:., [line: 35], [{:__aliases__, [line: 35], [:Graph]}, :graph]}, [line: 35], [{:%{}, [line: 36], [{{:id, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :vertex]}, [line: 36], [{:id, [line: 36], nil}, {:props, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :empty]}, [line: 36], []}]}}]}, {{:., [line: 37], [{:__aliases__, [line: 37], [:Graph]}, :empty]}, [line: 37], []}, {:%{}, [line: 38], [type: :directed]}]}]}]

07:20:07.961 [debug] Generating fold cases: [{:->, [line: 68], [[{:case, [line: 68], [{:cons, [line: 68], [{:head, [line: 68], nil}, {:tail, [line: 68], nil}]}]}], {{:., [line: 69], [{:__aliases__, [line: 69], [:List]}, :cons]}, [line: 69], [{{:., [line: 69], [{:transform_fn, [line: 69], nil}]}, [line: 69], [{:head, [line: 69], nil}]}, {:recu, [line: 69], [{:tail, [line: 69], nil}]}]}]}, {:->, [line: 71], [[{:case, [line: 71], [{:null, [line: 71], []}]}], {{:., [line: 72], [{:__aliases__, [line: 72], [:List]}, :null]}, [line: 72], []}]}]

07:20:07.961 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons

07:20:07.961 [debug] Transforming recursive refs:
Body: {{:., [line: 69], [{:__aliases__, [line: 69], [:List]}, :cons]}, [line: 69], [{{:., [line: 69], [{:transform_fn, [line: 69], nil}]}, [line: 69], [{:head, [line: 69], nil}]}, {:recu, [line: 69], [{:tail, [line: 69], nil}]}]}
Bindings: [head: true, tail: true]
State: nil


07:20:07.961 [debug] Processing recursive reference: {:recu, [line: 69], [{:tail, [line: 69], nil}]}

07:20:07.961 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.961 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.961 [debug] Transforming recursive refs:
Body: {{:., [line: 72], [{:__aliases__, [line: 72], [:List]}, :null]}, [line: 72], []}
Bindings: []
State: nil

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/simple_graph.ex:26: SimpleGraph.add_edge/3


07:20:07.961 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 25], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 26], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {{:., [line: 27], [{:__aliases__, [line: 27], [:Graph]}, :graph]}, [line: 27], [{{:., [line: 28], [{:__aliases__, [line: 28], [:Map]}, :put]}, [line: 28], [{:vertex_map, [line: 28], nil}, {:id, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [line: 28], [:Graph]}, :vertex]}, [line: 28], [{:id, [line: 28], nil}, {:props, [line: 28], nil}, {{:., [line: 28], [{:__aliases__, [...], ...}, :empty]}, [line: 28], []}]}]}, {:edge_list, [line: 29], nil}, {:metadata, [line: 30], nil}]}]}, {:->, [line: 34], [[{:%{}, [], [variant: :empty]}], {{:., [line: 35], [{:__aliases__, [line: 35], [:Graph]}, :graph]}, [line: 35], [{:%{}, [line: 36], [{{:id, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, [line: 36], [:Graph]}, :vertex]}, [line: 36], [{:id, [line: 36], nil}, {:props, [line: 36], nil}, {{:., [line: 36], [{:__aliases__, ...}, :empty]}, [line: 36], []}]}}]}, {{:., [line: 37], [{:__aliases__, [line: 37], [:Graph]}, :empty]}, [line: 37], []}, {:%{}, [line: 38], [type: :directed]}]}]}]]]}]}]}]}

07:20:07.961 [debug] Generated fold cases after transformation: [{:->, [line: 68], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {{:., [line: 69], [{:__aliases__, [line: 69], [:List]}, :cons]}, [line: 69], [{{:., [line: 69], [{:transform_fn, [line: 69], nil}]}, [line: 69], [{:head, [line: 69], nil}]}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 71], [[{:%{}, [], [variant: :null]}], {{:., [line: 72], [{:__aliases__, [line: 72], [:List]}, :null]}, [line: 72], []}]}]

07:20:07.961 [debug] Fold expression: {:tree, [line: 128], nil}, opts: [], cases: [{:->, [line: 129], [[{:case, [line: 129], [{:node, [line: 129], [{:value, [line: 129], nil}, {:left, [line: 129], nil}, {:right, [line: 129], nil}]}]}], {:__block__, [], [{:=, [line: 130], [{:left_values, [line: 130], nil}, {:recu, [line: 130], [{:left, [line: 130], nil}]}]}, {:=, [line: 131], [{:right_values, [line: 131], nil}, {:recu, [line: 131], [{:right, [line: 131], nil}]}]}, {:++, [line: 132], [{:left_values, [line: 132], nil}, {:++, [line: 132], [[{:value, [line: 132], nil}], {:right_values, [line: 132], nil}]}]}]}]}, {:->, [line: 134], [[{:case, [line: 134], [{:leaf, [line: 134], []}]}], []]}]

07:20:07.961 [debug] Fold expression: {:graph, [line: 45], nil}, opts: [], cases: [{:->, [line: 46], [[{:case, [line: 46], [{:graph, [line: 46], [{:vertices, [line: 46], nil}, {:edges, [line: 46], nil}]}]}], {{:., [line: 46], [{:__aliases__, [line: 46], [:MapSet]}, :to_list]}, [line: 46], [{:vertices, [line: 46], nil}]}]}, {:->, [line: 47], [[{:case, [line: 47], [{:empty, [line: 47], []}]}], []]}]
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:25: PropGraph.add_vertex/3


07:20:07.961 [debug] Extracting cases from list: [{:->, [line: 46], [[{:case, [line: 46], [{:graph, [line: 46], [{:vertices, [line: 46], nil}, {:edges, [line: 46], nil}]}]}], {{:., [line: 46], [{:__aliases__, [line: 46], [:MapSet]}, :to_list]}, [line: 46], [{:vertices, [line: 46], nil}]}]}, {:->, [line: 47], [[{:case, [line: 47], [{:empty, [line: 47], []}]}], []]}]

07:20:07.961 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 67], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 68], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {{:., [line: 69], [{:__aliases__, [line: 69], [:List]}, :cons]}, [line: 69], [{{:., [line: 69], [{:transform_fn, [line: 69], nil}]}, [line: 69], [{:head, [line: 69], nil}]}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 71], [[{:%{}, [], [variant: :null]}], {{:., [line: 72], [{:__aliases__, [line: 72], [:List]}, :null]}, [line: 72], []}]}]]]}]}]}]}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/chain.ex:67: Chain.map/2

warning: variable "edges" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/simple_graph.ex:45: SimpleGraph.vertices/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/simple_graph.ex:45: SimpleGraph.vertices/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/parents.ex:128: Parents.collect_values/1


07:20:07.961 [debug] Extracting cases from list: [{:->, [line: 129], [[{:case, [line: 129], [{:node, [line: 129], [{:value, [line: 129], nil}, {:left, [line: 129], nil}, {:right, [line: 129], nil}]}]}], {:__block__, [], [{:=, [line: 130], [{:left_values, [line: 130], nil}, {:recu, [line: 130], [{:left, [line: 130], nil}]}]}, {:=, [line: 131], [{:right_values, [line: 131], nil}, {:recu, [line: 131], [{:right, [line: 131], nil}]}]}, {:++, [line: 132], [{:left_values, [line: 132], nil}, {:++, [line: 132], [[{:value, [line: 132], nil}], {:right_values, [line: 132], nil}]}]}]}]}, {:->, [line: 134], [[{:case, [line: 134], [{:leaf, [line: 134], []}]}], []]}]

07:20:07.961 [debug] Extracted fold cases: [{:->, [line: 46], [[{:case, [line: 46], [{:graph, [line: 46], [{:vertices, [line: 46], nil}, {:edges, [line: 46], nil}]}]}], {{:., [line: 46], [{:__aliases__, [line: 46], [:MapSet]}, :to_list]}, [line: 46], [{:vertices, [line: 46], nil}]}]}, {:->, [line: 47], [[{:case, [line: 47], [{:empty, [line: 47], []}]}], []]}]

07:20:07.961 [debug] Extracted fold cases: [{:->, [line: 129], [[{:case, [line: 129], [{:node, [line: 129], [{:value, [line: 129], nil}, {:left, [line: 129], nil}, {:right, [line: 129], nil}]}]}], {:__block__, [], [{:=, [line: 130], [{:left_values, [line: 130], nil}, {:recu, [line: 130], [{:left, [line: 130], nil}]}]}, {:=, [line: 131], [{:right_values, [line: 131], nil}, {:recu, [line: 131], [{:right, [line: 131], nil}]}]}, {:++, [line: 132], [{:left_values, [line: 132], nil}, {:++, [line: 132], [[{:value, [line: 132], nil}], {:right_values, [line: 132], nil}]}]}]}]}, {:->, [line: 134], [[{:case, [line: 134], [{:leaf, [line: 134], []}]}], []]}]

07:20:07.961 [debug] Generating fold cases: [{:->, [line: 46], [[{:case, [line: 46], [{:graph, [line: 46], [{:vertices, [line: 46], nil}, {:edges, [line: 46], nil}]}]}], {{:., [line: 46], [{:__aliases__, [line: 46], [:MapSet]}, :to_list]}, [line: 46], [{:vertices, [line: 46], nil}]}]}, {:->, [line: 47], [[{:case, [line: 47], [{:empty, [line: 47], []}]}], []]}]

07:20:07.961 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]} for variant: :graph

07:20:07.961 [debug] Transforming recursive refs:
Body: {{:., [line: 46], [{:__aliases__, [line: 46], [:MapSet]}, :to_list]}, [line: 46], [{:vertices, [line: 46], nil}]}
Bindings: [vertices: true, edges: true]
State: nil


07:20:07.961 [debug] Generating fold cases: [{:->, [line: 129], [[{:case, [line: 129], [{:node, [line: 129], [{:value, [line: 129], nil}, {:left, [line: 129], nil}, {:right, [line: 129], nil}]}]}], {:__block__, [], [{:=, [line: 130], [{:left_values, [line: 130], nil}, {:recu, [line: 130], [{:left, [line: 130], nil}]}]}, {:=, [line: 131], [{:right_values, [line: 131], nil}, {:recu, [line: 131], [{:right, [line: 131], nil}]}]}, {:++, [line: 132], [{:left_values, [line: 132], nil}, {:++, [line: 132], [[{:value, [line: 132], nil}], {:right_values, [line: 132], nil}]}]}]}]}, {:->, [line: 134], [[{:case, [line: 134], [{:leaf, [line: 134], []}]}], []]}]

07:20:07.961 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.962 [debug] Transforming recursive refs:
Body: []
Bindings: []
State: nil


07:20:07.962 [debug] Generated pattern: {:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]} for variant: :node

07:20:07.962 [debug] Generated fold cases after transformation: [{:->, [line: 46], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {{:., [line: 46], [{:__aliases__, [line: 46], [:MapSet]}, :to_list]}, [line: 46], [{:vertices, [line: 46], nil}]}]}, {:->, [line: 47], [[{:%{}, [], [variant: :empty]}], []]}]

07:20:07.962 [debug] Transforming recursive refs:
Body: {:__block__, [], [{:=, [line: 130], [{:left_values, [line: 130], nil}, {:recu, [line: 130], [{:left, [line: 130], nil}]}]}, {:=, [line: 131], [{:right_values, [line: 131], nil}, {:recu, [line: 131], [{:right, [line: 131], nil}]}]}, {:++, [line: 132], [{:left_values, [line: 132], nil}, {:++, [line: 132], [[{:value, [line: 132], nil}], {:right_values, [line: 132], nil}]}]}]}
Bindings: [value: true, left: true, right: true]
State: nil


07:20:07.962 [debug] Processing recursive reference: {:recu, [line: 130], [{:left, [line: 130], nil}]}

07:20:07.962 [debug] Transformed recursive reference to: {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.962 [debug] Processing recursive reference: {:recu, [line: 131], [{:right, [line: 131], nil}]}

07:20:07.962 [debug] Fold expression: {:list, [line: 81], nil}, opts: [], cases: [{:->, [line: 82], [[{:case, [line: 82], [{:cons, [line: 82], [{:head, [line: 82], nil}, {:tail, [line: 82], nil}]}]}], {:if, [line: 83], [{{:., [line: 83], [{:predicate, [line: 83], nil}]}, [line: 83], [{:head, [line: 83], nil}]}, [do: {{:., [line: 84], [{:__aliases__, [line: 84], [:List]}, :cons]}, [line: 84], [{:head, [line: 84], nil}, {:recu, [line: 84], [{:tail, [line: 84], nil}]}]}, else: {:recu, [line: 86], [{:tail, [line: 86], nil}]}]]}]}, {:->, [line: 89], [[{:case, [line: 89], [{:null, [line: 89], []}]}], {{:., [line: 90], [{:__aliases__, [line: 90], [:List]}, :null]}, [line: 90], []}]}]

07:20:07.962 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 45], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 46], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {{:., [line: 46], [{:__aliases__, [line: 46], [:MapSet]}, :to_list]}, [line: 46], [{:vertices, [line: 46], nil}]}]}, {:->, [line: 47], [[{:%{}, [], [variant: :empty]}], []]}]]]}]}]}]}

07:20:07.962 [debug] Transformed recursive reference to: {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.962 [debug] Generated pattern: {:%{}, [], [variant: :leaf]} for variant: :leaf

07:20:07.962 [debug] Transforming recursive refs:
Body: []
Bindings: []
State: nil


07:20:07.962 [debug] Fold expression: {:graph, [line: 46], nil}, opts: [], cases: [{:->, [line: 47], [[{:case, [line: 47], [{:graph, [line: 47], [{:vertex_map, [line: 47], nil}, {:edge_list, [line: 47], nil}, {:metadata, [line: 47], nil}]}]}], {:__block__, [], [{:=, [line: 48], [{:all_edges, [line: 48], nil}, {:if, [line: 49], [{:==, [line: 49], [{{:., [line: 49], [{:metadata, [line: 49], nil}, :type]}, [no_parens: true, line: 49], []}, :undirected]}, [do: {:__block__, [], [{:=, [line: 50], [{:reverse_edge, [line: 50], nil}, {{:., [line: 50], [{:__aliases__, [line: 50], [:Graph]}, :edge]}, [line: 50], [{:to_id, [line: 50], nil}, {:from_id, [line: 50], nil}, {:weight, [line: 50], nil}, {:props, [line: 50], nil}]}]}, [{:new_edge, [line: 51], nil}, {:reverse_edge, [line: 51], nil}]]}, else: [{:new_edge, [line: 53], nil}]]]}]}, {:=, [line: 57], [{:new_edge_list, [line: 57], nil}, {:case, [line: 58], [{:edge_list, [line: 58], nil}, [do: [{:->, [line: 59], [[{:%{}, [line: 59], [variant: :empty]}], {:hd, [line: 59], [{:all_edges, [line: 59], nil}]}]}, {:->, [line: 60], [[{:_, [line: 60], nil}], {:++, [line: 60], [{:all_edges, [line: 60], nil}, {{:., [line: 60], [{:__aliases__, [line: 60], [:List]}, :wrap]}, [line: 60], [{:edge_list, [line: 60], nil}]}]}]}]]]}]}, {{:., [line: 63], [{:__aliases__, [line: 63], [:Graph]}, :graph]}, [line: 63], [{:vertex_map, [line: 63], nil}, {:new_edge_list, [line: 63], nil}, {:metadata, [line: 63], nil}]}]}]}, {:->, [line: 65], [[{:case, [line: 65], [{:empty, [line: 65], []}]}], {{:., [line: 66], [{:__aliases__, [line: 66], [:Graph]}, :graph]}, [line: 66], [{:%{}, [line: 66], []}, {:new_edge, [line: 66], nil}, {:%{}, [line: 66], [type: :directed]}]}]}]

07:20:07.962 [debug] Extracting cases from list: [{:->, [line: 82], [[{:case, [line: 82], [{:cons, [line: 82], [{:head, [line: 82], nil}, {:tail, [line: 82], nil}]}]}], {:if, [line: 83], [{{:., [line: 83], [{:predicate, [line: 83], nil}]}, [line: 83], [{:head, [line: 83], nil}]}, [do: {{:., [line: 84], [{:__aliases__, [line: 84], [:List]}, :cons]}, [line: 84], [{:head, [line: 84], nil}, {:recu, [line: 84], [{:tail, [line: 84], nil}]}]}, else: {:recu, [line: 86], [{:tail, [line: 86], nil}]}]]}]}, {:->, [line: 89], [[{:case, [line: 89], [{:null, [line: 89], []}]}], {{:., [line: 90], [{:__aliases__, [line: 90], [:List]}, :null]}, [line: 90], []}]}]

07:20:07.962 [debug] Generated fold cases after transformation: [{:->, [line: 129], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:__block__, [], [{:=, [line: 130], [{:left_values, [line: 130], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 131], [{:right_values, [line: 131], nil}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:++, [line: 132], [{:left_values, [line: 132], nil}, {:++, [line: 132], [[{:value, [line: 132], nil}], {:right_values, [line: 132], nil}]}]}]}]}, {:->, [line: 134], [[{:%{}, [], [variant: :leaf]}], []]}]

07:20:07.962 [debug] Extracted fold cases: [{:->, [line: 82], [[{:case, [line: 82], [{:cons, [line: 82], [{:head, [line: 82], nil}, {:tail, [line: 82], nil}]}]}], {:if, [line: 83], [{{:., [line: 83], [{:predicate, [line: 83], nil}]}, [line: 83], [{:head, [line: 83], nil}]}, [do: {{:., [line: 84], [{:__aliases__, [line: 84], [:List]}, :cons]}, [line: 84], [{:head, [line: 84], nil}, {:recu, [line: 84], [{:tail, [line: 84], nil}]}]}, else: {:recu, [line: 86], [{:tail, [line: 86], nil}]}]]}]}, {:->, [line: 89], [[{:case, [line: 89], [{:null, [line: 89], []}]}], {{:., [line: 90], [{:__aliases__, [line: 90], [:List]}, :null]}, [line: 90], []}]}]

07:20:07.962 [debug] Extracting cases from list: [{:->, [line: 47], [[{:case, [line: 47], [{:graph, [line: 47], [{:vertex_map, [line: 47], nil}, {:edge_list, [line: 47], nil}, {:metadata, [line: 47], nil}]}]}], {:__block__, [], [{:=, [line: 48], [{:all_edges, [line: 48], nil}, {:if, [line: 49], [{:==, [line: 49], [{{:., [line: 49], [{:metadata, [line: 49], nil}, :type]}, [no_parens: true, line: 49], []}, :undirected]}, [do: {:__block__, [], [{:=, [line: 50], [{:reverse_edge, [line: 50], nil}, {{:., [line: 50], [{:__aliases__, [line: 50], [:Graph]}, :edge]}, [line: 50], [{:to_id, [line: 50], nil}, {:from_id, [line: 50], nil}, {:weight, [line: 50], nil}, {:props, [line: 50], nil}]}]}, [{:new_edge, [line: 51], nil}, {:reverse_edge, [line: 51], nil}]]}, else: [{:new_edge, [line: 53], nil}]]]}]}, {:=, [line: 57], [{:new_edge_list, [line: 57], nil}, {:case, [line: 58], [{:edge_list, [line: 58], nil}, [do: [{:->, [line: 59], [[{:%{}, [line: 59], [variant: :empty]}], {:hd, [line: 59], [{:all_edges, [line: 59], nil}]}]}, {:->, [line: 60], [[{:_, [line: 60], nil}], {:++, [line: 60], [{:all_edges, [line: 60], nil}, {{:., [line: 60], [{:__aliases__, [line: 60], [:List]}, :wrap]}, [line: 60], [{:edge_list, [line: 60], nil}]}]}]}]]]}]}, {{:., [line: 63], [{:__aliases__, [line: 63], [:Graph]}, :graph]}, [line: 63], [{:vertex_map, [line: 63], nil}, {:new_edge_list, [line: 63], nil}, {:metadata, [line: 63], nil}]}]}]}, {:->, [line: 65], [[{:case, [line: 65], [{:empty, [line: 65], []}]}], {{:., [line: 66], [{:__aliases__, [line: 66], [:Graph]}, :graph]}, [line: 66], [{:%{}, [line: 66], []}, {:new_edge, [line: 66], nil}, {:%{}, [line: 66], [type: :directed]}]}]}]

07:20:07.962 [debug] Generating fold cases: [{:->, [line: 82], [[{:case, [line: 82], [{:cons, [line: 82], [{:head, [line: 82], nil}, {:tail, [line: 82], nil}]}]}], {:if, [line: 83], [{{:., [line: 83], [{:predicate, [line: 83], nil}]}, [line: 83], [{:head, [line: 83], nil}]}, [do: {{:., [line: 84], [{:__aliases__, [line: 84], [:List]}, :cons]}, [line: 84], [{:head, [line: 84], nil}, {:recu, [line: 84], [{:tail, [line: 84], nil}]}]}, else: {:recu, [line: 86], [{:tail, [line: 86], nil}]}]]}]}, {:->, [line: 89], [[{:case, [line: 89], [{:null, [line: 89], []}]}], {{:., [line: 90], [{:__aliases__, [line: 90], [:List]}, :null]}, [line: 90], []}]}]

07:20:07.962 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons

07:20:07.962 [debug] Fold expression: {:graph, [line: 52], nil}, opts: [], cases: [{:->, [line: 53], [[{:case, [line: 53], [{:graph, [line: 53], [{:vertices, [line: 53], nil}, {:edges, [line: 53], nil}]}]}], {:if, [line: 54], [{{:., [line: 54], [{:__aliases__, [line: 54], [:MapSet]}, :member?]}, [line: 54], [{:vertices, [line: 54], nil}, {:vertex, [line: 54], nil}]}, [do: {:find_neighbors, [line: 55], [{:edges, [line: 55], nil}, {:vertex, [line: 55], nil}]}, else: []]]}]}, {:->, [line: 60], [[{:case, [line: 60], [{:empty, [line: 60], []}]}], []]}]

07:20:07.962 [debug] Transforming recursive refs:
Body: {:if, [line: 83], [{{:., [line: 83], [{:predicate, [line: 83], nil}]}, [line: 83], [{:head, [line: 83], nil}]}, [do: {{:., [line: 84], [{:__aliases__, [line: 84], [:List]}, :cons]}, [line: 84], [{:head, [line: 84], nil}, {:recu, [line: 84], [{:tail, [line: 84], nil}]}]}, else: {:recu, [line: 86], [{:tail, [line: 86], nil}]}]]}
Bindings: [head: true, tail: true]
State: nil


07:20:07.962 [debug] Final quoted expression: {:do_fold, [], [{:tree, [line: 128], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 129], [[{:%{}, [], [variant: :node, value: {:value, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:__block__, [], [{:=, [line: 130], [{:left_values, [line: 130], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 131], [{:right_values, [line: 131], nil}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, ...}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:++, [line: 132], [{:left_values, [line: 132], nil}, {:++, [line: 132], [[{:value, [line: 132], nil}], {:right_values, [line: 132], nil}]}]}]}]}, {:->, [line: 134], [[{:%{}, [], [variant: :leaf]}], []]}]]]}]}]}]}

07:20:07.962 [debug] Processing recursive reference: {:recu, [line: 84], [{:tail, [line: 84], nil}]}

07:20:07.962 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.962 [debug] Processing recursive reference: {:recu, [line: 86], [{:tail, [line: 86], nil}]}

07:20:07.962 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.962 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.962 [debug] Transforming recursive refs:
Body: {{:., [line: 90], [{:__aliases__, [line: 90], [:List]}, :null]}, [line: 90], []}
Bindings: []
State: nil


07:20:07.962 [debug] Extracting cases from list: [{:->, [line: 53], [[{:case, [line: 53], [{:graph, [line: 53], [{:vertices, [line: 53], nil}, {:edges, [line: 53], nil}]}]}], {:if, [line: 54], [{{:., [line: 54], [{:__aliases__, [line: 54], [:MapSet]}, :member?]}, [line: 54], [{:vertices, [line: 54], nil}, {:vertex, [line: 54], nil}]}, [do: {:find_neighbors, [line: 55], [{:edges, [line: 55], nil}, {:vertex, [line: 55], nil}]}, else: []]]}]}, {:->, [line: 60], [[{:case, [line: 60], [{:empty, [line: 60], []}]}], []]}]

07:20:07.962 [debug] Extracted fold cases: [{:->, [line: 47], [[{:case, [line: 47], [{:graph, [line: 47], [{:vertex_map, [line: 47], nil}, {:edge_list, [line: 47], nil}, {:metadata, [line: 47], nil}]}]}], {:__block__, [], [{:=, [line: 48], [{:all_edges, [line: 48], nil}, {:if, [line: 49], [{:==, [line: 49], [{{:., [line: 49], [{:metadata, [line: 49], nil}, :type]}, [no_parens: true, line: 49], []}, :undirected]}, [do: {:__block__, [], [{:=, [line: 50], [{:reverse_edge, [line: 50], nil}, {{:., [line: 50], [{:__aliases__, [line: 50], [:Graph]}, :edge]}, [line: 50], [{:to_id, [line: 50], nil}, {:from_id, [line: 50], nil}, {:weight, [line: 50], nil}, {:props, [line: 50], nil}]}]}, [{:new_edge, [line: 51], nil}, {:reverse_edge, [line: 51], nil}]]}, else: [{:new_edge, [line: 53], nil}]]]}]}, {:=, [line: 57], [{:new_edge_list, [line: 57], nil}, {:case, [line: 58], [{:edge_list, [line: 58], nil}, [do: [{:->, [line: 59], [[{:%{}, [line: 59], [variant: :empty]}], {:hd, [line: 59], [{:all_edges, [line: 59], nil}]}]}, {:->, [line: 60], [[{:_, [line: 60], nil}], {:++, [line: 60], [{:all_edges, [line: 60], nil}, {{:., [line: 60], [{:__aliases__, [line: 60], [:List]}, :wrap]}, [line: 60], [{:edge_list, [line: 60], nil}]}]}]}]]]}]}, {{:., [line: 63], [{:__aliases__, [line: 63], [:Graph]}, :graph]}, [line: 63], [{:vertex_map, [line: 63], nil}, {:new_edge_list, [line: 63], nil}, {:metadata, [line: 63], nil}]}]}]}, {:->, [line: 65], [[{:case, [line: 65], [{:empty, [line: 65], []}]}], {{:., [line: 66], [{:__aliases__, [line: 66], [:Graph]}, :graph]}, [line: 66], [{:%{}, [line: 66], []}, {:new_edge, [line: 66], nil}, {:%{}, [line: 66], [type: :directed]}]}]}]

07:20:07.962 [debug] Extracted fold cases: [{:->, [line: 53], [[{:case, [line: 53], [{:graph, [line: 53], [{:vertices, [line: 53], nil}, {:edges, [line: 53], nil}]}]}], {:if, [line: 54], [{{:., [line: 54], [{:__aliases__, [line: 54], [:MapSet]}, :member?]}, [line: 54], [{:vertices, [line: 54], nil}, {:vertex, [line: 54], nil}]}, [do: {:find_neighbors, [line: 55], [{:edges, [line: 55], nil}, {:vertex, [line: 55], nil}]}, else: []]]}]}, {:->, [line: 60], [[{:case, [line: 60], [{:empty, [line: 60], []}]}], []]}]

07:20:07.962 [debug] Generated fold cases after transformation: [{:->, [line: 82], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:if, [line: 83], [{{:., [line: 83], [{:predicate, [line: 83], nil}]}, [line: 83], [{:head, [line: 83], nil}]}, [do: {{:., [line: 84], [{:__aliases__, [line: 84], [:List]}, :cons]}, [line: 84], [{:head, [line: 84], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, else: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]]}]}, {:->, [line: 89], [[{:%{}, [], [variant: :null]}], {{:., [line: 90], [{:__aliases__, [line: 90], [:List]}, :null]}, [line: 90], []}]}]

07:20:07.962 [debug] Generating fold cases: [{:->, [line: 53], [[{:case, [line: 53], [{:graph, [line: 53], [{:vertices, [line: 53], nil}, {:edges, [line: 53], nil}]}]}], {:if, [line: 54], [{{:., [line: 54], [{:__aliases__, [line: 54], [:MapSet]}, :member?]}, [line: 54], [{:vertices, [line: 54], nil}, {:vertex, [line: 54], nil}]}, [do: {:find_neighbors, [line: 55], [{:edges, [line: 55], nil}, {:vertex, [line: 55], nil}]}, else: []]]}]}, {:->, [line: 60], [[{:case, [line: 60], [{:empty, [line: 60], []}]}], []]}]

07:20:07.962 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]} for variant: :graph

07:20:07.962 [debug] Transforming recursive refs:
Body: {:if, [line: 54], [{{:., [line: 54], [{:__aliases__, [line: 54], [:MapSet]}, :member?]}, [line: 54], [{:vertices, [line: 54], nil}, {:vertex, [line: 54], nil}]}, [do: {:find_neighbors, [line: 55], [{:edges, [line: 55], nil}, {:vertex, [line: 55], nil}]}, else: []]]}
Bindings: [vertices: true, edges: true]
State: nil


07:20:07.962 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.962 [debug] Transforming recursive refs:
Body: []
Bindings: []
State: nil


07:20:07.962 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 81], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 82], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:if, [line: 83], [{{:., [line: 83], [{:predicate, [line: 83], nil}]}, [line: 83], [{:head, [line: 83], nil}]}, [do: {{:., [line: 84], [{:__aliases__, [line: 84], [:List]}, :cons]}, [line: 84], [{:head, [line: 84], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, ...}, {...}]], [{:value, [], ...}]}]}]}, else: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]]}]}, {:->, [line: 89], [[{:%{}, [], [variant: :null]}], {{:., [line: 90], [{:__aliases__, [line: 90], [:List]}, :null]}, [line: 90], []}]}]]]}]}]}]}

07:20:07.963 [debug] Generating fold cases: [{:->, [line: 47], [[{:case, [line: 47], [{:graph, [line: 47], [{:vertex_map, [line: 47], nil}, {:edge_list, [line: 47], nil}, {:metadata, [line: 47], nil}]}]}], {:__block__, [], [{:=, [line: 48], [{:all_edges, [line: 48], nil}, {:if, [line: 49], [{:==, [line: 49], [{{:., [line: 49], [{:metadata, [line: 49], nil}, :type]}, [no_parens: true, line: 49], []}, :undirected]}, [do: {:__block__, [], [{:=, [line: 50], [{:reverse_edge, [line: 50], nil}, {{:., [line: 50], [{:__aliases__, [line: 50], [:Graph]}, :edge]}, [line: 50], [{:to_id, [line: 50], nil}, {:from_id, [line: 50], nil}, {:weight, [line: 50], nil}, {:props, [line: 50], nil}]}]}, [{:new_edge, [line: 51], nil}, {:reverse_edge, [line: 51], nil}]]}, else: [{:new_edge, [line: 53], nil}]]]}]}, {:=, [line: 57], [{:new_edge_list, [line: 57], nil}, {:case, [line: 58], [{:edge_list, [line: 58], nil}, [do: [{:->, [line: 59], [[{:%{}, [line: 59], [variant: :empty]}], {:hd, [line: 59], [{:all_edges, [line: 59], nil}]}]}, {:->, [line: 60], [[{:_, [line: 60], nil}], {:++, [line: 60], [{:all_edges, [line: 60], nil}, {{:., [line: 60], [{:__aliases__, [line: 60], [:List]}, :wrap]}, [line: 60], [{:edge_list, [line: 60], nil}]}]}]}]]]}]}, {{:., [line: 63], [{:__aliases__, [line: 63], [:Graph]}, :graph]}, [line: 63], [{:vertex_map, [line: 63], nil}, {:new_edge_list, [line: 63], nil}, {:metadata, [line: 63], nil}]}]}]}, {:->, [line: 65], [[{:case, [line: 65], [{:empty, [line: 65], []}]}], {{:., [line: 66], [{:__aliases__, [line: 66], [:Graph]}, :graph]}, [line: 66], [{:%{}, [line: 66], []}, {:new_edge, [line: 66], nil}, {:%{}, [line: 66], [type: :directed]}]}]}]

07:20:07.963 [debug] Generated fold cases after transformation: [{:->, [line: 53], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {:if, [line: 54], [{{:., [line: 54], [{:__aliases__, [line: 54], [:MapSet]}, :member?]}, [line: 54], [{:vertices, [line: 54], nil}, {:vertex, [line: 54], nil}]}, [do: {:find_neighbors, [line: 55], [{:edges, [line: 55], nil}, {:vertex, [line: 55], nil}]}, else: []]]}]}, {:->, [line: 60], [[{:%{}, [], [variant: :empty]}], []]}]

07:20:07.963 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/chain.ex:81: Chain.filter/2


07:20:07.963 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 52], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 53], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {:if, [line: 54], [{{:., [line: 54], [{:__aliases__, [line: 54], [:MapSet]}, :member?]}, [line: 54], [{:vertices, [line: 54], nil}, {:vertex, [line: 54], nil}]}, [do: {:find_neighbors, [line: 55], [{:edges, [line: 55], nil}, {:vertex, [line: 55], nil}]}, else: []]]}]}, {:->, [line: 60], [[{:%{}, [], [variant: :empty]}], []]}]]]}]}]}]}

07:20:07.963 [debug] Transforming recursive refs:
Body: {:__block__, [], [{:=, [line: 48], [{:all_edges, [line: 48], nil}, {:if, [line: 49], [{:==, [line: 49], [{{:., [line: 49], [{:metadata, [line: 49], nil}, :type]}, [no_parens: true, line: 49], []}, :undirected]}, [do: {:__block__, [], [{:=, [line: 50], [{:reverse_edge, [line: 50], nil}, {{:., [line: 50], [{:__aliases__, [line: 50], [:Graph]}, :edge]}, [line: 50], [{:to_id, [line: 50], nil}, {:from_id, [line: 50], nil}, {:weight, [line: 50], nil}, {:props, [line: 50], nil}]}]}, [{:new_edge, [line: 51], nil}, {:reverse_edge, [line: 51], nil}]]}, else: [{:new_edge, [line: 53], nil}]]]}]}, {:=, [line: 57], [{:new_edge_list, [line: 57], nil}, {:case, [line: 58], [{:edge_list, [line: 58], nil}, [do: [{:->, [line: 59], [[{:%{}, [line: 59], [variant: :empty]}], {:hd, [line: 59], [{:all_edges, [line: 59], nil}]}]}, {:->, [line: 60], [[{:_, [line: 60], nil}], {:++, [line: 60], [{:all_edges, [line: 60], nil}, {{:., [line: 60], [{:__aliases__, [line: 60], [:List]}, :wrap]}, [line: 60], [{:edge_list, [line: 60], nil}]}]}]}]]]}]}, {{:., [line: 63], [{:__aliases__, [line: 63], [:Graph]}, :graph]}, [line: 63], [{:vertex_map, [line: 63], nil}, {:new_edge_list, [line: 63], nil}, {:metadata, [line: 63], nil}]}]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:07.963 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.963 [debug] Transforming recursive refs:
Body: {{:., [line: 66], [{:__aliases__, [line: 66], [:Graph]}, :graph]}, [line: 66], [{:%{}, [line: 66], []}, {:new_edge, [line: 66], nil}, {:%{}, [line: 66], [type: :directed]}]}
Bindings: []
State: nil

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/simple_graph.ex:52: SimpleGraph.neighbors/2


07:20:07.963 [debug] Fold expression: {:list, [line: 115], nil}, opts: [], cases: [{:->, [line: 116], [[{:case, [line: 116], [{:cons, [line: 116], [{:head, [line: 116], nil}, {:tail, [line: 116], nil}]}]}], {:+, [line: 116], [1, {:recu, [line: 116], [{:tail, [line: 116], nil}]}]}]}, {:->, [line: 117], [[{:case, [line: 117], [{:null, [line: 117], []}]}], 0]}]

07:20:07.963 [debug] Extracting cases from list: [{:->, [line: 116], [[{:case, [line: 116], [{:cons, [line: 116], [{:head, [line: 116], nil}, {:tail, [line: 116], nil}]}]}], {:+, [line: 116], [1, {:recu, [line: 116], [{:tail, [line: 116], nil}]}]}]}, {:->, [line: 117], [[{:case, [line: 117], [{:null, [line: 117], []}]}], 0]}]

07:20:07.963 [debug] Extracted fold cases: [{:->, [line: 116], [[{:case, [line: 116], [{:cons, [line: 116], [{:head, [line: 116], nil}, {:tail, [line: 116], nil}]}]}], {:+, [line: 116], [1, {:recu, [line: 116], [{:tail, [line: 116], nil}]}]}]}, {:->, [line: 117], [[{:case, [line: 117], [{:null, [line: 117], []}]}], 0]}]

07:20:07.963 [debug] Generating fold cases: [{:->, [line: 116], [[{:case, [line: 116], [{:cons, [line: 116], [{:head, [line: 116], nil}, {:tail, [line: 116], nil}]}]}], {:+, [line: 116], [1, {:recu, [line: 116], [{:tail, [line: 116], nil}]}]}]}, {:->, [line: 117], [[{:case, [line: 117], [{:null, [line: 117], []}]}], 0]}]

07:20:07.963 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons

07:20:07.963 [debug] Transforming recursive refs:
Body: {:+, [line: 116], [1, {:recu, [line: 116], [{:tail, [line: 116], nil}]}]}
Bindings: [head: true, tail: true]
State: nil


07:20:07.963 [debug] Processing recursive reference: {:recu, [line: 116], [{:tail, [line: 116], nil}]}

07:20:07.963 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.963 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.963 [debug] Fold expression: {:graph, [line: 82], nil}, opts: [], cases: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertices, [line: 83], nil}, {:edges, [line: 83], nil}]}]}], {:if, [line: 84], [{:and, [line: 84], [{{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:start, [line: 84], nil}]}, {{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:target, [line: 84], nil}]}]}, [do: {:dfs, [line: 85], [{:edges, [line: 85], nil}, {:start, [line: 85], nil}, {:target, [line: 85], nil}, {{:., [line: 85], [{:__aliases__, [line: 85], [:MapSet]}, :new]}, [line: 85], []}]}, else: false]]}]}, {:->, [line: 90], [[{:case, [line: 90], [{:empty, [line: 90], []}]}], false]}]

07:20:07.963 [debug] Transforming recursive refs:
Body: 0
Bindings: []
State: nil


07:20:07.963 [debug] Generated fold cases after transformation: [{:->, [line: 116], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:+, [line: 116], [1, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 117], [[{:%{}, [], [variant: :null]}], 0]}]
warning: variable "head" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/chain.ex:115: Chain.length/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/chain.ex:115: Chain.length/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:46: PropGraph.add_edge/5


07:20:07.963 [debug] Generated fold cases after transformation: [{:->, [line: 47], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{:=, [line: 48], [{:all_edges, [line: 48], nil}, {:if, [line: 49], [{:==, [line: 49], [{{:., [line: 49], [{:metadata, [line: 49], nil}, :type]}, [no_parens: true, line: 49], []}, :undirected]}, [do: {:__block__, [], [{:=, [line: 50], [{:reverse_edge, [line: 50], nil}, {{:., [line: 50], [{:__aliases__, [line: 50], [:Graph]}, :edge]}, [line: 50], [{:to_id, [line: 50], nil}, {:from_id, [line: 50], nil}, {:weight, [line: 50], nil}, {:props, [line: 50], nil}]}]}, [{:new_edge, [line: 51], nil}, {:reverse_edge, [line: 51], nil}]]}, else: [{:new_edge, [line: 53], nil}]]]}]}, {:=, [line: 57], [{:new_edge_list, [line: 57], nil}, {:case, [line: 58], [{:edge_list, [line: 58], nil}, [do: [{:->, [line: 59], [[{:%{}, [line: 59], [variant: :empty]}], {:hd, [line: 59], [{:all_edges, [line: 59], nil}]}]}, {:->, [line: 60], [[{:_, [line: 60], nil}], {:++, [line: 60], [{:all_edges, [line: 60], nil}, {{:., [line: 60], [{:__aliases__, [line: 60], [:List]}, :wrap]}, [line: 60], [{:edge_list, [line: 60], nil}]}]}]}]]]}]}, {{:., [line: 63], [{:__aliases__, [line: 63], [:Graph]}, :graph]}, [line: 63], [{:vertex_map, [line: 63], nil}, {:new_edge_list, [line: 63], nil}, {:metadata, [line: 63], nil}]}]}]}, {:->, [line: 65], [[{:%{}, [], [variant: :empty]}], {{:., [line: 66], [{:__aliases__, [line: 66], [:Graph]}, :graph]}, [line: 66], [{:%{}, [line: 66], []}, {:new_edge, [line: 66], nil}, {:%{}, [line: 66], [type: :directed]}]}]}]

07:20:07.963 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 115], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 116], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:+, [line: 116], [1, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 117], [[{:%{}, [], [variant: :null]}], 0]}]]]}]}]}]}

07:20:07.963 [debug] Extracting cases from list: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertices, [line: 83], nil}, {:edges, [line: 83], nil}]}]}], {:if, [line: 84], [{:and, [line: 84], [{{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:start, [line: 84], nil}]}, {{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:target, [line: 84], nil}]}]}, [do: {:dfs, [line: 85], [{:edges, [line: 85], nil}, {:start, [line: 85], nil}, {:target, [line: 85], nil}, {{:., [line: 85], [{:__aliases__, [line: 85], [:MapSet]}, :new]}, [line: 85], []}]}, else: false]]}]}, {:->, [line: 90], [[{:case, [line: 90], [{:empty, [line: 90], []}]}], false]}]

07:20:07.963 [debug] Fold expression: {:obj, [line: 73], nil}, opts: [], cases: [{:->, [line: 74], [[{:case, [line: 74], [{:object, [line: 74], [{:props, [line: 74], nil}, {:proto, [line: 74], nil}]}]}], {:__block__, [], [{:=, [line: 75], [{:indent, [line: 75], nil}, {{:., [line: 75], [{:__aliases__, [line: 75], [:String]}, :duplicate]}, [line: 75], ["  ", {:level, [line: 75], nil}]}]}, {{:., [line: 76], [{:__aliases__, [line: 76], [:IO]}, :puts]}, [line: 76], [{:<<>>, [line: 76], [{:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:indent, [line: 76], nil}]}, {:binary, [line: 76], nil}]}, "Properties: ", {:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:inspect, [line: 76], [{:props, [line: 76], nil}]}]}, {:binary, [line: 76], nil}]}]}]}, {{:., [line: 77], [{:__aliases__, [line: 77], [:IO]}, :puts]}, [line: 77], [{:<<>>, [line: 77], [{:"::", [line: 77], [{{:., [line: 77], [Kernel, :to_string]}, [line: 77], [{:indent, [line: 77], nil}]}, {:binary, [line: 77], nil}]}, "Proto:"]}]}, {:recu, [line: 78], [{:proto, [line: 78], nil}]}]}]}, {:->, [line: 80], [[{:case, [line: 80], [{:null, [line: 80], []}]}], {:__block__, [], [{:=, [line: 81], [{:indent, [line: 81], nil}, {{:., [line: 81], [{:__aliases__, [line: 81], [:String]}, :duplicate]}, [line: 81], ["  ", {:level, [line: 81], nil}]}]}, {{:., [line: 82], [{:__aliases__, [line: 82], [:IO]}, :puts]}, [line: 82], [{:<<>>, [line: 82], [{:"::", [line: 82], [{{:., [line: 82], [Kernel, :to_string]}, [line: 82], [{:indent, [line: 82], nil}]}, {:binary, [line: 82], nil}]}, "[End of chain]"]}]}]}]}]

07:20:07.963 [debug] Extracted fold cases: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertices, [line: 83], nil}, {:edges, [line: 83], nil}]}]}], {:if, [line: 84], [{:and, [line: 84], [{{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:start, [line: 84], nil}]}, {{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:target, [line: 84], nil}]}]}, [do: {:dfs, [line: 85], [{:edges, [line: 85], nil}, {:start, [line: 85], nil}, {:target, [line: 85], nil}, {{:., [line: 85], [{:__aliases__, [line: 85], [:MapSet]}, :new]}, [line: 85], []}]}, else: false]]}]}, {:->, [line: 90], [[{:case, [line: 90], [{:empty, [line: 90], []}]}], false]}]

07:20:07.963 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 46], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 47], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{:=, [line: 48], [{:all_edges, [line: 48], nil}, {:if, [line: 49], [{:==, [line: 49], [{{:., [line: 49], [{:metadata, ...}, :type]}, [no_parens: true, line: 49], []}, :undirected]}, [do: {:__block__, [], [{:=, [line: 50], [{...}, ...]}, [{:new_edge, [...], ...}, {:reverse_edge, ...}]]}, else: [{:new_edge, [line: 53], nil}]]]}]}, {:=, [line: 57], [{:new_edge_list, [line: 57], nil}, {:case, [line: 58], [{:edge_list, [line: 58], nil}, [do: [{:->, [line: 59], [[{:%{}, ...}], {:hd, ...}]}, {:->, [line: 60], [[{...}], {...}]}]]]}]}, {{:., [line: 63], [{:__aliases__, [line: 63], [:Graph]}, :graph]}, [line: 63], [{:vertex_map, [line: 63], nil}, {:new_edge_list, [line: 63], nil}, {:metadata, [line: 63], nil}]}]}]}, {:->, [line: 65], [[{:%{}, [], [variant: :empty]}], {{:., [line: 66], [{:__aliases__, [line: 66], [:Graph]}, :graph]}, [line: 66], [{:%{}, [line: 66], []}, {:new_edge, [line: 66], nil}, {:%{}, [line: 66], [type: :directed]}]}]}]]]}]}]}]}

07:20:07.964 [debug] Generating fold cases: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertices, [line: 83], nil}, {:edges, [line: 83], nil}]}]}], {:if, [line: 84], [{:and, [line: 84], [{{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:start, [line: 84], nil}]}, {{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:target, [line: 84], nil}]}]}, [do: {:dfs, [line: 85], [{:edges, [line: 85], nil}, {:start, [line: 85], nil}, {:target, [line: 85], nil}, {{:., [line: 85], [{:__aliases__, [line: 85], [:MapSet]}, :new]}, [line: 85], []}]}, else: false]]}]}, {:->, [line: 90], [[{:case, [line: 90], [{:empty, [line: 90], []}]}], false]}]

07:20:07.964 [debug] Extracting cases from list: [{:->, [line: 74], [[{:case, [line: 74], [{:object, [line: 74], [{:props, [line: 74], nil}, {:proto, [line: 74], nil}]}]}], {:__block__, [], [{:=, [line: 75], [{:indent, [line: 75], nil}, {{:., [line: 75], [{:__aliases__, [line: 75], [:String]}, :duplicate]}, [line: 75], ["  ", {:level, [line: 75], nil}]}]}, {{:., [line: 76], [{:__aliases__, [line: 76], [:IO]}, :puts]}, [line: 76], [{:<<>>, [line: 76], [{:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:indent, [line: 76], nil}]}, {:binary, [line: 76], nil}]}, "Properties: ", {:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:inspect, [line: 76], [{:props, [line: 76], nil}]}]}, {:binary, [line: 76], nil}]}]}]}, {{:., [line: 77], [{:__aliases__, [line: 77], [:IO]}, :puts]}, [line: 77], [{:<<>>, [line: 77], [{:"::", [line: 77], [{{:., [line: 77], [Kernel, :to_string]}, [line: 77], [{:indent, [line: 77], nil}]}, {:binary, [line: 77], nil}]}, "Proto:"]}]}, {:recu, [line: 78], [{:proto, [line: 78], nil}]}]}]}, {:->, [line: 80], [[{:case, [line: 80], [{:null, [line: 80], []}]}], {:__block__, [], [{:=, [line: 81], [{:indent, [line: 81], nil}, {{:., [line: 81], [{:__aliases__, [line: 81], [:String]}, :duplicate]}, [line: 81], ["  ", {:level, [line: 81], nil}]}]}, {{:., [line: 82], [{:__aliases__, [line: 82], [:IO]}, :puts]}, [line: 82], [{:<<>>, [line: 82], [{:"::", [line: 82], [{{:., [line: 82], [Kernel, :to_string]}, [line: 82], [{:indent, [line: 82], nil}]}, {:binary, [line: 82], nil}]}, "[End of chain]"]}]}]}]}]

07:20:07.964 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]} for variant: :graph

07:20:07.964 [debug] Bend operation with var: :val, initial: {{:list, [line: 125], nil}, {{:., [line: 125], [{:__aliases__, [line: 125], [:List]}, :null]}, [line: 125], []}}

07:20:07.964 [debug] Transforming recursive refs:
Body: {:if, [line: 84], [{:and, [line: 84], [{{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:start, [line: 84], nil}]}, {{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:target, [line: 84], nil}]}]}, [do: {:dfs, [line: 85], [{:edges, [line: 85], nil}, {:start, [line: 85], nil}, {:target, [line: 85], nil}, {{:., [line: 85], [{:__aliases__, [line: 85], [:MapSet]}, :new]}, [line: 85], []}]}, else: false]]}
Bindings: [vertices: true, edges: true]
State: nil


07:20:07.964 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.964 [debug] Transforming recursive refs:
Body: false
Bindings: []
State: nil


07:20:07.964 [debug] Extracted fold cases: [{:->, [line: 74], [[{:case, [line: 74], [{:object, [line: 74], [{:props, [line: 74], nil}, {:proto, [line: 74], nil}]}]}], {:__block__, [], [{:=, [line: 75], [{:indent, [line: 75], nil}, {{:., [line: 75], [{:__aliases__, [line: 75], [:String]}, :duplicate]}, [line: 75], ["  ", {:level, [line: 75], nil}]}]}, {{:., [line: 76], [{:__aliases__, [line: 76], [:IO]}, :puts]}, [line: 76], [{:<<>>, [line: 76], [{:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:indent, [line: 76], nil}]}, {:binary, [line: 76], nil}]}, "Properties: ", {:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:inspect, [line: 76], [{:props, [line: 76], nil}]}]}, {:binary, [line: 76], nil}]}]}]}, {{:., [line: 77], [{:__aliases__, [line: 77], [:IO]}, :puts]}, [line: 77], [{:<<>>, [line: 77], [{:"::", [line: 77], [{{:., [line: 77], [Kernel, :to_string]}, [line: 77], [{:indent, [line: 77], nil}]}, {:binary, [line: 77], nil}]}, "Proto:"]}]}, {:recu, [line: 78], [{:proto, [line: 78], nil}]}]}]}, {:->, [line: 80], [[{:case, [line: 80], [{:null, [line: 80], []}]}], {:__block__, [], [{:=, [line: 81], [{:indent, [line: 81], nil}, {{:., [line: 81], [{:__aliases__, [line: 81], [:String]}, :duplicate]}, [line: 81], ["  ", {:level, [line: 81], nil}]}]}, {{:., [line: 82], [{:__aliases__, [line: 82], [:IO]}, :puts]}, [line: 82], [{:<<>>, [line: 82], [{:"::", [line: 82], [{{:., [line: 82], [Kernel, :to_string]}, [line: 82], [{:indent, [line: 82], nil}]}, {:binary, [line: 82], nil}]}, "[End of chain]"]}]}]}]}]

07:20:07.964 [debug] Generated fold cases after transformation: [{:->, [line: 83], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {:if, [line: 84], [{:and, [line: 84], [{{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:start, [line: 84], nil}]}, {{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:target, [line: 84], nil}]}]}, [do: {:dfs, [line: 85], [{:edges, [line: 85], nil}, {:start, [line: 85], nil}, {:target, [line: 85], nil}, {{:., [line: 85], [{:__aliases__, [line: 85], [:MapSet]}, :new]}, [line: 85], []}]}, else: false]]}]}, {:->, [line: 90], [[{:%{}, [], [variant: :empty]}], false]}]

07:20:07.964 [debug] Fork operation with expression: {:tail, [line: 131], nil}

07:20:07.964 [debug] Fold expression: {:graph, [line: 72], nil}, opts: [], cases: [{:->, [line: 73], [[{:case, [line: 73], [{:graph, [line: 73], [{:vertex_map, [line: 73], nil}, {:edge_list, [line: 73], nil}, {:metadata, [line: 73], nil}]}]}], {:map_size, [line: 74], [{:vertex_map, [line: 74], nil}]}]}, {:->, [line: 76], [[{:case, [line: 76], [{:empty, [line: 76], []}]}], 0]}]

07:20:07.964 [debug] Extracting cases from list: [{:->, [line: 73], [[{:case, [line: 73], [{:graph, [line: 73], [{:vertex_map, [line: 73], nil}, {:edge_list, [line: 73], nil}, {:metadata, [line: 73], nil}]}]}], {:map_size, [line: 74], [{:vertex_map, [line: 74], nil}]}]}, {:->, [line: 76], [[{:case, [line: 76], [{:empty, [line: 76], []}]}], 0]}]

07:20:07.964 [debug] Extracted fold cases: [{:->, [line: 73], [[{:case, [line: 73], [{:graph, [line: 73], [{:vertex_map, [line: 73], nil}, {:edge_list, [line: 73], nil}, {:metadata, [line: 73], nil}]}]}], {:map_size, [line: 74], [{:vertex_map, [line: 74], nil}]}]}, {:->, [line: 76], [[{:case, [line: 76], [{:empty, [line: 76], []}]}], 0]}]

07:20:07.964 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 82], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 83], [[{:%{}, [], [variant: :graph, vertices: {:vertices, [], nil}, edges: {:edges, [], nil}]}], {:if, [line: 84], [{:and, [line: 84], [{{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:start, [line: 84], nil}]}, {{:., [line: 84], [{:__aliases__, [line: 84], [:MapSet]}, :member?]}, [line: 84], [{:vertices, [line: 84], nil}, {:target, [line: 84], nil}]}]}, [do: {:dfs, [line: 85], [{:edges, [line: 85], nil}, {:start, [line: 85], nil}, {:target, [line: 85], nil}, {{:., [line: 85], [{:__aliases__, [line: 85], [:MapSet]}, :new]}, [line: 85], []}]}, else: false]]}]}, {:->, [line: 90], [[{:%{}, [], [variant: :empty]}], false]}]]]}]}]}]}

07:20:07.964 [debug] Generating fold cases: [{:->, [line: 73], [[{:case, [line: 73], [{:graph, [line: 73], [{:vertex_map, [line: 73], nil}, {:edge_list, [line: 73], nil}, {:metadata, [line: 73], nil}]}]}], {:map_size, [line: 74], [{:vertex_map, [line: 74], nil}]}]}, {:->, [line: 76], [[{:case, [line: 76], [{:empty, [line: 76], []}]}], 0]}]
warning: clauses with the same name and arity (number of arguments) should be grouped together, "def reverse/1" was previously defined (lib/abstract_pov/chain.ex:96)
  lib/abstract_pov/chain.ex:122


07:20:07.964 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph

07:20:07.964 [debug] Transforming recursive refs:
Body: {:map_size, [line: 74], [{:vertex_map, [line: 74], nil}]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:07.964 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.964 [debug] Transforming recursive refs:
Body: 0
Bindings: []
State: nil


07:20:07.964 [debug] Generated fold cases after transformation: [{:->, [line: 73], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:map_size, [line: 74], [{:vertex_map, [line: 74], nil}]}]}, {:->, [line: 76], [[{:%{}, [], [variant: :empty]}], 0]}]
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/simple_graph.ex:82: SimpleGraph.has_path?/3


07:20:07.964 [debug] Generating fold cases: [{:->, [line: 74], [[{:case, [line: 74], [{:object, [line: 74], [{:props, [line: 74], nil}, {:proto, [line: 74], nil}]}]}], {:__block__, [], [{:=, [line: 75], [{:indent, [line: 75], nil}, {{:., [line: 75], [{:__aliases__, [line: 75], [:String]}, :duplicate]}, [line: 75], ["  ", {:level, [line: 75], nil}]}]}, {{:., [line: 76], [{:__aliases__, [line: 76], [:IO]}, :puts]}, [line: 76], [{:<<>>, [line: 76], [{:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:indent, [line: 76], nil}]}, {:binary, [line: 76], nil}]}, "Properties: ", {:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:inspect, [line: 76], [{:props, [line: 76], nil}]}]}, {:binary, [line: 76], nil}]}]}]}, {{:., [line: 77], [{:__aliases__, [line: 77], [:IO]}, :puts]}, [line: 77], [{:<<>>, [line: 77], [{:"::", [line: 77], [{{:., [line: 77], [Kernel, :to_string]}, [line: 77], [{:indent, [line: 77], nil}]}, {:binary, [line: 77], nil}]}, "Proto:"]}]}, {:recu, [line: 78], [{:proto, [line: 78], nil}]}]}]}, {:->, [line: 80], [[{:case, [line: 80], [{:null, [line: 80], []}]}], {:__block__, [], [{:=, [line: 81], [{:indent, [line: 81], nil}, {{:., [line: 81], [{:__aliases__, [line: 81], [:String]}, :duplicate]}, [line: 81], ["  ", {:level, [line: 81], nil}]}]}, {{:., [line: 82], [{:__aliases__, [line: 82], [:IO]}, :puts]}, [line: 82], [{:<<>>, [line: 82], [{:"::", [line: 82], [{{:., [line: 82], [Kernel, :to_string]}, [line: 82], [{:indent, [line: 82], nil}]}, {:binary, [line: 82], nil}]}, "[End of chain]"]}]}]}]}]
warning: variable "edge_list" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:72: PropGraph.vertex_count/1

warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:72: PropGraph.vertex_count/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:72: PropGraph.vertex_count/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/chain.ex:153: Chain.concat/2

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prototypal.ex:73: Prototypal.inspect_object/2

warning: variable "vertex_map" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:82: PropGraph.edge_count/1


07:20:07.964 [debug] Generated pattern: {:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]} for variant: :object

07:20:07.964 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 72], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 73], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:map_size, [line: 74], [{:vertex_map, [line: 74], nil}]}]}, {:->, [line: 76], [[{:%{}, [], [variant: :empty]}], 0]}]]]}]}]}]}

07:20:07.964 [debug] Fold expression: {:list1, [line: 153], nil}, opts: [], cases: [{:->, [line: 154], [[{:case, [line: 154], [{:cons, [line: 154], [{:head, [line: 154], nil}, {:tail, [line: 154], nil}]}]}], {{:., [line: 155], [{:__aliases__, [line: 155], [:List]}, :cons]}, [line: 155], [{:head, [line: 155], nil}, {:recu, [line: 155], [{:tail, [line: 155], nil}]}]}]}, {:->, [line: 157], [[{:case, [line: 157], [{:null, [line: 157], []}]}], {:list2, [line: 158], nil}]}]

07:20:07.964 [debug] Transforming recursive refs:
Body: {:__block__, [], [{:=, [line: 75], [{:indent, [line: 75], nil}, {{:., [line: 75], [{:__aliases__, [line: 75], [:String]}, :duplicate]}, [line: 75], ["  ", {:level, [line: 75], nil}]}]}, {{:., [line: 76], [{:__aliases__, [line: 76], [:IO]}, :puts]}, [line: 76], [{:<<>>, [line: 76], [{:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:indent, [line: 76], nil}]}, {:binary, [line: 76], nil}]}, "Properties: ", {:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:inspect, [line: 76], [{:props, [line: 76], nil}]}]}, {:binary, [line: 76], nil}]}]}]}, {{:., [line: 77], [{:__aliases__, [line: 77], [:IO]}, :puts]}, [line: 77], [{:<<>>, [line: 77], [{:"::", [line: 77], [{{:., [line: 77], [Kernel, :to_string]}, [line: 77], [{:indent, [line: 77], nil}]}, {:binary, [line: 77], nil}]}, "Proto:"]}]}, {:recu, [line: 78], [{:proto, [line: 78], nil}]}]}
Bindings: [props: true, proto: true]
State: nil


07:20:07.964 [debug] Extracting cases from list: [{:->, [line: 154], [[{:case, [line: 154], [{:cons, [line: 154], [{:head, [line: 154], nil}, {:tail, [line: 154], nil}]}]}], {{:., [line: 155], [{:__aliases__, [line: 155], [:List]}, :cons]}, [line: 155], [{:head, [line: 155], nil}, {:recu, [line: 155], [{:tail, [line: 155], nil}]}]}]}, {:->, [line: 157], [[{:case, [line: 157], [{:null, [line: 157], []}]}], {:list2, [line: 158], nil}]}]

07:20:07.964 [debug] Processing recursive reference: {:recu, [line: 78], [{:proto, [line: 78], nil}]}

07:20:07.964 [debug] Transformed recursive reference to: {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.964 [debug] Extracted fold cases: [{:->, [line: 154], [[{:case, [line: 154], [{:cons, [line: 154], [{:head, [line: 154], nil}, {:tail, [line: 154], nil}]}]}], {{:., [line: 155], [{:__aliases__, [line: 155], [:List]}, :cons]}, [line: 155], [{:head, [line: 155], nil}, {:recu, [line: 155], [{:tail, [line: 155], nil}]}]}]}, {:->, [line: 157], [[{:case, [line: 157], [{:null, [line: 157], []}]}], {:list2, [line: 158], nil}]}]

07:20:07.964 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.964 [debug] Generating fold cases: [{:->, [line: 154], [[{:case, [line: 154], [{:cons, [line: 154], [{:head, [line: 154], nil}, {:tail, [line: 154], nil}]}]}], {{:., [line: 155], [{:__aliases__, [line: 155], [:List]}, :cons]}, [line: 155], [{:head, [line: 155], nil}, {:recu, [line: 155], [{:tail, [line: 155], nil}]}]}]}, {:->, [line: 157], [[{:case, [line: 157], [{:null, [line: 157], []}]}], {:list2, [line: 158], nil}]}]

07:20:07.964 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons

07:20:07.964 [debug] Transforming recursive refs:
Body: {{:., [line: 155], [{:__aliases__, [line: 155], [:List]}, :cons]}, [line: 155], [{:head, [line: 155], nil}, {:recu, [line: 155], [{:tail, [line: 155], nil}]}]}
Bindings: [head: true, tail: true]
State: nil


07:20:07.964 [debug] Transforming recursive refs:
Body: {:__block__, [], [{:=, [line: 81], [{:indent, [line: 81], nil}, {{:., [line: 81], [{:__aliases__, [line: 81], [:String]}, :duplicate]}, [line: 81], ["  ", {:level, [line: 81], nil}]}]}, {{:., [line: 82], [{:__aliases__, [line: 82], [:IO]}, :puts]}, [line: 82], [{:<<>>, [line: 82], [{:"::", [line: 82], [{{:., [line: 82], [Kernel, :to_string]}, [line: 82], [{:indent, [line: 82], nil}]}, {:binary, [line: 82], nil}]}, "[End of chain]"]}]}]}
Bindings: []
State: nil


07:20:07.964 [debug] Processing recursive reference: {:recu, [line: 155], [{:tail, [line: 155], nil}]}

07:20:07.965 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.965 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.965 [debug] Transforming recursive refs:
Body: {:list2, [line: 158], nil}
Bindings: []
State: nil


07:20:07.965 [debug] Fold expression: {:graph, [line: 82], nil}, opts: [], cases: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertex_map, [line: 83], nil}, {:edge_list, [line: 83], nil}, {:metadata, [line: 83], nil}]}]}], {:__block__, [], [{:=, [line: 84], [{:count, [line: 84], nil}, {:count_edges, [line: 84], [{:edge_list, [line: 84], nil}]}]}, {:if, [line: 86], [{:==, [line: 86], [{{:., [line: 86], [{:metadata, [line: 86], nil}, :type]}, [no_parens: true, line: 86], []}, :undirected]}, [do: {:div, [line: 88], [{:count, [line: 88], nil}, 2]}, else: {:count, [line: 90], nil}]]}]}]}, {:->, [line: 93], [[{:case, [line: 93], [{:empty, [line: 93], []}]}], 0]}]

07:20:07.965 [debug] Generated fold cases after transformation: [{:->, [line: 154], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {{:., [line: 155], [{:__aliases__, [line: 155], [:List]}, :cons]}, [line: 155], [{:head, [line: 155], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 157], [[{:%{}, [], [variant: :null]}], {:list2, [line: 158], nil}]}]
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:82: PropGraph.edge_count/1


07:20:07.965 [debug] Extracting cases from list: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertex_map, [line: 83], nil}, {:edge_list, [line: 83], nil}, {:metadata, [line: 83], nil}]}]}], {:__block__, [], [{:=, [line: 84], [{:count, [line: 84], nil}, {:count_edges, [line: 84], [{:edge_list, [line: 84], nil}]}]}, {:if, [line: 86], [{:==, [line: 86], [{{:., [line: 86], [{:metadata, [line: 86], nil}, :type]}, [no_parens: true, line: 86], []}, :undirected]}, [do: {:div, [line: 88], [{:count, [line: 88], nil}, 2]}, else: {:count, [line: 90], nil}]]}]}]}, {:->, [line: 93], [[{:case, [line: 93], [{:empty, [line: 93], []}]}], 0]}]

07:20:07.965 [debug] Generated fold cases after transformation: [{:->, [line: 74], [[{:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]}], {:__block__, [], [{:=, [line: 75], [{:indent, [line: 75], nil}, {{:., [line: 75], [{:__aliases__, [line: 75], [:String]}, :duplicate]}, [line: 75], ["  ", {:level, [line: 75], nil}]}]}, {{:., [line: 76], [{:__aliases__, [line: 76], [:IO]}, :puts]}, [line: 76], [{:<<>>, [line: 76], [{:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:indent, [line: 76], nil}]}, {:binary, [line: 76], nil}]}, "Properties: ", {:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:inspect, [line: 76], [{:props, [line: 76], nil}]}]}, {:binary, [line: 76], nil}]}]}]}, {{:., [line: 77], [{:__aliases__, [line: 77], [:IO]}, :puts]}, [line: 77], [{:<<>>, [line: 77], [{:"::", [line: 77], [{{:., [line: 77], [Kernel, :to_string]}, [line: 77], [{:indent, [line: 77], nil}]}, {:binary, [line: 77], nil}]}, "Proto:"]}]}, {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 80], [[{:%{}, [], [variant: :null]}], {:__block__, [], [{:=, [line: 81], [{:indent, [line: 81], nil}, {{:., [line: 81], [{:__aliases__, [line: 81], [:String]}, :duplicate]}, [line: 81], ["  ", {:level, [line: 81], nil}]}]}, {{:., [line: 82], [{:__aliases__, [line: 82], [:IO]}, :puts]}, [line: 82], [{:<<>>, [line: 82], [{:"::", [line: 82], [{{:., [line: 82], [Kernel, :to_string]}, [line: 82], [{:indent, [line: 82], nil}]}, {:binary, [line: 82], nil}]}, "[End of chain]"]}]}]}]}]

07:20:07.965 [debug] Extracted fold cases: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertex_map, [line: 83], nil}, {:edge_list, [line: 83], nil}, {:metadata, [line: 83], nil}]}]}], {:__block__, [], [{:=, [line: 84], [{:count, [line: 84], nil}, {:count_edges, [line: 84], [{:edge_list, [line: 84], nil}]}]}, {:if, [line: 86], [{:==, [line: 86], [{{:., [line: 86], [{:metadata, [line: 86], nil}, :type]}, [no_parens: true, line: 86], []}, :undirected]}, [do: {:div, [line: 88], [{:count, [line: 88], nil}, 2]}, else: {:count, [line: 90], nil}]]}]}]}, {:->, [line: 93], [[{:case, [line: 93], [{:empty, [line: 93], []}]}], 0]}]

07:20:07.965 [debug] Final quoted expression: {:do_fold, [], [{:list1, [line: 153], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 154], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {{:., [line: 155], [{:__aliases__, [line: 155], [:List]}, :cons]}, [line: 155], [{:head, [line: 155], nil}, {:do_fold, [], [{:tail, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 157], [[{:%{}, [], [variant: :null]}], {:list2, [line: 158], nil}]}]]]}]}]}]}

07:20:07.965 [debug] Generating fold cases: [{:->, [line: 83], [[{:case, [line: 83], [{:graph, [line: 83], [{:vertex_map, [line: 83], nil}, {:edge_list, [line: 83], nil}, {:metadata, [line: 83], nil}]}]}], {:__block__, [], [{:=, [line: 84], [{:count, [line: 84], nil}, {:count_edges, [line: 84], [{:edge_list, [line: 84], nil}]}]}, {:if, [line: 86], [{:==, [line: 86], [{{:., [line: 86], [{:metadata, [line: 86], nil}, :type]}, [no_parens: true, line: 86], []}, :undirected]}, [do: {:div, [line: 88], [{:count, [line: 88], nil}, 2]}, else: {:count, [line: 90], nil}]]}]}]}, {:->, [line: 93], [[{:case, [line: 93], [{:empty, [line: 93], []}]}], 0]}]

07:20:07.965 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph

07:20:07.965 [debug] Transforming recursive refs:
Body: {:__block__, [], [{:=, [line: 84], [{:count, [line: 84], nil}, {:count_edges, [line: 84], [{:edge_list, [line: 84], nil}]}]}, {:if, [line: 86], [{:==, [line: 86], [{{:., [line: 86], [{:metadata, [line: 86], nil}, :type]}, [no_parens: true, line: 86], []}, :undirected]}, [do: {:div, [line: 88], [{:count, [line: 88], nil}, 2]}, else: {:count, [line: 90], nil}]]}]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:07.965 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.965 [debug] Transforming recursive refs:
Body: 0
Bindings: []
State: nil


07:20:07.965 [debug] Final quoted expression: {:do_fold, [], [{:obj, [line: 73], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 74], [[{:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]}], {:__block__, [], [{:=, [line: 75], [{:indent, [line: 75], nil}, {{:., [line: 75], [{:__aliases__, [line: 75], [:String]}, :duplicate]}, [line: 75], ["  ", {:level, [line: 75], nil}]}]}, {{:., [line: 76], [{:__aliases__, [line: 76], [:IO]}, :puts]}, [line: 76], [{:<<>>, [line: 76], [{:"::", [line: 76], [{{:., [line: 76], [Kernel, :to_string]}, [line: 76], [{:indent, [...], ...}]}, {:binary, [line: 76], nil}]}, "Properties: ", {:"::", [line: 76], [{{:., [line: 76], [...]}, [line: 76], [{...}]}, {:binary, [line: 76], nil}]}]}]}, {{:., [line: 77], [{:__aliases__, [line: 77], [:IO]}, :puts]}, [line: 77], [{:<<>>, [line: 77], [{:"::", [line: 77], [{{:., [line: 77], [Kernel, ...]}, [line: 77], [{:indent, ...}]}, {:binary, [line: 77], nil}]}, "Proto:"]}]}, {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 80], [[{:%{}, [], [variant: :null]}], {:__block__, [], [{:=, [line: 81], [{:indent, [line: 81], nil}, {{:., [line: 81], [{:__aliases__, [line: 81], [:String]}, :duplicate]}, [line: 81], ["  ", {:level, [line: 81], nil}]}]}, {{:., [line: 82], [{:__aliases__, [line: 82], [:IO]}, :puts]}, [line: 82], [{:<<>>, [line: 82], [{:"::", [line: 82], [{{:., [line: 82], [Kernel, ...]}, [line: 82], [{:indent, ...}]}, {:binary, [line: 82], nil}]}, "[End of chain]"]}]}]}]}]]]}]}]}]}

07:20:07.965 [debug] Generated fold cases after transformation: [{:->, [line: 83], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{:=, [line: 84], [{:count, [line: 84], nil}, {:count_edges, [line: 84], [{:edge_list, [line: 84], nil}]}]}, {:if, [line: 86], [{:==, [line: 86], [{{:., [line: 86], [{:metadata, [line: 86], nil}, :type]}, [no_parens: true, line: 86], []}, :undirected]}, [do: {:div, [line: 88], [{:count, [line: 88], nil}, 2]}, else: {:count, [line: 90], nil}]]}]}]}, {:->, [line: 93], [[{:%{}, [], [variant: :empty]}], 0]}]

07:20:07.965 [debug] Fold expression: {:list, [line: 166], nil}, opts: [with: {:initial, [line: 166], nil}], cases: [{:->, [line: 167], [[{:case, [line: 167], [{:cons, [line: 167], [{:head, [line: 167], nil}, {:tail, [line: 167], nil}]}]}], {:__block__, [line: 178], [{:=, [line: 169], [{{:_tail_result, [line: 169], nil}, {:acc, [line: 169], nil}}, {:recu, [line: 169], [{:tail, [line: 169], nil}]}]}, {{{:., [line: 172], [{:__aliases__, [counter: {Chain, 76}, line: 172], [:List]}, :null]}, [line: 172], []}, {{:., [line: 172], [{:fun, [line: 172], nil}]}, [line: 172], [{:acc, [line: 172], nil}, {:head, [line: 172], nil}]}}]}]}, {:->, [line: 174], [[{:case, [line: 174], [{:null, [line: 174], []}]}], {{{:., [line: 176], [{:__aliases__, [counter: {Chain, 76}, line: 176], [:List]}, :null]}, [line: 176], []}, {:state, [line: 176], nil}}]}]

07:20:07.965 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 82], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 83], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{:=, [line: 84], [{:count, [line: 84], nil}, {:count_edges, [line: 84], [{:edge_list, [line: 84], nil}]}]}, {:if, [line: 86], [{:==, [line: 86], [{{:., [line: 86], [{:metadata, [line: 86], nil}, :type]}, [no_parens: true, line: 86], []}, :undirected]}, [do: {:div, [line: 88], [{:count, [line: 88], nil}, 2]}, else: {:count, [line: 90], nil}]]}]}]}, {:->, [line: 93], [[{:%{}, [], [variant: :empty]}], 0]}]]]}]}]}]}

07:20:07.965 [debug] Extracting cases from list: [{:->, [line: 167], [[{:case, [line: 167], [{:cons, [line: 167], [{:head, [line: 167], nil}, {:tail, [line: 167], nil}]}]}], {:__block__, [line: 178], [{:=, [line: 169], [{{:_tail_result, [line: 169], nil}, {:acc, [line: 169], nil}}, {:recu, [line: 169], [{:tail, [line: 169], nil}]}]}, {{{:., [line: 172], [{:__aliases__, [counter: {Chain, 76}, line: 172], [:List]}, :null]}, [line: 172], []}, {{:., [line: 172], [{:fun, [line: 172], nil}]}, [line: 172], [{:acc, [line: 172], nil}, {:head, [line: 172], nil}]}}]}]}, {:->, [line: 174], [[{:case, [line: 174], [{:null, [line: 174], []}]}], {{{:., [line: 176], [{:__aliases__, [counter: {Chain, 76}, line: 176], [:List]}, :null]}, [line: 176], []}, {:state, [line: 176], nil}}]}]

07:20:07.965 [debug] Extracted fold cases: [{:->, [line: 167], [[{:case, [line: 167], [{:cons, [line: 167], [{:head, [line: 167], nil}, {:tail, [line: 167], nil}]}]}], {:__block__, [line: 178], [{:=, [line: 169], [{{:_tail_result, [line: 169], nil}, {:acc, [line: 169], nil}}, {:recu, [line: 169], [{:tail, [line: 169], nil}]}]}, {{{:., [line: 172], [{:__aliases__, [counter: {Chain, 76}, line: 172], [:List]}, :null]}, [line: 172], []}, {{:., [line: 172], [{:fun, [line: 172], nil}]}, [line: 172], [{:acc, [line: 172], nil}, {:head, [line: 172], nil}]}}]}]}, {:->, [line: 174], [[{:case, [line: 174], [{:null, [line: 174], []}]}], {{{:., [line: 176], [{:__aliases__, [counter: {Chain, 76}, line: 176], [:List]}, :null]}, [line: 176], []}, {:state, [line: 176], nil}}]}]

07:20:07.965 [debug] Generating fold cases: [{:->, [line: 167], [[{:case, [line: 167], [{:cons, [line: 167], [{:head, [line: 167], nil}, {:tail, [line: 167], nil}]}]}], {:__block__, [line: 178], [{:=, [line: 169], [{{:_tail_result, [line: 169], nil}, {:acc, [line: 169], nil}}, {:recu, [line: 169], [{:tail, [line: 169], nil}]}]}, {{{:., [line: 172], [{:__aliases__, [counter: {Chain, 76}, line: 172], [:List]}, :null]}, [line: 172], []}, {{:., [line: 172], [{:fun, [line: 172], nil}]}, [line: 172], [{:acc, [line: 172], nil}, {:head, [line: 172], nil}]}}]}]}, {:->, [line: 174], [[{:case, [line: 174], [{:null, [line: 174], []}]}], {{{:., [line: 176], [{:__aliases__, [counter: {Chain, 76}, line: 176], [:List]}, :null]}, [line: 176], []}, {:state, [line: 176], nil}}]}]

07:20:07.965 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons

07:20:07.966 [debug] Transforming recursive refs:
Body: {:__block__, [line: 178], [{:=, [line: 169], [{{:_tail_result, [line: 169], nil}, {:acc, [line: 169], nil}}, {:recu, [line: 169], [{:tail, [line: 169], nil}]}]}, {{{:., [line: 172], [{:__aliases__, [counter: {Chain, 76}, line: 172], [:List]}, :null]}, [line: 172], []}, {{:., [line: 172], [{:fun, [line: 172], nil}]}, [line: 172], [{:acc, [line: 172], nil}, {:head, [line: 172], nil}]}}]}
Bindings: [head: true, tail: true]
State: {:initial, [line: 166], nil}


07:20:07.966 [debug] Processing recursive reference: {:recu, [line: 169], [{:tail, [line: 169], nil}]}

07:20:07.966 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}

07:20:07.966 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.966 [debug] Transforming recursive refs:
Body: {{{:., [line: 176], [{:__aliases__, [counter: {Chain, 76}, line: 176], [:List]}, :null]}, [line: 176], []}, {:state, [line: 176], nil}}
Bindings: []
State: {:initial, [line: 166], nil}


07:20:07.966 [debug] Fold expression: {:obj, [line: 87], nil}, opts: [], cases: [{:->, [line: 88], [[{:case, [line: 88], [{:object, [line: 88], [{:props, [line: 88], nil}, {:proto, [line: 88], nil}]}]}], {:case, [line: 89], [{{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :get]}, [line: 89], [{:props, [line: 89], nil}, {:key, [line: 89], nil}]}, [do: [{:->, [line: 90], [[nil], {:__block__, [], [{{:., [line: 91], [{:__aliases__, [line: 91], [:IO]}, :puts]}, [line: 91], [{:<<>>, [line: 91], ["Not found in ", {:"::", [line: 91], [{{:., [line: 91], [Kernel, :to_string]}, [line: 91], [{:inspect, [line: 91], [{:props, [line: 91], nil}]}]}, {:binary, [line: 91], nil}]}, ", checking prototype"]}]}, {:recu, [line: 92], [{:proto, [line: 92], nil}]}]}]}, {:->, [line: 94], [[{:val, [line: 94], nil}], {:__block__, [], [{{:., [line: 95], [{:__aliases__, [line: 95], [:IO]}, :puts]}, [line: 95], [{:<<>>, [line: 95], ["Found ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:key, [line: 95], nil}]}, {:binary, [line: 95], nil}]}, ": ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:val, [line: 95], nil}]}]}, {:binary, [line: 95], nil}]}, " in ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:props, [...], ...}]}]}, {:binary, [line: 95], nil}]}]}]}, {:val, [line: 96], nil}]}]}]]]}]}, {:->, [line: 99], [[{:case, [line: 99], [{:null, [line: 99], []}]}], {:__block__, [], [{{:., [line: 100], [{:__aliases__, [line: 100], [:IO]}, :puts]}, [line: 100], ["Reached end of prototype chain"]}, nil]}]}]

07:20:07.966 [debug] Generated fold cases after transformation: [{:->, [line: 167], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 178], [{:=, [line: 169], [{{:_tail_result, [line: 169], nil}, {:acc, [line: 169], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {{{:., [line: 172], [{:__aliases__, [counter: {Chain, 76}, line: 172], [:List]}, :null]}, [line: 172], []}, {{:., [line: 172], [{:fun, [line: 172], nil}]}, [line: 172], [{:acc, [line: 172], nil}, {:head, [line: 172], nil}]}}]}]}, {:->, [line: 174], [[{:%{}, [], [variant: :null]}], {{{:., [line: 176], [{:__aliases__, [counter: {Chain, 76}, line: 176], [:List]}, :null]}, [line: 176], []}, {:state, [line: 176], nil}}]}]

07:20:07.966 [debug] Fold expression: {:graph, [line: 99], nil}, opts: [], cases: [{:->, [line: 100], [[{:case, [line: 100], [{:graph, [line: 100], [{:vertex_map, [line: 100], nil}, {:edge_list, [line: 100], nil}, {:metadata, [line: 100], nil}]}]}], {:case, [line: 101], [{{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :get]}, [line: 101], [{:vertex_map, [line: 101], nil}, {:vertex_id, [line: 101], nil}]}, [do: [{:->, [line: 102], [[nil], []]}, {:->, [line: 103], [[{:vertex, [line: 103], nil}], {:extract_neighbors, [line: 103], [{:edge_list, [line: 103], nil}, {:vertex_id, [line: 103], nil}]}]}]]]}]}, {:->, [line: 106], [[{:case, [line: 106], [{:empty, [line: 106], []}]}], []]}]

07:20:07.966 [debug] Extracting cases from list: [{:->, [line: 88], [[{:case, [line: 88], [{:object, [line: 88], [{:props, [line: 88], nil}, {:proto, [line: 88], nil}]}]}], {:case, [line: 89], [{{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :get]}, [line: 89], [{:props, [line: 89], nil}, {:key, [line: 89], nil}]}, [do: [{:->, [line: 90], [[nil], {:__block__, [], [{{:., [line: 91], [{:__aliases__, [line: 91], [:IO]}, :puts]}, [line: 91], [{:<<>>, [line: 91], ["Not found in ", {:"::", [line: 91], [{{:., [line: 91], [Kernel, :to_string]}, [line: 91], [{:inspect, [line: 91], [{:props, [line: 91], nil}]}]}, {:binary, [line: 91], nil}]}, ", checking prototype"]}]}, {:recu, [line: 92], [{:proto, [line: 92], nil}]}]}]}, {:->, [line: 94], [[{:val, [line: 94], nil}], {:__block__, [], [{{:., [line: 95], [{:__aliases__, [line: 95], [:IO]}, :puts]}, [line: 95], [{:<<>>, [line: 95], ["Found ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:key, [line: 95], nil}]}, {:binary, [line: 95], nil}]}, ": ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:val, [line: 95], nil}]}]}, {:binary, [line: 95], nil}]}, " in ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:props, [...], ...}]}]}, {:binary, [line: 95], nil}]}]}]}, {:val, [line: 96], nil}]}]}]]]}]}, {:->, [line: 99], [[{:case, [line: 99], [{:null, [line: 99], []}]}], {:__block__, [], [{{:., [line: 100], [{:__aliases__, [line: 100], [:IO]}, :puts]}, [line: 100], ["Reached end of prototype chain"]}, nil]}]}]

07:20:07.966 [debug] Extracting cases from list: [{:->, [line: 100], [[{:case, [line: 100], [{:graph, [line: 100], [{:vertex_map, [line: 100], nil}, {:edge_list, [line: 100], nil}, {:metadata, [line: 100], nil}]}]}], {:case, [line: 101], [{{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :get]}, [line: 101], [{:vertex_map, [line: 101], nil}, {:vertex_id, [line: 101], nil}]}, [do: [{:->, [line: 102], [[nil], []]}, {:->, [line: 103], [[{:vertex, [line: 103], nil}], {:extract_neighbors, [line: 103], [{:edge_list, [line: 103], nil}, {:vertex_id, [line: 103], nil}]}]}]]]}]}, {:->, [line: 106], [[{:case, [line: 106], [{:empty, [line: 106], []}]}], []]}]

07:20:07.966 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 166], nil}, {:initial, [line: 166], nil}, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 167], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 178], [{:=, [line: 169], [{{:_tail_result, [line: 169], nil}, {:acc, [line: 169], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {{{:., [line: 172], [{:__aliases__, [counter: {Chain, 76}, line: 172], [:List]}, :null]}, [line: 172], []}, {{:., [line: 172], [{:fun, [line: 172], nil}]}, [line: 172], [{:acc, [line: 172], nil}, {:head, [line: 172], nil}]}}]}]}, {:->, [line: 174], [[{:%{}, [], [variant: :null]}], {{{:., [line: 176], [{:__aliases__, [counter: {Chain, 76}, line: 176], [:List]}, :null]}, [line: 176], []}, {:state, [line: 176], nil}}]}]]]}]}]}]}

07:20:07.966 [debug] Extracted fold cases: [{:->, [line: 100], [[{:case, [line: 100], [{:graph, [line: 100], [{:vertex_map, [line: 100], nil}, {:edge_list, [line: 100], nil}, {:metadata, [line: 100], nil}]}]}], {:case, [line: 101], [{{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :get]}, [line: 101], [{:vertex_map, [line: 101], nil}, {:vertex_id, [line: 101], nil}]}, [do: [{:->, [line: 102], [[nil], []]}, {:->, [line: 103], [[{:vertex, [line: 103], nil}], {:extract_neighbors, [line: 103], [{:edge_list, [line: 103], nil}, {:vertex_id, [line: 103], nil}]}]}]]]}]}, {:->, [line: 106], [[{:case, [line: 106], [{:empty, [line: 106], []}]}], []]}]

07:20:07.966 [debug] Extracted fold cases: [{:->, [line: 88], [[{:case, [line: 88], [{:object, [line: 88], [{:props, [line: 88], nil}, {:proto, [line: 88], nil}]}]}], {:case, [line: 89], [{{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :get]}, [line: 89], [{:props, [line: 89], nil}, {:key, [line: 89], nil}]}, [do: [{:->, [line: 90], [[nil], {:__block__, [], [{{:., [line: 91], [{:__aliases__, [line: 91], [:IO]}, :puts]}, [line: 91], [{:<<>>, [line: 91], ["Not found in ", {:"::", [line: 91], [{{:., [line: 91], [Kernel, :to_string]}, [line: 91], [{:inspect, [line: 91], [{:props, [line: 91], nil}]}]}, {:binary, [line: 91], nil}]}, ", checking prototype"]}]}, {:recu, [line: 92], [{:proto, [line: 92], nil}]}]}]}, {:->, [line: 94], [[{:val, [line: 94], nil}], {:__block__, [], [{{:., [line: 95], [{:__aliases__, [line: 95], [:IO]}, :puts]}, [line: 95], [{:<<>>, [line: 95], ["Found ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:key, [line: 95], nil}]}, {:binary, [line: 95], nil}]}, ": ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:val, [line: 95], nil}]}]}, {:binary, [line: 95], nil}]}, " in ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:props, [...], ...}]}]}, {:binary, [line: 95], nil}]}]}]}, {:val, [line: 96], nil}]}]}]]]}]}, {:->, [line: 99], [[{:case, [line: 99], [{:null, [line: 99], []}]}], {:__block__, [], [{{:., [line: 100], [{:__aliases__, [line: 100], [:IO]}, :puts]}, [line: 100], ["Reached end of prototype chain"]}, nil]}]}]

07:20:07.966 [debug] Generating fold cases: [{:->, [line: 100], [[{:case, [line: 100], [{:graph, [line: 100], [{:vertex_map, [line: 100], nil}, {:edge_list, [line: 100], nil}, {:metadata, [line: 100], nil}]}]}], {:case, [line: 101], [{{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :get]}, [line: 101], [{:vertex_map, [line: 101], nil}, {:vertex_id, [line: 101], nil}]}, [do: [{:->, [line: 102], [[nil], []]}, {:->, [line: 103], [[{:vertex, [line: 103], nil}], {:extract_neighbors, [line: 103], [{:edge_list, [line: 103], nil}, {:vertex_id, [line: 103], nil}]}]}]]]}]}, {:->, [line: 106], [[{:case, [line: 106], [{:empty, [line: 106], []}]}], []]}]

07:20:07.966 [debug] Bend operation with var: :val, initial: {{:list, [line: 186], nil}, {:n, [line: 186], nil}}

07:20:07.966 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph

07:20:07.966 [debug] Transforming recursive refs:
Body: {:case, [line: 101], [{{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :get]}, [line: 101], [{:vertex_map, [line: 101], nil}, {:vertex_id, [line: 101], nil}]}, [do: [{:->, [line: 102], [[nil], []]}, {:->, [line: 103], [[{:vertex, [line: 103], nil}], {:extract_neighbors, [line: 103], [{:edge_list, [line: 103], nil}, {:vertex_id, [line: 103], nil}]}]}]]]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:07.966 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.966 [debug] Transforming recursive refs:
Body: []
Bindings: []
State: nil


07:20:07.967 [debug] Fork operation with expression: {{:tail, [line: 192], nil}, {:-, [line: 192], [{:count, [line: 192], nil}, 1]}}

07:20:07.967 [debug] Generating fold cases: [{:->, [line: 88], [[{:case, [line: 88], [{:object, [line: 88], [{:props, [line: 88], nil}, {:proto, [line: 88], nil}]}]}], {:case, [line: 89], [{{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :get]}, [line: 89], [{:props, [line: 89], nil}, {:key, [line: 89], nil}]}, [do: [{:->, [line: 90], [[nil], {:__block__, [], [{{:., [line: 91], [{:__aliases__, [line: 91], [:IO]}, :puts]}, [line: 91], [{:<<>>, [line: 91], ["Not found in ", {:"::", [line: 91], [{{:., [line: 91], [Kernel, :to_string]}, [line: 91], [{:inspect, [line: 91], [{:props, [line: 91], nil}]}]}, {:binary, [line: 91], nil}]}, ", checking prototype"]}]}, {:recu, [line: 92], [{:proto, [line: 92], nil}]}]}]}, {:->, [line: 94], [[{:val, [line: 94], nil}], {:__block__, [], [{{:., [line: 95], [{:__aliases__, [line: 95], [:IO]}, :puts]}, [line: 95], [{:<<>>, [line: 95], ["Found ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:key, [line: 95], nil}]}, {:binary, [line: 95], nil}]}, ": ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:val, [line: 95], nil}]}]}, {:binary, [line: 95], nil}]}, " in ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:props, [...], ...}]}]}, {:binary, [line: 95], nil}]}]}]}, {:val, [line: 96], nil}]}]}]]]}]}, {:->, [line: 99], [[{:case, [line: 99], [{:null, [line: 99], []}]}], {:__block__, [], [{{:., [line: 100], [{:__aliases__, [line: 100], [:IO]}, :puts]}, [line: 100], ["Reached end of prototype chain"]}, nil]}]}]

07:20:07.967 [debug] Generated fold cases after transformation: [{:->, [line: 100], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:case, [line: 101], [{{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :get]}, [line: 101], [{:vertex_map, [line: 101], nil}, {:vertex_id, [line: 101], nil}]}, [do: [{:->, [line: 102], [[nil], []]}, {:->, [line: 103], [[{:vertex, [line: 103], nil}], {:extract_neighbors, [line: 103], [{:edge_list, [line: 103], nil}, {:vertex_id, [line: 103], nil}]}]}]]]}]}, {:->, [line: 106], [[{:%{}, [], [variant: :empty]}], []]}]

07:20:07.967 [debug] Generated pattern: {:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]} for variant: :object

07:20:07.967 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 99], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 100], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:case, [line: 101], [{{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :get]}, [line: 101], [{:vertex_map, [line: 101], nil}, {:vertex_id, [line: 101], nil}]}, [do: [{:->, [line: 102], [[nil], []]}, {:->, [line: 103], [[{:vertex, [line: 103], nil}], {:extract_neighbors, [line: 103], [{:edge_list, [line: 103], nil}, {:vertex_id, [line: 103], nil}]}]}]]]}]}, {:->, [line: 106], [[{:%{}, [], [variant: :empty]}], []]}]]]}]}]}]}
warning: variable "vertex" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:103: PropGraph.get_neighbors/2


07:20:07.967 [debug] Transforming recursive refs:
Body: {:case, [line: 89], [{{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :get]}, [line: 89], [{:props, [line: 89], nil}, {:key, [line: 89], nil}]}, [do: [{:->, [line: 90], [[nil], {:__block__, [], [{{:., [line: 91], [{:__aliases__, [line: 91], [:IO]}, :puts]}, [line: 91], [{:<<>>, [line: 91], ["Not found in ", {:"::", [line: 91], [{{:., [line: 91], [Kernel, :to_string]}, [line: 91], [{:inspect, [line: 91], [{:props, [line: 91], nil}]}]}, {:binary, [line: 91], nil}]}, ", checking prototype"]}]}, {:recu, [line: 92], [{:proto, [line: 92], nil}]}]}]}, {:->, [line: 94], [[{:val, [line: 94], nil}], {:__block__, [], [{{:., [line: 95], [{:__aliases__, [line: 95], [:IO]}, :puts]}, [line: 95], [{:<<>>, [line: 95], ["Found ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:key, [line: 95], nil}]}, {:binary, [line: 95], nil}]}, ": ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:val, [line: 95], nil}]}]}, {:binary, [line: 95], nil}]}, " in ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:props, [line: 95], nil}]}]}, {:binary, [line: 95], nil}]}]}]}, {:val, [line: 96], nil}]}]}]]]}
Bindings: [props: true, proto: true]
State: nil


07:20:07.967 [debug] Processing recursive reference: {:recu, [line: 92], [{:proto, [line: 92], nil}]}

07:20:07.967 [debug] Transformed recursive reference to: {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}
warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:99: PropGraph.get_neighbors/2


07:20:07.967 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null

07:20:07.967 [debug] Transforming recursive refs:
Body: {:__block__, [], [{{:., [line: 100], [{:__aliases__, [line: 100], [:IO]}, :puts]}, [line: 100], ["Reached end of prototype chain"]}, nil]}
Bindings: []
State: nil

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:99: PropGraph.get_neighbors/2

warning: function merge_counts/2 is unused
  lib/abstract_pov/parents.ex:75

warning: function merge_with_level_increment/2 is unused
  lib/abstract_pov/parents.ex:80


07:20:07.967 [debug] Fold expression: {:graph, [line: 113], nil}, opts: [], cases: [{:->, [line: 114], [[{:case, [line: 114], [{:graph, [line: 114], [{:vertex_map, [line: 114], nil}, {:edge_list, [line: 114], nil}, {:metadata, [line: 114], nil}]}]}], {:__block__, [], [{:=, [line: 115], [{:{}, [line: 115], [{:came_from, [line: 115], nil}, {:_, [line: 115], nil}, {:_, [line: 115], nil}]}, {:find_path, [line: 115], [{:vertex_map, [line: 115], nil}, {:edge_list, [line: 115], nil}, {:start_id, [line: 115], nil}, {:end_id, [line: 115], nil}]}]}, {:reconstruct_path, [line: 116], [{:came_from, [line: 116], nil}, {:end_id, [line: 116], nil}]}]}]}, {:->, [line: 118], [[{:case, [line: 118], [{:empty, [line: 118], []}]}], []]}]

07:20:07.967 [debug] Generated fold cases after transformation: [{:->, [line: 88], [[{:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]}], {:case, [line: 89], [{{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :get]}, [line: 89], [{:props, [line: 89], nil}, {:key, [line: 89], nil}]}, [do: [{:->, [line: 90], [[nil], {:__block__, [], [{{:., [line: 91], [{:__aliases__, [line: 91], [:IO]}, :puts]}, [line: 91], [{:<<>>, [line: 91], ["Not found in ", {:"::", [line: 91], [{{:., [line: 91], [Kernel, :to_string]}, [line: 91], [{:inspect, [line: 91], [{:props, [line: 91], nil}]}]}, {:binary, [line: 91], nil}]}, ", checking prototype"]}]}, {:do_fold, [], [{:proto, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 94], [[{:val, [line: 94], nil}], {:__block__, [], [{{:., [line: 95], [{:__aliases__, [line: 95], [:IO]}, :puts]}, [line: 95], [{:<<>>, [line: 95], ["Found ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:key, [line: 95], nil}]}, {:binary, [line: 95], nil}]}, ": ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:val, [line: 95], nil}]}]}, {:binary, [line: 95], nil}]}, " in ", {:"::", [line: 95], [{{:., [line: 95], [Kernel, :to_string]}, [line: 95], [{:inspect, [line: 95], [{:props, [...], ...}]}]}, {:binary, [line: 95], nil}]}]}]}, {:val, [line: 96], nil}]}]}]]]}]}, {:->, [line: 99], [[{:%{}, [], [variant: :null]}], {:__block__, [], [{{:., [line: 100], [{:__aliases__, [line: 100], [:IO]}, :puts]}, [line: 100], ["Reached end of prototype chain"]}, nil]}]}]

07:20:07.967 [debug] Extracting cases from list: [{:->, [line: 114], [[{:case, [line: 114], [{:graph, [line: 114], [{:vertex_map, [line: 114], nil}, {:edge_list, [line: 114], nil}, {:metadata, [line: 114], nil}]}]}], {:__block__, [], [{:=, [line: 115], [{:{}, [line: 115], [{:came_from, [line: 115], nil}, {:_, [line: 115], nil}, {:_, [line: 115], nil}]}, {:find_path, [line: 115], [{:vertex_map, [line: 115], nil}, {:edge_list, [line: 115], nil}, {:start_id, [line: 115], nil}, {:end_id, [line: 115], nil}]}]}, {:reconstruct_path, [line: 116], [{:came_from, [line: 116], nil}, {:end_id, [line: 116], nil}]}]}]}, {:->, [line: 118], [[{:case, [line: 118], [{:empty, [line: 118], []}]}], []]}]

07:20:07.967 [debug] Extracted fold cases: [{:->, [line: 114], [[{:case, [line: 114], [{:graph, [line: 114], [{:vertex_map, [line: 114], nil}, {:edge_list, [line: 114], nil}, {:metadata, [line: 114], nil}]}]}], {:__block__, [], [{:=, [line: 115], [{:{}, [line: 115], [{:came_from, [line: 115], nil}, {:_, [line: 115], nil}, {:_, [line: 115], nil}]}, {:find_path, [line: 115], [{:vertex_map, [line: 115], nil}, {:edge_list, [line: 115], nil}, {:start_id, [line: 115], nil}, {:end_id, [line: 115], nil}]}]}, {:reconstruct_path, [line: 116], [{:came_from, [line: 116], nil}, {:end_id, [line: 116], nil}]}]}]}, {:->, [line: 118], [[{:case, [line: 118], [{:empty, [line: 118], []}]}], []]}]

07:20:07.968 [debug] Generating fold cases: [{:->, [line: 114], [[{:case, [line: 114], [{:graph, [line: 114], [{:vertex_map, [line: 114], nil}, {:edge_list, [line: 114], nil}, {:metadata, [line: 114], nil}]}]}], {:__block__, [], [{:=, [line: 115], [{:{}, [line: 115], [{:came_from, [line: 115], nil}, {:_, [line: 115], nil}, {:_, [line: 115], nil}]}, {:find_path, [line: 115], [{:vertex_map, [line: 115], nil}, {:edge_list, [line: 115], nil}, {:start_id, [line: 115], nil}, {:end_id, [line: 115], nil}]}]}, {:reconstruct_path, [line: 116], [{:came_from, [line: 116], nil}, {:end_id, [line: 116], nil}]}]}]}, {:->, [line: 118], [[{:case, [line: 118], [{:empty, [line: 118], []}]}], []]}]

07:20:07.968 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph

07:20:07.968 [debug] Final quoted expression: {:do_fold, [], [{:obj, [line: 87], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 88], [[{:%{}, [], [variant: :object, props: {:props, [], nil}, proto: {:proto, [], nil}]}], {:case, [line: 89], [{{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :get]}, [line: 89], [{:props, [line: 89], nil}, {:key, [line: 89], nil}]}, [do: [{:->, [line: 90], [[nil], {:__block__, [], [{{:., [line: 91], [{:__aliases__, [...], ...}, :puts]}, [line: 91], [{:<<>>, [line: 91], [...]}]}, {:do_fold, [], [{:proto, [], ...}, nil, {...}]}]}]}, {:->, [line: 94], [[{:val, [line: 94], nil}], {:__block__, [], [{{:., [line: 95], [{:__aliases__, ...}, :puts]}, [line: 95], [{:<<>>, [...], ...}]}, {:val, [line: 96], nil}]}]}]]]}]}, {:->, [line: 99], [[{:%{}, [], [variant: :null]}], {:__block__, [], [{{:., [line: 100], [{:__aliases__, [line: 100], [:IO]}, :puts]}, [line: 100], ["Reached end of prototype chain"]}, nil]}]}]]]}]}]}]}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prototypal.ex:87: Prototypal.debug_chain/2


07:20:07.968 [debug] Transforming recursive refs:
Body: {:__block__, [], [{:=, [line: 115], [{:{}, [line: 115], [{:came_from, [line: 115], nil}, {:_, [line: 115], nil}, {:_, [line: 115], nil}]}, {:find_path, [line: 115], [{:vertex_map, [line: 115], nil}, {:edge_list, [line: 115], nil}, {:start_id, [line: 115], nil}, {:end_id, [line: 115], nil}]}]}, {:reconstruct_path, [line: 116], [{:came_from, [line: 116], nil}, {:end_id, [line: 116], nil}]}]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:07.968 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.968 [debug] Transforming recursive refs:
Body: []
Bindings: []
State: nil


07:20:07.968 [debug] Generated fold cases after transformation: [{:->, [line: 114], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{:=, [line: 115], [{:{}, [line: 115], [{:came_from, [line: 115], nil}, {:_, [line: 115], nil}, {:_, [line: 115], nil}]}, {:find_path, [line: 115], [{:vertex_map, [line: 115], nil}, {:edge_list, [line: 115], nil}, {:start_id, [line: 115], nil}, {:end_id, [line: 115], nil}]}]}, {:reconstruct_path, [line: 116], [{:came_from, [line: 116], nil}, {:end_id, [line: 116], nil}]}]}]}, {:->, [line: 118], [[{:%{}, [], [variant: :empty]}], []]}]

07:20:07.968 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 113], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 114], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{:=, [line: 115], [{:{}, [line: 115], [{:came_from, [line: 115], nil}, {:_, [line: 115], nil}, {:_, [line: 115], nil}]}, {:find_path, [line: 115], [{:vertex_map, [line: 115], nil}, {:edge_list, [line: 115], nil}, {:start_id, [line: 115], nil}, {:end_id, [line: 115], nil}]}]}, {:reconstruct_path, [line: 116], [{:came_from, [line: 116], nil}, {:end_id, [line: 116], nil}]}]}]}, {:->, [line: 118], [[{:%{}, [], [variant: :empty]}], []]}]]]}]}]}]}
warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:113: PropGraph.shortest_path/3

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:113: PropGraph.shortest_path/3


07:20:07.969 [debug] Fold expression: {:graph, [line: 125], nil}, opts: [], cases: [{:->, [line: 126], [[{:case, [line: 126], [{:graph, [line: 126], [{:vertex_map, [line: 126], nil}, {:edge_list, [line: 126], nil}, {:metadata, [line: 126], nil}]}]}], {:case, [line: 127], [{{:., [line: 127], [{:__aliases__, [line: 127], [:Map]}, :keys]}, [line: 127], [{:vertex_map, [line: 127], nil}]}, [do: [{:->, [line: 128], [[[]], true]}, {:->, [line: 131], [[{:=, [line: 131], [[{:|, [line: 131], [{:first, [line: 131], nil}, {:_, [line: 131], nil}]}], {:all_vertices, [line: 131], nil}]}], {:__block__, [], [{:=, [line: 132], [{:visited, [line: 132], nil}, {:depth_first_search, [line: 132], [{:vertex_map, [line: 132], nil}, {:edge_list, [line: 132], nil}, {:first, [line: 132], nil}, {{:., [line: 132], [{:__aliases__, [line: 132], [:MapSet]}, :new]}, [line: 132], []}]}]}, {:==, [line: 133], [{{:., [line: 133], [{:__aliases__, [line: 133], [:MapSet]}, :size]}, [line: 133], [{:visited, [line: 133], nil}]}, {:length, [line: 133], [{:all_vertices, [line: 133], nil}]}]}]}]}]]]}]}, {:->, [line: 137], [[{:case, [line: 137], [{:empty, [line: 137], []}]}], true]}]

07:20:07.969 [debug] Extracting cases from list: [{:->, [line: 126], [[{:case, [line: 126], [{:graph, [line: 126], [{:vertex_map, [line: 126], nil}, {:edge_list, [line: 126], nil}, {:metadata, [line: 126], nil}]}]}], {:case, [line: 127], [{{:., [line: 127], [{:__aliases__, [line: 127], [:Map]}, :keys]}, [line: 127], [{:vertex_map, [line: 127], nil}]}, [do: [{:->, [line: 128], [[[]], true]}, {:->, [line: 131], [[{:=, [line: 131], [[{:|, [line: 131], [{:first, [line: 131], nil}, {:_, [line: 131], nil}]}], {:all_vertices, [line: 131], nil}]}], {:__block__, [], [{:=, [line: 132], [{:visited, [line: 132], nil}, {:depth_first_search, [line: 132], [{:vertex_map, [line: 132], nil}, {:edge_list, [line: 132], nil}, {:first, [line: 132], nil}, {{:., [line: 132], [{:__aliases__, [line: 132], [:MapSet]}, :new]}, [line: 132], []}]}]}, {:==, [line: 133], [{{:., [line: 133], [{:__aliases__, [line: 133], [:MapSet]}, :size]}, [line: 133], [{:visited, [line: 133], nil}]}, {:length, [line: 133], [{:all_vertices, [line: 133], nil}]}]}]}]}]]]}]}, {:->, [line: 137], [[{:case, [line: 137], [{:empty, [line: 137], []}]}], true]}]

07:20:07.969 [debug] Extracted fold cases: [{:->, [line: 126], [[{:case, [line: 126], [{:graph, [line: 126], [{:vertex_map, [line: 126], nil}, {:edge_list, [line: 126], nil}, {:metadata, [line: 126], nil}]}]}], {:case, [line: 127], [{{:., [line: 127], [{:__aliases__, [line: 127], [:Map]}, :keys]}, [line: 127], [{:vertex_map, [line: 127], nil}]}, [do: [{:->, [line: 128], [[[]], true]}, {:->, [line: 131], [[{:=, [line: 131], [[{:|, [line: 131], [{:first, [line: 131], nil}, {:_, [line: 131], nil}]}], {:all_vertices, [line: 131], nil}]}], {:__block__, [], [{:=, [line: 132], [{:visited, [line: 132], nil}, {:depth_first_search, [line: 132], [{:vertex_map, [line: 132], nil}, {:edge_list, [line: 132], nil}, {:first, [line: 132], nil}, {{:., [line: 132], [{:__aliases__, [line: 132], [:MapSet]}, :new]}, [line: 132], []}]}]}, {:==, [line: 133], [{{:., [line: 133], [{:__aliases__, [line: 133], [:MapSet]}, :size]}, [line: 133], [{:visited, [line: 133], nil}]}, {:length, [line: 133], [{:all_vertices, [line: 133], nil}]}]}]}]}]]]}]}, {:->, [line: 137], [[{:case, [line: 137], [{:empty, [line: 137], []}]}], true]}]

07:20:07.969 [debug] Generating fold cases: [{:->, [line: 126], [[{:case, [line: 126], [{:graph, [line: 126], [{:vertex_map, [line: 126], nil}, {:edge_list, [line: 126], nil}, {:metadata, [line: 126], nil}]}]}], {:case, [line: 127], [{{:., [line: 127], [{:__aliases__, [line: 127], [:Map]}, :keys]}, [line: 127], [{:vertex_map, [line: 127], nil}]}, [do: [{:->, [line: 128], [[[]], true]}, {:->, [line: 131], [[{:=, [line: 131], [[{:|, [line: 131], [{:first, [line: 131], nil}, {:_, [line: 131], nil}]}], {:all_vertices, [line: 131], nil}]}], {:__block__, [], [{:=, [line: 132], [{:visited, [line: 132], nil}, {:depth_first_search, [line: 132], [{:vertex_map, [line: 132], nil}, {:edge_list, [line: 132], nil}, {:first, [line: 132], nil}, {{:., [line: 132], [{:__aliases__, [line: 132], [:MapSet]}, :new]}, [line: 132], []}]}]}, {:==, [line: 133], [{{:., [line: 133], [{:__aliases__, [line: 133], [:MapSet]}, :size]}, [line: 133], [{:visited, [line: 133], nil}]}, {:length, [line: 133], [{:all_vertices, [line: 133], nil}]}]}]}]}]]]}]}, {:->, [line: 137], [[{:case, [line: 137], [{:empty, [line: 137], []}]}], true]}]

07:20:07.969 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph

07:20:07.969 [debug] Transforming recursive refs:
Body: {:case, [line: 127], [{{:., [line: 127], [{:__aliases__, [line: 127], [:Map]}, :keys]}, [line: 127], [{:vertex_map, [line: 127], nil}]}, [do: [{:->, [line: 128], [[[]], true]}, {:->, [line: 131], [[{:=, [line: 131], [[{:|, [line: 131], [{:first, [line: 131], nil}, {:_, [line: 131], nil}]}], {:all_vertices, [line: 131], nil}]}], {:__block__, [], [{:=, [line: 132], [{:visited, [line: 132], nil}, {:depth_first_search, [line: 132], [{:vertex_map, [line: 132], nil}, {:edge_list, [line: 132], nil}, {:first, [line: 132], nil}, {{:., [line: 132], [{:__aliases__, [line: 132], [:MapSet]}, :new]}, [line: 132], []}]}]}, {:==, [line: 133], [{{:., [line: 133], [{:__aliases__, [line: 133], [:MapSet]}, :size]}, [line: 133], [{:visited, [line: 133], nil}]}, {:length, [line: 133], [{:all_vertices, [line: 133], nil}]}]}]}]}]]]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:07.969 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:07.969 [debug] Transforming recursive refs:
Body: true
Bindings: []
State: nil


07:20:07.970 [debug] Generated fold cases after transformation: [{:->, [line: 126], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:case, [line: 127], [{{:., [line: 127], [{:__aliases__, [line: 127], [:Map]}, :keys]}, [line: 127], [{:vertex_map, [line: 127], nil}]}, [do: [{:->, [line: 128], [[[]], true]}, {:->, [line: 131], [[{:=, [line: 131], [[{:|, [line: 131], [{:first, [line: 131], nil}, {:_, [line: 131], nil}]}], {:all_vertices, [line: 131], nil}]}], {:__block__, [], [{:=, [line: 132], [{:visited, [line: 132], nil}, {:depth_first_search, [line: 132], [{:vertex_map, [line: 132], nil}, {:edge_list, [line: 132], nil}, {:first, [line: 132], nil}, {{:., [line: 132], [{:__aliases__, [line: 132], [:MapSet]}, :new]}, [line: 132], []}]}]}, {:==, [line: 133], [{{:., [line: 133], [{:__aliases__, [line: 133], [:MapSet]}, :size]}, [line: 133], [{:visited, [line: 133], nil}]}, {:length, [line: 133], [{:all_vertices, [line: 133], nil}]}]}]}]}]]]}]}, {:->, [line: 137], [[{:%{}, [], [variant: :empty]}], true]}]

07:20:07.970 [debug] Final quoted expression: {:do_fold, [], [{:graph, [line: 125], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 126], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:case, [line: 127], [{{:., [line: 127], [{:__aliases__, [line: 127], [:Map]}, :keys]}, [line: 127], [{:vertex_map, [line: 127], nil}]}, [do: [{:->, [line: 128], [[[]], true]}, {:->, [line: 131], [[{:=, [line: 131], [[{:|, [line: 131], [{:first, ...}, {...}]}], {:all_vertices, [line: 131], nil}]}], {:__block__, [], [{:=, [line: 132], [{:visited, [...], ...}, {:depth_first_search, ...}]}, {:==, [line: 133], [{{...}, ...}, {...}]}]}]}]]]}]}, {:->, [line: 137], [[{:%{}, [], [variant: :empty]}], true]}]]]}]}]}]}
warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:125: PropGraph.is_connected?/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/abstract_pov/prop_graph.ex:125: PropGraph.is_connected?/1

warning: this clause for reverse/1 cannot match because a previous clause at line 96 always matches
  lib/abstract_pov/chain.ex:122


07:20:08.014 [debug] Fold expression: {{:., [line: 154], [{:state, [line: 154], nil}, :graph]}, [no_parens: true, line: 154], []}, opts: [], cases: [{:->, [line: 155], [[{:case, [line: 155], [{:graph, [line: 155], [{:vertex_map, [line: 155], nil}, {:edge_list, [line: 155], nil}, {:metadata, [line: 155], nil}]}]}], {:__block__, [], [{{:., [line: 156], [{:__aliases__, [line: 156], [:Logger]}, :debug]}, [line: 156], ["Processing graph with:"]}, {{:., [line: 157], [{:__aliases__, [line: 157], [:Logger]}, :debug]}, [line: 157], [{:<<>>, [line: 157], ["  vertex_map: ", {:"::", [line: 157], [{{:., [line: 157], [Kernel, :to_string]}, [line: 157], [{:inspect, [line: 157], [{:vertex_map, [line: 157], nil}]}]}, {:binary, [line: 157], nil}]}]}]}, {{:., [line: 158], [{:__aliases__, [line: 158], [:Logger]}, :debug]}, [line: 158], [{:<<>>, [line: 158], ["  edge_list: ", {:"::", [line: 158], [{{:., [line: 158], [Kernel, :to_string]}, [line: 158], [{:inspect, [line: 158], [{:edge_list, [line: 158], nil}]}]}, {:binary, [line: 158], nil}]}]}]}, {:=, [line: 160], [{:edges, [line: 160], nil}, {:extract_edges, [line: 160], [{:edge_list, [line: 160], nil}]}]}, {{:., [line: 161], [{:__aliases__, [line: 161], [:Logger]}, :debug]}, [line: 161], [{:<<>>, [line: 161], ["Extracted edges: ", {:"::", [line: 161], [{{:., [line: 161], [Kernel, :to_string]}, [line: 161], [{:inspect, [line: 161], [{:edges, [line: 161], nil}]}]}, {:binary, [line: 161], nil}]}]}]}, {:=, [line: 163], [{:results, [line: 163], nil}, {:execute_query, [line: 163], [{:pattern, [line: 163], nil}, {:vertex_map, [line: 163], nil}, {:edges, [line: 163], nil}]}]}, {{:., [line: 164], [{:__aliases__, [line: 164], [:Logger]}, :debug]}, [line: 164], [{:<<>>, [line: 164], ["Query results: ", {:"::", [line: 164], [{{:., [line: 164], [Kernel, :to_string]}, [line: 164], [{:inspect, [line: 164], [{:results, [line: 164], nil}]}]}, {:binary, [line: 164], nil}]}]}]}, {:results, [line: 166], nil}]}]}, {:->, [line: 168], [[{:case, [line: 168], [{:empty, [line: 168], []}]}], {:__block__, [], [{{:., [line: 169], [{:__aliases__, [line: 169], [:Logger]}, :debug]}, [line: 169], ["Empty graph, returning empty results"]}, []]}]}]

07:20:08.014 [debug] Extracting cases from list: [{:->, [line: 155], [[{:case, [line: 155], [{:graph, [line: 155], [{:vertex_map, [line: 155], nil}, {:edge_list, [line: 155], nil}, {:metadata, [line: 155], nil}]}]}], {:__block__, [], [{{:., [line: 156], [{:__aliases__, [line: 156], [:Logger]}, :debug]}, [line: 156], ["Processing graph with:"]}, {{:., [line: 157], [{:__aliases__, [line: 157], [:Logger]}, :debug]}, [line: 157], [{:<<>>, [line: 157], ["  vertex_map: ", {:"::", [line: 157], [{{:., [line: 157], [Kernel, :to_string]}, [line: 157], [{:inspect, [line: 157], [{:vertex_map, [line: 157], nil}]}]}, {:binary, [line: 157], nil}]}]}]}, {{:., [line: 158], [{:__aliases__, [line: 158], [:Logger]}, :debug]}, [line: 158], [{:<<>>, [line: 158], ["  edge_list: ", {:"::", [line: 158], [{{:., [line: 158], [Kernel, :to_string]}, [line: 158], [{:inspect, [line: 158], [{:edge_list, [line: 158], nil}]}]}, {:binary, [line: 158], nil}]}]}]}, {:=, [line: 160], [{:edges, [line: 160], nil}, {:extract_edges, [line: 160], [{:edge_list, [line: 160], nil}]}]}, {{:., [line: 161], [{:__aliases__, [line: 161], [:Logger]}, :debug]}, [line: 161], [{:<<>>, [line: 161], ["Extracted edges: ", {:"::", [line: 161], [{{:., [line: 161], [Kernel, :to_string]}, [line: 161], [{:inspect, [line: 161], [{:edges, [line: 161], nil}]}]}, {:binary, [line: 161], nil}]}]}]}, {:=, [line: 163], [{:results, [line: 163], nil}, {:execute_query, [line: 163], [{:pattern, [line: 163], nil}, {:vertex_map, [line: 163], nil}, {:edges, [line: 163], nil}]}]}, {{:., [line: 164], [{:__aliases__, [line: 164], [:Logger]}, :debug]}, [line: 164], [{:<<>>, [line: 164], ["Query results: ", {:"::", [line: 164], [{{:., [line: 164], [Kernel, :to_string]}, [line: 164], [{:inspect, [line: 164], [{:results, [line: 164], nil}]}]}, {:binary, [line: 164], nil}]}]}]}, {:results, [line: 166], nil}]}]}, {:->, [line: 168], [[{:case, [line: 168], [{:empty, [line: 168], []}]}], {:__block__, [], [{{:., [line: 169], [{:__aliases__, [line: 169], [:Logger]}, :debug]}, [line: 169], ["Empty graph, returning empty results"]}, []]}]}]
warning: unused alias QueryBuilder
  lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:6


07:20:08.015 [debug] Extracted fold cases: [{:->, [line: 155], [[{:case, [line: 155], [{:graph, [line: 155], [{:vertex_map, [line: 155], nil}, {:edge_list, [line: 155], nil}, {:metadata, [line: 155], nil}]}]}], {:__block__, [], [{{:., [line: 156], [{:__aliases__, [line: 156], [:Logger]}, :debug]}, [line: 156], ["Processing graph with:"]}, {{:., [line: 157], [{:__aliases__, [line: 157], [:Logger]}, :debug]}, [line: 157], [{:<<>>, [line: 157], ["  vertex_map: ", {:"::", [line: 157], [{{:., [line: 157], [Kernel, :to_string]}, [line: 157], [{:inspect, [line: 157], [{:vertex_map, [line: 157], nil}]}]}, {:binary, [line: 157], nil}]}]}]}, {{:., [line: 158], [{:__aliases__, [line: 158], [:Logger]}, :debug]}, [line: 158], [{:<<>>, [line: 158], ["  edge_list: ", {:"::", [line: 158], [{{:., [line: 158], [Kernel, :to_string]}, [line: 158], [{:inspect, [line: 158], [{:edge_list, [line: 158], nil}]}]}, {:binary, [line: 158], nil}]}]}]}, {:=, [line: 160], [{:edges, [line: 160], nil}, {:extract_edges, [line: 160], [{:edge_list, [line: 160], nil}]}]}, {{:., [line: 161], [{:__aliases__, [line: 161], [:Logger]}, :debug]}, [line: 161], [{:<<>>, [line: 161], ["Extracted edges: ", {:"::", [line: 161], [{{:., [line: 161], [Kernel, :to_string]}, [line: 161], [{:inspect, [line: 161], [{:edges, [line: 161], nil}]}]}, {:binary, [line: 161], nil}]}]}]}, {:=, [line: 163], [{:results, [line: 163], nil}, {:execute_query, [line: 163], [{:pattern, [line: 163], nil}, {:vertex_map, [line: 163], nil}, {:edges, [line: 163], nil}]}]}, {{:., [line: 164], [{:__aliases__, [line: 164], [:Logger]}, :debug]}, [line: 164], [{:<<>>, [line: 164], ["Query results: ", {:"::", [line: 164], [{{:., [line: 164], [Kernel, :to_string]}, [line: 164], [{:inspect, [line: 164], [{:results, [line: 164], nil}]}]}, {:binary, [line: 164], nil}]}]}]}, {:results, [line: 166], nil}]}]}, {:->, [line: 168], [[{:case, [line: 168], [{:empty, [line: 168], []}]}], {:__block__, [], [{{:., [line: 169], [{:__aliases__, [line: 169], [:Logger]}, :debug]}, [line: 169], ["Empty graph, returning empty results"]}, []]}]}]

07:20:08.015 [debug] Generating fold cases: [{:->, [line: 155], [[{:case, [line: 155], [{:graph, [line: 155], [{:vertex_map, [line: 155], nil}, {:edge_list, [line: 155], nil}, {:metadata, [line: 155], nil}]}]}], {:__block__, [], [{{:., [line: 156], [{:__aliases__, [line: 156], [:Logger]}, :debug]}, [line: 156], ["Processing graph with:"]}, {{:., [line: 157], [{:__aliases__, [line: 157], [:Logger]}, :debug]}, [line: 157], [{:<<>>, [line: 157], ["  vertex_map: ", {:"::", [line: 157], [{{:., [line: 157], [Kernel, :to_string]}, [line: 157], [{:inspect, [line: 157], [{:vertex_map, [line: 157], nil}]}]}, {:binary, [line: 157], nil}]}]}]}, {{:., [line: 158], [{:__aliases__, [line: 158], [:Logger]}, :debug]}, [line: 158], [{:<<>>, [line: 158], ["  edge_list: ", {:"::", [line: 158], [{{:., [line: 158], [Kernel, :to_string]}, [line: 158], [{:inspect, [line: 158], [{:edge_list, [line: 158], nil}]}]}, {:binary, [line: 158], nil}]}]}]}, {:=, [line: 160], [{:edges, [line: 160], nil}, {:extract_edges, [line: 160], [{:edge_list, [line: 160], nil}]}]}, {{:., [line: 161], [{:__aliases__, [line: 161], [:Logger]}, :debug]}, [line: 161], [{:<<>>, [line: 161], ["Extracted edges: ", {:"::", [line: 161], [{{:., [line: 161], [Kernel, :to_string]}, [line: 161], [{:inspect, [line: 161], [{:edges, [line: 161], nil}]}]}, {:binary, [line: 161], nil}]}]}]}, {:=, [line: 163], [{:results, [line: 163], nil}, {:execute_query, [line: 163], [{:pattern, [line: 163], nil}, {:vertex_map, [line: 163], nil}, {:edges, [line: 163], nil}]}]}, {{:., [line: 164], [{:__aliases__, [line: 164], [:Logger]}, :debug]}, [line: 164], [{:<<>>, [line: 164], ["Query results: ", {:"::", [line: 164], [{{:., [line: 164], [Kernel, :to_string]}, [line: 164], [{:inspect, [line: 164], [{:results, [line: 164], nil}]}]}, {:binary, [line: 164], nil}]}]}]}, {:results, [line: 166], nil}]}]}, {:->, [line: 168], [[{:case, [line: 168], [{:empty, [line: 168], []}]}], {:__block__, [], [{{:., [line: 169], [{:__aliases__, [line: 169], [:Logger]}, :debug]}, [line: 169], ["Empty graph, returning empty results"]}, []]}]}]

07:20:08.015 [debug] Generated pattern: {:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]} for variant: :graph

07:20:08.015 [debug] Transforming recursive refs:
Body: {:__block__, [], [{{:., [line: 156], [{:__aliases__, [line: 156], [:Logger]}, :debug]}, [line: 156], ["Processing graph with:"]}, {{:., [line: 157], [{:__aliases__, [line: 157], [:Logger]}, :debug]}, [line: 157], [{:<<>>, [line: 157], ["  vertex_map: ", {:"::", [line: 157], [{{:., [line: 157], [Kernel, :to_string]}, [line: 157], [{:inspect, [line: 157], [{:vertex_map, [line: 157], nil}]}]}, {:binary, [line: 157], nil}]}]}]}, {{:., [line: 158], [{:__aliases__, [line: 158], [:Logger]}, :debug]}, [line: 158], [{:<<>>, [line: 158], ["  edge_list: ", {:"::", [line: 158], [{{:., [line: 158], [Kernel, :to_string]}, [line: 158], [{:inspect, [line: 158], [{:edge_list, [line: 158], nil}]}]}, {:binary, [line: 158], nil}]}]}]}, {:=, [line: 160], [{:edges, [line: 160], nil}, {:extract_edges, [line: 160], [{:edge_list, [line: 160], nil}]}]}, {{:., [line: 161], [{:__aliases__, [line: 161], [:Logger]}, :debug]}, [line: 161], [{:<<>>, [line: 161], ["Extracted edges: ", {:"::", [line: 161], [{{:., [line: 161], [Kernel, :to_string]}, [line: 161], [{:inspect, [line: 161], [{:edges, [line: 161], nil}]}]}, {:binary, [line: 161], nil}]}]}]}, {:=, [line: 163], [{:results, [line: 163], nil}, {:execute_query, [line: 163], [{:pattern, [line: 163], nil}, {:vertex_map, [line: 163], nil}, {:edges, [line: 163], nil}]}]}, {{:., [line: 164], [{:__aliases__, [line: 164], [:Logger]}, :debug]}, [line: 164], [{:<<>>, [line: 164], ["Query results: ", {:"::", [line: 164], [{{:., [line: 164], [Kernel, :to_string]}, [line: 164], [{:inspect, [line: 164], [{:results, [line: 164], nil}]}]}, {:binary, [line: 164], nil}]}]}]}, {:results, [line: 166], nil}]}
Bindings: [vertex_map: true, edge_list: true, metadata: true]
State: nil


07:20:08.015 [debug] Generated pattern: {:%{}, [], [variant: :empty]} for variant: :empty

07:20:08.015 [debug] Transforming recursive refs:
Body: {:__block__, [], [{{:., [line: 169], [{:__aliases__, [line: 169], [:Logger]}, :debug]}, [line: 169], ["Empty graph, returning empty results"]}, []]}
Bindings: []
State: nil


07:20:08.016 [debug] Generated fold cases after transformation: [{:->, [line: 155], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{{:., [line: 156], [{:__aliases__, [line: 156], [:Logger]}, :debug]}, [line: 156], ["Processing graph with:"]}, {{:., [line: 157], [{:__aliases__, [line: 157], [:Logger]}, :debug]}, [line: 157], [{:<<>>, [line: 157], ["  vertex_map: ", {:"::", [line: 157], [{{:., [line: 157], [Kernel, :to_string]}, [line: 157], [{:inspect, [line: 157], [{:vertex_map, [line: 157], nil}]}]}, {:binary, [line: 157], nil}]}]}]}, {{:., [line: 158], [{:__aliases__, [line: 158], [:Logger]}, :debug]}, [line: 158], [{:<<>>, [line: 158], ["  edge_list: ", {:"::", [line: 158], [{{:., [line: 158], [Kernel, :to_string]}, [line: 158], [{:inspect, [line: 158], [{:edge_list, [line: 158], nil}]}]}, {:binary, [line: 158], nil}]}]}]}, {:=, [line: 160], [{:edges, [line: 160], nil}, {:extract_edges, [line: 160], [{:edge_list, [line: 160], nil}]}]}, {{:., [line: 161], [{:__aliases__, [line: 161], [:Logger]}, :debug]}, [line: 161], [{:<<>>, [line: 161], ["Extracted edges: ", {:"::", [line: 161], [{{:., [line: 161], [Kernel, :to_string]}, [line: 161], [{:inspect, [line: 161], [{:edges, [line: 161], nil}]}]}, {:binary, [line: 161], nil}]}]}]}, {:=, [line: 163], [{:results, [line: 163], nil}, {:execute_query, [line: 163], [{:pattern, [line: 163], nil}, {:vertex_map, [line: 163], nil}, {:edges, [line: 163], nil}]}]}, {{:., [line: 164], [{:__aliases__, [line: 164], [:Logger]}, :debug]}, [line: 164], [{:<<>>, [line: 164], ["Query results: ", {:"::", [line: 164], [{{:., [line: 164], [Kernel, :to_string]}, [line: 164], [{:inspect, [line: 164], [{:results, [line: 164], nil}]}]}, {:binary, [line: 164], nil}]}]}]}, {:results, [line: 166], nil}]}]}, {:->, [line: 168], [[{:%{}, [], [variant: :empty]}], {:__block__, [], [{{:., [line: 169], [{:__aliases__, [line: 169], [:Logger]}, :debug]}, [line: 169], ["Empty graph, returning empty results"]}, []]}]}]

07:20:08.016 [debug] Final quoted expression: {:do_fold, [], [{{:., [line: 154], [{:state, [line: 154], nil}, :graph]}, [no_parens: true, line: 154], []}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 155], [[{:%{}, [], [variant: :graph, vertex_map: {:vertex_map, [], nil}, edge_list: {:edge_list, [], nil}, metadata: {:metadata, [], nil}]}], {:__block__, [], [{{:., [line: 156], [{:__aliases__, [line: 156], [:Logger]}, :debug]}, [line: 156], ["Processing graph with:"]}, {{:., [line: 157], [{:__aliases__, [line: 157], [:Logger]}, :debug]}, [line: 157], [{:<<>>, [line: 157], ["  vertex_map: ", {:"::", [line: 157], [{{:., [line: 157], [Kernel, ...]}, [line: 157], [{:inspect, ...}]}, {:binary, [line: 157], nil}]}]}]}, {{:., [line: 158], [{:__aliases__, [line: 158], [:Logger]}, :debug]}, [line: 158], [{:<<>>, [line: 158], ["  edge_list: ", {:"::", [line: 158], [{{:., [line: 158], [...]}, [line: 158], [{...}]}, {:binary, [line: 158], nil}]}]}]}, {:=, [line: 160], [{:edges, [line: 160], nil}, {:extract_edges, [line: 160], [{:edge_list, [line: 160], nil}]}]}, {{:., [line: 161], [{:__aliases__, [line: 161], [:Logger]}, :debug]}, [line: 161], [{:<<>>, [line: 161], ["Extracted edges: ", {:"::", [line: 161], [{{:., ...}, [...], ...}, {:binary, ...}]}]}]}, {:=, [line: 163], [{:results, [line: 163], nil}, {:execute_query, [line: 163], [{:pattern, [line: 163], nil}, {:vertex_map, [line: 163], nil}, {:edges, [line: 163], nil}]}]}, {{:., [line: 164], [{:__aliases__, [line: 164], [:Logger]}, :debug]}, [line: 164], [{:<<>>, [line: 164], ["Query results: ", {:"::", [line: 164], [{...}, ...]}]}]}, {:results, [line: 166], nil}]}]}, {:->, [line: 168], [[{:%{}, [], [variant: :empty]}], {:__block__, [], [{{:., [line: 169], [{:__aliases__, [line: 169], [:Logger]}, :debug]}, [line: 169], ["Empty graph, returning empty results"]}, []]}]}]]]}]}]}]}
warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/concrete_irl/graffiti.ex:154: Graffiti.query/2

warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  lib/concrete_irl/graffiti.ex:154: Graffiti.query/2

warning: you must require Logger before invoking the macro Logger.debug/1
Invalid call found at 2 locations:
  lib/bridge_imo/mecha_cyph/query_builder.ex:5: BridgeImo.MechaCyph.QueryBuilder.add_node/2
  lib/bridge_imo/mecha_cyph/query_builder.ex:10: BridgeImo.MechaCyph.QueryBuilder.add_where/2

warning: incompatible types:

    map() !~ :s

in expression:

    # lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:41
    s.properties

where "s" was given the type :s in:

    # lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:40
    s = :s

where "s" was given the type map() (due to calling var.field) in:

    # lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:41
    s.properties

HINT: "var.field" (without parentheses) implies "var" is a map() while "var.fun()" (with parentheses) implies "var" is an atom()

Conflict found at
  lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:41: SpaceshipQueries.get_spaceship_by_name/2

warning: incompatible types:

    map() !~ :s

in expression:

    # lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:51
    s.properties

where "s" was given the type :s in:

    # lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:50
    s = :s

where "s" was given the type map() (due to calling var.field) in:

    # lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:51
    s.properties

HINT: "var.field" (without parentheses) implies "var" is a map() while "var.fun()" (with parentheses) implies "var" is an atom()

Conflict found at
  lib/bridge_imo/mecha_cyph/queries/spaceship_queries.ex:51: SpaceshipQueries.get_spaceships_by_class/2

Generated bendscript app
07:20:08.302 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
07:20:08.302 [debug] Defining type {:__aliases__, [line: 6], [:LinkedList]} with block: {:__block__, [], [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]}
07:20:08.302 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
07:20:08.302 [debug] Extracted variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
07:20:08.302 [debug] Defining type {:__aliases__, [line: 6], [:BinaryTree]} with block: {:__block__, [], [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]}
07:20:08.302 [debug] Defining type {:__aliases__, [line: 6], [:LinkedList]} with block: {:__block__, [], [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]}
07:20:08.302 [debug] Generating constructors for variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
07:20:08.302 [debug] Processing variant: {:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}
07:20:08.302 [debug] Extracted variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
07:20:08.303 [debug] Constructor: :cons, meta: [line: 7], args: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
07:20:08.303 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
07:20:08.303 [debug] Generating constructors for variants: [{:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}, {:null, [line: 8], []}]
07:20:08.303 [debug] Extracting constructor args from: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
07:20:08.303 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
07:20:08.303 [debug] Found value arg: :head
07:20:08.303 [debug] Found recursive arg: :tail
07:20:08.303 [debug] Extracted arg_names: [:head, :tail]
07:20:08.303 [debug] Extracted variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
07:20:08.303 [debug] Generated arg vars: [{:head, [], nil}, {:tail, [], nil}]
07:20:08.303 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
07:20:08.303 [debug] Field pairs: [head: {:head, [], nil}, tail: {:tail, [], nil}]
07:20:08.303 [debug] Processing variant: {:null, [line: 8], []}
07:20:08.303 [debug] Constructor: :null, meta: [line: 8], args: []
07:20:08.303 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
07:20:08.303 [debug] Processing variant: {:cons, [line: 7], [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]}
07:20:08.303 [debug] Extracting constructor args from: []
07:20:08.303 [debug] Generating constructors for variants: [{:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}, {:leaf, [line: 8], []}]
07:20:08.303 [debug] Extracted arg_names: []
07:20:08.303 [debug] Constructor: :cons, meta: [line: 7], args: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
07:20:08.303 [debug] Generated arg vars: []
07:20:08.303 [debug] Field pairs: []
07:20:08.303 [debug] Extracting constructor args from: [{:head, [line: 7], nil}, {:recu, [line: 7], [{:tail, [line: 7], nil}]}]
07:20:08.303 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
07:20:08.303 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
07:20:08.303 [debug] Processing variant: {:node, [line: 7], [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]}
07:20:08.303 [debug] Found value arg: :head
07:20:08.303 [debug] Found recursive arg: :tail
07:20:08.303 [debug] Extracted arg_names: [:head, :tail]
07:20:08.303 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
07:20:08.303 [debug] Generated arg vars: [{:head, [], nil}, {:tail, [], nil}]
07:20:08.303 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
07:20:08.303 [debug] Constructor: :node, meta: [line: 7], args: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
07:20:08.303 [debug] Field pairs: [head: {:head, [], nil}, tail: {:tail, [], nil}]
07:20:08.303 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
07:20:08.303 [debug] Found value arg: :val
07:20:08.303 [debug] Processing variant: {:null, [line: 8], []}
07:20:08.303 [debug] Found recursive arg: :left
07:20:08.303 [debug] Found recursive arg: :right
07:20:08.303 [debug] Extracted arg_names: [:val, :left, :right]
07:20:08.303 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
07:20:08.303 [debug] Extracting constructor args from: [{:val, [line: 7], nil}, {:recu, [line: 7], [{:left, [line: 7], nil}]}, {:recu, [line: 7], [{:right, [line: 7], nil}]}]
07:20:08.303 [debug] Found value arg: :val
07:20:08.303 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
07:20:08.303 [debug] Found recursive arg: :left
07:20:08.303 [debug] Constructor: :null, meta: [line: 8], args: []
07:20:08.303 [debug] Found value arg: :val
07:20:08.303 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
07:20:08.303 [debug] Found recursive arg: :right
07:20:08.303 [debug] Extracting constructor args from: []
07:20:08.303 [debug] Extracted arg_names: [:val, :left, :right]
07:20:08.303 [debug] Found recursive arg: :left
07:20:08.303 [debug] Processing variant: {:leaf, [line: 8], []}
07:20:08.303 [debug] Extracted arg_names: []
07:20:08.303 [debug] Found recursive arg: :right
07:20:08.303 [debug] Generated arg vars: []
07:20:08.303 [debug] Constructor: :leaf, meta: [line: 8], args: []
07:20:08.303 [debug] Extracted arg_names: [:val, :left, :right]
07:20:08.303 [debug] Extracting constructor args from: []
07:20:08.303 [debug] Field pairs: []
07:20:08.303 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
07:20:08.303 [debug] Extracted arg_names: []
07:20:08.303 [debug] Generated arg vars: []
07:20:08.303 [debug] Generated arg vars: [{:val, [], nil}, {:left, [], nil}, {:right, [], nil}]
07:20:08.303 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
07:20:08.303 [debug] Processing variant: {:leaf, [line: 8], []}
07:20:08.303 [debug] Constructor: :leaf, meta: [line: 8], args: []
07:20:08.303 [debug] Extracting constructor args from: []
07:20:08.303 [debug] Field pairs: []
07:20:08.303 [debug] Extracted arg_names: []
07:20:08.303 [debug] Generated arg vars: []
07:20:08.303 [debug] Field pairs: [val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]
07:20:08.303 [debug] Processing variant: {:leaf, [line: 8], []}
07:20:08.303 [debug] Constructor: :leaf, meta: [line: 8], args: []
07:20:08.303 [debug] Extracting constructor args from: []
07:20:08.303 [debug] Extracted arg_names: []
07:20:08.303 [debug] Generated arg vars: []
07:20:08.303 [debug] Field pairs: []
07:20:08.303 [debug] Field pairs: []
warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  test/concrete_irl/graffiti_test.exs:52: GraffitiTest."test basic transaction operations successful transaction"/1

warning: variable "reason" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/concrete_irl/graffiti_test.exs:75: GraffitiTest."test basic transaction operations transaction rollback"/1

warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  test/concrete_irl/graffiti_test.exs:85: GraffitiTest."test basic transaction operations schema validation"/1

warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
  test/concrete_irl/graffiti_test.exs:143: GraffitiTest."test advanced transaction operations vertex operations are applied before edge validation"/1

Excluding tags: [:skip]

warning: variable "query_map" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:44: SpaceshipQueriesTest."test SpaceshipQueries creates and retrieves spaceships"/1

warning: variable "query_data" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:36: SpaceshipQueriesTest."test SpaceshipQueries creates and retrieves spaceships"/1

warning: variable "updated_graph" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:42: SpaceshipQueriesTest."test SpaceshipQueries creates and retrieves spaceships"/1

warning: variable "final_data" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:58: SpaceshipQueriesTest."test SpaceshipQueries creates and retrieves spaceships"/1

warning: variable "properties" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:63: SpaceshipQueriesTest."test SpaceshipQueries creates spaceship with properties"/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:62: SpaceshipQueriesTest."test SpaceshipQueries creates spaceship with properties"/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:71: SpaceshipQueriesTest."test SpaceshipQueries handles empty results"/1

warning: variable "ships" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:76: SpaceshipQueriesTest."test SpaceshipQueries filters spaceships by class"/1

warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:75: SpaceshipQueriesTest."test SpaceshipQueries filters spaceships by class"/1

warning: this clause cannot match because a previous clause at line 44 always matches
  test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:50

warning: unused import Prototypal
  test/abstract_pov/prototypal_test.exs:3

07:20:08.385 [debug] Fold expression: {:list, [line: 17], nil}, opts: [with: 0], cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
07:20:08.385 [debug] Extracting cases from list: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
07:20:08.385 [debug] Extracted fold cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
07:20:08.385 [debug] Generating fold cases: [{:->, [line: 18], [[{:case, [line: 18], [{:cons, [line: 18], [{:head, [line: 18], nil}, {:tail, [line: 18], nil}]}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:null, [line: 23], []}]}], {0, {:state, [line: 24], nil}}]}]
07:20:08.385 [debug] Generated pattern: {:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]} for variant: :cons
07:20:08.385 [debug] Transforming recursive refs:
Body: {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:recu, [line: 19], [{:tail, [line: 19], nil}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}
Bindings: [head: true, tail: true]
State: 0

07:20:08.385 [debug] Processing recursive reference: {:recu, [line: 19], [{:tail, [line: 19], nil}]}
07:20:08.385 [debug] Transformed recursive reference to: {:do_fold, [], [{:tail, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}
07:20:08.385 [debug] Generated pattern: {:%{}, [], [variant: :null]} for variant: :null
07:20:08.385 [debug] Transforming recursive refs:
Body: {0, {:state, [line: 24], nil}}
Bindings: []
State: 0

07:20:08.385 [debug] Generated fold cases after transformation: [{:->, [line: 18], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :null]}], {0, {:state, [line: 24], nil}}]}]
07:20:08.386 [debug] Final quoted expression: {:do_fold, [], [{:list, [line: 17], nil}, 0, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 18], [[{:%{}, [], [variant: :cons, head: {:head, [], nil}, tail: {:tail, [], nil}]}], {:__block__, [line: 11], [{:=, [line: 19], [{{:tail_value, [line: 19], nil}, {:new_state, [line: 19], nil}}, {:do_fold, [], [{:tail, [], nil}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:=, [line: 20], [{:new_sum, [line: 20], nil}, {:+, [line: 20], [{:head, [line: 20], nil}, {:tail_value, [line: 20], nil}]}]}, {{:head, [line: 21], nil}, {:new_sum, [line: 21], nil}}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :null]}], {0, {:state, [line: 24], nil}}]}]]]}]}]}]}
warning: variable "new_state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/kernel_shtf/ben_ben/fold_with_state_test.exs:19: FoldWithStateTest."test fold operations fold with state"/1

07:20:08.387 [debug] Bend operation with var: :val, initial: 0
07:20:08.387 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
07:20:08.387 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
07:20:08.389 [debug] Fold expression: {:tree, [line: 21], nil}, opts: [], cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
07:20:08.389 [debug] Extracting cases from list: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
07:20:08.389 [debug] Extracted fold cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
07:20:08.389 [debug] Generating fold cases: [{:->, [line: 22], [[{:case, [line: 22], [{:node, [line: 22], [{:val, [line: 22], nil}, {:left, [line: 22], nil}, {:right, [line: 22], nil}]}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}]}, {:->, [line: 23], [[{:case, [line: 23], [{:leaf, [line: 23], []}]}], 0]}]
07:20:08.389 [debug] Generated pattern: {:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]} for variant: :node
07:20:08.389 [debug] Transforming recursive refs:
Body: {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:recu, [line: 22], [{:left, [line: 22], nil}]}]}, {:recu, [line: 22], [{:right, [line: 22], nil}]}]}
Bindings: [val: true, left: true, right: true]
State: nil

07:20:08.389 [debug] Processing recursive reference: {:recu, [line: 22], [{:left, [line: 22], nil}]}
07:20:08.389 [debug] Transformed recursive reference to: {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}
07:20:08.389 [debug] Processing recursive reference: {:recu, [line: 22], [{:right, [line: 22], nil}]}
07:20:08.389 [debug] Transformed recursive reference to: {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}
07:20:08.389 [debug] Generated pattern: {:%{}, [], [variant: :leaf]} for variant: :leaf
07:20:08.389 [debug] Transforming recursive refs:
Body: 0
Bindings: []
State: nil

07:20:08.389 [debug] Generated fold cases after transformation: [{:->, [line: 22], [[{:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :leaf]}], 0]}]
07:20:08.389 [debug] Final quoted expression: {:do_fold, [], [{:tree, [line: 21], nil}, nil, {:fn, [], [{:->, [], [[{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:state, [], KernelShtf.BenBen}]}], {:case, [], [{:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}, [do: [{:->, [line: 22], [[{:%{}, [], [variant: :node, val: {:val, [], nil}, left: {:left, [], nil}, right: {:right, [], nil}]}], {:+, [line: 22], [{:+, [line: 22], [{:val, [line: 22], nil}, {:do_fold, [], [{:left, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}, {:do_fold, [], [{:right, [], nil}, nil, {:var!, [context: KernelShtf.BenBen, imports: [{1, Kernel}, {2, Kernel}]], [{:value, [], KernelShtf.BenBen}]}]}]}]}, {:->, [line: 23], [[{:%{}, [], [variant: :leaf]}], 0]}]]]}]}]}]}
warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
  test/kernel_shtf/ben_ben/sum_of_tree_test.exs:21: SumOfTreeTest."test fold operations basic sum of tree"/1

07:20:08.396 [debug] Bend operation with var: :val, initial: 1
07:20:08.397 [debug] Fork operation with expression: {:+, [line: 16], [{:val, [line: 16], nil}, 1]}
......warning: this clause for handle_message/3 cannot match because a previous clause at line 31 always matches
  test/kernel_shtf/race_test.exs:37

warning: this clause for init/1 cannot match because a previous clause at line 0 always matches
  test/kernel_shtf/race_test.exs:140

warning: this clause for init/1 cannot match because a previous clause at line 0 always matches
  test/kernel_shtf/race_test.exs:171

warning: this clause for handle_message/3 cannot match because a previous clause at line 183 always matches
  test/kernel_shtf/race_test.exs:189

07:20:08.558 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 0, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 8, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 9, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.558 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 10, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 11, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 12, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 13, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 14, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 15, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 16, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 17, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 18, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 19, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.559 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 20, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 21, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 22, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 23, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 24, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 25, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 26, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 27, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 28, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 29, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.559 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 30, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 31, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 32, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 33, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 34, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 35, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 36, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 37, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 38, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 39, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.552 [error] GenServer KernelShtf.RaceTest.ComplexPipeline.NumberJumper terminating
** (FunctionClauseError) no function clause matching in KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand/2
    test/kernel_shtf/race_test.exs:163: KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand(1000, [start_from: 1])
    (gen_stage 1.2.1) lib/gen_stage.ex:2223: GenStage.noreply_callback/3
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Last message: {:"$gen_producer", {#PID<0.1095.0>, #Reference<0.3567973744.1267204107.65570>}, {:ask, 1000}}
State: [start_from: 1]
07:20:08.560 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 40, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 41, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 42, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 43, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 44, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 45, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 46, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 47, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 48, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 49, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.560 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 50, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 51, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 52, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 53, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 54, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 55, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 56, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 57, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 58, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 59, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.561 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 60, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 61, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 62, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 63, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 64, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 65, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 66, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 67, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 68, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 69, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3



  1) test complex pipeline runs integrated pipeline (KernelShtf.RaceTest)
     test/kernel_shtf/race_test.exs:203
     ** (EXIT from #PID<0.1093.0>) an exception was raised:
     
          ** (FunctionClauseError) no function clause matching in KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand/2
     
          The following arguments were given to KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand/2:
          
              # 1
              1000
          
              # 2
              [start_from: 1]
          
          stacktrace:
            test/kernel_shtf/race_test.exs:163: KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand/2
            (gen_stage 1.2.1) lib/gen_stage.ex:2223: GenStage.noreply_callback/3
            (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
            (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
            (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
     

..07:20:08.561 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 70, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 71, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 72, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 73, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 74, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 75, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 76, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 77, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 78, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 79, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

.07:20:08.562 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 80, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 81, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 82, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 83, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 84, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 85, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 86, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 87, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 88, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 89, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.563 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 0, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 10, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 11, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 12, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 13, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 14, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 8, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 9, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 15, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 16, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 17, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 18, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 19, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 20, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 21, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 22, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 23, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 24, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 25, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 26, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 27, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 28, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 29, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 30, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 31, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 32, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 33, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 34, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 35, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 36, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 37, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 38, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 39, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 40, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 41, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 42, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 43, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 44, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 45, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, ...}, batcher: :default, ...}, %Broadw (truncated)
07:20:08.562 [error] GenServer :"metrics_pipeline.Broadway.Supervisor" terminating
** (FunctionClauseError) no function clause matching in KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand/2
    test/kernel_shtf/race_test.exs:163: KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand(1000, [start_from: 1])
    (gen_stage 1.2.1) lib/gen_stage.ex:2223: GenStage.noreply_callback/3
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Last message: {:EXIT, #PID<0.1096.0>, {:function_clause, [{KernelShtf.RaceTest.ComplexPipeline.NumberJumper, :handle_demand, [1000, [start_from: 1]], [file: 'test/kernel_shtf/race_test.exs', line: 163]}, {GenStage, :noreply_callback, 3, [file: 'lib/gen_stage.ex', line: 2223]}, {:gen_server, :try_dispatch, 4, [file: 'gen_server.erl', line: 1123]}, {:gen_server, :handle_msg, 6, [file: 'gen_server.erl', line: 1200]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}}
State: {:state, {:local, :"metrics_pipeline.Broadway.Supervisor"}, :rest_for_one, {[:"metrics_pipeline.Broadway.Terminator", #Reference<0.3567973744.1267204107.65575>, #Reference<0.3567973744.1267204107.65572>, #Reference<0.3567973744.1267204107.65571>, Broadway.Topology.RateLimiter], %{Broadway.Topology.RateLimiter => {:child, :undefined, Broadway.Topology.RateLimiter, {Broadway.Topology.RateLimiter, :start_link, [[name: :"metrics_pipeline.Broadway.RateLimiter", rate_limiting: nil, producers_names: [:"metrics_pipeline.Broadway.Producer_0"]]]}, :permanent, false, 5000, :worker, [Broadway.Topology.RateLimiter]}, :"metrics_pipeline.Broadway.Terminator" => {:child, #PID<0.1108.0>, :"metrics_pipeline.Broadway.Terminator", {Broadway.Topology.Terminator, :start_link, [[producers: [:"metrics_pipeline.Broadway.Producer_0"], first: [:"metrics_pipeline.Broadway.Processor_default_0", :"metrics_pipeline.Broadway.Processor_default_1"], last: [:"metrics_pipeline.Broadway.BatchProcessor_default_0"]], [name: :"metrics_pipeline.Broadway.Terminator"]]}, :permanent, false, 30000, :worker, [Broadway.Topology.Terminator]}, #Reference<0.3567973744.1267204107.65571> => {:child, #PID<0.1098.0>, #Reference<0.3567973744.1267204107.65571>, {Supervisor, :start_link, [[%{id: :"metrics_pipeline.Broadway.Producer_0", shutdown: 30000, start: {Broadway.Topology.ProducerStage, :start_link, [[broadway: [hibernate_after: 15000, context: :context_not_set, resubscribe_interval: 100, max_seconds: 5, max_restarts: 3, shutdown: 30000, name: :metrics_pipeline, producer: [hibernate_after: 15000, module: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, transformer: {KernelShtf.RaceTest.ComplexPipeline.MetricsPipeline, :transform_message, []}, concurrency: 1], processors: [default: [hibernate_after: 15000, max_demand: 10, concurrency: 2]], batchers: [default: [hibernate_after: 15000, batch_size: 10, batch_timeout: 1000, concurrency: 1]]], dispatcher: {GenStage.DemandDispatcher, [shuffle_demands_on_first_dispatch: true]}, rate_limiter: nil, hibernate_after: 15000, module: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, transformer: {KernelShtf.RaceTest.ComplexPipeline.MetricsPipeline, :transform_message, []}, concurrency: 1], 0, [name: :"metrics_pipeline.Broadway.Producer_0", hibernate_after: 15000]]}}], [name: :"metrics_pipeline.Broadway.ProducerSupervisor", strategy: :one_for_one, max_restarts: 2, max_seconds: 1]]}, :permanent, false, :infinity, :supervisor, [Supervisor]}, #Reference<0.3567973744.1267204107.65572> => {:child, #PID<0.1100.0>, #Reference<0.3567973744.1267204107.65572>, {Supervisor, :start_link, [[%{id: :"metrics_pipeline.Broadway.Processor_default_0", shutdown: 30000, start: {Broadway.Topology.ProcessorStage, :start_link, [[name: :"metrics_pipeline.Broadway.Processor_default_0", partition: 0, topology_name: :metrics_pipeline, type: :producer_consumer, resubscribe: 100, terminator: :"metrics_pipeline.Broadway.Terminator", module: KernelShtf.RaceTest.ComplexPipeline.MetricsPipeline, context: :context_not_set, dispatcher: {GenStage.DemandDispatcher, [shuffle_demands_on_first_dispatch: true]}, processor_key: :default, processor_config: [hibernate_after: 15000, max_demand: 10, concurrency: 2], producers: [:"metrics_pipeline.Broadway.Producer_0"], producer: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, batchers: [:default]], [name: :"metrics_pipeline.Broadway.Processor_default_0", hibernate_after: 15000]]}}, %{id: :"metrics_pipeline.Broadway.Processor_default_1", shutdown: 30000, start: {Broadway.Topology.ProcessorStage, :start_link, [[name: :"metrics_pipeline.Broadway.Processor_default_1", partition: 1, topology_name: :metrics_pipeline, type: :producer_consumer, resubscribe: 100, terminator: :"metrics_pipeline.Broadway.Terminator", module: KernelShtf.RaceTest.ComplexPipeline.MetricsPipeline, context: :context_not_set, dispatcher: {GenStage.DemandDispatcher, [shuffle_demands_on_first_dispatch: true]}, processor_key: :default, processor_config: [hibernate_after: 15000, max_demand: 10, concurrency: 2], producers: [:"metrics_pipeline.Broadway.Producer_0"], producer: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, batchers: [:default]], [name: :"metrics_pipeline.Broadway.Processor_default_1", hibernate_after: 15000]]}}], [name: :"metrics_pipeline.Broadway.ProcessorSupervisor", strategy: :one_for_all, max_restarts: 0]]}, :permanent, false, :infinity, :supervisor, [Supervisor]}, #Reference<0.3567973744.1267204107.65575> => {:child, #PID<0.1103.0>, #Reference<0.3567973744.1267204107.65575>, {Supervisor, :start_link, [[%{id: #Reference<0.3567973744.1267204107.65574>, start: {Supervisor, :start_link, [[%{id: :"metrics_pipeline.Broadway.Batcher_default", shutdown: 30000, start: {Broadway.Topology.BatcherStage, :start_link, [[topology_name: :metrics_pipeline, name: :"metrics_pipeline.Broadway.Batcher_default", resubscribe: :never, terminator: :"metrics_pipeline.Broadway.Terminator", batcher: :default, partition: :default, processors: [:"metrics_pipeline.Broadway.Processor_default_0", :"metrics_pipeline.Broadway.Processor_default_1"], context: :context_not_set, partition_by: nil, concurrency: 1, hibernate_after: 15000, batch_size: 10, batch_timeout: 1000, concurrency: 1], [name: :"metrics_pipeline.Broadway.Batcher_default"]]}}, %{id: #Reference<0.3567973744.1267204107.65573>, start: {Supervisor, :start_link, [[%{id: :"metrics_pipeline.Broadway.BatchProcessor_default_0", shutdown: 30000, start: {Broadway.Topology.BatchProcessorStage, :start_link, [[name: :"metrics_pipeline.Broadway.BatchProcessor_default_0", partition: 0, topology_name: :metrics_pipeline, resubscribe: :never, terminator: :"metrics_pipeline.Broadway.Terminator", module: KernelShtf.RaceTest.ComplexPipeline.MetricsPipeline, context: :context_not_set, batcher: :"metrics_pipeline.Broadway.Batcher_default", ...], [name: :"metrics_pipeline.Broadway.BatchProcessor_default_0", hibernate_after: 15000]]}}], [name: :"metrics_pipeline.Broadway.BatchProcessorSupervisor_default", strategy: :one_for_all, max_restarts: 0]]}, type: :supervisor}], [name: :"metrics_pipeline.Broadway.BatcherSupervisor_default", strategy: :rest_for_one, max_restarts: 4, max_seconds: 2]]}, type: :supervisor}], [name: :"metrics_pipeline.Broadway.BatchersSupervisor", strategy: :one_for_one, max_restarts: 2, max_seconds: 1]]}, :permanent, false, :infinity, :supervisor, [Supervisor]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: Broadway.Topology.RateLimiter, start: {Broadway.Topology.RateLimiter, :start_link, [[name: :"metrics_pipeline.Broadway.RateLimiter", rate_limiting: nil, producers_names: [:"metrics_pipeline.Broadway.Producer_0"]]]}}, %{id: #Reference<0.3567973744.1267204107.65571>, start: {Supervisor, :start_link, [[%{id: :"metrics_pipeline.Broadway.Producer_0", shutdown: 30000, start: {Broadway.Topology.ProducerStage, :start_link, [[broadway: [hibernate_after: 15000, context: :context_not_set, resubscribe_interval: 100, max (truncated)
07:20:08.563 [error] GenServer :metrics_pipeline terminating
** (FunctionClauseError) no function clause matching in KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand/2
    test/kernel_shtf/race_test.exs:163: KernelShtf.RaceTest.ComplexPipeline.NumberJumper.handle_demand(1000, [start_from: 1])
    (gen_stage 1.2.1) lib/gen_stage.ex:2223: GenStage.noreply_callback/3
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3
Last message: {:EXIT, #PID<0.1093.0>, {:function_clause, [{KernelShtf.RaceTest.ComplexPipeline.NumberJumper, :handle_demand, [1000, [start_from: 1]], [file: 'test/kernel_shtf/race_test.exs', line: 163]}, {GenStage, :noreply_callback, 3, [file: 'lib/gen_stage.ex', line: 2223]}, {:gen_server, :try_dispatch, 4, [file: 'gen_server.erl', line: 1123]}, {:gen_server, :handle_msg, 6, [file: 'gen_server.erl', line: 1200]}, {:proc_lib, :init_p_do_apply, 3, [file: 'proc_lib.erl', line: 240]}]}}
State: %{name: :metrics_pipeline, supervisor_pid: #PID<0.1097.0>, terminator: :"metrics_pipeline.Broadway.Terminator"}
07:20:08.564 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 55, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 56, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 57, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 58, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 59, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 50, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 51, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 52, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 53, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 54, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 65, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 66, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 67, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 68, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 69, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 60, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 61, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 62, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 63, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 64, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 70, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 71, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 72, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 73, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 74, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 80, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 81, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 82, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 83, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 84, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 90, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 91, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 92, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 93, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 94, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 75, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 76, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 77, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 78, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 79, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 95, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 96, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 97, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 98, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 99, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 85, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, ...}, batcher: :default, ... (truncated)
07:20:08.565 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 105, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 106, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 107, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 108, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 109, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 100, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 101, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 102, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 103, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 104, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 150, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.566 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 155, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 156, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 157, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 158, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 159, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 160, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 161, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 162, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 163, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 164, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 190, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.566 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 200, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 201, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 202, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 203, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 204, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 205, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 206, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 207, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 208, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 209, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 250, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 251, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 252, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 253, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 254, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 255, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.568 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 295, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.568 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 300, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 301, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 302, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 303, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 304, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 305, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 306, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 307, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 308, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 309, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 350, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 351, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 352, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 353, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 354, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 355, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.569 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 335, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 336, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 337, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 338, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 339, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 370, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 371, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 372, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 373, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 374, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 375, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 376, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 377, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 378, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 379, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 380, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 381, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 382, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 383, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 384, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 385, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 386, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 387, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 388, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 389, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 390, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 391, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 392, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 393, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 394, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 400, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.570 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 410, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 411, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 412, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 413, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 414, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 415, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 416, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 417, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 418, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 419, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 395, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 396, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 397, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 398, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 399, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 405, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 406, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 407, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 408, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 409, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 430, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 431, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 432, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 433, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 434, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 435, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 436, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 437, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 438, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 439, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 440, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 441, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 442, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 443, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 444, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 445, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 446, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 447, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 448, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 449, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 450, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 451, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 452, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 453, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 454, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 455, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.571 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 420, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 421, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 422, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 423, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 424, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 425, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 426, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 427, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 428, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 429, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 470, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 471, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 472, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 473, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 474, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 475, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 476, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 477, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 478, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 479, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 480, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 481, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 482, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 483, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 484, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 485, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 486, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 487, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 488, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 489, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 460, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 461, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 462, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 463, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 464, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 490, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 491, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 492, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 493, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 494, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 465, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 466, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 467, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 468, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 469, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 505, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.571 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 510, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 511, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 512, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 513, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 514, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 495, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 496, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 497, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 498, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 499, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 515, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 516, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 517, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 518, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 519, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 500, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 501, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 502, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 503, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 504, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 520, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 521, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 522, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 523, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 524, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 525, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 526, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 527, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 528, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 529, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 530, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 531, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 532, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 533, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 534, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 540, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 541, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 542, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 543, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 544, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 550, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 551, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 552, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 553, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 554, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 555, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.572 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 535, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 536, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 537, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 538, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 539, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 545, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 546, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 547, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 548, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 549, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 570, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 571, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 572, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 573, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 574, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 575, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 576, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 577, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 578, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 579, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 580, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 581, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 582, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 583, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 584, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 585, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 586, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 587, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 588, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 589, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 560, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 561, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 562, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 563, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 564, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 590, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 591, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 592, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 593, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 594, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 565, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 566, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 567, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 568, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 569, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 600, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.573 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 595, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 596, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 597, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 598, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 599, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 610, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 611, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 612, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 613, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 614, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 605, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 606, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 607, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 608, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 609, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 620, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 621, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 622, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 623, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 624, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 615, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 616, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 617, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 618, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 619, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 625, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 626, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 627, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 628, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 629, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 640, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 641, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 642, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 643, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 644, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 645, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 646, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 647, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 648, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 649, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 650, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 651, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 652, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 653, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 654, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 655, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.574 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 630, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 631, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 632, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 633, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 634, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 635, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 636, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 637, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 638, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 639, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 670, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 671, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 672, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 673, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 674, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 675, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 676, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 677, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 678, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 679, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 680, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 681, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 682, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 683, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 684, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 685, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 686, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 687, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 688, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 689, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 690, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 691, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 692, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 693, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 694, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 660, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 661, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 662, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 663, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 664, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 665, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 666, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 667, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 668, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 669, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 695, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.574 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 705, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 706, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 707, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 708, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 709, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 700, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 701, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 702, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 703, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 704, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 715, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 716, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 717, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 718, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 719, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 710, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 711, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 712, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 713, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 714, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 720, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 721, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 722, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 723, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 724, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 735, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 736, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 737, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 738, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 739, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 740, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 741, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 742, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 743, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 744, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 745, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 746, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 747, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 748, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 749, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 750, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 751, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 752, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 753, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 754, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 755, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.575 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 725, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 726, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 727, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 728, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 729, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 730, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 731, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 732, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 733, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 734, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 770, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 771, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 772, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 773, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 774, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 775, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 776, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 777, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 778, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 779, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 780, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 781, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 782, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 783, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 784, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 760, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 761, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 762, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 763, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 764, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 765, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 766, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 767, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 768, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 769, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 785, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 786, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 787, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 788, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 789, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 790, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 791, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 792, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 793, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 794, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 805, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.576 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 810, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 811, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 812, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 813, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 814, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 815, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 816, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 817, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 818, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 819, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 795, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 796, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 797, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 798, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 799, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 800, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 801, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 802, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 803, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 804, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 830, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 831, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 832, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 833, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 834, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 835, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 836, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 837, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 838, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 839, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 840, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 841, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 842, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 843, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 844, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 845, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 846, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 847, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 848, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 849, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 850, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 851, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 852, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 853, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 854, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 855, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.576 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 820, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 821, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 822, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 823, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 824, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 825, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 826, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 827, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 828, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 829, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 870, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 871, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 872, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 873, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 874, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 875, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 876, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 877, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 878, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 879, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 880, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 881, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 882, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 883, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 884, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 885, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 886, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 887, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 888, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 889, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 890, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 891, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 892, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 893, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 894, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 860, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 861, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 862, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 863, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 864, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 865, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 866, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 867, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 868, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 869, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 895, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.577 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 905, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 906, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 907, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 908, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 909, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 900, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 901, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 902, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 903, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 904, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 915, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 916, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 917, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 918, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 919, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 910, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 911, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 912, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 913, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 914, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 920, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 921, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 922, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 923, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 924, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 935, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 936, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 937, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 938, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 939, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 940, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 941, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 942, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 943, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 944, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 945, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 946, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 947, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 948, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 949, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 950, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 951, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 952, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 953, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 954, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 955, metadata: %{}, acknowledger: {Broadway. (truncated)
07:20:08.578 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 925, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 926, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 927, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 928, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 929, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 930, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 931, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 932, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 933, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 934, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 970, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 971, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 972, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 973, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 974, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 975, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 976, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 977, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 978, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 979, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 980, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 981, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 982, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 983, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 984, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 985, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 986, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 987, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 988, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 989, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 960, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 961, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 962, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 963, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 964, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 990, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 991, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 992, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 993, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 994, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 965, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 966, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 967, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 968, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 969, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 1000, metadata: %{}, acknowledger: {Broadway (truncated)
07:20:08.578 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1010, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1011, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1012, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1013, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1014, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1015, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1016, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1017, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1018, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1019, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1020, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1021, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1022, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1023, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1024, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 995, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 996, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 997, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 998, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 999, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1005, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1006, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1007, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1008, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1009, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1025, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1026, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1027, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1028, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1029, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1030, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1031, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1032, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1033, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1034, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1045, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1046, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1047, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1048, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1049, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1035, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1036, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1037, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1038, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1039, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: 1050 (truncated)
07:20:08.579 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1040, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1041, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1042, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1043, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1044, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1060, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1061, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1062, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1063, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1064, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1070, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1071, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1072, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1073, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1074, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1075, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1076, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1077, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1078, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1079, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1080, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1081, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1082, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1083, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1084, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1055, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1056, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1057, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1058, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1059, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1065, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1066, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1067, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1068, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1069, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1085, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1086, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1087, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1088, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1089, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1090, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1091, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1092, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1093, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1094, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.580 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1095, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1096, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1097, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1098, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1099, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1100, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1101, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1102, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1103, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1104, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1150, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1151, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1152, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1153, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1154, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.580 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1160, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1161, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1162, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1163, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1164, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1190, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1191, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1192, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1193, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1194, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.581 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1205, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1206, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1207, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1208, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1209, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1250, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1251, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1252, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1253, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1254, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.582 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.582 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1295, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1296, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1297, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1298, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1299, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1305, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1306, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1307, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1308, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1309, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1335, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1336, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1337, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1338, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1339, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.583 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1355, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1356, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1357, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1358, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1359, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1370, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1371, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1372, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1373, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1374, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1375, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1376, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1377, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1378, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1379, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1380, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1381, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1382, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1383, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1384, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1385, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1386, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1387, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1388, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1389, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1390, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1391, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1392, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1393, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1394, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.584 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1410, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1411, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1412, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1413, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1414, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1395, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1396, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1397, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1398, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1399, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1400, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1401, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1402, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1403, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1404, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1415, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1416, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1417, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1418, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1419, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1425, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1426, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1427, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1428, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1429, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1430, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1431, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1432, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1433, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1434, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1440, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1441, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1442, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1443, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1444, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1445, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1446, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1447, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1448, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1449, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1450, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1451, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1452, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1453, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1454, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.584 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1420, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1421, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1422, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1423, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1424, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1435, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1436, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1437, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1438, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1439, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1470, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1471, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1472, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1473, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1474, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1475, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1476, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1477, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1478, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1479, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1480, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1481, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1482, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1483, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1484, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1485, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1486, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1487, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1488, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1489, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1490, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1491, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1492, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1493, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1494, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1460, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1461, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1462, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1463, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1464, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1465, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1466, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1467, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1468, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1469, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.585 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1500, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1501, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1502, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1503, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1504, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1505, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1506, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1507, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1508, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1509, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1510, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1511, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1512, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1513, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1514, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1515, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1516, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1517, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1518, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1519, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1525, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1526, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1527, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1528, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1529, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1530, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1531, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1532, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1533, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1534, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1540, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1541, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1542, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1543, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1544, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1545, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1546, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1547, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1548, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1549, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1550, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1551, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1552, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1553, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1554, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.586 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1520, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1521, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1522, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1523, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1524, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1535, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1536, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1537, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1538, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1539, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1570, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1571, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1572, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1573, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1574, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1575, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1576, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1577, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1578, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1579, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1580, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1581, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1582, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1583, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1584, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1585, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1586, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1587, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1588, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1589, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1590, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1591, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1592, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1593, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1594, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1560, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1561, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1562, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1563, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1564, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1565, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1566, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1567, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1568, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1569, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.586 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1600, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1601, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1602, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1603, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1604, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1605, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1606, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1607, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1608, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1609, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1610, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1611, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1612, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1613, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1614, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1615, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1616, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1617, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1618, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1619, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1625, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1626, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1627, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1628, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1629, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1630, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1631, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1632, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1633, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1634, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1640, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1641, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1642, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1643, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1644, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1645, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1646, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1647, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1648, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1649, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1650, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1651, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1652, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1653, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1654, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.587 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1620, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1621, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1622, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1623, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1624, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1635, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1636, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1637, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1638, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1639, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1670, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1671, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1672, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1673, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1674, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1675, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1676, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1677, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1678, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1679, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1680, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1681, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1682, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1683, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1684, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1685, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1686, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1687, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1688, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1689, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1690, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1691, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1692, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1693, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1694, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1660, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1661, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1662, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1663, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1664, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1665, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1666, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1667, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1668, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1669, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.588 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1700, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1701, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1702, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1703, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1704, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1705, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1706, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1707, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1708, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1709, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1710, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1711, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1712, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1713, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1714, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1715, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1716, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1717, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1718, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1719, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1725, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1726, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1727, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1728, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1729, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1730, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1731, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1732, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1733, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1734, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1740, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1741, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1742, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1743, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1744, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1745, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1746, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1747, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1748, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1749, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1750, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1751, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1752, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1753, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1754, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.588 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1720, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1721, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1722, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1723, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1724, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1735, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1736, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1737, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1738, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1739, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1770, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1771, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1772, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1773, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1774, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1775, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1776, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1777, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1778, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1779, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1780, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1781, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1782, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1783, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1784, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1760, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1761, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1762, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1763, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1764, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1785, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1786, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1787, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1788, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1789, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1765, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1766, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1767, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1768, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1769, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1790, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1791, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1792, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1793, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1794, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.589 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1795, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1796, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1797, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1798, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1799, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1805, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1806, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1807, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1808, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1809, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1820, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1821, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1822, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1823, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1824, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1825, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1826, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1827, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1828, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1829, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1810, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1811, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1812, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1813, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1814, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1815, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1816, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1817, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1818, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1819, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1830, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1831, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1832, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1833, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1834, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1835, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1836, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1837, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1838, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1839, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1850, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1851, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1852, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1853, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1854, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.590 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1840, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1841, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1842, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1843, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1844, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1845, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1846, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1847, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1848, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1849, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1870, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1871, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1872, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1873, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1874, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1875, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1876, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1877, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1878, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1879, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1880, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1881, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1882, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1883, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1884, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1885, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1886, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1887, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1888, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1889, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1890, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1891, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1892, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1893, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1894, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1860, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1861, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1862, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1863, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1864, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1865, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1866, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1867, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1868, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1869, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.591 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1900, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1901, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1902, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1903, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1904, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1915, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1916, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1917, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1918, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1919, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1905, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1906, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1907, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1908, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1909, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1910, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1911, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1912, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1913, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1914, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1930, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1931, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1932, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1933, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1934, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1935, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1936, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1937, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1938, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1939, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1940, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1941, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1942, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1943, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1944, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1945, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1946, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1947, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1948, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1949, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1950, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1951, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1952, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1953, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1954, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.591 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 1920, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1921, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1922, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1923, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1924, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1925, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1926, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1927, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1928, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1929, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1970, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1971, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1972, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1973, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1974, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1975, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1976, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1977, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1978, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1979, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1980, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1981, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1982, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1983, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1984, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1960, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1961, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1962, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1963, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1964, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1965, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1966, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1967, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1968, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1969, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1985, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1986, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1987, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1988, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1989, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1990, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1991, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1992, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1993, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 1994, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.592 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2010, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2011, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2012, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2013, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2014, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2015, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2016, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2017, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2018, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2019, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1995, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1996, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1997, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1998, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 1999, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2000, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2001, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2002, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2003, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2004, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2030, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2031, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2032, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2033, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2034, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2035, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2036, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2037, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2038, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2039, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2040, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2041, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2042, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2043, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2044, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2045, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2046, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2047, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2048, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2049, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2050, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2051, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2052, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2053, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2054, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.592 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2020, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2021, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2022, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2023, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2024, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2025, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2026, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2027, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2028, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2029, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2070, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2071, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2072, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2073, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2074, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2075, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2076, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2077, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2078, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2079, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2080, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2081, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2082, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2083, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2084, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2060, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2061, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2062, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2063, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2064, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2085, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2086, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2087, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2088, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2089, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2065, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2066, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2067, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2068, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2069, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2090, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2091, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2092, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2093, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2094, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.593 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2095, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2096, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2097, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2098, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2099, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2105, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2106, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2107, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2108, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2109, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2150, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2151, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2152, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2153, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2154, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.594 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2160, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2161, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2162, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2163, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2164, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2190, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2191, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2192, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2193, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2194, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.594 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2205, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2206, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2207, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2208, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2209, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.595 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2255, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2256, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2257, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2258, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2259, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.596 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2295, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2296, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2297, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2298, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2299, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2300, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2301, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2302, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2303, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2304, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2350, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2351, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2352, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2353, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2354, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.597 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2335, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2336, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2337, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2338, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2339, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2370, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2371, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2372, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2373, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2374, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2375, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2376, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2377, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2378, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2379, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2380, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2381, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2382, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2383, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2384, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2385, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2386, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2387, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2388, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2389, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2390, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2391, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2392, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2393, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2394, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.597 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2400, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2401, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2402, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2403, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2404, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2405, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2406, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2407, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2408, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2409, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2410, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2411, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2412, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2413, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2414, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2415, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2416, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2417, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2418, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2419, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2420, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2421, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2422, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2423, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2424, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2425, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2426, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2427, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2428, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2429, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2435, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2436, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2437, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2438, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2439, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2445, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2446, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2447, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2448, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2449, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2450, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2451, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2452, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2453, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2454, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.598 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2430, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2431, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2432, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2433, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2434, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2440, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2441, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2442, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2443, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2444, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2470, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2471, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2472, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2473, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2474, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2475, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2476, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2477, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2478, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2479, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2480, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2481, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2482, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2483, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2484, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2460, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2461, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2462, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2463, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2464, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2485, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2486, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2487, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2488, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2489, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2465, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2466, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2467, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2468, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2469, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2490, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2491, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2492, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2493, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2494, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.599 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2510, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2511, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2512, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2513, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2514, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2515, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2516, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2517, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2518, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2519, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2495, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2496, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2497, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2498, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2499, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2505, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2506, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2507, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2508, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2509, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2530, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2531, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2532, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2533, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2534, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2535, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2536, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2537, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2538, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2539, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2540, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2541, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2542, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2543, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2544, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2545, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2546, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2547, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2548, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2549, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2550, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2551, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2552, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2553, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2554, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.599 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2520, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2521, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2522, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2523, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2524, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2525, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2526, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2527, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2528, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2529, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2570, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2571, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2572, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2573, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2574, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2575, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2576, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2577, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2578, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2579, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2580, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2581, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2582, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2583, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2584, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2585, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2586, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2587, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2588, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2589, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2590, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2591, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2592, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2593, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2594, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2560, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2561, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2562, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2563, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2564, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2565, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2566, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2567, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2568, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2569, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.600 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2610, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2611, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2612, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2613, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2614, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2615, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2616, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2617, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2618, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2619, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2595, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2596, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2597, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2598, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2599, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2620, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2621, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2622, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2623, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2624, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2600, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2601, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2602, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2603, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2604, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2625, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2626, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2627, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2628, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2629, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2635, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2636, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2637, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2638, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2639, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2630, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2631, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2632, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2633, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2634, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2645, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2646, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2647, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2648, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2649, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.601 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2640, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2641, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2642, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2643, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2644, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2655, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2656, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2657, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2658, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2659, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2670, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2671, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2672, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2673, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2674, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2675, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2676, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2677, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2678, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2679, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2680, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2681, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2682, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2683, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2684, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2660, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2661, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2662, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2663, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2664, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2685, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2686, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2687, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2688, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2689, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2665, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2666, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2667, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2668, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2669, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2690, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2691, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2692, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2693, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2694, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.601 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2710, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2711, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2712, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2713, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2714, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2715, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2716, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2717, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2718, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2719, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2695, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2696, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2697, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2698, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2699, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2705, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2706, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2707, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2708, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2709, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2730, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2731, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2732, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2733, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2734, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2735, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2736, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2737, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2738, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2739, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2740, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2741, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2742, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2743, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2744, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2745, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2746, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2747, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2748, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2749, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2750, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2751, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2752, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2753, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2754, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.602 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2720, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2721, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2722, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2723, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2724, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2725, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2726, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2727, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2728, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2729, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2770, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2771, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2772, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2773, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2774, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2775, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2776, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2777, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2778, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2779, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2780, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2781, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2782, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2783, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2784, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2785, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2786, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2787, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2788, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2789, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2790, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2791, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2792, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2793, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2794, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2760, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2761, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2762, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2763, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2764, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2795, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2796, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2797, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2798, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2799, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.603 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2805, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2806, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2807, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2808, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2809, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2815, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2816, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2817, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2818, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2819, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2820, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2821, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2822, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2823, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2824, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2800, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2801, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2802, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2803, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2804, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2825, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2826, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2827, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2828, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2829, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2810, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2811, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2812, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2813, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2814, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2830, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2831, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2832, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2833, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2834, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2840, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2841, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2842, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2843, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2844, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2850, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2851, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2852, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2853, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2854, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.603 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2835, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2836, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2837, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2838, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2839, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2845, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2846, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2847, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2848, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2849, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2870, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2871, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2872, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2873, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2874, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2875, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2876, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2877, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2878, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2879, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2880, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2881, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2882, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2883, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2884, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2860, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2861, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2862, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2863, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2864, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2885, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2886, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2887, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2888, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2889, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2865, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2866, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2867, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2868, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2869, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2890, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2891, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2892, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2893, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2894, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.604 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2910, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2911, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2912, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2913, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2914, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2915, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2916, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2917, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2918, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2919, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2895, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2896, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2897, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2898, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2899, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2905, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2906, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2907, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2908, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2909, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2930, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2931, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2932, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2933, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2934, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2935, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2936, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2937, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2938, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2939, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2940, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2941, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2942, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2943, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2944, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2945, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2946, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2947, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2948, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2949, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2950, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2951, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2952, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2953, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2954, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.605 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 2920, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2921, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2922, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2923, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2924, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2925, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2926, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2927, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2928, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2929, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2970, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2971, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2972, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2973, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2974, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2975, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2976, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2977, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2978, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2979, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2980, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2981, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2982, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2983, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2984, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2960, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2961, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2962, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2963, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2964, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2965, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2966, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2967, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2968, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2969, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2985, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2986, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2987, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2988, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2989, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2990, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2991, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2992, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2993, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 2994, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.605 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3010, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3011, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3012, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3013, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3014, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2995, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2996, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2997, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2998, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 2999, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3015, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3016, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3017, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3018, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3019, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3000, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3001, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3002, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3003, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3004, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3025, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3026, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3027, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3028, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3029, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3035, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3036, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3037, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3038, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3039, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3040, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3041, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3042, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3043, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3044, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3045, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3046, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3047, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3048, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3049, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3050, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3051, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3052, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3053, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3054, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.606 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3020, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3021, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3022, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3023, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3024, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3030, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3031, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3032, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3033, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3034, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3070, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3071, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3072, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3073, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3074, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3075, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3076, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3077, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3078, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3079, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3080, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3081, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3082, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3083, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3084, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3060, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3061, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3062, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3063, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3064, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3065, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3066, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3067, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3068, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3069, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3085, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3086, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3087, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3088, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3089, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3090, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3091, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3092, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3093, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3094, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.607 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3095, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3096, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3097, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3098, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3099, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3100, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3101, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3102, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3103, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3104, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3150, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3151, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3152, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3153, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3154, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.607 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3190, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3191, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3192, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3193, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3194, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3200, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3201, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3202, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3203, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3204, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.608 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3205, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3206, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3207, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3208, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3209, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3250, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3251, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3252, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3253, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3254, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.609 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.609 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3295, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3296, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3297, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3298, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3299, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3300, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3301, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3302, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3303, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3304, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3335, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3336, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3337, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3338, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3339, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3350, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3351, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3352, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3353, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3354, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.610 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3370, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3371, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3372, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3373, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3374, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3375, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3376, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3377, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3378, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3379, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3380, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3381, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3382, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3383, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3384, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3385, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3386, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3387, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3388, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3389, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3390, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3391, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3392, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3393, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3394, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.610 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3410, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3411, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3412, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3413, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3414, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3395, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3396, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3397, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3398, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3399, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3415, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3416, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3417, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3418, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3419, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3405, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3406, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3407, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3408, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3409, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3425, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3426, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3427, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3428, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3429, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3435, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3436, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3437, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3438, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3439, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3440, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3441, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3442, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3443, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3444, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3445, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3446, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3447, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3448, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3449, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3450, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3451, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3452, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3453, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3454, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.611 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3420, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3421, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3422, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3423, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3424, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3430, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3431, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3432, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3433, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3434, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3470, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3471, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3472, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3473, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3474, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3475, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3476, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3477, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3478, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3479, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3480, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3481, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3482, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3483, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3484, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3460, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3461, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3462, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3463, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3464, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3465, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3466, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3467, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3468, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3469, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3485, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3486, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3487, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3488, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3489, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3490, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3491, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3492, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3493, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3494, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.612 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3510, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3511, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3512, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3513, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3514, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3515, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3516, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3517, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3518, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3519, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3495, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3496, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3497, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3498, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3499, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3500, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3501, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3502, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3503, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3504, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3530, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3531, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3532, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3533, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3534, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3535, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3536, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3537, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3538, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3539, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3540, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3541, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3542, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3543, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3544, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3545, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3546, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3547, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3548, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3549, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3550, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3551, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3552, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3553, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3554, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.613 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3520, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3521, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3522, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3523, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3524, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3525, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3526, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3527, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3528, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3529, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3570, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3571, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3572, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3573, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3574, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3575, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3576, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3577, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3578, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3579, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3580, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3581, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3582, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3583, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3584, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3585, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3586, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3587, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3588, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3589, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3590, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3591, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3592, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3593, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3594, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3560, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3561, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3562, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3563, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3564, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3565, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3566, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3567, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3568, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3569, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.613 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3600, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3601, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3602, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3603, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3604, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3605, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3606, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3607, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3608, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3609, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3610, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3611, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3612, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3613, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3614, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3615, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3616, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3617, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3618, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3619, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3625, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3626, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3627, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3628, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3629, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3630, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3631, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3632, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3633, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3634, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3640, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3641, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3642, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3643, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3644, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3645, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3646, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3647, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3648, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3649, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3650, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3651, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3652, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3653, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3654, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.614 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3620, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3621, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3622, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3623, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3624, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3635, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3636, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3637, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3638, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3639, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3670, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3671, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3672, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3673, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3674, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3675, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3676, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3677, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3678, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3679, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3680, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3681, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3682, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3683, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3684, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3685, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3686, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3687, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3688, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3689, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3690, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3691, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3692, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3693, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3694, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3660, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3661, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3662, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3663, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3664, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3665, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3666, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3667, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3668, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3669, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.615 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3700, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3701, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3702, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3703, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3704, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3705, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3706, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3707, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3708, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3709, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3710, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3711, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3712, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3713, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3714, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3715, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3716, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3717, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3718, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3719, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3725, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3726, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3727, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3728, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3729, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3730, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3731, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3732, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3733, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3734, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3740, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3741, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3742, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3743, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3744, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3745, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3746, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3747, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3748, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3749, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3750, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3751, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3752, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3753, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3754, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.615 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3720, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3721, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3722, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3723, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3724, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3735, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3736, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3737, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3738, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3739, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3770, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3771, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3772, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3773, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3774, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3775, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3776, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3777, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3778, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3779, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3780, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3781, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3782, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3783, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3784, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3785, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3786, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3787, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3788, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3789, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3790, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3791, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3792, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3793, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3794, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3760, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3761, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3762, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3763, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3764, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3765, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3766, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3767, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3768, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3769, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.616 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3800, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3801, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3802, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3803, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3804, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3805, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3806, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3807, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3808, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3809, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3810, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3811, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3812, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3813, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3814, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3815, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3816, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3817, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3818, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3819, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3825, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3826, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3827, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3828, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3829, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3830, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3831, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3832, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3833, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3834, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3840, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3841, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3842, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3843, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3844, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3845, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3846, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3847, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3848, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3849, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3850, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3851, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3852, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3853, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3854, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.616 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3820, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3821, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3822, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3823, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3824, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3835, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3836, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3837, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3838, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3839, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3870, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3871, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3872, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3873, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3874, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3875, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3876, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3877, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3878, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3879, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3880, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3881, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3882, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3883, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3884, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3885, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3886, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3887, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3888, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3889, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3890, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3891, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3892, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3893, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3894, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3860, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3861, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3862, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3863, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3864, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3865, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3866, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3867, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3868, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3869, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.617 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3910, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3911, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3912, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3913, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3914, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3895, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3896, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3897, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3898, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3899, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3915, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3916, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3917, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3918, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3919, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3900, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3901, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3902, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3903, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3904, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3920, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3921, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3922, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3923, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3924, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3930, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3931, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3932, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3933, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3934, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3940, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3941, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3942, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3943, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3944, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3945, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3946, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3947, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3948, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3949, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3925, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3926, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3927, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3928, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3929, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.618 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 3935, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3936, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3937, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3938, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3939, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3960, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3961, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3962, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3963, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3964, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3970, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3971, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3972, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3973, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3974, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3975, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3976, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3977, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3978, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3979, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3980, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3981, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3982, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3983, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3984, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3955, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3956, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3957, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3958, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3959, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3965, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3966, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3967, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3968, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3969, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3985, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3986, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3987, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3988, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3989, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3990, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3991, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3992, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3993, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 3994, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.619 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4010, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4011, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4012, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4013, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4014, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3995, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3996, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3997, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3998, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 3999, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4000, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4001, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4002, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4003, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4004, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4015, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4016, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4017, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4018, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4019, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4025, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4026, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4027, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4028, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4029, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4030, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4031, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4032, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4033, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4034, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4040, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4041, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4042, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4043, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4044, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4045, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4046, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4047, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4048, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4049, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4050, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4051, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4052, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4053, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4054, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.619 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4020, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4021, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4022, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4023, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4024, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4035, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4036, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4037, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4038, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4039, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4070, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4071, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4072, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4073, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4074, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4075, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4076, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4077, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4078, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4079, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4080, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4081, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4082, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4083, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4084, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4085, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4086, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4087, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4088, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4089, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4090, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4091, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4092, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4093, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4094, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4060, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4061, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4062, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4063, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4064, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4065, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4066, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4067, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4068, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4069, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.620 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4095, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4096, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4097, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4098, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4099, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4100, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4101, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4102, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4103, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4104, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4150, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4151, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4152, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4153, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4154, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.621 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4160, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4161, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4162, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4163, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4164, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4190, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4191, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4192, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4193, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4194, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.622 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4200, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4201, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4202, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4203, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4204, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4250, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4251, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4252, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4253, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4254, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.622 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.623 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4295, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4296, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4297, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4298, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4299, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4305, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4306, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4307, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4308, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4309, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4350, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4351, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4352, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4353, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4354, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.624 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4370, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4371, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4372, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4373, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4374, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4375, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4376, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4377, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4378, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4379, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4380, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4381, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4382, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4383, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4384, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4355, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4356, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4357, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4358, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4359, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4385, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4386, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4387, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4388, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4389, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4390, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4391, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4392, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4393, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4394, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.624 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4400, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4401, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4402, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4403, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4404, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4405, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4406, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4407, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4408, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4409, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4410, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4411, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4412, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4413, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4414, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4415, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4416, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4417, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4418, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4419, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4420, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4421, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4422, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4423, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4424, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4435, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4436, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4437, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4438, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4439, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4440, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4441, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4442, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4443, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4444, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4425, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4426, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4427, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4428, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4429, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4445, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4446, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4447, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4448, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4449, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.625 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4430, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4431, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4432, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4433, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4434, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4455, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4456, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4457, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4458, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4459, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4470, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4471, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4472, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4473, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4474, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4475, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4476, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4477, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4478, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4479, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4480, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4481, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4482, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4483, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4484, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4460, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4461, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4462, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4463, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4464, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4465, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4466, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4467, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4468, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4469, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4485, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4486, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4487, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4488, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4489, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4490, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4491, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4492, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4493, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4494, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.626 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4495, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4496, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4497, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4498, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4499, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4510, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4511, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4512, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4513, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4514, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4500, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4501, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4502, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4503, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4504, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4515, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4516, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4517, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4518, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4519, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4520, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4521, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4522, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4523, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4524, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4530, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4531, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4532, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4533, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4534, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4540, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4541, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4542, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4543, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4544, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4545, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4546, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4547, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4548, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4549, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4550, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4551, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4552, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4553, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4554, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.626 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4525, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4526, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4527, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4528, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4529, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4535, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4536, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4537, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4538, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4539, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4570, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4571, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4572, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4573, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4574, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4575, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4576, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4577, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4578, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4579, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4580, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4581, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4582, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4583, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4584, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4585, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4586, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4587, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4588, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4589, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4590, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4591, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4592, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4593, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4594, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4560, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4561, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4562, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4563, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4564, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4595, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4596, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4597, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4598, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4599, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.627 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4600, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4601, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4602, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4603, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4604, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4610, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4611, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4612, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4613, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4614, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4605, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4606, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4607, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4608, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4609, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4615, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4616, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4617, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4618, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4619, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4630, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4631, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4632, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4633, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4634, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4635, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4636, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4637, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4638, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4639, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4640, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4641, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4642, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4643, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4644, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4645, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4646, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4647, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4648, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4649, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4650, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4651, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4652, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4653, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4654, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.628 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4620, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4621, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4622, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4623, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4624, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4625, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4626, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4627, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4628, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4629, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4670, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4671, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4672, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4673, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4674, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4675, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4676, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4677, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4678, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4679, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4680, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4681, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4682, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4683, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4684, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4685, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4686, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4687, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4688, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4689, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4660, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4661, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4662, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4663, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4664, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4690, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4691, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4692, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4693, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4694, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4665, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4666, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4667, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4668, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4669, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.628 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4695, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4696, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4697, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4698, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4699, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4710, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4711, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4712, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4713, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4714, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4705, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4706, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4707, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4708, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4709, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4715, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4716, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4717, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4718, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4719, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4720, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4721, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4722, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4723, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4724, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4725, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4726, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4727, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4728, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4729, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4735, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4736, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4737, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4738, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4739, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4745, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4746, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4747, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4748, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4749, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4750, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4751, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4752, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4753, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4754, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.629 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4730, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4731, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4732, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4733, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4734, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4740, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4741, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4742, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4743, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4744, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4770, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4771, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4772, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4773, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4774, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4775, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4776, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4777, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4778, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4779, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4780, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4781, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4782, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4783, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4784, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4760, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4761, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4762, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4763, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4764, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4765, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4766, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4767, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4768, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4769, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4785, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4786, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4787, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4788, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4789, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4790, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4791, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4792, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4793, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4794, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.630 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4800, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4801, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4802, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4803, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4804, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4805, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4806, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4807, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4808, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4809, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4810, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4811, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4812, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4813, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4814, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4815, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4816, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4817, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4818, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4819, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4820, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4821, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4822, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4823, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4824, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4825, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4826, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4827, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4828, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4829, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4835, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4836, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4837, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4838, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4839, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4840, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4841, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4842, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4843, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4844, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4850, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4851, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4852, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4853, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4854, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.630 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4830, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4831, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4832, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4833, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4834, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4845, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4846, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4847, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4848, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4849, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4870, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4871, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4872, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4873, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4874, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4875, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4876, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4877, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4878, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4879, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4880, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4881, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4882, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4883, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4884, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4860, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4861, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4862, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4863, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4864, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4865, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4866, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4867, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4868, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4869, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4885, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4886, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4887, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4888, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4889, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4890, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4891, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4892, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4893, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4894, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.631 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4910, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4911, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4912, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4913, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4914, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4915, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4916, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4917, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4918, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4919, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4895, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4896, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4897, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4898, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4899, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4900, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4901, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4902, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4903, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4904, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4930, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4931, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4932, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4933, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4934, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4935, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4936, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4937, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4938, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4939, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4940, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4941, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4942, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4943, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4944, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4945, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4946, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4947, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4948, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4949, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4950, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4951, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4952, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4953, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4954, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.632 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 4920, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4921, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4922, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4923, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4924, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4925, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4926, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4927, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4928, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4929, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4970, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4971, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4972, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4973, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4974, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4975, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4976, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4977, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4978, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4979, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4980, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4981, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4982, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4983, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4984, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4985, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4986, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4987, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4988, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4989, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4990, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4991, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4992, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4993, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4994, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4995, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4996, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4997, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4998, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4999, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4960, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4961, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4962, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 4963, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 4964, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.632 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5000, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5001, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5002, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5003, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5004, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5010, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5011, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5012, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5013, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5014, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5015, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5016, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5017, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5018, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5019, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5025, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5026, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5027, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5028, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5029, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5005, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5006, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5007, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5008, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5009, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5030, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5031, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5032, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5033, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5034, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5035, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5036, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5037, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5038, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5039, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5045, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5046, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5047, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5048, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5049, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5050, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5051, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5052, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5053, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5054, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.633 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5020, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5021, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5022, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5023, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5024, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5040, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5041, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5042, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5043, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5044, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5070, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5071, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5072, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5073, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5074, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5075, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5076, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5077, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5078, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5079, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5080, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5081, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5082, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5083, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5084, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5060, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5061, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5062, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5063, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5064, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5065, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5066, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5067, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5068, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5069, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5085, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5086, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5087, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5088, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5089, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5090, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5091, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5092, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5093, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5094, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.634 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5095, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5096, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5097, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5098, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5099, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5100, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5101, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5102, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5103, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5104, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5150, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5151, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5152, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5153, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5154, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.634 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5160, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5161, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5162, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5163, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5164, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5190, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5191, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5192, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5193, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5194, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.635 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5205, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5206, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5207, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5208, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5209, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5250, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5251, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5252, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5253, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5254, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.636 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.637 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5295, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5296, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5297, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5298, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5299, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5300, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5301, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5302, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5303, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5304, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5335, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5336, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5337, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5338, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5339, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5350, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5351, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5352, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5353, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5354, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.637 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5370, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5371, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5372, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5373, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5374, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5375, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5376, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5377, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5378, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5379, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5380, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5381, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5382, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5383, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5384, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5385, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5386, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5387, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5388, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5389, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5390, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5391, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5392, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5393, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5394, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.638 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5410, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5411, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5412, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5413, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5414, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5415, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5416, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5417, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5418, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5419, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5395, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5396, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5397, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5398, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5399, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5400, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5401, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5402, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5403, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5404, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5430, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5431, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5432, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5433, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5434, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5435, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5436, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5437, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5438, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5439, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5440, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5441, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5442, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5443, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5444, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5445, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5446, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5447, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5448, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5449, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5450, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5451, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5452, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5453, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5454, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.639 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5420, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5421, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5422, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5423, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5424, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5425, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5426, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5427, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5428, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5429, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5470, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5471, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5472, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5473, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5474, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5475, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5476, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5477, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5478, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5479, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5480, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5481, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5482, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5483, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5484, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5460, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5461, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5462, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5463, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5464, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5465, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5466, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5467, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5468, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5469, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5495, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5496, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5497, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5498, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5499, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5500, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5501, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5502, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5503, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5504, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.639 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5510, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5511, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5512, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5513, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5514, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5485, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5486, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5487, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5488, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5489, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5490, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5491, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5492, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5493, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5494, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5515, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5516, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5517, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5518, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5519, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5520, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5521, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5522, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5523, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5524, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5525, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5526, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5527, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5528, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5529, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5535, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5536, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5537, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5538, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5539, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5540, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5541, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5542, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5543, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5544, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5530, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5531, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5532, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5533, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5534, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.641 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5560, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5561, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5562, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5563, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5564, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5565, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5566, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5567, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5568, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5569, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5550, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5551, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5552, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5553, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5554, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5570, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5571, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5572, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5573, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5574, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5555, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5556, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5557, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5558, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5559, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5580, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5581, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5582, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5583, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5584, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5575, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5576, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5577, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5578, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5579, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5590, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5591, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5592, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5593, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5594, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5585, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5586, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5587, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5588, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5589, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.641 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5605, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5606, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5607, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5608, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5609, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5600, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5601, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5602, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5603, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5604, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5615, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5616, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5617, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5618, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5619, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5610, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5611, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5612, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5613, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5614, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5625, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5626, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5627, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5628, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5629, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5620, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5621, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5622, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5623, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5624, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5635, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5636, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5637, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5638, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5639, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5630, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5631, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5632, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5633, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5634, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5645, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5646, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5647, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5648, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5649, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.642 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5650, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5651, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5652, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5653, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5654, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5665, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5666, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5667, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5668, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5669, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5655, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5656, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5657, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5658, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5659, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5660, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5661, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5662, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5663, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5664, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5670, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5671, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5672, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5673, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5674, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5675, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5676, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5677, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5678, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5679, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5680, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5681, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5682, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5683, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5684, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5685, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5686, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5687, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5688, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5689, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5690, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5691, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5692, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5693, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5694, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.643 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5705, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5706, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5707, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5708, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5709, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5715, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5716, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5717, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5718, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5719, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5695, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5696, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5697, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5698, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5699, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5710, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5711, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5712, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5713, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5714, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5720, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5721, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5722, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5723, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5724, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5725, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5726, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5727, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5728, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5729, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5730, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5731, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5732, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5733, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5734, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5735, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5736, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5737, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5738, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5739, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5740, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5741, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5742, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5743, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5744, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.643 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5755, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5756, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5757, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5758, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5759, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5765, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5766, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5767, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5768, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5769, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5745, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5746, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5747, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5748, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5749, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5760, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5761, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5762, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5763, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5764, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5770, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5771, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5772, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5773, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5774, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5775, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5776, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5777, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5778, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5779, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5780, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5781, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5782, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5783, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5784, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5785, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5786, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5787, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5788, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5789, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5790, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5791, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5792, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5793, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5794, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.644 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5805, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5806, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5807, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5808, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5809, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5815, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5816, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5817, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5818, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5819, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5795, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5796, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5797, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5798, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5799, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5810, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5811, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5812, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5813, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5814, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5820, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5821, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5822, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5823, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5824, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5825, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5826, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5827, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5828, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5829, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5830, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5831, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5832, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5833, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5834, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5835, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5836, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5837, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5838, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5839, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5840, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5841, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5842, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5843, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5844, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.645 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5855, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5856, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5857, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5858, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5859, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5865, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5866, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5867, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5868, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5869, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5845, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5846, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5847, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5848, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5849, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5860, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5861, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5862, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5863, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5864, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5870, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5871, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5872, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5873, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5874, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5875, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5876, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5877, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5878, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5879, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5880, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5881, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5882, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5883, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5884, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5890, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5891, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5892, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5893, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5894, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5885, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5886, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5887, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5888, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5889, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.645 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5910, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5911, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5912, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5913, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5914, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5915, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5916, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5917, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5918, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5919, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5920, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5921, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5922, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5923, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5924, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5925, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5926, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5927, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5928, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5929, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5930, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5931, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5932, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5933, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5934, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5895, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5896, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5897, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5898, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5899, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5905, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5906, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5907, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5908, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5909, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5945, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5946, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5947, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5948, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5949, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5950, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5951, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5952, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5953, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5954, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.646 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 5960, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5961, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5962, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5963, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5964, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5965, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5966, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5967, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5968, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5969, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5935, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5936, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5937, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5938, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5939, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5940, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5941, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5942, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5943, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5944, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5970, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5971, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5972, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5973, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5974, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5975, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5976, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5977, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5978, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5979, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5980, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5981, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5982, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5983, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5984, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5985, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5986, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5987, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5988, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5989, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5990, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5991, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5992, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5993, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 5994, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.647 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6005, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6006, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6007, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6008, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6009, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6015, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6016, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6017, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6018, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6019, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5995, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5996, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5997, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5998, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 5999, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6010, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6011, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6012, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6013, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6014, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6020, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6021, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6022, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6023, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6024, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6025, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6026, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6027, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6028, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6029, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6030, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6031, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6032, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6033, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6034, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6035, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6036, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6037, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6038, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6039, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6040, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6041, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6042, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6043, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6044, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.648 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6055, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6056, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6057, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6058, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6059, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6065, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6066, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6067, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6068, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6069, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6045, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6046, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6047, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6048, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6049, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6060, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6061, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6062, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6063, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6064, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6070, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6071, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6072, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6073, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6074, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6075, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6076, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6077, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6078, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6079, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6080, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6081, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6082, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6083, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6084, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6085, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6086, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6087, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6088, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6089, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6090, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6091, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6092, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6093, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6094, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.648 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6105, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6106, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6107, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6108, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6109, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6095, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6096, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6097, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6098, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6099, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.649 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6155, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6156, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6157, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6158, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6159, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6160, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6161, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6162, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6163, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6164, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6200, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6201, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6202, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6203, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6204, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.650 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6205, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6206, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6207, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6208, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6209, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.650 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6250, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6251, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6252, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6253, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6254, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.651 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6295, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6296, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6297, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6298, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6299, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6305, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6306, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6307, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6308, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6309, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6335, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6336, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6337, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6338, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6339, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.652 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6370, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6371, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6372, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6373, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6374, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6375, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6376, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6377, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6378, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6379, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6380, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6381, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6382, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6383, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6384, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6350, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6351, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6352, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6353, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6354, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6390, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6391, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6392, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6393, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6394, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6400, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6401, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6402, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6403, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6404, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.653 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6410, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6411, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6412, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6413, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6414, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6415, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6416, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6417, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6418, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6419, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6420, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6421, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6422, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6423, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6424, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6385, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6386, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6387, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6388, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6389, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6395, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6396, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6397, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6398, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6399, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6425, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6426, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6427, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6428, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6429, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6430, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6431, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6432, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6433, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6434, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6435, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6436, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6437, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6438, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6439, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6440, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6441, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6442, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6443, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6444, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.654 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6460, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6461, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6462, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6463, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6464, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6465, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6466, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6467, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6468, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6469, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6470, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6471, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6472, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6473, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6474, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6475, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6476, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6477, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6478, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6479, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6445, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6446, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6447, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6448, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6449, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6450, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6451, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6452, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6453, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6454, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6480, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6481, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6482, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6483, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6484, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6490, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6491, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6492, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6493, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6494, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6495, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6496, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6497, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6498, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6499, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.655 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6510, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6511, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6512, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6513, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6514, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6515, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6516, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6517, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6518, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6519, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6485, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6486, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6487, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6488, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6489, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6500, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6501, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6502, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6503, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6504, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6520, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6521, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6522, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6523, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6524, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6525, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6526, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6527, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6528, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6529, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6530, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6531, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6532, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6533, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6534, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6535, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6536, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6537, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6538, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6539, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6540, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6541, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6542, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6543, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6544, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.655 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6555, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6556, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6557, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6558, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6559, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6565, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6566, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6567, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6568, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6569, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6570, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6571, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6572, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6573, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6574, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6575, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6576, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6577, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6578, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6579, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6545, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6546, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6547, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6548, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6549, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6560, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6561, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6562, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6563, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6564, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6580, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6581, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6582, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6583, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6584, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6590, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6591, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6592, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6593, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6594, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6595, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6596, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6597, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6598, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6599, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.656 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6610, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6611, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6612, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6613, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6614, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6615, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6616, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6617, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6618, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6619, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6620, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6621, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6622, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6623, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6624, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6625, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6626, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6627, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6628, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6629, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6585, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6586, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6587, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6588, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6589, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6600, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6601, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6602, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6603, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6604, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6630, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6631, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6632, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6633, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6634, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6640, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6641, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6642, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6643, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6644, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6645, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6646, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6647, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6648, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6649, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.656 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6660, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6661, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6662, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6663, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6664, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6665, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6666, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6667, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6668, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6669, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6635, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6636, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6637, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6638, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6639, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6650, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6651, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6652, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6653, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6654, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6670, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6671, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6672, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6673, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6674, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6675, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6676, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6677, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6678, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6679, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6680, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6681, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6682, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6683, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6684, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6685, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6686, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6687, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6688, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6689, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6690, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6691, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6692, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6693, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6694, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.657 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6705, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6706, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6707, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6708, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6709, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6715, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6716, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6717, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6718, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6719, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6695, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6696, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6697, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6698, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6699, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6710, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6711, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6712, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6713, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6714, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6720, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6721, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6722, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6723, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6724, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6725, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6726, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6727, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6728, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6729, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6730, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6731, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6732, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6733, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6734, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6735, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6736, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6737, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6738, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6739, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6740, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6741, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6742, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6743, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6744, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.658 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6755, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6756, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6757, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6758, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6759, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6765, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6766, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6767, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6768, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6769, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6770, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6771, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6772, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6773, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6774, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6775, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6776, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6777, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6778, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6779, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6745, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6746, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6747, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6748, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6749, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6760, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6761, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6762, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6763, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6764, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6780, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6781, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6782, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6783, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6784, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6790, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6791, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6792, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6793, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6794, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6795, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6796, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6797, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6798, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6799, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.658 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6785, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6786, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6787, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6788, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6789, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6810, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6811, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6812, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6813, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6814, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6800, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6801, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6802, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6803, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6804, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6815, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6816, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6817, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6818, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6819, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6820, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6821, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6822, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6823, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6824, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6830, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6831, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6832, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6833, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6834, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6840, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6841, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6842, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6843, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6844, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6825, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6826, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6827, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6828, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6829, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6835, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6836, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6837, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6838, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6839, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.659 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6860, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6861, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6862, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6863, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6864, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6845, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6846, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6847, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6848, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6849, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6865, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6866, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6867, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6868, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6869, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6850, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6851, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6852, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6853, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6854, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6870, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6871, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6872, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6873, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6874, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6875, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6876, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6877, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6878, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6879, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6880, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6881, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6882, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6883, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6884, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6890, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6891, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6892, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6893, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6894, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6885, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6886, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6887, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6888, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6889, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.660 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6910, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6911, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6912, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6913, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6914, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6915, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6916, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6917, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6918, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6919, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6900, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6901, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6902, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6903, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6904, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6920, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6921, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6922, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6923, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6924, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6905, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6906, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6907, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6908, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6909, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6930, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6931, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6932, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6933, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6934, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6940, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6941, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6942, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6943, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6944, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6945, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6946, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6947, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6948, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6949, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6925, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6926, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6927, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6928, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6929, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.660 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 6950, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6951, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6952, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6953, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6954, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6955, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6956, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6957, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6958, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6959, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6960, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6961, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6962, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6963, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6964, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6965, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6966, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6967, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6968, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6969, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6970, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6971, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6972, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6973, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6974, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6975, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6976, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6977, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6978, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6979, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6980, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6981, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6982, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6983, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6984, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6985, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6986, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6987, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6988, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6989, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6990, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6991, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6992, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6993, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 6994, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.661 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7005, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7006, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7007, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7008, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7009, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6995, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6996, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6997, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6998, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 6999, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7015, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7016, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7017, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7018, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7019, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7010, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7011, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7012, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7013, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7014, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7020, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7021, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7022, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7023, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7024, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7025, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7026, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7027, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7028, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7029, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7030, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7031, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7032, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7033, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7034, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7040, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7041, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7042, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7043, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7044, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7035, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7036, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7037, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7038, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 7039, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.662 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7060, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7061, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7062, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7063, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7064, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7065, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7066, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7067, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7068, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7069, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7050, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7051, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7052, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7053, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7054, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7055, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7056, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7057, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7058, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7059, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7070, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7071, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7072, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7073, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7074, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7075, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7076, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7077, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7078, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7079, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7080, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7081, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7082, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7083, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7084, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7085, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7086, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7087, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7088, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7089, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7090, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7091, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7092, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7093, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 7094, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.662 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7105, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7106, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7107, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7108, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7109, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7115, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7116, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7117, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7118, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7119, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7095, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7096, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7097, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7098, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7099, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7110, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7111, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7112, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7113, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7114, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7120, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7121, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7122, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7123, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7124, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7125, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7126, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7127, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7128, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7129, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7130, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7131, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7132, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7133, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7134, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7135, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7136, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7137, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7138, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7139, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7140, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7141, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7142, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7143, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 7144, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.663 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7155, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7156, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7157, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7158, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7159, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7165, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7166, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7167, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7168, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7169, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7145, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7146, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7147, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7148, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7149, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7160, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7161, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7162, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7163, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7164, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7170, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7171, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7172, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7173, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7174, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7175, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7176, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7177, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7178, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7179, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7180, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7181, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7182, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7183, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7184, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7185, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7186, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7187, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7188, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7189, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7190, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7191, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7192, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7193, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 7194, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.664 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7205, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7206, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7207, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7208, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7209, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7215, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7216, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7217, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7218, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7219, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7195, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7196, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7197, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7198, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7199, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7210, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7211, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7212, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7213, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7214, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7220, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7221, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7222, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7223, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7224, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7225, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7226, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7227, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7228, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7229, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7230, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7231, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7232, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7233, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7234, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7235, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7236, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7237, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7238, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7239, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7240, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7241, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7242, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7243, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 7244, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.665 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7255, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7256, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7257, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7258, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7259, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7265, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7266, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7267, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7268, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7269, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7245, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7246, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7247, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7248, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7249, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7260, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7261, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7262, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7263, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7264, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7270, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7271, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7272, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7273, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7274, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7275, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7276, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7277, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7278, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7279, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7280, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7281, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7282, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7283, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7284, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7285, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7286, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7287, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7288, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7289, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7290, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7291, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7292, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7293, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 7294, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.665 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7305, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7306, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7307, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7308, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7309, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7315, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7316, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7317, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7318, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7319, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7295, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7296, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7297, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7298, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7299, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7310, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7311, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7312, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7313, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7314, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7320, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7321, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7322, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7323, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7324, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7325, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7326, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7327, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7328, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7329, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7330, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7331, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7332, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7333, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7334, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7335, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7336, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7337, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7338, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7339, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7340, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7341, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7342, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7343, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, ...}, %Broadway.Message{data: 7344, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, ...}, batcher: :default, batch_key: :default, ...}, %Broadway.Message{data: (truncated)
07:20:08.666 [error] ** (FunctionClauseError) no function clause matching in Broadway.NoopAcknowledger.ack/3
    (broadway 1.1.0) lib/broadway/noop_acknowledger.ex:27: Broadway.NoopAcknowledger.ack(:ack_ref, [%Broadway.Message{data: 7355, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7356, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7357, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7358, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7359, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7365, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7366, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7367, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7368, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7369, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7345, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7346, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7347, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7348, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7349, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7360, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7361, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7362, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7363, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}, %Broadway.Message{data: 7364, metadata: %{}, acknowledger: {Broadway.NoopAcknowledger, :ack_ref, :ok}, batcher: :default, batch_key: :default, batch_mode: :bulk, status: :ok}], [])
    (elixir 1.14.0) lib/enum.ex:980: anonymous fn/3 in Enum.each/2
    (stdlib 4.3.1.4) maps.erl:411: :maps.fold_1/3
    (elixir 1.14.0) lib/enum.ex:2480: Enum.each/2
    (broadway 1.1.0) lib/broadway/topology/batch_processor_stage.ex:85: anonymous fn/5 in Broadway.Topology.BatchProcessorStage.handle_events/3
    (telemetry 1.3.0) /home/travis/Projects/bendscript/deps/telemetry/src/telemetry.erl:324: :telemetry.span/3
    (gen_stage 1.2.1) lib/gen_stage.ex:2578: GenStage.consumer_dispatch/6
    (stdlib 4.3.1.4) gen_server.erl:1123: :gen_server.try_dispatch/4
    (stdlib 4.3.1.4) gen_server.erl:1200: :gen_server.handle_msg/6
    (stdlib 4.3.1.4) proc_lib.erl:240: :proc_lib.init_p_do_apply/3

07:20:08.666 [error] GenServer :"test_pipeline.Broadway.Supervisor" terminating
** (stop) 30000
Last message: {:EXIT, #PID<0.1149.0>, 30000}
State: {:state, {:local, :"test_pipeline.Broadway.Supervisor"}, :rest_for_one, {[:"test_pipeline.Broadway.Terminator", #Reference<0.3567973744.1267204102.65549>, #Reference<0.3567973744.1267204102.65546>, #Reference<0.3567973744.1267204102.65545>, Broadway.Topology.RateLimiter], %{Broadway.Topology.RateLimiter => {:child, :undefined, Broadway.Topology.RateLimiter, {Broadway.Topology.RateLimiter, :start_link, [[name: :"test_pipeline.Broadway.RateLimiter", rate_limiting: nil, producers_names: [:"test_pipeline.Broadway.Producer_0"]]]}, :permanent, false, 5000, :worker, [Broadway.Topology.RateLimiter]}, :"test_pipeline.Broadway.Terminator" => {:child, #PID<0.1161.0>, :"test_pipeline.Broadway.Terminator", {Broadway.Topology.Terminator, :start_link, [[producers: [:"test_pipeline.Broadway.Producer_0"], first: [:"test_pipeline.Broadway.Processor_default_0", :"test_pipeline.Broadway.Processor_default_1"], last: [:"test_pipeline.Broadway.BatchProcessor_default_0"]], [name: :"test_pipeline.Broadway.Terminator"]]}, :permanent, false, 30000, :worker, [Broadway.Topology.Terminator]}, #Reference<0.3567973744.1267204102.65545> => {:child, #PID<0.1151.0>, #Reference<0.3567973744.1267204102.65545>, {Supervisor, :start_link, [[%{id: :"test_pipeline.Broadway.Producer_0", shutdown: 30000, start: {Broadway.Topology.ProducerStage, :start_link, [[broadway: [hibernate_after: 15000, context: :context_not_set, resubscribe_interval: 100, max_seconds: 5, max_restarts: 3, shutdown: 30000, name: :test_pipeline, producer: [hibernate_after: 15000, module: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, transformer: {KernelShtf.RaceTest.TestTrack, :transform_message, []}, concurrency: 1], processors: [default: [hibernate_after: 15000, max_demand: 10, concurrency: 2]], batchers: [default: [hibernate_after: 15000, batch_size: 50, batch_timeout: 1000, concurrency: 1]]], dispatcher: {GenStage.DemandDispatcher, [shuffle_demands_on_first_dispatch: true]}, rate_limiter: nil, hibernate_after: 15000, module: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, transformer: {KernelShtf.RaceTest.TestTrack, :transform_message, []}, concurrency: 1], 0, [name: :"test_pipeline.Broadway.Producer_0", hibernate_after: 15000]]}}], [name: :"test_pipeline.Broadway.ProducerSupervisor", strategy: :one_for_one, max_restarts: 2, max_seconds: 1]]}, :permanent, false, :infinity, :supervisor, [Supervisor]}, #Reference<0.3567973744.1267204102.65546> => {:child, #PID<0.1153.0>, #Reference<0.3567973744.1267204102.65546>, {Supervisor, :start_link, [[%{id: :"test_pipeline.Broadway.Processor_default_0", shutdown: 30000, start: {Broadway.Topology.ProcessorStage, :start_link, [[name: :"test_pipeline.Broadway.Processor_default_0", partition: 0, topology_name: :test_pipeline, type: :producer_consumer, resubscribe: 100, terminator: :"test_pipeline.Broadway.Terminator", module: KernelShtf.RaceTest.TestTrack, context: :context_not_set, dispatcher: {GenStage.DemandDispatcher, [shuffle_demands_on_first_dispatch: true]}, processor_key: :default, processor_config: [hibernate_after: 15000, max_demand: 10, concurrency: 2], producers: [:"test_pipeline.Broadway.Producer_0"], producer: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, batchers: [:default]], [name: :"test_pipeline.Broadway.Processor_default_0", hibernate_after: 15000]]}}, %{id: :"test_pipeline.Broadway.Processor_default_1", shutdown: 30000, start: {Broadway.Topology.ProcessorStage, :start_link, [[name: :"test_pipeline.Broadway.Processor_default_1", partition: 1, topology_name: :test_pipeline, type: :producer_consumer, resubscribe: 100, terminator: :"test_pipeline.Broadway.Terminator", module: KernelShtf.RaceTest.TestTrack, context: :context_not_set, dispatcher: {GenStage.DemandDispatcher, [shuffle_demands_on_first_dispatch: true]}, processor_key: :default, processor_config: [hibernate_after: 15000, max_demand: 10, concurrency: 2], producers: [:"test_pipeline.Broadway.Producer_0"], producer: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, batchers: [:default]], [name: :"test_pipeline.Broadway.Processor_default_1", hibernate_after: 15000]]}}], [name: :"test_pipeline.Broadway.ProcessorSupervisor", strategy: :one_for_all, max_restarts: 0]]}, :permanent, false, :infinity, :supervisor, [Supervisor]}, #Reference<0.3567973744.1267204102.65549> => {:child, #PID<0.1156.0>, #Reference<0.3567973744.1267204102.65549>, {Supervisor, :start_link, [[%{id: #Reference<0.3567973744.1267204102.65548>, start: {Supervisor, :start_link, [[%{id: :"test_pipeline.Broadway.Batcher_default", shutdown: 30000, start: {Broadway.Topology.BatcherStage, :start_link, [[topology_name: :test_pipeline, name: :"test_pipeline.Broadway.Batcher_default", resubscribe: :never, terminator: :"test_pipeline.Broadway.Terminator", batcher: :default, partition: :default, processors: [:"test_pipeline.Broadway.Processor_default_0", :"test_pipeline.Broadway.Processor_default_1"], context: :context_not_set, partition_by: nil, concurrency: 1, hibernate_after: 15000, batch_size: 50, batch_timeout: 1000, concurrency: 1], [name: :"test_pipeline.Broadway.Batcher_default"]]}}, %{id: #Reference<0.3567973744.1267204102.65547>, start: {Supervisor, :start_link, [[%{id: :"test_pipeline.Broadway.BatchProcessor_default_0", shutdown: 30000, start: {Broadway.Topology.BatchProcessorStage, :start_link, [[name: :"test_pipeline.Broadway.BatchProcessor_default_0", partition: 0, topology_name: :test_pipeline, resubscribe: :never, terminator: :"test_pipeline.Broadway.Terminator", module: KernelShtf.RaceTest.TestTrack, context: :context_not_set, batcher: :"test_pipeline.Broadway.Batcher_default", ...], [name: :"test_pipeline.Broadway.BatchProcessor_default_0", hibernate_after: 15000]]}}], [name: :"test_pipeline.Broadway.BatchProcessorSupervisor_default", strategy: :one_for_all, max_restarts: 0]]}, type: :supervisor}], [name: :"test_pipeline.Broadway.BatcherSupervisor_default", strategy: :rest_for_one, max_restarts: 4, max_seconds: 2]]}, type: :supervisor}], [name: :"test_pipeline.Broadway.BatchersSupervisor", strategy: :one_for_one, max_restarts: 2, max_seconds: 1]]}, :permanent, false, :infinity, :supervisor, [Supervisor]}}}, :undefined, 3, 5, [], 0, :never, Supervisor.Default, {:ok, {%{intensity: 3, period: 5, strategy: :rest_for_one}, [%{id: Broadway.Topology.RateLimiter, start: {Broadway.Topology.RateLimiter, :start_link, [[name: :"test_pipeline.Broadway.RateLimiter", rate_limiting: nil, producers_names: [:"test_pipeline.Broadway.Producer_0"]]]}}, %{id: #Reference<0.3567973744.1267204102.65545>, start: {Supervisor, :start_link, [[%{id: :"test_pipeline.Broadway.Producer_0", shutdown: 30000, start: {Broadway.Topology.ProducerStage, :start_link, [[broadway: [hibernate_after: 15000, context: :context_not_set, resubscribe_interval: 100, max_seconds: 5, max_restarts: 3, shutdown: 30000, name: :test_pipeline, producer: [hibernate_after: 15000, module: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, transformer: {KernelShtf.RaceTest.TestTrack, :transform_message, []}, concurrency: 1], processors: [default: [hibernate_after: 15000, max_demand: 10, concurrency: 2]], batchers: [default: [hibernate_after: 15000, batch_size: 50, batch_timeout: 1000, concurrency: 1]]], dispatcher: {GenStage.DemandDispatcher, [shuffle_demands_on_first_dispatch: true]}, rate_limiter: nil, hibernate_after: 15000, module: {KernelShtf.RaceTest.DummyJumper, [counter: 0]}, transformer: {KernelShtf.RaceTest.TestTrack, :transform_message, []}, concurrency: 1], 0, [name: :"test_pipeline.Broadway.Producer_0", hibernate_after: 15000]]}}], [name: :"test_pipeline.Broadway.ProducerSupervisor", strategy: :one_for_one, max_restarts: 2, max_seconds: 1]]}, type: :supervisor}, %{id: #Reference<0.3567973744.1267204102.65546>, start: {Supervisor, :start_link, [[%{id: :"test_pipeline.Broadway.Processor_default_0", shutdown: 30000, start: {Broadway.Topology.ProcessorStage, :start_link, [[name: :"test_pipeline.Broadway.Processor_default_0", partition: 0, topology_name: : (truncated)
07:20:08.667 [error] GenServer :test_pipeline terminating
** (stop) 30000
Last message: []
State: %{name: :test_pipeline, supervisor_pid: #PID<0.1150.0>, terminator: :"test_pipeline.Broadway.Terminator"}


  2) test track starts broadway pipeline (KernelShtf.RaceTest)
     test/kernel_shtf/race_test.exs:65
     ** (EXIT from #PID<0.1148.0>) 30000

....07:20:13.407 [info] Starting test setup
07:20:13.407 [info] Test setup complete with pid: #PID<0.1176.0>
07:20:13.407 [info] Running coin insertion test
07:20:13.407 [info] Running coin insertion test
07:20:13.408 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
07:20:13.408 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
07:20:13.408 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
07:20:13.408 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
07:20:13.408 [debug] Transitioning to ready
07:20:13.408 [info] Transition result: {:ok, :ready}
07:20:13.408 [info] Got state: {:ok, %{memory: :ready, rotate: %{coins: 100, inventory: 5}}}
.07:20:13.408 [info] Starting test setup
07:20:13.408 [info] Test setup complete with pid: #PID<0.1178.0>
07:20:13.408 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 5}}}
07:20:13.408 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
07:20:13.408 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
07:20:13.408 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
07:20:13.408 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
07:20:13.408 [debug] Transitioning to ready
07:20:13.408 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
07:20:13.408 [info] DISPENSING
07:20:13.408 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :dispensing}
07:20:13.408 [debug] Transitioning to dispensing
07:20:13.408 [debug] Handling event: :dispense_complete. Current state: dispensing, Expected state: dispensing
07:20:13.408 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :idle}
07:20:13.408 [debug] Transitioning to idle
07:20:13.408 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 4}}}
.07:20:13.409 [info] Starting test setup
07:20:13.409 [info] Test setup complete with pid: #PID<0.1180.0>
07:20:13.409 [debug] Handling event: {:insert_coin, 50}. Current state: idle, Expected state: idle
07:20:13.409 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
07:20:13.409 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 50, inventory: 5}}
07:20:13.409 [info] Pattern result: {:weft, %{coins: 50, inventory: 5}, :ready}
07:20:13.409 [debug] Transitioning to ready
07:20:13.409 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
07:20:13.409 [info] Insufficient funds; stay in :ready
07:20:13.409 [info] WARP - Returning state: %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
07:20:13.409 [info] Pattern result: {:warp, %{memory: :ready, rotate: %{coins: 50, inventory: 5}}}
07:20:13.409 [debug] Staying in ready
07:20:13.409 [info] new_state!!! -> %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
07:20:13.409 [info] Got state: {:ok, %{memory: :ready, rotate: %{coins: 50, inventory: 5}}}
.07:20:13.409 [info] Starting test setup
07:20:13.409 [info] Test setup complete with pid: #PID<0.1182.0>
07:20:13.409 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
07:20:13.409 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
07:20:13.409 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
07:20:13.409 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
07:20:13.409 [debug] Transitioning to ready
07:20:13.409 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
07:20:13.409 [info] DISPENSING
07:20:13.409 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :dispensing}
07:20:13.409 [debug] Transitioning to dispensing
07:20:13.409 [debug] Handling event: :dispense_complete. Current state: dispensing, Expected state: dispensing
07:20:13.409 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :idle}
07:20:13.409 [debug] Transitioning to idle
07:20:13.409 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 4}}}
.07:20:13.409 [info] Starting test setup
07:20:13.409 [info] Test setup complete with pid: #PID<0.1184.0>
07:20:13.409 [info] TEST - Starting coin accumulation test
07:20:13.409 [debug] Handling event: {:insert_coin, 50}. Current state: idle, Expected state: idle
07:20:13.409 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
07:20:13.409 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 50, inventory: 5}}
07:20:13.409 [info] Pattern result: {:weft, %{coins: 50, inventory: 5}, :ready}
07:20:13.409 [debug] Transitioning to ready
07:20:13.409 [info] TEST - After first insertion: {:ok, :ready}
07:20:13.410 [info] TEST - State after first insertion: %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
07:20:13.410 [debug] Handling event: {:insert_coin, 50}. Current state: ready, Expected state: ready
07:20:13.410 [info] READY - Current coins before add: 50
07:20:13.410 [info] ADD_COINS - Before: %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
07:20:13.410 [info] ADD_COINS - After: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
07:20:13.410 [info] READY - State after add_coins: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
07:20:13.410 [info] READY - Final state to be returned: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
07:20:13.410 [info] WARP - Returning state: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
07:20:13.410 [info] Pattern result: {:warp, %{memory: :ready, rotate: %{coins: 100, inventory: 5}}}
07:20:13.410 [debug] Staying in ready
07:20:13.410 [info] new_state!!! -> %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
07:20:13.410 [info] TEST - After second insertion: {:ok, :ready}
07:20:13.410 [info] TEST - State after second insertion: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
.07:20:13.410 [info] Starting test setup
07:20:13.410 [info] Test setup complete with pid: #PID<0.1186.0>
07:20:13.410 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
07:20:13.410 [info] Inventory is empty; stay in :ready
07:20:13.410 [info] WARP - Returning state: %{memory: :ready, rotate: %{coins: 500, inventory: 0}}
07:20:13.410 [info] Pattern result: {:warp, %{memory: :ready, rotate: %{coins: 500, inventory: 0}}}
07:20:13.410 [debug] Staying in ready
07:20:13.410 [info] new_state!!! -> %{memory: :ready, rotate: %{coins: 500, inventory: 0}}
.07:20:13.410 [info] Starting test setup
07:20:13.410 [info] Test setup complete with pid: #PID<0.1188.0>
07:20:13.410 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
07:20:13.410 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
07:20:13.410 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
07:20:13.410 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
07:20:13.410 [debug] Transitioning to ready
07:20:13.410 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
07:20:13.410 [info] DISPENSING
07:20:13.410 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :dispensing}
07:20:13.410 [debug] Transitioning to dispensing
07:20:13.410 [info] Got state: {:ok, %{memory: :dispensing, rotate: %{coins: 0, inventory: 4}}}
.07:20:13.410 [info] Starting test setup
07:20:13.410 [info] Test setup complete with pid: #PID<0.1190.0>
07:20:13.410 [info] Running initial state test
07:20:13.411 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 5}}}
.07:20:13.411 [debug] Setting up test state
07:20:13.411 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.411 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.411 [debug] Returning context with state
07:20:13.411 [debug] Starting edge validation test with state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
.07:20:13.411 [debug] Setting up test state
07:20:13.411 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.411 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.411 [debug] Returning context with state
07:20:13.412 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.412 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.412 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.412 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.412 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.412 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.412 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.412 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.412 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.412 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.412 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.412 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.412 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.412 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.412 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.413 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.413 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.413 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.413 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.413 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.413 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.413 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.413 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.413 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.413 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.413 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.413 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.413 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.413 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.414 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.414 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, variant_type: :graph, state: nil
07:20:13.414 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.414 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.414 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.414 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.414 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.414 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.414 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.414 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.414 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.415 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.415 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.415 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.415 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.415 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.415 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.415 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.415 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.415 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.415 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.415 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.415 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.415 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.415 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.416 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.416 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.416 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.417 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.417 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.417 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.418 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.418 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.418 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.418 [debug] Executing query with pattern: [:person, :works_at, %{industry: "Software"}]
07:20:13.419 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013418, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.419 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.419 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.419 [debug] Processing graph with:
07:20:13.419 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.419 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.420 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.420 [debug] Processing list of edges
07:20:13.420 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.420 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.420 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.420 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.420 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.420 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.420 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.420 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.420 [debug] Executing query with pattern: [:person, :works_at, %{industry: "Software"}]
07:20:13.420 [debug] Querying with pattern:
  From: :person
  Edge: :works_at
  To: %{industry: "Software"}

07:20:13.420 [debug] Found matching pattern for p2 -> c1
07:20:13.420 [debug] Found matching pattern for p1 -> c1
07:20:13.420 [debug] Query results: [{"p2", :works_at, "c1"}, {"p1", :works_at, "c1"}]
07:20:13.420 [debug] Executing query with pattern: [%{role: "Developer"}, :works_at, :company]
07:20:13.421 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013418, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.421 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.422 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.422 [debug] Processing graph with:
07:20:13.422 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.422 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.422 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.422 [debug] Processing list of edges
07:20:13.422 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.422 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.422 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.423 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.423 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.423 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.423 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.423 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.423 [debug] Executing query with pattern: [%{role: "Developer"}, :works_at, :company]
07:20:13.423 [debug] Querying with pattern:
  From: %{role: "Developer"}
  Edge: :works_at
  To: :company

07:20:13.423 [debug] Pattern match failed for p2 -> c1
07:20:13.423 [debug] Found matching pattern for p1 -> c1
07:20:13.423 [debug] Query results: [{"p1", :works_at, "c1"}]
.07:20:13.423 [debug] Setting up test state
07:20:13.423 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.423 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.423 [debug] Returning context with state
07:20:13.423 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.423 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.423 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.423 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.423 [debug] Recursive field result for edge_list: 0
.07:20:13.424 [debug] Setting up test state
07:20:13.424 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.424 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.424 [debug] Returning context with state
07:20:13.424 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.424 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.424 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.424 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.424 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.424 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.424 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.424 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.424 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.424 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.424 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.424 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.424 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.424 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.425 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.425 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.425 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.425 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.425 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.425 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.425 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.425 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.425 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.425 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.425 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.425 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.426 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.426 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.426 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.426 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.426 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, variant_type: :graph, state: nil
07:20:13.426 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.426 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.426 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.426 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.426 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.426 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.426 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.427 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.427 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.427 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.427 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.427 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.428 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.428 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.428 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.428 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.428 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.428 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.428 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.428 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.428 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.428 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.428 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.428 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.429 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.429 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.429 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.430 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.430 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.431 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.431 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.431 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.431 [debug] Executing query with pattern: [:person, :knows, :person]
07:20:13.432 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013431, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.432 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.432 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.432 [debug] Processing graph with:
07:20:13.432 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.433 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.433 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.433 [debug] Processing list of edges
07:20:13.433 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.433 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.433 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.433 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.433 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.433 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.433 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.433 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.433 [debug] Executing query with pattern: [:person, :knows, :person]
07:20:13.433 [debug] Querying with pattern:
  From: :person
  Edge: :knows
  To: :person

07:20:13.433 [debug] Found matching pattern for p1 -> p2
07:20:13.433 [debug] Query results: [{"p1", :knows, "p2"}]
07:20:13.433 [debug] Executing query with pattern: [:person, :works_at, :company]
07:20:13.433 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013431, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.434 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.434 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.434 [debug] Processing graph with:
07:20:13.434 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.434 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.434 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.434 [debug] Processing list of edges
07:20:13.434 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.434 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.434 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.434 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.434 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.435 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.435 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.435 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.435 [debug] Executing query with pattern: [:person, :works_at, :company]
07:20:13.435 [debug] Querying with pattern:
  From: :person
  Edge: :works_at
  To: :company

07:20:13.435 [debug] Found matching pattern for p2 -> c1
07:20:13.435 [debug] Found matching pattern for p1 -> c1
07:20:13.435 [debug] Query results: [{"p2", :works_at, "c1"}, {"p1", :works_at, "c1"}]
07:20:13.435 [debug] Executing query with pattern: [:company, :owns, :project]
07:20:13.435 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013431, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.435 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.436 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.436 [debug] Processing graph with:
07:20:13.436 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.436 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.436 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.436 [debug] Processing list of edges
07:20:13.436 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.436 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.436 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.436 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.436 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.436 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.436 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.436 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.436 [debug] Executing query with pattern: [:company, :owns, :project]
07:20:13.437 [debug] Querying with pattern:
  From: :company
  Edge: :owns
  To: :project

07:20:13.437 [debug] Found matching pattern for c1 -> proj1
07:20:13.437 [debug] Query results: [{"c1", :owns, "proj1"}]
.07:20:13.437 [debug] Setting up test state
07:20:13.437 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.437 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.437 [debug] Returning context with state
07:20:13.437 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.437 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.437 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.437 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.437 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.437 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.437 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.437 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.437 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.437 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.437 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.437 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.438 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.438 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.438 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.438 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.438 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.438 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.438 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.438 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.438 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.438 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.438 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.438 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.439 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.439 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.439 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.439 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.439 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.439 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.439 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, variant_type: :graph, state: nil
07:20:13.439 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.439 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.439 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.439 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.439 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.439 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.440 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.440 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.440 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.440 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.441 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.441 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.441 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.441 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.441 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.441 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.441 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.441 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.441 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.441 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.441 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.441 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.442 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.442 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.442 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.443 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.443 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.443 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.444 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.444 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.444 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.445 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.445 [debug] Executing query with pattern: [:person, :reports_to, :person]
07:20:13.445 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013445, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.446 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.446 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.446 [debug] Processing graph with:
07:20:13.446 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.447 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.447 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.447 [debug] Processing list of edges
07:20:13.447 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.447 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.447 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.447 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.447 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.447 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.447 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.447 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.447 [debug] Executing query with pattern: [:person, :reports_to, :person]
07:20:13.447 [debug] Querying with pattern:
  From: :person
  Edge: :reports_to
  To: :person

07:20:13.447 [debug] Query results: []
07:20:13.447 [debug] Executing query with pattern: [%{role: "Designer"}, :works_at, %{industry: "Software"}]
07:20:13.448 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013445, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.448 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.449 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.449 [debug] Processing graph with:
07:20:13.449 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.449 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.449 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.449 [debug] Processing list of edges
07:20:13.449 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.449 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.449 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.449 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.449 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.450 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.450 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.450 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.450 [debug] Executing query with pattern: [%{role: "Designer"}, :works_at, %{industry: "Software"}]
07:20:13.450 [debug] Querying with pattern:
  From: %{role: "Designer"}
  Edge: :works_at
  To: %{industry: "Software"}

07:20:13.450 [debug] Pattern match failed for p2 -> c1
07:20:13.450 [debug] Pattern match failed for p1 -> c1
07:20:13.450 [debug] Query results: []
.07:20:13.450 [debug] Setting up test state
07:20:13.450 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.450 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.450 [debug] Returning context with state
07:20:13.450 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.450 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.450 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.450 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.450 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.450 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.450 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.451 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.451 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.451 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.451 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.451 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.451 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.451 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.451 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.451 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.451 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.451 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.451 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.451 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.451 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.451 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.451 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.451 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
.07:20:13.452 [debug] Setting up test state
07:20:13.452 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.452 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.452 [debug] Returning context with state
07:20:13.452 [debug] Starting multiple transactions test with state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.452 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.452 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.452 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.452 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.452 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.452 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.452 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.452 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.452 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.452 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.452 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.452 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.453 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.453 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.453 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.453 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.453 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.453 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.453 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.453 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.453 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.453 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.453 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.453 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
.07:20:13.454 [debug] Setting up test state
07:20:13.454 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.454 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.454 [debug] Returning context with state
.07:20:13.454 [debug] Setting up test state
07:20:13.454 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.454 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.454 [debug] Returning context with state
07:20:13.454 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.454 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.454 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.454 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.454 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.454 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.455 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.455 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}, variant_type: :graph, state: nil
07:20:13.455 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}}}
07:20:13.455 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.455 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.455 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.455 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.455 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.455 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.455 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.455 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.455 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.455 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.455 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.455 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.455 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.455 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.455 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.456 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.456 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.456 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.456 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.456 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}, variant_type: :graph, state: nil
07:20:13.456 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}}}
07:20:13.456 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}, variant_type: :graph, state: nil
07:20:13.456 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}}}
07:20:13.456 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.456 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.456 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.456 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.457 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.457 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.457 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.458 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.458 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.458 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.458 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.458 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.458 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.458 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.458 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.458 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.458 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.458 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.459 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.459 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.459 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.459 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.459 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.460 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.460 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.461 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.461 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.462 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.462 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.462 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.463 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.463 [debug] Executing query with pattern: [%{role: "Developer"}, :works_at, %{industry: "Software"}]
07:20:13.463 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013463, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.464 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.464 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.464 [debug] Processing graph with:
07:20:13.464 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.465 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.465 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.465 [debug] Processing list of edges
07:20:13.465 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.465 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.465 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.465 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.465 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.465 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.465 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.465 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.465 [debug] Executing query with pattern: [%{role: "Developer"}, :works_at, %{industry: "Software"}]
07:20:13.465 [debug] Querying with pattern:
  From: %{role: "Developer"}
  Edge: :works_at
  To: %{industry: "Software"}

07:20:13.465 [debug] Pattern match failed for p2 -> c1
07:20:13.465 [debug] Found matching pattern for p1 -> c1
07:20:13.465 [debug] Query results: [{"p1", :works_at, "c1"}]
07:20:13.465 [debug] Executing query with pattern: [%{role: "Manager"}, :works_on, %{status: "Active"}]
07:20:13.466 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, transactions: %{1 => %{changes: [{:edge_added, "c1", "proj1"}, {:edge_added, "p1", "proj1"}, {:edge_added, "p2", "c1"}, {:edge_added, "p1", "c1"}, {:edge_added, "p1", "p2"}, {:vertex_added, "proj1"}, {:vertex_added, "c1"}, {:vertex_added, "p2"}, {:vertex_added, "p1"}], timestamp: 1741008013463, variant: :committed}}, locks: %{}, schema: %{company: %{properties: [name: [type: :string, required: true], industry: [type: :string, required: true]], required: [:name, :industry]}, person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}, project: %{properties: [name: [type: :string, required: true], status: [type: :string, required: true]], required: [:name, :status]}}, transaction_counter: 1}
07:20:13.466 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}, variant_type: :graph, state: nil
07:20:13.467 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.467 [debug] Processing graph with:
07:20:13.467 [debug]   vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}
07:20:13.467 [debug]   edge_list: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.468 [debug] Extracting edges from: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}]
07:20:13.468 [debug] Processing list of edges
07:20:13.468 [debug] Found edge: %{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}
07:20:13.468 [debug] Found edge: %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}
07:20:13.468 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}
07:20:13.468 [debug] Found edge: %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}
07:20:13.468 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}
07:20:13.468 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"c1" => %{adjacency: %{variant: :empty}, properties: %{industry: "Software", name: "TechCorp", type: :company}, variant: :vertex, vertex_id: "c1"}, "p1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", role: "Developer", type: :person}, variant: :vertex, vertex_id: "p1"}, "p2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", role: "Manager", type: :person}, variant: :vertex, vertex_id: "p2"}, "proj1" => %{adjacency: %{variant: :empty}, properties: %{name: "GraphDB", status: "Active", type: :project}, variant: :vertex, vertex_id: "proj1"}}}
07:20:13.468 [debug] Extracted edges result: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.468 [debug] Extracted edges: [%{edge_props: %{type: :owns}, edge_weight: 1, source_id: "c1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_on}, edge_weight: 1, source_id: "p1", target_id: "proj1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p2", target_id: "c1", variant: :edge}, %{edge_props: %{type: :works_at}, edge_weight: 1, source_id: "p1", target_id: "c1", variant: :edge}, %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "p1", target_id: "p2", variant: :edge}]
07:20:13.468 [debug] Executing query with pattern: [%{role: "Manager"}, :works_on, %{status: "Active"}]
07:20:13.468 [debug] Querying with pattern:
  From: %{role: "Manager"}
  Edge: :works_on
  To: %{status: "Active"}

07:20:13.468 [debug] Pattern match failed for p1 -> proj1
07:20:13.468 [debug] Query results: []
.07:20:13.468 [debug] Setting up test state
07:20:13.468 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.469 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.469 [debug] Returning context with state
07:20:13.469 [debug] Starting query operations test with state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.469 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.469 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.469 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.469 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.469 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.469 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.469 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.469 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.469 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.469 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.469 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.469 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.469 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.469 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.470 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.470 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.470 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.470 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.470 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.470 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.470 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.470 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.470 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.470 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.470 [debug] Executing query with pattern: [:person, :knows, :person]
07:20:13.470 [debug] Current state: %Graffiti.State{graph: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, transactions: %{1 => %{changes: [{:edge_added, "1", "2"}, {:vertex_added, "2"}, {:vertex_added, "1"}], timestamp: 1741008013470, variant: :committed}}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 1}
07:20:13.470 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.471 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.471 [debug] Processing graph with:
07:20:13.471 [debug]   vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}
07:20:13.471 [debug]   edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}]
07:20:13.471 [debug] Extracting edges from: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}]
07:20:13.471 [debug] Processing list of edges
07:20:13.471 [debug] Found edge: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}
07:20:13.471 [debug] Skipping non-edge: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.471 [debug] Extracted edges result: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}]
07:20:13.471 [debug] Extracted edges: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}]
07:20:13.471 [debug] Executing query with pattern: [:person, :knows, :person]
07:20:13.471 [debug] Querying with pattern:
  From: :person
  Edge: :knows
  To: :person

07:20:13.471 [debug] Found matching pattern for 1 -> 2
07:20:13.471 [debug] Query results: [{"1", :knows, "2"}]
.07:20:13.471 [debug] Setting up test state
07:20:13.471 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.471 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.471 [debug] Returning context with state
.07:20:13.471 [debug] Setting up test state
07:20:13.471 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{}, transaction_counter: 0}
07:20:13.472 [debug] State after schema definition: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.472 [debug] Returning context with state
07:20:13.472 [debug] Initial state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 0}
07:20:13.472 [debug] Transaction started with id: 1
07:20:13.472 [debug] First vertex added, state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{1 => %{operations: [{:add_vertex, :person, "1", %{age: 30, name: "Alice"}}], timestamp: 1741008013472, variant: :pending}}, locks: %{{:vertex, "1"} => 1}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer, required: true]], required: [:name, :age]}}, transaction_counter: 1}
07:20:13.472 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.472 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.472 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.472 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.472 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.472 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.472 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.472 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}, variant_type: :graph, state: nil
07:20:13.472 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}}}
07:20:13.472 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.472 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.472 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.472 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.472 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.473 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.473 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.473 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.473 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}, variant_type: :graph, state: nil
07:20:13.473 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.473 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.473 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.473 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.473 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
07:20:13.473 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: [%{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, %{edge_list: %{edge_props: %{type: :knows}, edge_weight: 1, source_id: "1", target_id: "2", variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{"1" => %{adjacency: %{variant: :empty}, properties: %{age: 30, name: "Alice", type: :person}, variant: :vertex, vertex_id: "1"}, "2" => %{adjacency: %{variant: :empty}, properties: %{age: 25, name: "Bob", type: :person}, variant: :vertex, vertex_id: "2"}}}
.07:20:13.473 [debug] Bend initial value: 1
07:20:13.473 [debug] Executing bend with initial: 1
07:20:13.473 [debug] Executing fun with value: 1
07:20:13.473 [debug] Evaluating bend block with value: 1
07:20:13.473 [debug] Block returned: %{head: 1, tail: {:fork, 2}, variant: :cons}
07:20:13.473 [debug] Fun returned result: %{head: 1, tail: {:fork, 2}, variant: :cons}
07:20:13.473 [debug] Processing constructed value: %{head: 1, tail: {:fork, 2}, variant: :cons}
07:20:13.473 [debug] Executing bend with initial: 2
07:20:13.474 [debug] Executing fun with value: 2
07:20:13.474 [debug] Evaluating bend block with value: 2
07:20:13.474 [debug] Block returned: %{head: 2, tail: {:fork, 3}, variant: :cons}
07:20:13.474 [debug] Fun returned result: %{head: 2, tail: {:fork, 3}, variant: :cons}
07:20:13.474 [debug] Processing constructed value: %{head: 2, tail: {:fork, 3}, variant: :cons}
07:20:13.474 [debug] Executing bend with initial: 3
07:20:13.474 [debug] Executing fun with value: 3
07:20:13.474 [debug] Evaluating bend block with value: 3
07:20:13.474 [debug] Block returned: %{head: 3, tail: {:fork, 4}, variant: :cons}
07:20:13.474 [debug] Fun returned result: %{head: 3, tail: {:fork, 4}, variant: :cons}
07:20:13.474 [debug] Processing constructed value: %{head: 3, tail: {:fork, 4}, variant: :cons}
07:20:13.474 [debug] Executing bend with initial: 4
07:20:13.474 [debug] Executing fun with value: 4
07:20:13.474 [debug] Evaluating bend block with value: 4
07:20:13.474 [debug] Block returned: %{variant: :null}
07:20:13.474 [debug] Fun returned result: %{variant: :null}
07:20:13.474 [debug] Processing constructed value: %{variant: :null}
07:20:13.474 [debug] do_bend final result: %{variant: :null}
07:20:13.474 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.474 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.474 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.474 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
.07:20:13.474 [debug] Bend initial value: 0
07:20:13.474 [debug] Executing bend with initial: 0
07:20:13.474 [debug] Executing fun with value: 0
07:20:13.474 [debug] Evaluating bend block with value: 0
07:20:13.474 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
07:20:13.474 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
07:20:13.474 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, val: 0, variant: :node}
07:20:13.474 [debug] Executing bend with initial: 1
07:20:13.474 [debug] Executing fun with value: 1
07:20:13.474 [debug] Evaluating bend block with value: 1
07:20:13.474 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
07:20:13.474 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
07:20:13.474 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
07:20:13.474 [debug] Executing bend with initial: 2
07:20:13.474 [debug] Executing fun with value: 2
07:20:13.474 [debug] Evaluating bend block with value: 2
07:20:13.474 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.474 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.474 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.474 [debug] Executing bend with initial: 3
07:20:13.474 [debug] Executing fun with value: 3
07:20:13.474 [debug] Evaluating bend block with value: 3
07:20:13.474 [debug] Block returned: %{variant: :leaf}
07:20:13.474 [debug] Fun returned result: %{variant: :leaf}
07:20:13.474 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.474 [debug] do_bend final result: %{variant: :leaf}
07:20:13.474 [debug] Executing bend with initial: 3
07:20:13.474 [debug] Executing fun with value: 3
07:20:13.474 [debug] Evaluating bend block with value: 3
07:20:13.474 [debug] Block returned: %{variant: :leaf}
07:20:13.474 [debug] Fun returned result: %{variant: :leaf}
07:20:13.475 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
07:20:13.475 [debug] Executing bend with initial: 2
07:20:13.475 [debug] Executing fun with value: 2
07:20:13.475 [debug] Evaluating bend block with value: 2
07:20:13.475 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Executing bend with initial: 3
07:20:13.475 [debug] Executing fun with value: 3
07:20:13.475 [debug] Evaluating bend block with value: 3
07:20:13.475 [debug] Block returned: %{variant: :leaf}
07:20:13.475 [debug] Fun returned result: %{variant: :leaf}
07:20:13.475 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{variant: :leaf}
07:20:13.475 [debug] Executing bend with initial: 3
07:20:13.475 [debug] Executing fun with value: 3
07:20:13.475 [debug] Evaluating bend block with value: 3
07:20:13.475 [debug] Block returned: %{variant: :leaf}
07:20:13.475 [debug] Fun returned result: %{variant: :leaf}
07:20:13.475 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
07:20:13.475 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}
07:20:13.475 [debug] Executing bend with initial: 1
07:20:13.475 [debug] Executing fun with value: 1
07:20:13.475 [debug] Evaluating bend block with value: 1
07:20:13.475 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
07:20:13.475 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
07:20:13.475 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, val: 1, variant: :node}
07:20:13.475 [debug] Executing bend with initial: 2
07:20:13.475 [debug] Executing fun with value: 2
07:20:13.475 [debug] Evaluating bend block with value: 2
07:20:13.475 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Executing bend with initial: 3
07:20:13.475 [debug] Executing fun with value: 3
07:20:13.475 [debug] Evaluating bend block with value: 3
07:20:13.475 [debug] Block returned: %{variant: :leaf}
07:20:13.475 [debug] Fun returned result: %{variant: :leaf}
07:20:13.475 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{variant: :leaf}
07:20:13.475 [debug] Executing bend with initial: 3
07:20:13.475 [debug] Executing fun with value: 3
07:20:13.475 [debug] Evaluating bend block with value: 3
07:20:13.475 [debug] Block returned: %{variant: :leaf}
07:20:13.475 [debug] Fun returned result: %{variant: :leaf}
07:20:13.475 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
07:20:13.475 [debug] Executing bend with initial: 2
07:20:13.475 [debug] Executing fun with value: 2
07:20:13.475 [debug] Evaluating bend block with value: 2
07:20:13.475 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, val: 2, variant: :node}
07:20:13.475 [debug] Executing bend with initial: 3
07:20:13.475 [debug] Executing fun with value: 3
07:20:13.475 [debug] Evaluating bend block with value: 3
07:20:13.475 [debug] Block returned: %{variant: :leaf}
07:20:13.475 [debug] Fun returned result: %{variant: :leaf}
07:20:13.475 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{variant: :leaf}
07:20:13.475 [debug] Executing bend with initial: 3
07:20:13.475 [debug] Executing fun with value: 3
07:20:13.475 [debug] Evaluating bend block with value: 3
07:20:13.475 [debug] Block returned: %{variant: :leaf}
07:20:13.475 [debug] Fun returned result: %{variant: :leaf}
07:20:13.475 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{variant: :leaf}
07:20:13.475 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
07:20:13.475 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}
07:20:13.476 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, val: 0, variant: :node}
07:20:13.476 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, val: 1, variant: :node}, val: 0, variant: :node}
.07:20:13.476 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, value: 2, variant: :node}, variant_type: :node, state: nil
07:20:13.476 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, value: 2, variant: :node}
07:20:13.476 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
07:20:13.476 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
07:20:13.476 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.476 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.476 [debug] Recursive field result for left: []
07:20:13.476 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.476 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.476 [debug] Recursive field result for right: []
07:20:13.476 [debug] do_fold called with non-variant data: []
07:20:13.476 [debug] do_fold called with non-variant data: []
07:20:13.476 [debug] Recursive field result for left: [1]
07:20:13.476 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}, variant_type: :node, state: nil
07:20:13.476 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
07:20:13.476 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.476 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.476 [debug] Recursive field result for left: []
07:20:13.476 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.476 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.476 [debug] Recursive field result for right: []
07:20:13.476 [debug] do_fold called with non-variant data: []
07:20:13.476 [debug] do_fold called with non-variant data: []
07:20:13.476 [debug] Recursive field result for right: [3]
07:20:13.476 [debug] do_fold called with non-variant data: [1]
07:20:13.476 [debug] do_fold called with non-variant data: [3]
.07:20:13.476 [debug] Bend initial value: 0
07:20:13.476 [debug] Executing bend with initial: 0
07:20:13.476 [debug] Executing fun with value: 0
07:20:13.476 [debug] Evaluating bend block with value: 0
07:20:13.476 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.476 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.476 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.476 [debug] Executing bend with initial: 1
07:20:13.476 [debug] Executing fun with value: 1
07:20:13.476 [debug] Evaluating bend block with value: 1
07:20:13.477 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.477 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.477 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.477 [debug] Executing bend with initial: 2
07:20:13.477 [debug] Executing fun with value: 2
07:20:13.477 [debug] Evaluating bend block with value: 2
07:20:13.477 [debug] Block returned: %{variant: :leaf}
07:20:13.477 [debug] Fun returned result: %{variant: :leaf}
07:20:13.477 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.477 [debug] do_bend final result: %{variant: :leaf}
07:20:13.477 [debug] Executing bend with initial: 2
07:20:13.477 [debug] Executing fun with value: 2
07:20:13.477 [debug] Evaluating bend block with value: 2
07:20:13.477 [debug] Block returned: %{variant: :leaf}
07:20:13.477 [debug] Fun returned result: %{variant: :leaf}
07:20:13.477 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.477 [debug] do_bend final result: %{variant: :leaf}
07:20:13.477 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
07:20:13.477 [debug] Executing bend with initial: 1
07:20:13.477 [debug] Executing fun with value: 1
07:20:13.477 [debug] Evaluating bend block with value: 1
07:20:13.477 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.477 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.477 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.477 [debug] Executing bend with initial: 2
07:20:13.477 [debug] Executing fun with value: 2
07:20:13.477 [debug] Evaluating bend block with value: 2
07:20:13.477 [debug] Block returned: %{variant: :leaf}
07:20:13.477 [debug] Fun returned result: %{variant: :leaf}
07:20:13.477 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.477 [debug] do_bend final result: %{variant: :leaf}
07:20:13.477 [debug] Executing bend with initial: 2
07:20:13.477 [debug] Executing fun with value: 2
07:20:13.477 [debug] Evaluating bend block with value: 2
07:20:13.477 [debug] Block returned: %{variant: :leaf}
07:20:13.477 [debug] Fun returned result: %{variant: :leaf}
07:20:13.477 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.477 [debug] do_bend final result: %{variant: :leaf}
07:20:13.477 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
07:20:13.477 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.477 [debug] Final bend result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.477 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: nil
07:20:13.477 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.477 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
07:20:13.477 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
07:20:13.477 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.477 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.477 [debug] Recursive field result for left: %{variant: :leaf}
07:20:13.477 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.477 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.477 [debug] Recursive field result for right: %{variant: :leaf}
07:20:13.477 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
07:20:13.477 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}, variant_type: :node, state: nil
07:20:13.477 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 1, variant: :node}
07:20:13.477 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.477 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.477 [debug] Recursive field result for left: %{variant: :leaf}
07:20:13.477 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.478 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.478 [debug] Recursive field result for right: %{variant: :leaf}
07:20:13.478 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 3, variant: :node}
.07:20:13.478 [debug] Bend initial value: 0
07:20:13.478 [debug] Executing bend with initial: 0
07:20:13.478 [debug] Executing fun with value: 0
07:20:13.478 [debug] Evaluating bend block with value: 0
07:20:13.478 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.478 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.478 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 1
07:20:13.478 [debug] Executing fun with value: 1
07:20:13.478 [debug] Evaluating bend block with value: 1
07:20:13.478 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.478 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.478 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 2
07:20:13.478 [debug] Executing fun with value: 2
07:20:13.478 [debug] Evaluating bend block with value: 2
07:20:13.478 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 3
07:20:13.478 [debug] Executing fun with value: 3
07:20:13.478 [debug] Evaluating bend block with value: 3
07:20:13.478 [debug] Block returned: %{variant: :leaf}
07:20:13.478 [debug] Fun returned result: %{variant: :leaf}
07:20:13.478 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{variant: :leaf}
07:20:13.478 [debug] Executing bend with initial: 3
07:20:13.478 [debug] Executing fun with value: 3
07:20:13.478 [debug] Evaluating bend block with value: 3
07:20:13.478 [debug] Block returned: %{variant: :leaf}
07:20:13.478 [debug] Fun returned result: %{variant: :leaf}
07:20:13.478 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 2
07:20:13.478 [debug] Executing fun with value: 2
07:20:13.478 [debug] Evaluating bend block with value: 2
07:20:13.478 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 3
07:20:13.478 [debug] Executing fun with value: 3
07:20:13.478 [debug] Evaluating bend block with value: 3
07:20:13.478 [debug] Block returned: %{variant: :leaf}
07:20:13.478 [debug] Fun returned result: %{variant: :leaf}
07:20:13.478 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{variant: :leaf}
07:20:13.478 [debug] Executing bend with initial: 3
07:20:13.478 [debug] Executing fun with value: 3
07:20:13.478 [debug] Evaluating bend block with value: 3
07:20:13.478 [debug] Block returned: %{variant: :leaf}
07:20:13.478 [debug] Fun returned result: %{variant: :leaf}
07:20:13.478 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.478 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 1
07:20:13.478 [debug] Executing fun with value: 1
07:20:13.478 [debug] Evaluating bend block with value: 1
07:20:13.478 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.478 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.478 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 2
07:20:13.478 [debug] Executing fun with value: 2
07:20:13.478 [debug] Evaluating bend block with value: 2
07:20:13.478 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 3
07:20:13.478 [debug] Executing fun with value: 3
07:20:13.478 [debug] Evaluating bend block with value: 3
07:20:13.478 [debug] Block returned: %{variant: :leaf}
07:20:13.478 [debug] Fun returned result: %{variant: :leaf}
07:20:13.478 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{variant: :leaf}
07:20:13.478 [debug] Executing bend with initial: 3
07:20:13.478 [debug] Executing fun with value: 3
07:20:13.478 [debug] Evaluating bend block with value: 3
07:20:13.478 [debug] Block returned: %{variant: :leaf}
07:20:13.478 [debug] Fun returned result: %{variant: :leaf}
07:20:13.478 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{variant: :leaf}
07:20:13.478 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.478 [debug] Executing bend with initial: 2
07:20:13.478 [debug] Executing fun with value: 2
07:20:13.478 [debug] Evaluating bend block with value: 2
07:20:13.478 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.479 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.479 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.479 [debug] Executing bend with initial: 3
07:20:13.479 [debug] Executing fun with value: 3
07:20:13.479 [debug] Evaluating bend block with value: 3
07:20:13.479 [debug] Block returned: %{variant: :leaf}
07:20:13.479 [debug] Fun returned result: %{variant: :leaf}
07:20:13.479 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.479 [debug] do_bend final result: %{variant: :leaf}
07:20:13.479 [debug] Executing bend with initial: 3
07:20:13.479 [debug] Executing fun with value: 3
07:20:13.479 [debug] Evaluating bend block with value: 3
07:20:13.479 [debug] Block returned: %{variant: :leaf}
07:20:13.479 [debug] Fun returned result: %{variant: :leaf}
07:20:13.479 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.479 [debug] do_bend final result: %{variant: :leaf}
07:20:13.479 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.479 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.479 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.479 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: %{0 => 1}
07:20:13.479 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: %{0 => 1}
07:20:13.479 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1}
07:20:13.479 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.479 [debug] Recursive field result for left: {0, %{0 => 1}}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.479 [debug] Recursive field result for right: {0, %{0 => 1}}
07:20:13.479 [debug] do_fold called with non-variant data: 0
07:20:13.479 [debug] do_fold called with non-variant data: 0
07:20:13.479 [debug] Recursive field result for left: {2, %{0 => 1, 1 => 2}}
07:20:13.479 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2}
07:20:13.479 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.479 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2}}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.479 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2}}
07:20:13.479 [debug] do_fold called with non-variant data: 0
07:20:13.479 [debug] do_fold called with non-variant data: 0
07:20:13.479 [debug] Recursive field result for right: {2, %{0 => 1, 1 => 2, 2 => 4}}
07:20:13.479 [debug] do_fold called with non-variant data: 2
07:20:13.479 [debug] do_fold called with non-variant data: 2
07:20:13.479 [debug] Recursive field result for left: {1, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
07:20:13.479 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
07:20:13.479 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
07:20:13.479 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.479 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.479 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8}}
07:20:13.479 [debug] do_fold called with non-variant data: 0
07:20:13.479 [debug] do_fold called with non-variant data: 0
07:20:13.479 [debug] Recursive field result for left: {2, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
07:20:13.479 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
07:20:13.479 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.479 [debug] Recursive field result for left: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
07:20:13.479 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}
07:20:13.479 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.480 [debug] Recursive field result for right: {0, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16}}
07:20:13.480 [debug] do_fold called with non-variant data: 0
07:20:13.480 [debug] do_fold called with non-variant data: 0
07:20:13.480 [debug] Recursive field result for right: {2, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16, 5 => 32}}
07:20:13.480 [debug] do_fold called with non-variant data: 2
07:20:13.480 [debug] do_fold called with non-variant data: 2
07:20:13.480 [debug] Recursive field result for right: {1, %{0 => 1, 1 => 2, 2 => 4, 3 => 8, 4 => 16, 5 => 32, 6 => 64}}
07:20:13.480 [debug] do_fold called with non-variant data: 1
07:20:13.480 [debug] do_fold called with non-variant data: 1
.07:20:13.480 [debug] Bend initial value: 0
07:20:13.480 [debug] Executing bend with initial: 0
07:20:13.480 [debug] Executing fun with value: 0
07:20:13.480 [debug] Evaluating bend block with value: 0
07:20:13.480 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.480 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.480 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 1
07:20:13.480 [debug] Executing fun with value: 1
07:20:13.480 [debug] Evaluating bend block with value: 1
07:20:13.480 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.480 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.480 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 2
07:20:13.480 [debug] Executing fun with value: 2
07:20:13.480 [debug] Evaluating bend block with value: 2
07:20:13.480 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 3
07:20:13.480 [debug] Executing fun with value: 3
07:20:13.480 [debug] Evaluating bend block with value: 3
07:20:13.480 [debug] Block returned: %{variant: :leaf}
07:20:13.480 [debug] Fun returned result: %{variant: :leaf}
07:20:13.480 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{variant: :leaf}
07:20:13.480 [debug] Executing bend with initial: 3
07:20:13.480 [debug] Executing fun with value: 3
07:20:13.480 [debug] Evaluating bend block with value: 3
07:20:13.480 [debug] Block returned: %{variant: :leaf}
07:20:13.480 [debug] Fun returned result: %{variant: :leaf}
07:20:13.480 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 2
07:20:13.480 [debug] Executing fun with value: 2
07:20:13.480 [debug] Evaluating bend block with value: 2
07:20:13.480 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 3
07:20:13.480 [debug] Executing fun with value: 3
07:20:13.480 [debug] Evaluating bend block with value: 3
07:20:13.480 [debug] Block returned: %{variant: :leaf}
07:20:13.480 [debug] Fun returned result: %{variant: :leaf}
07:20:13.480 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{variant: :leaf}
07:20:13.480 [debug] Executing bend with initial: 3
07:20:13.480 [debug] Executing fun with value: 3
07:20:13.480 [debug] Evaluating bend block with value: 3
07:20:13.480 [debug] Block returned: %{variant: :leaf}
07:20:13.480 [debug] Fun returned result: %{variant: :leaf}
07:20:13.480 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.480 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 1
07:20:13.480 [debug] Executing fun with value: 1
07:20:13.480 [debug] Evaluating bend block with value: 1
07:20:13.480 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.480 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.480 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 1, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 2
07:20:13.480 [debug] Executing fun with value: 2
07:20:13.480 [debug] Evaluating bend block with value: 2
07:20:13.480 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 3
07:20:13.480 [debug] Executing fun with value: 3
07:20:13.480 [debug] Evaluating bend block with value: 3
07:20:13.480 [debug] Block returned: %{variant: :leaf}
07:20:13.480 [debug] Fun returned result: %{variant: :leaf}
07:20:13.480 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{variant: :leaf}
07:20:13.480 [debug] Executing bend with initial: 3
07:20:13.480 [debug] Executing fun with value: 3
07:20:13.480 [debug] Evaluating bend block with value: 3
07:20:13.480 [debug] Block returned: %{variant: :leaf}
07:20:13.480 [debug] Fun returned result: %{variant: :leaf}
07:20:13.480 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{variant: :leaf}
07:20:13.480 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.480 [debug] Executing bend with initial: 2
07:20:13.480 [debug] Executing fun with value: 2
07:20:13.480 [debug] Evaluating bend block with value: 2
07:20:13.480 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.481 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.481 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 2, variant: :node}
07:20:13.481 [debug] Executing bend with initial: 3
07:20:13.481 [debug] Executing fun with value: 3
07:20:13.481 [debug] Evaluating bend block with value: 3
07:20:13.481 [debug] Block returned: %{variant: :leaf}
07:20:13.481 [debug] Fun returned result: %{variant: :leaf}
07:20:13.481 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.481 [debug] do_bend final result: %{variant: :leaf}
07:20:13.481 [debug] Executing bend with initial: 3
07:20:13.481 [debug] Executing fun with value: 3
07:20:13.481 [debug] Evaluating bend block with value: 3
07:20:13.481 [debug] Block returned: %{variant: :leaf}
07:20:13.481 [debug] Fun returned result: %{variant: :leaf}
07:20:13.481 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.481 [debug] do_bend final result: %{variant: :leaf}
07:20:13.481 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.481 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.481 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.481 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.481 [debug] do_fold called with data: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}, variant_type: :node, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, value: 0, variant: :node}
07:20:13.481 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.481 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.481 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.481 [debug] Recursive field result for left: %{variant: :leaf}
07:20:13.481 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.481 [debug] Recursive field result for right: %{variant: :leaf}
07:20:13.481 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.481 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.481 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.481 [debug] Recursive field result for left: %{variant: :leaf}
07:20:13.481 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.481 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.481 [debug] Recursive field result for right: %{variant: :leaf}
07:20:13.481 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.481 [debug] Recursive field result for left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 0, variant: :node}
07:20:13.482 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}, variant_type: :node, state: nil
07:20:13.482 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 1, variant: :node}
07:20:13.482 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
07:20:13.482 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.482 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.482 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.482 [debug] Recursive field result for left: %{variant: :leaf}
07:20:13.482 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.482 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.482 [debug] Recursive field result for right: %{variant: :leaf}
07:20:13.482 [debug] Recursive field result for left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.482 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, variant_type: :node, state: nil
07:20:13.482 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.482 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.482 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.482 [debug] Recursive field result for left: %{variant: :leaf}
07:20:13.482 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.482 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.482 [debug] Recursive field result for right: %{variant: :leaf}
07:20:13.482 [debug] Recursive field result for right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}
07:20:13.482 [debug] Recursive field result for right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 2, variant: :node}, value: 0, variant: :node}
.07:20:13.482 [debug] Bend initial value: 0
07:20:13.482 [debug] Executing bend with initial: 0
07:20:13.482 [debug] Executing fun with value: 0
07:20:13.482 [debug] Evaluating bend block with value: 0
07:20:13.482 [debug] Block returned: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.482 [debug] Fun returned result: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.482 [debug] Processing constructed value: %{left: {:fork, 1}, right: {:fork, 1}, value: 0, variant: :node}
07:20:13.482 [debug] Executing bend with initial: 1
07:20:13.482 [debug] Executing fun with value: 1
07:20:13.482 [debug] Evaluating bend block with value: 1
07:20:13.482 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
07:20:13.482 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
07:20:13.482 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
07:20:13.482 [debug] Executing bend with initial: 2
07:20:13.482 [debug] Executing fun with value: 2
07:20:13.482 [debug] Evaluating bend block with value: 2
07:20:13.482 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.482 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.482 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.482 [debug] Executing bend with initial: 3
07:20:13.482 [debug] Executing fun with value: 3
07:20:13.482 [debug] Evaluating bend block with value: 3
07:20:13.482 [debug] Block returned: %{variant: :leaf}
07:20:13.482 [debug] Fun returned result: %{variant: :leaf}
07:20:13.482 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{variant: :leaf}
07:20:13.483 [debug] Executing bend with initial: 3
07:20:13.483 [debug] Executing fun with value: 3
07:20:13.483 [debug] Evaluating bend block with value: 3
07:20:13.483 [debug] Block returned: %{variant: :leaf}
07:20:13.483 [debug] Fun returned result: %{variant: :leaf}
07:20:13.483 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
07:20:13.483 [debug] Executing bend with initial: 2
07:20:13.483 [debug] Executing fun with value: 2
07:20:13.483 [debug] Evaluating bend block with value: 2
07:20:13.483 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.483 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.483 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.483 [debug] Executing bend with initial: 3
07:20:13.483 [debug] Executing fun with value: 3
07:20:13.483 [debug] Evaluating bend block with value: 3
07:20:13.483 [debug] Block returned: %{variant: :leaf}
07:20:13.483 [debug] Fun returned result: %{variant: :leaf}
07:20:13.483 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{variant: :leaf}
07:20:13.483 [debug] Executing bend with initial: 3
07:20:13.483 [debug] Executing fun with value: 3
07:20:13.483 [debug] Evaluating bend block with value: 3
07:20:13.483 [debug] Block returned: %{variant: :leaf}
07:20:13.483 [debug] Fun returned result: %{variant: :leaf}
07:20:13.483 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
07:20:13.483 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}
07:20:13.483 [debug] Executing bend with initial: 1
07:20:13.483 [debug] Executing fun with value: 1
07:20:13.483 [debug] Evaluating bend block with value: 1
07:20:13.483 [debug] Block returned: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
07:20:13.483 [debug] Fun returned result: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
07:20:13.483 [debug] Processing constructed value: %{left: {:fork, 2}, right: {:fork, 2}, value: 2, variant: :node}
07:20:13.483 [debug] Executing bend with initial: 2
07:20:13.483 [debug] Executing fun with value: 2
07:20:13.483 [debug] Evaluating bend block with value: 2
07:20:13.483 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.483 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.483 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.483 [debug] Executing bend with initial: 3
07:20:13.483 [debug] Executing fun with value: 3
07:20:13.483 [debug] Evaluating bend block with value: 3
07:20:13.483 [debug] Block returned: %{variant: :leaf}
07:20:13.483 [debug] Fun returned result: %{variant: :leaf}
07:20:13.483 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{variant: :leaf}
07:20:13.483 [debug] Executing bend with initial: 3
07:20:13.483 [debug] Executing fun with value: 3
07:20:13.483 [debug] Evaluating bend block with value: 3
07:20:13.483 [debug] Block returned: %{variant: :leaf}
07:20:13.483 [debug] Fun returned result: %{variant: :leaf}
07:20:13.483 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{variant: :leaf}
07:20:13.483 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
07:20:13.483 [debug] Executing bend with initial: 2
07:20:13.484 [debug] Executing fun with value: 2
07:20:13.484 [debug] Evaluating bend block with value: 2
07:20:13.484 [debug] Block returned: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.484 [debug] Fun returned result: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.484 [debug] Processing constructed value: %{left: {:fork, 3}, right: {:fork, 3}, value: 4, variant: :node}
07:20:13.484 [debug] Executing bend with initial: 3
07:20:13.484 [debug] Executing fun with value: 3
07:20:13.484 [debug] Evaluating bend block with value: 3
07:20:13.484 [debug] Block returned: %{variant: :leaf}
07:20:13.484 [debug] Fun returned result: %{variant: :leaf}
07:20:13.484 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.484 [debug] do_bend final result: %{variant: :leaf}
07:20:13.484 [debug] Executing bend with initial: 3
07:20:13.484 [debug] Executing fun with value: 3
07:20:13.484 [debug] Evaluating bend block with value: 3
07:20:13.484 [debug] Block returned: %{variant: :leaf}
07:20:13.484 [debug] Fun returned result: %{variant: :leaf}
07:20:13.484 [debug] Processing constructed value: %{variant: :leaf}
07:20:13.484 [debug] do_bend final result: %{variant: :leaf}
07:20:13.484 [debug] do_bend final result: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}
07:20:13.484 [debug] do_bend final result: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}
07:20:13.484 [debug] do_bend final result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, value: 0, variant: :node}
07:20:13.484 [debug] Final bend result: %{left: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, right: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, value: 4, variant: :node}, value: 2, variant: :node}, value: 0, variant: :node}
.07:20:13.484 [debug] Handling event: :tick. Current state: ns_active, Expected state: ns_active
07:20:13.484 [info] NS: Green -> Yellow
07:20:13.484 [info] Pattern result: {:weft, %{east_west: :red, last_tick: -576460743128, north_south: :yellow, timer: 0}, :ns_yellow}
07:20:13.484 [debug] Transitioning to ns_yellow
07:20:13.484 [debug] Handling event: :tick. Current state: ns_yellow, Expected state: ns_yellow
07:20:13.484 [info] NS: Yellow -> Red, EW: Red -> Green
07:20:13.484 [info] Pattern result: {:weft, %{east_west: :green, last_tick: -576460743127, north_south: :red, timer: 0}, :ew_active}
07:20:13.484 [debug] Transitioning to ew_active
07:20:13.484 [debug] Handling event: :tick. Current state: ew_active, Expected state: ew_active
07:20:13.484 [info] EW: Green -> Yellow
07:20:13.484 [info] Pattern result: {:weft, %{east_west: :yellow, last_tick: -576460743127, north_south: :red, timer: 0}, :ew_yellow}
07:20:13.484 [debug] Transitioning to ew_yellow
07:20:13.485 [debug] Handling event: :tick. Current state: ew_yellow, Expected state: ew_yellow
07:20:13.485 [info] EW: Yellow -> Red, NS: Red -> Green
07:20:13.485 [info] Pattern result: {:weft, %{east_west: :red, last_tick: -576460743127, north_south: :green, timer: 0}, :ns_active}
07:20:13.485 [debug] Transitioning to ns_active
.07:20:13.485 [debug] Handling event: :tick. Current state: ns_active, Expected state: ns_active
07:20:13.485 [info] NS: Green -> Yellow
07:20:13.485 [info] Pattern result: {:weft, %{east_west: :red, last_tick: -576460743127, north_south: :yellow, timer: 0}, :ns_yellow}
07:20:13.485 [debug] Transitioning to ns_yellow
07:20:13.485 [debug] Handling event: :tick. Current state: ns_yellow, Expected state: ns_yellow
07:20:13.485 [info] NS: Yellow -> Red, EW: Red -> Green
07:20:13.485 [info] Pattern result: {:weft, %{east_west: :green, last_tick: -576460743127, north_south: :red, timer: 0}, :ew_active}
07:20:13.485 [debug] Transitioning to ew_active
..07:20:13.485 [debug] do_fold called with data: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, val: 1, variant: :node}, variant_type: :node, state: nil
07:20:13.485 [debug] Processing recursive fields of: %{left: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, right: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, val: 1, variant: :node}
07:20:13.485 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}, variant_type: :node, state: nil
07:20:13.485 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 2, variant: :node}
07:20:13.485 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.485 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.485 [debug] Recursive field result for left: 0
07:20:13.485 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.485 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.485 [debug] Recursive field result for right: 0
07:20:13.485 [debug] do_fold called with non-variant data: 0
07:20:13.485 [debug] do_fold called with non-variant data: 0
07:20:13.485 [debug] Recursive field result for left: 2
07:20:13.485 [debug] do_fold called with data: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}, variant_type: :node, state: nil
07:20:13.485 [debug] Processing recursive fields of: %{left: %{variant: :leaf}, right: %{variant: :leaf}, val: 3, variant: :node}
07:20:13.485 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.485 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.485 [debug] Recursive field result for left: 0
07:20:13.485 [debug] do_fold called with data: %{variant: :leaf}, variant_type: :leaf, state: nil
07:20:13.486 [debug] Processing recursive fields of: %{variant: :leaf}
07:20:13.486 [debug] Recursive field result for right: 0
07:20:13.486 [debug] do_fold called with non-variant data: 0
07:20:13.486 [debug] do_fold called with non-variant data: 0
07:20:13.486 [debug] Recursive field result for right: 3
07:20:13.486 [debug] do_fold called with non-variant data: 2
07:20:13.486 [debug] do_fold called with non-variant data: 3
.07:20:13.486 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
07:20:13.486 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.486 [debug] do_fold called with data: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: 0
07:20:13.486 [debug] Processing recursive fields of: %{head: 2, tail: %{variant: :null}, variant: :cons}
07:20:13.486 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: 0
07:20:13.486 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.486 [debug] Recursive field result for tail: {0, 0}
07:20:13.486 [debug] do_fold called with non-variant data: 0
07:20:13.486 [debug] Recursive field result for tail: {2, 2}
07:20:13.486 [debug] do_fold called with non-variant data: 2
..07:20:13.486 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.486 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.486 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.486 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.486 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.486 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.486 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.486 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.486 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.486 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.487 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.487 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.487 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.487 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.487 [debug] Executing fun with value: [3, 4, 5]
07:20:13.487 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.487 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.487 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.487 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.487 [debug] Executing bend with initial: [4, 5]
07:20:13.487 [debug] Executing fun with value: [4, 5]
07:20:13.487 [debug] Evaluating bend block with value: [4, 5]
07:20:13.487 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.487 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.487 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.487 [debug] Executing bend with initial: [5]
07:20:13.487 [debug] Executing fun with value: [5]
07:20:13.487 [debug] Evaluating bend block with value: [5]
07:20:13.487 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.487 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.487 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.487 [debug] Executing bend with initial: []
07:20:13.487 [debug] Executing fun with value: []
07:20:13.487 [debug] Evaluating bend block with value: []
07:20:13.487 [debug] Block returned: %{variant: :null}
07:20:13.487 [debug] Fun returned result: %{variant: :null}
07:20:13.487 [debug] Processing constructed value: %{variant: :null}
07:20:13.487 [debug] do_bend final result: %{variant: :null}
07:20:13.487 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.487 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
07:20:13.487 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
07:20:13.487 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
07:20:13.487 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
07:20:13.487 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.487 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: 0
07:20:13.487 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.487 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: 0
07:20:13.487 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.487 [debug] Recursive field result for tail: {%{variant: :null}, 0}
07:20:13.487 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 0, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.487 [debug] Recursive field result for tail: {%{variant: :null}, 5}
07:20:13.487 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 5, non_fun: %{head: 4, tail: %{variant: :null}, variant: :cons}
07:20:13.487 [debug] Recursive field result for tail: {%{variant: :null}, 9}
07:20:13.487 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 9, non_fun: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.487 [debug] Recursive field result for tail: {%{variant: :null}, 12}
07:20:13.487 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 12, non_fun: %{head: 2, tail: %{variant: :null}, variant: :cons}
07:20:13.488 [debug] Recursive field result for tail: {%{variant: :null}, 14}
07:20:13.488 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 14, non_fun: %{head: 1, tail: %{variant: :null}, variant: :cons}
.07:20:13.488 [debug] Bend initial value: []
07:20:13.488 [debug] Executing bend with initial: []
07:20:13.488 [debug] Executing fun with value: []
07:20:13.488 [debug] Evaluating bend block with value: []
07:20:13.488 [debug] Block returned: %{variant: :null}
07:20:13.488 [debug] Fun returned result: %{variant: :null}
07:20:13.488 [debug] Processing constructed value: %{variant: :null}
07:20:13.488 [debug] do_bend final result: %{variant: :null}
07:20:13.488 [debug] Final bend result: %{variant: :null}
07:20:13.488 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.488 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.488 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.488 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.488 [debug] Bend initial value: []
07:20:13.488 [debug] Executing bend with initial: []
07:20:13.488 [debug] Executing fun with value: []
07:20:13.488 [debug] Evaluating bend block with value: []
07:20:13.488 [debug] Block returned: %{variant: :null}
07:20:13.488 [debug] Fun returned result: %{variant: :null}
07:20:13.488 [debug] Processing constructed value: %{variant: :null}
07:20:13.488 [debug] do_bend final result: %{variant: :null}
07:20:13.488 [debug] Final bend result: %{variant: :null}
07:20:13.488 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.488 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.488 [debug] Bend initial value: ["a", "b", "c"]
07:20:13.488 [debug] Executing bend with initial: ["a", "b", "c"]
07:20:13.488 [debug] Executing fun with value: ["a", "b", "c"]
07:20:13.488 [debug] Evaluating bend block with value: ["a", "b", "c"]
07:20:13.488 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.488 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.488 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.488 [debug] Executing bend with initial: ["b", "c"]
07:20:13.488 [debug] Executing fun with value: ["b", "c"]
07:20:13.488 [debug] Evaluating bend block with value: ["b", "c"]
07:20:13.488 [debug] Block returned: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.488 [debug] Fun returned result: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.488 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.488 [debug] Executing bend with initial: ["c"]
07:20:13.488 [debug] Executing fun with value: ["c"]
07:20:13.488 [debug] Evaluating bend block with value: ["c"]
07:20:13.488 [debug] Block returned: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.488 [debug] Fun returned result: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.488 [debug] Processing constructed value: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.488 [debug] Executing bend with initial: []
07:20:13.488 [debug] Executing fun with value: []
07:20:13.488 [debug] Evaluating bend block with value: []
07:20:13.488 [debug] Block returned: %{variant: :null}
07:20:13.488 [debug] Fun returned result: %{variant: :null}
07:20:13.488 [debug] Processing constructed value: %{variant: :null}
07:20:13.488 [debug] do_bend final result: %{variant: :null}
07:20:13.488 [debug] do_bend final result: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.488 [debug] do_bend final result: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.488 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.488 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.488 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.488 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.488 [debug] do_fold called with data: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.488 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.488 [debug] do_fold called with data: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.488 [debug] Processing recursive fields of: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.489 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.489 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.489 [debug] Recursive field result for tail: []
07:20:13.489 [debug] do_fold called with non-variant data: []
07:20:13.489 [debug] Recursive field result for tail: ["c"]
07:20:13.489 [debug] do_fold called with non-variant data: ["c"]
07:20:13.489 [debug] Recursive field result for tail: ["b", "c"]
07:20:13.489 [debug] do_fold called with non-variant data: ["b", "c"]
.07:20:13.489 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.489 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.489 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.489 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.489 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.489 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.489 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.489 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.489 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.489 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.489 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.489 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.489 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.489 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.489 [debug] Executing fun with value: [3, 4, 5]
07:20:13.489 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.489 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.489 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.489 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.489 [debug] Executing bend with initial: [4, 5]
07:20:13.489 [debug] Executing fun with value: [4, 5]
07:20:13.489 [debug] Evaluating bend block with value: [4, 5]
07:20:13.489 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.489 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.489 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.489 [debug] Executing bend with initial: [5]
07:20:13.489 [debug] Executing fun with value: [5]
07:20:13.489 [debug] Evaluating bend block with value: [5]
07:20:13.489 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.489 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.489 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.489 [debug] Executing bend with initial: []
07:20:13.489 [debug] Executing fun with value: []
07:20:13.489 [debug] Evaluating bend block with value: []
07:20:13.489 [debug] Block returned: %{variant: :null}
07:20:13.489 [debug] Fun returned result: %{variant: :null}
07:20:13.489 [debug] Processing constructed value: %{variant: :null}
07:20:13.489 [debug] do_bend final result: %{variant: :null}
07:20:13.489 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.489 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_fold called with data: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.489 [debug] Processing recursive fields of: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_fold called with data: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.489 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_fold called with data: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.489 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_fold called with data: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.489 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.489 [debug] do_fold called with data: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.489 [debug] Processing recursive fields of: %{head: 1, tail: %{variant: :null}, variant: :cons}
07:20:13.489 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.489 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.489 [debug] Recursive field result for tail: %{variant: :null}
07:20:13.490 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 1, tail: %{variant: :null}, variant: :cons}
07:20:13.490 [debug] Recursive field result for tail: %{head: 2, tail: %{variant: :null}, variant: :cons}
07:20:13.490 [debug] do_fold called with non-function: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] Recursive field result for tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with non-function: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 4, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] Recursive field result for tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with non-function: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 5, tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with data: %{head: 10, tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.490 [debug] Processing recursive fields of: %{head: 10, tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with data: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.490 [debug] Processing recursive fields of: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with data: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.490 [debug] Processing recursive fields of: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with data: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.490 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.490 [debug] do_fold called with data: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.490 [debug] Processing recursive fields of: %{head: 2, tail: %{variant: :null}, variant: :cons}
07:20:13.490 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.490 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.490 [debug] Recursive field result for tail: []
07:20:13.490 [debug] do_fold called with non-variant data: []
07:20:13.490 [debug] Recursive field result for tail: [2]
07:20:13.490 [debug] do_fold called with non-variant data: [2]
07:20:13.490 [debug] Recursive field result for tail: [4, 2]
07:20:13.490 [debug] do_fold called with non-variant data: [4, 2]
07:20:13.490 [debug] Recursive field result for tail: [6, 4, 2]
07:20:13.490 [debug] do_fold called with non-variant data: [6, 4, 2]
07:20:13.490 [debug] Recursive field result for tail: [8, 6, 4, 2]
07:20:13.490 [debug] do_fold called with non-variant data: [8, 6, 4, 2]
.07:20:13.490 [debug] Bend initial value: []
07:20:13.490 [debug] Executing bend with initial: []
07:20:13.490 [debug] Executing fun with value: []
07:20:13.490 [debug] Evaluating bend block with value: []
07:20:13.490 [debug] Block returned: %{variant: :null}
07:20:13.490 [debug] Fun returned result: %{variant: :null}
07:20:13.490 [debug] Processing constructed value: %{variant: :null}
07:20:13.490 [debug] do_bend final result: %{variant: :null}
07:20:13.491 [debug] Final bend result: %{variant: :null}
07:20:13.491 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
.07:20:13.491 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.491 [debug] Bend initial value: ["a", "b", "c"]
07:20:13.491 [debug] Executing bend with initial: ["a", "b", "c"]
07:20:13.491 [debug] Executing fun with value: ["a", "b", "c"]
07:20:13.491 [debug] Evaluating bend block with value: ["a", "b", "c"]
07:20:13.491 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.491 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.491 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.491 [debug] Executing bend with initial: ["b", "c"]
07:20:13.491 [debug] Executing fun with value: ["b", "c"]
07:20:13.491 [debug] Evaluating bend block with value: ["b", "c"]
07:20:13.491 [debug] Block returned: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.491 [debug] Fun returned result: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.491 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.491 [debug] Executing bend with initial: ["c"]
07:20:13.491 [debug] Executing fun with value: ["c"]
07:20:13.491 [debug] Evaluating bend block with value: ["c"]
07:20:13.491 [debug] Block returned: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.491 [debug] Fun returned result: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.491 [debug] Processing constructed value: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.491 [debug] Executing bend with initial: []
07:20:13.491 [debug] Executing fun with value: []
07:20:13.491 [debug] Evaluating bend block with value: []
07:20:13.491 [debug] Block returned: %{variant: :null}
07:20:13.491 [debug] Fun returned result: %{variant: :null}
07:20:13.491 [debug] Processing constructed value: %{variant: :null}
07:20:13.491 [debug] do_bend final result: %{variant: :null}
07:20:13.491 [debug] do_bend final result: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.491 [debug] do_bend final result: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.491 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.491 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.491 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: ""
07:20:13.491 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.491 [debug] do_fold called with data: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: ""
07:20:13.491 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.491 [debug] do_fold called with data: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: ""
07:20:13.491 [debug] Processing recursive fields of: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.491 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: ""
07:20:13.491 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.491 [debug] Recursive field result for tail: {%{variant: :null}, ""}
07:20:13.491 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: "", non_fun: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.491 [debug] Recursive field result for tail: {%{variant: :null}, "c"}
07:20:13.491 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: "c", non_fun: %{head: "b", tail: %{variant: :null}, variant: :cons}
07:20:13.491 [debug] Recursive field result for tail: {%{variant: :null}, "bc"}
07:20:13.491 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: "bc", non_fun: %{head: "a", tail: %{variant: :null}, variant: :cons}
.07:20:13.491 [debug] Bend initial value: [1, 2, 3]
07:20:13.491 [debug] Executing bend with initial: [1, 2, 3]
07:20:13.491 [debug] Executing fun with value: [1, 2, 3]
07:20:13.491 [debug] Evaluating bend block with value: [1, 2, 3]
07:20:13.491 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
07:20:13.491 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
07:20:13.491 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
07:20:13.491 [debug] Executing bend with initial: [2, 3]
07:20:13.491 [debug] Executing fun with value: [2, 3]
07:20:13.491 [debug] Evaluating bend block with value: [2, 3]
07:20:13.491 [debug] Block returned: %{head: 2, tail: {:fork, [3]}, variant: :cons}
07:20:13.491 [debug] Fun returned result: %{head: 2, tail: {:fork, [3]}, variant: :cons}
07:20:13.491 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3]}, variant: :cons}
07:20:13.491 [debug] Executing bend with initial: [3]
07:20:13.491 [debug] Executing fun with value: [3]
07:20:13.491 [debug] Evaluating bend block with value: [3]
07:20:13.491 [debug] Block returned: %{head: 3, tail: {:fork, []}, variant: :cons}
07:20:13.491 [debug] Fun returned result: %{head: 3, tail: {:fork, []}, variant: :cons}
07:20:13.492 [debug] Processing constructed value: %{head: 3, tail: {:fork, []}, variant: :cons}
07:20:13.492 [debug] Executing bend with initial: []
07:20:13.492 [debug] Executing fun with value: []
07:20:13.492 [debug] Evaluating bend block with value: []
07:20:13.492 [debug] Block returned: %{variant: :null}
07:20:13.492 [debug] Fun returned result: %{variant: :null}
07:20:13.492 [debug] Processing constructed value: %{variant: :null}
07:20:13.492 [debug] do_bend final result: %{variant: :null}
07:20:13.492 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.492 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] Bend initial value: [4, 5, 6]
07:20:13.492 [debug] Executing bend with initial: [4, 5, 6]
07:20:13.492 [debug] Executing fun with value: [4, 5, 6]
07:20:13.492 [debug] Evaluating bend block with value: [4, 5, 6]
07:20:13.492 [debug] Block returned: %{head: 4, tail: {:fork, [5, 6]}, variant: :cons}
07:20:13.492 [debug] Fun returned result: %{head: 4, tail: {:fork, [5, 6]}, variant: :cons}
07:20:13.492 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5, 6]}, variant: :cons}
07:20:13.492 [debug] Executing bend with initial: [5, 6]
07:20:13.492 [debug] Executing fun with value: [5, 6]
07:20:13.492 [debug] Evaluating bend block with value: [5, 6]
07:20:13.492 [debug] Block returned: %{head: 5, tail: {:fork, [6]}, variant: :cons}
07:20:13.492 [debug] Fun returned result: %{head: 5, tail: {:fork, [6]}, variant: :cons}
07:20:13.492 [debug] Processing constructed value: %{head: 5, tail: {:fork, [6]}, variant: :cons}
07:20:13.492 [debug] Executing bend with initial: [6]
07:20:13.492 [debug] Executing fun with value: [6]
07:20:13.492 [debug] Evaluating bend block with value: [6]
07:20:13.492 [debug] Block returned: %{head: 6, tail: {:fork, []}, variant: :cons}
07:20:13.492 [debug] Fun returned result: %{head: 6, tail: {:fork, []}, variant: :cons}
07:20:13.492 [debug] Processing constructed value: %{head: 6, tail: {:fork, []}, variant: :cons}
07:20:13.492 [debug] Executing bend with initial: []
07:20:13.492 [debug] Executing fun with value: []
07:20:13.492 [debug] Evaluating bend block with value: []
07:20:13.492 [debug] Block returned: %{variant: :null}
07:20:13.492 [debug] Fun returned result: %{variant: :null}
07:20:13.492 [debug] Processing constructed value: %{variant: :null}
07:20:13.492 [debug] do_bend final result: %{variant: :null}
07:20:13.492 [debug] do_bend final result: %{head: 6, tail: %{variant: :null}, variant: :cons}
07:20:13.492 [debug] do_bend final result: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] Final bend result: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.492 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.492 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_fold called with data: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.492 [debug] Processing recursive fields of: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.492 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.492 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.492 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] Recursive field result for tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_fold called with non-function: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] Recursive field result for tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.492 [debug] do_fold called with non-function: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.493 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.493 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.493 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.493 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.493 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.493 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.493 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.493 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.493 [debug] do_fold called with data: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.493 [debug] Processing recursive fields of: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.493 [debug] do_fold called with data: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.493 [debug] Processing recursive fields of: %{head: 6, tail: %{variant: :null}, variant: :cons}
07:20:13.493 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.493 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.493 [debug] Recursive field result for tail: []
07:20:13.493 [debug] do_fold called with non-variant data: []
07:20:13.493 [debug] Recursive field result for tail: [6]
07:20:13.493 [debug] do_fold called with non-variant data: [6]
07:20:13.493 [debug] Recursive field result for tail: [5, 6]
07:20:13.493 [debug] do_fold called with non-variant data: [5, 6]
07:20:13.493 [debug] Recursive field result for tail: [4, 5, 6]
07:20:13.493 [debug] do_fold called with non-variant data: [4, 5, 6]
07:20:13.493 [debug] Recursive field result for tail: [3, 4, 5, 6]
07:20:13.493 [debug] do_fold called with non-variant data: [3, 4, 5, 6]
07:20:13.493 [debug] Recursive field result for tail: [2, 3, 4, 5, 6]
07:20:13.493 [debug] do_fold called with non-variant data: [2, 3, 4, 5, 6]
.07:20:13.493 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.493 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.493 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.493 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.493 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.493 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.493 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.493 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.493 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.493 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.493 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.493 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.493 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.493 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.493 [debug] Executing fun with value: [3, 4, 5]
07:20:13.493 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.493 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.493 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.493 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.493 [debug] Executing bend with initial: [4, 5]
07:20:13.493 [debug] Executing fun with value: [4, 5]
07:20:13.493 [debug] Evaluating bend block with value: [4, 5]
07:20:13.493 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.493 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.493 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.493 [debug] Executing bend with initial: [5]
07:20:13.493 [debug] Executing fun with value: [5]
07:20:13.493 [debug] Evaluating bend block with value: [5]
07:20:13.494 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.494 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.494 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.494 [debug] Executing bend with initial: []
07:20:13.494 [debug] Executing fun with value: []
07:20:13.494 [debug] Evaluating bend block with value: []
07:20:13.494 [debug] Block returned: %{variant: :null}
07:20:13.494 [debug] Fun returned result: %{variant: :null}
07:20:13.494 [debug] Processing constructed value: %{variant: :null}
07:20:13.494 [debug] do_bend final result: %{variant: :null}
07:20:13.494 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.494 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.494 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.494 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.494 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.494 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.494 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.494 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.494 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.494 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.494 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.494 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.494 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.494 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.494 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.494 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.494 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.494 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.494 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.494 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.494 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.494 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.494 [debug] Executing fun with value: [3, 4, 5]
07:20:13.494 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.494 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.494 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.494 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.494 [debug] Executing bend with initial: [4, 5]
07:20:13.494 [debug] Executing fun with value: [4, 5]
07:20:13.494 [debug] Evaluating bend block with value: [4, 5]
07:20:13.494 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.494 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.494 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.494 [debug] Executing bend with initial: [5]
07:20:13.494 [debug] Executing fun with value: [5]
07:20:13.494 [debug] Evaluating bend block with value: [5]
07:20:13.494 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.494 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.494 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.494 [debug] Executing bend with initial: []
07:20:13.494 [debug] Executing fun with value: []
07:20:13.494 [debug] Evaluating bend block with value: []
07:20:13.494 [debug] Block returned: %{variant: :null}
07:20:13.494 [debug] Fun returned result: %{variant: :null}
07:20:13.494 [debug] Processing constructed value: %{variant: :null}
07:20:13.494 [debug] do_bend final result: %{variant: :null}
07:20:13.494 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.494 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.494 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.495 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.495 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.495 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.495 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
.07:20:13.495 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.495 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.495 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.495 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.495 [debug] Recursive field result for tail: []
07:20:13.495 [debug] do_fold called with non-variant data: []
07:20:13.495 [debug] Recursive field result for tail: [5]
07:20:13.495 [debug] do_fold called with non-variant data: [5]
07:20:13.495 [debug] Recursive field result for tail: [4, 5]
07:20:13.495 [debug] do_fold called with non-variant data: [4, 5]
07:20:13.495 [debug] Recursive field result for tail: [3, 4, 5]
07:20:13.495 [debug] do_fold called with non-variant data: [3, 4, 5]
07:20:13.495 [debug] Recursive field result for tail: [2, 3, 4, 5]
07:20:13.495 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
07:20:13.495 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.495 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.495 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.495 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.495 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.495 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.495 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.495 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.495 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.495 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.495 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.495 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.495 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.495 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.495 [debug] Executing fun with value: [3, 4, 5]
07:20:13.495 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.495 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.495 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.495 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.495 [debug] Executing bend with initial: [4, 5]
07:20:13.495 [debug] Executing fun with value: [4, 5]
07:20:13.495 [debug] Evaluating bend block with value: [4, 5]
07:20:13.495 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.495 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.495 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.495 [debug] Executing bend with initial: [5]
07:20:13.495 [debug] Executing fun with value: [5]
07:20:13.495 [debug] Evaluating bend block with value: [5]
07:20:13.495 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.495 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.495 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.495 [debug] Executing bend with initial: []
07:20:13.495 [debug] Executing fun with value: []
07:20:13.495 [debug] Evaluating bend block with value: []
07:20:13.495 [debug] Block returned: %{variant: :null}
07:20:13.495 [debug] Fun returned result: %{variant: :null}
07:20:13.495 [debug] Processing constructed value: %{variant: :null}
07:20:13.495 [debug] do_bend final result: %{variant: :null}
07:20:13.495 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.495 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.495 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.496 [debug] Recursive field result for tail: %{variant: :null}
07:20:13.496 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.496 [debug] Recursive field result for tail: %{variant: :null}
07:20:13.496 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 4, tail: %{variant: :null}, variant: :cons}
07:20:13.496 [debug] Recursive field result for tail: %{head: 4, tail: %{variant: :null}, variant: :cons}
07:20:13.496 [debug] do_fold called with non-function: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] Recursive field result for tail: %{head: 4, tail: %{variant: :null}, variant: :cons}
07:20:13.496 [debug] do_fold called with non-function: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] Recursive field result for tail: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with non-function: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{head: 4, tail: %{variant: :null}, variant: :cons}
07:20:13.496 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.496 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.496 [debug] Recursive field result for tail: []
07:20:13.496 [debug] do_fold called with non-variant data: []
07:20:13.496 [debug] Recursive field result for tail: [4]
07:20:13.496 [debug] do_fold called with non-variant data: [4]
.07:20:13.496 [debug] Bend initial value: ["a", "b", "aa", "bb", "aaa"]
07:20:13.496 [debug] Executing bend with initial: ["a", "b", "aa", "bb", "aaa"]
07:20:13.496 [debug] Executing fun with value: ["a", "b", "aa", "bb", "aaa"]
07:20:13.496 [debug] Evaluating bend block with value: ["a", "b", "aa", "bb", "aaa"]
07:20:13.496 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "aa", "bb", "aaa"]}, variant: :cons}
07:20:13.496 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "aa", "bb", "aaa"]}, variant: :cons}
07:20:13.496 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "aa", "bb", "aaa"]}, variant: :cons}
07:20:13.496 [debug] Executing bend with initial: ["b", "aa", "bb", "aaa"]
07:20:13.496 [debug] Executing fun with value: ["b", "aa", "bb", "aaa"]
07:20:13.496 [debug] Evaluating bend block with value: ["b", "aa", "bb", "aaa"]
07:20:13.496 [debug] Block returned: %{head: "b", tail: {:fork, ["aa", "bb", "aaa"]}, variant: :cons}
07:20:13.496 [debug] Fun returned result: %{head: "b", tail: {:fork, ["aa", "bb", "aaa"]}, variant: :cons}
07:20:13.496 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["aa", "bb", "aaa"]}, variant: :cons}
07:20:13.496 [debug] Executing bend with initial: ["aa", "bb", "aaa"]
07:20:13.496 [debug] Executing fun with value: ["aa", "bb", "aaa"]
07:20:13.496 [debug] Evaluating bend block with value: ["aa", "bb", "aaa"]
07:20:13.497 [debug] Block returned: %{head: "aa", tail: {:fork, ["bb", "aaa"]}, variant: :cons}
07:20:13.497 [debug] Fun returned result: %{head: "aa", tail: {:fork, ["bb", "aaa"]}, variant: :cons}
07:20:13.497 [debug] Processing constructed value: %{head: "aa", tail: {:fork, ["bb", "aaa"]}, variant: :cons}
07:20:13.497 [debug] Executing bend with initial: ["bb", "aaa"]
07:20:13.497 [debug] Executing fun with value: ["bb", "aaa"]
07:20:13.497 [debug] Evaluating bend block with value: ["bb", "aaa"]
07:20:13.497 [debug] Block returned: %{head: "bb", tail: {:fork, ["aaa"]}, variant: :cons}
07:20:13.497 [debug] Fun returned result: %{head: "bb", tail: {:fork, ["aaa"]}, variant: :cons}
07:20:13.497 [debug] Processing constructed value: %{head: "bb", tail: {:fork, ["aaa"]}, variant: :cons}
07:20:13.497 [debug] Executing bend with initial: ["aaa"]
07:20:13.497 [debug] Executing fun with value: ["aaa"]
07:20:13.497 [debug] Evaluating bend block with value: ["aaa"]
07:20:13.497 [debug] Block returned: %{head: "aaa", tail: {:fork, []}, variant: :cons}
07:20:13.497 [debug] Fun returned result: %{head: "aaa", tail: {:fork, []}, variant: :cons}
07:20:13.497 [debug] Processing constructed value: %{head: "aaa", tail: {:fork, []}, variant: :cons}
07:20:13.497 [debug] Executing bend with initial: []
07:20:13.497 [debug] Executing fun with value: []
07:20:13.497 [debug] Evaluating bend block with value: []
07:20:13.497 [debug] Block returned: %{variant: :null}
07:20:13.497 [debug] Fun returned result: %{variant: :null}
07:20:13.497 [debug] Processing constructed value: %{variant: :null}
07:20:13.497 [debug] do_bend final result: %{variant: :null}
07:20:13.497 [debug] do_bend final result: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
07:20:13.497 [debug] do_bend final result: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_bend final result: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_bend final result: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.497 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_fold called with data: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.497 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_fold called with data: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.497 [debug] Processing recursive fields of: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_fold called with data: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.497 [debug] Processing recursive fields of: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.497 [debug] do_fold called with data: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.497 [debug] Processing recursive fields of: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
07:20:13.497 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.497 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.497 [debug] Recursive field result for tail: %{variant: :null}
07:20:13.497 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
07:20:13.498 [debug] Recursive field result for tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
07:20:13.498 [debug] do_fold called with non-function: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] Recursive field result for tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] do_fold called with non-function: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] Recursive field result for tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] do_fold called with non-function: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] Recursive field result for tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] do_fold called with non-function: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "a", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] do_fold called with data: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.498 [debug] Processing recursive fields of: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] do_fold called with data: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.498 [debug] Processing recursive fields of: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.498 [debug] do_fold called with data: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.498 [debug] Processing recursive fields of: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
07:20:13.498 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.498 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.498 [debug] Recursive field result for tail: []
07:20:13.498 [debug] do_fold called with non-variant data: []
07:20:13.498 [debug] Recursive field result for tail: ["aaa"]
07:20:13.498 [debug] do_fold called with non-variant data: ["aaa"]
07:20:13.498 [debug] Recursive field result for tail: ["bb", "aaa"]
07:20:13.498 [debug] do_fold called with non-variant data: ["bb", "aaa"]
.07:20:13.498 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.498 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.498 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.498 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.498 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.498 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.498 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.498 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.498 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.498 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.498 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.498 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.498 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.498 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.498 [debug] Executing fun with value: [3, 4, 5]
07:20:13.498 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.498 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.498 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.498 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.498 [debug] Executing bend with initial: [4, 5]
07:20:13.498 [debug] Executing fun with value: [4, 5]
07:20:13.498 [debug] Evaluating bend block with value: [4, 5]
07:20:13.498 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.498 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.499 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.499 [debug] Executing bend with initial: [5]
07:20:13.499 [debug] Executing fun with value: [5]
07:20:13.499 [debug] Evaluating bend block with value: [5]
07:20:13.499 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.499 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.499 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.499 [debug] Executing bend with initial: []
07:20:13.499 [debug] Executing fun with value: []
07:20:13.499 [debug] Evaluating bend block with value: []
07:20:13.499 [debug] Block returned: %{variant: :null}
07:20:13.499 [debug] Fun returned result: %{variant: :null}
07:20:13.499 [debug] Processing constructed value: %{variant: :null}
07:20:13.499 [debug] do_bend final result: %{variant: :null}
07:20:13.499 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.499 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.499 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.499 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.499 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.499 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.499 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.499 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.499 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.499 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.499 [debug] Recursive field result for tail: 0
07:20:13.499 [debug] do_fold called with non-variant data: 0
07:20:13.499 [debug] Recursive field result for tail: 1
07:20:13.499 [debug] do_fold called with non-variant data: 1
07:20:13.499 [debug] Recursive field result for tail: 2
07:20:13.499 [debug] do_fold called with non-variant data: 2
07:20:13.499 [debug] Recursive field result for tail: 3
07:20:13.499 [debug] do_fold called with non-variant data: 3
07:20:13.499 [debug] Recursive field result for tail: 4
07:20:13.499 [debug] do_fold called with non-variant data: 4
.07:20:13.499 [debug] Bend initial value: []
07:20:13.499 [debug] Executing bend with initial: []
07:20:13.499 [debug] Executing fun with value: []
07:20:13.499 [debug] Evaluating bend block with value: []
07:20:13.499 [debug] Block returned: %{variant: :null}
07:20:13.499 [debug] Fun returned result: %{variant: :null}
07:20:13.499 [debug] Processing constructed value: %{variant: :null}
07:20:13.499 [debug] do_bend final result: %{variant: :null}
07:20:13.499 [debug] Final bend result: %{variant: :null}
07:20:13.499 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.499 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.499 [debug] Bend initial value: [1, 2, 3]
07:20:13.499 [debug] Executing bend with initial: [1, 2, 3]
07:20:13.499 [debug] Executing fun with value: [1, 2, 3]
07:20:13.499 [debug] Evaluating bend block with value: [1, 2, 3]
07:20:13.499 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
07:20:13.499 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
07:20:13.499 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
07:20:13.499 [debug] Executing bend with initial: [2, 3]
07:20:13.499 [debug] Executing fun with value: [2, 3]
07:20:13.499 [debug] Evaluating bend block with value: [2, 3]
07:20:13.500 [debug] Block returned: %{head: 2, tail: {:fork, [3]}, variant: :cons}
07:20:13.500 [debug] Fun returned result: %{head: 2, tail: {:fork, [3]}, variant: :cons}
07:20:13.500 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3]}, variant: :cons}
07:20:13.500 [debug] Executing bend with initial: [3]
07:20:13.500 [debug] Executing fun with value: [3]
07:20:13.500 [debug] Evaluating bend block with value: [3]
07:20:13.500 [debug] Block returned: %{head: 3, tail: {:fork, []}, variant: :cons}
07:20:13.500 [debug] Fun returned result: %{head: 3, tail: {:fork, []}, variant: :cons}
07:20:13.500 [debug] Processing constructed value: %{head: 3, tail: {:fork, []}, variant: :cons}
07:20:13.500 [debug] Executing bend with initial: []
07:20:13.500 [debug] Executing fun with value: []
07:20:13.500 [debug] Evaluating bend block with value: []
07:20:13.500 [debug] Block returned: %{variant: :null}
07:20:13.500 [debug] Fun returned result: %{variant: :null}
07:20:13.500 [debug] Processing constructed value: %{variant: :null}
07:20:13.500 [debug] do_bend final result: %{variant: :null}
07:20:13.500 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.500 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.500 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.500 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.500 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.500 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.500 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.500 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.500 [debug] do_fold called with data: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.500 [debug] Processing recursive fields of: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.500 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.500 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.500 [debug] Recursive field result for tail: []
07:20:13.500 [debug] do_fold called with non-variant data: []
07:20:13.500 [debug] Recursive field result for tail: [3]
07:20:13.500 [debug] do_fold called with non-variant data: [3]
07:20:13.500 [debug] Recursive field result for tail: [2, 3]
07:20:13.500 [debug] do_fold called with non-variant data: [2, 3]
.07:20:13.500 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.500 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.500 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.500 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.500 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.500 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.500 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.500 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.500 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.500 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.500 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.501 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.501 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.501 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.501 [debug] Executing fun with value: [3, 4, 5]
07:20:13.501 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.501 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.501 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.501 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.501 [debug] Executing bend with initial: [4, 5]
07:20:13.501 [debug] Executing fun with value: [4, 5]
07:20:13.501 [debug] Evaluating bend block with value: [4, 5]
07:20:13.501 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.501 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.501 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.501 [debug] Executing bend with initial: [5]
07:20:13.501 [debug] Executing fun with value: [5]
07:20:13.501 [debug] Evaluating bend block with value: [5]
07:20:13.501 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.501 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.501 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.501 [debug] Executing bend with initial: []
07:20:13.501 [debug] Executing fun with value: []
07:20:13.501 [debug] Evaluating bend block with value: []
07:20:13.501 [debug] Block returned: %{variant: :null}
07:20:13.501 [debug] Fun returned result: %{variant: :null}
07:20:13.501 [debug] Processing constructed value: %{variant: :null}
07:20:13.501 [debug] do_bend final result: %{variant: :null}
07:20:13.501 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.501 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] Bend initial value: []
07:20:13.501 [debug] Executing bend with initial: []
07:20:13.501 [debug] Executing fun with value: []
07:20:13.501 [debug] Evaluating bend block with value: []
07:20:13.501 [debug] Block returned: %{variant: :null}
07:20:13.501 [debug] Fun returned result: %{variant: :null}
07:20:13.501 [debug] Processing constructed value: %{variant: :null}
07:20:13.501 [debug] do_bend final result: %{variant: :null}
07:20:13.501 [debug] Final bend result: %{variant: :null}
07:20:13.501 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.501 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.501 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.501 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.501 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.501 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.501 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.502 [debug] Recursive field result for tail: %{variant: :null}
07:20:13.502 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.502 [debug] Recursive field result for tail: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.502 [debug] do_fold called with non-function: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] Recursive field result for tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with non-function: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] Recursive field result for tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with non-function: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.502 [debug] Recursive field result for tail: []
07:20:13.502 [debug] do_fold called with non-variant data: []
07:20:13.502 [debug] Recursive field result for tail: [5]
07:20:13.502 [debug] do_fold called with non-variant data: [5]
07:20:13.502 [debug] Recursive field result for tail: [4, 5]
07:20:13.502 [debug] do_fold called with non-variant data: [4, 5]
07:20:13.502 [debug] Recursive field result for tail: [3, 4, 5]
07:20:13.502 [debug] do_fold called with non-variant data: [3, 4, 5]
07:20:13.502 [debug] Recursive field result for tail: [2, 3, 4, 5]
07:20:13.502 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
07:20:13.502 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.502 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.502 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.502 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.503 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.503 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.503 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.503 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.503 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.503 [debug] Recursive field result for tail: []
07:20:13.503 [debug] do_fold called with non-variant data: []
07:20:13.503 [debug] Recursive field result for tail: [5]
07:20:13.503 [debug] do_fold called with non-variant data: [5]
07:20:13.503 [debug] Recursive field result for tail: [4, 5]
07:20:13.503 [debug] do_fold called with non-variant data: [4, 5]
07:20:13.503 [debug] Recursive field result for tail: [3, 4, 5]
07:20:13.503 [debug] do_fold called with non-variant data: [3, 4, 5]
07:20:13.503 [debug] Recursive field result for tail: [2, 3, 4, 5]
07:20:13.503 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
.07:20:13.503 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.503 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.503 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.503 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.503 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.503 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.503 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.503 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.503 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.503 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.503 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.503 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.503 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.503 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.503 [debug] Executing fun with value: [3, 4, 5]
07:20:13.503 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.503 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.503 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.503 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.503 [debug] Executing bend with initial: [4, 5]
07:20:13.503 [debug] Executing fun with value: [4, 5]
07:20:13.503 [debug] Evaluating bend block with value: [4, 5]
07:20:13.503 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.503 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.503 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.503 [debug] Executing bend with initial: [5]
07:20:13.503 [debug] Executing fun with value: [5]
07:20:13.503 [debug] Evaluating bend block with value: [5]
07:20:13.503 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.503 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.503 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.503 [debug] Executing bend with initial: []
07:20:13.503 [debug] Executing fun with value: []
07:20:13.503 [debug] Evaluating bend block with value: []
07:20:13.503 [debug] Block returned: %{variant: :null}
07:20:13.503 [debug] Fun returned result: %{variant: :null}
07:20:13.503 [debug] Processing constructed value: %{variant: :null}
07:20:13.503 [debug] do_bend final result: %{variant: :null}
07:20:13.503 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.503 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.503 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.503 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.503 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.503 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.503 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.503 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.503 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.504 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.504 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.504 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.504 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.504 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.504 [debug] Recursive field result for tail: []
07:20:13.504 [debug] do_fold called with non-variant data: []
07:20:13.504 [debug] Recursive field result for tail: [5]
07:20:13.504 [debug] do_fold called with non-variant data: [5]
07:20:13.504 [debug] Recursive field result for tail: [4, 5]
07:20:13.504 [debug] do_fold called with non-variant data: [4, 5]
.07:20:13.504 [debug] Bend initial value: []
07:20:13.504 [debug] Executing bend with initial: []
07:20:13.504 [debug] Executing fun with value: []
07:20:13.504 [debug] Evaluating bend block with value: []
07:20:13.504 [debug] Block returned: %{variant: :null}
07:20:13.504 [debug] Fun returned result: %{variant: :null}
07:20:13.504 [debug] Processing constructed value: %{variant: :null}
07:20:13.504 [debug] do_bend final result: %{variant: :null}
07:20:13.504 [debug] Final bend result: %{variant: :null}
07:20:13.504 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.504 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.504 [debug] Bend initial value: []
07:20:13.504 [debug] Executing bend with initial: []
07:20:13.504 [debug] Executing fun with value: []
07:20:13.504 [debug] Evaluating bend block with value: []
07:20:13.504 [debug] Block returned: %{variant: :null}
07:20:13.504 [debug] Fun returned result: %{variant: :null}
07:20:13.504 [debug] Processing constructed value: %{variant: :null}
07:20:13.504 [debug] do_bend final result: %{variant: :null}
07:20:13.504 [debug] Final bend result: %{variant: :null}
07:20:13.504 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: 0
07:20:13.504 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.504 [debug] Bend initial value: []
07:20:13.504 [debug] Executing bend with initial: []
07:20:13.504 [debug] Executing fun with value: []
07:20:13.504 [debug] Evaluating bend block with value: []
07:20:13.504 [debug] Block returned: %{variant: :null}
07:20:13.504 [debug] Fun returned result: %{variant: :null}
07:20:13.504 [debug] Processing constructed value: %{variant: :null}
07:20:13.504 [debug] do_bend final result: %{variant: :null}
07:20:13.504 [debug] Final bend result: %{variant: :null}
07:20:13.504 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.504 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.504 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.504 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.504 [debug] Bend initial value: ["a", "b", "c"]
07:20:13.504 [debug] Executing bend with initial: ["a", "b", "c"]
07:20:13.504 [debug] Executing fun with value: ["a", "b", "c"]
07:20:13.504 [debug] Evaluating bend block with value: ["a", "b", "c"]
07:20:13.504 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.504 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.504 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
07:20:13.504 [debug] Executing bend with initial: ["b", "c"]
07:20:13.505 [debug] Executing fun with value: ["b", "c"]
07:20:13.505 [debug] Evaluating bend block with value: ["b", "c"]
07:20:13.505 [debug] Block returned: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.505 [debug] Fun returned result: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.505 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
07:20:13.505 [debug] Executing bend with initial: ["c"]
07:20:13.505 [debug] Executing fun with value: ["c"]
07:20:13.505 [debug] Evaluating bend block with value: ["c"]
07:20:13.505 [debug] Block returned: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.505 [debug] Fun returned result: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.505 [debug] Processing constructed value: %{head: "c", tail: {:fork, []}, variant: :cons}
07:20:13.505 [debug] Executing bend with initial: []
07:20:13.505 [debug] Executing fun with value: []
07:20:13.505 [debug] Evaluating bend block with value: []
07:20:13.505 [debug] Block returned: %{variant: :null}
07:20:13.505 [debug] Fun returned result: %{variant: :null}
07:20:13.505 [debug] Processing constructed value: %{variant: :null}
07:20:13.505 [debug] do_bend final result: %{variant: :null}
07:20:13.505 [debug] do_bend final result: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.505 [debug] do_bend final result: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.505 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.505 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.505 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.505 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.505 [debug] do_fold called with data: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.505 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.505 [debug] do_fold called with data: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.505 [debug] Processing recursive fields of: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.505 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.505 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.505 [debug] Recursive field result for tail: %{variant: :null}
07:20:13.514 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: "c", tail: %{variant: :null}, variant: :cons}
07:20:13.514 [debug] Recursive field result for tail: %{head: "C", tail: %{variant: :null}, variant: :cons}
07:20:13.514 [debug] do_fold called with non-function: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "b", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.514 [debug] Recursive field result for tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.515 [debug] do_fold called with non-function: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "a", tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.515 [debug] do_fold called with data: %{head: "A", tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.515 [debug] Processing recursive fields of: %{head: "A", tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.515 [debug] do_fold called with data: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.515 [debug] Processing recursive fields of: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.515 [debug] do_fold called with data: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.515 [debug] Processing recursive fields of: %{head: "C", tail: %{variant: :null}, variant: :cons}
07:20:13.515 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.515 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.515 [debug] Recursive field result for tail: []
07:20:13.515 [debug] do_fold called with non-variant data: []
07:20:13.515 [debug] Recursive field result for tail: ["C"]
07:20:13.515 [debug] do_fold called with non-variant data: ["C"]
07:20:13.515 [debug] Recursive field result for tail: ["B", "C"]
07:20:13.515 [debug] do_fold called with non-variant data: ["B", "C"]
.07:20:13.515 [debug] Bend initial value: []
07:20:13.515 [debug] Executing bend with initial: []
07:20:13.515 [debug] Executing fun with value: []
07:20:13.515 [debug] Evaluating bend block with value: []
07:20:13.515 [debug] Block returned: %{variant: :null}
07:20:13.515 [debug] Fun returned result: %{variant: :null}
07:20:13.515 [debug] Processing constructed value: %{variant: :null}
07:20:13.515 [debug] do_bend final result: %{variant: :null}
07:20:13.515 [debug] Final bend result: %{variant: :null}
07:20:13.515 [debug] Bend initial value: {%{variant: :null}, 3}
07:20:13.515 [debug] Executing bend with initial: {%{variant: :null}, 3}
07:20:13.515 [debug] Executing fun with value: {%{variant: :null}, 3}
07:20:13.515 [debug] Evaluating bend block with value: {%{variant: :null}, 3}
07:20:13.515 [debug] Block returned: %{variant: :null}
07:20:13.515 [debug] Fun returned result: %{variant: :null}
07:20:13.515 [debug] Processing constructed value: %{variant: :null}
07:20:13.515 [debug] do_bend final result: %{variant: :null}
07:20:13.515 [debug] Final bend result: %{variant: :null}
07:20:13.515 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.515 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.515 [debug] Bend initial value: []
07:20:13.515 [debug] Executing bend with initial: []
07:20:13.515 [debug] Executing fun with value: []
07:20:13.515 [debug] Evaluating bend block with value: []
07:20:13.515 [debug] Block returned: %{variant: :null}
07:20:13.515 [debug] Fun returned result: %{variant: :null}
07:20:13.515 [debug] Processing constructed value: %{variant: :null}
07:20:13.515 [debug] do_bend final result: %{variant: :null}
07:20:13.515 [debug] Final bend result: %{variant: :null}
07:20:13.515 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.515 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.515 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.515 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.515 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.515 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.515 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.515 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.516 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.516 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.516 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.516 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.516 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.516 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.516 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.516 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.516 [debug] Executing fun with value: [3, 4, 5]
07:20:13.516 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.516 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.516 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.516 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.516 [debug] Executing bend with initial: [4, 5]
07:20:13.516 [debug] Executing fun with value: [4, 5]
07:20:13.516 [debug] Evaluating bend block with value: [4, 5]
07:20:13.516 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.516 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.516 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.516 [debug] Executing bend with initial: [5]
07:20:13.516 [debug] Executing fun with value: [5]
07:20:13.516 [debug] Evaluating bend block with value: [5]
07:20:13.516 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.516 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.516 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.516 [debug] Executing bend with initial: []
07:20:13.516 [debug] Executing fun with value: []
07:20:13.516 [debug] Evaluating bend block with value: []
07:20:13.516 [debug] Block returned: %{variant: :null}
07:20:13.516 [debug] Fun returned result: %{variant: :null}
07:20:13.516 [debug] Processing constructed value: %{variant: :null}
07:20:13.516 [debug] do_bend final result: %{variant: :null}
07:20:13.516 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.516 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.516 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.516 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.516 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.516 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.516 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.516 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.516 [debug] Bend initial value: []
07:20:13.516 [debug] Executing bend with initial: []
07:20:13.516 [debug] Executing fun with value: []
07:20:13.516 [debug] Evaluating bend block with value: []
07:20:13.516 [debug] Block returned: %{variant: :null}
07:20:13.516 [debug] Fun returned result: %{variant: :null}
07:20:13.516 [debug] Processing constructed value: %{variant: :null}
07:20:13.516 [debug] do_bend final result: %{variant: :null}
07:20:13.516 [debug] Final bend result: %{variant: :null}
07:20:13.516 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.516 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.516 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.516 [debug] Processing recursive fields of: %{variant: :null}
.07:20:13.516 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.516 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.516 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.516 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.516 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.516 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.517 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.517 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.517 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.517 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.517 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.517 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.517 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.517 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.517 [debug] Executing fun with value: [3, 4, 5]
07:20:13.517 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.517 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.517 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.517 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.517 [debug] Executing bend with initial: [4, 5]
07:20:13.517 [debug] Executing fun with value: [4, 5]
07:20:13.517 [debug] Evaluating bend block with value: [4, 5]
07:20:13.517 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.517 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.517 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.517 [debug] Executing bend with initial: [5]
07:20:13.517 [debug] Executing fun with value: [5]
07:20:13.517 [debug] Evaluating bend block with value: [5]
07:20:13.517 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.517 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.517 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.517 [debug] Executing bend with initial: []
07:20:13.517 [debug] Executing fun with value: []
07:20:13.517 [debug] Evaluating bend block with value: []
07:20:13.517 [debug] Block returned: %{variant: :null}
07:20:13.517 [debug] Fun returned result: %{variant: :null}
07:20:13.517 [debug] Processing constructed value: %{variant: :null}
07:20:13.517 [debug] do_bend final result: %{variant: :null}
07:20:13.517 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.517 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.517 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.517 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.517 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.517 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.517 [debug] do_fold called with data: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.517 [debug] Processing recursive fields of: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.517 [debug] do_fold called with data: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.517 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.517 [debug] do_fold called with data: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.518 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] do_fold called with data: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.518 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] do_fold called with data: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.518 [debug] Processing recursive fields of: %{head: 1, tail: %{variant: :null}, variant: :cons}
07:20:13.518 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.518 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.518 [debug] Recursive field result for tail: []
07:20:13.518 [debug] do_fold called with non-variant data: []
07:20:13.518 [debug] Recursive field result for tail: [1]
07:20:13.518 [debug] do_fold called with non-variant data: [1]
07:20:13.518 [debug] Recursive field result for tail: [2, 1]
07:20:13.518 [debug] do_fold called with non-variant data: [2, 1]
07:20:13.518 [debug] Recursive field result for tail: [3, 2, 1]
07:20:13.518 [debug] do_fold called with non-variant data: [3, 2, 1]
07:20:13.518 [debug] Recursive field result for tail: [4, 3, 2, 1]
07:20:13.518 [debug] do_fold called with non-variant data: [4, 3, 2, 1]
.07:20:13.518 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.518 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.518 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.518 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.518 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.518 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.518 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.518 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.518 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.518 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.518 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.518 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.518 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.518 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.518 [debug] Executing fun with value: [3, 4, 5]
07:20:13.518 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.518 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.518 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.518 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.518 [debug] Executing bend with initial: [4, 5]
07:20:13.518 [debug] Executing fun with value: [4, 5]
07:20:13.518 [debug] Evaluating bend block with value: [4, 5]
07:20:13.518 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.518 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.518 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.518 [debug] Executing bend with initial: [5]
07:20:13.518 [debug] Executing fun with value: [5]
07:20:13.518 [debug] Evaluating bend block with value: [5]
07:20:13.518 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.518 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.518 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.518 [debug] Executing bend with initial: []
07:20:13.518 [debug] Executing fun with value: []
07:20:13.518 [debug] Evaluating bend block with value: []
07:20:13.518 [debug] Block returned: %{variant: :null}
07:20:13.518 [debug] Fun returned result: %{variant: :null}
07:20:13.518 [debug] Processing constructed value: %{variant: :null}
07:20:13.518 [debug] do_bend final result: %{variant: :null}
07:20:13.518 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.518 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.518 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.518 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.519 [debug] Recursive field result for tail: %{variant: :null}
07:20:13.519 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.519 [debug] Recursive field result for tail: %{head: 10, tail: %{variant: :null}, variant: :cons}
07:20:13.519 [debug] do_fold called with non-function: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 4, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] Recursive field result for tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with non-function: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] Recursive field result for tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with non-function: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 2, tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{head: 10, tail: %{variant: :null}, variant: :cons}
07:20:13.519 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.519 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.519 [debug] Recursive field result for tail: []
07:20:13.519 [debug] do_fold called with non-variant data: []
07:20:13.519 [debug] Recursive field result for tail: '\n'
07:20:13.519 [debug] do_fold called with non-variant data: '\n'
07:20:13.519 [debug] Recursive field result for tail: '\b\n'
07:20:13.519 [debug] do_fold called with non-variant data: '\b\n'
07:20:13.519 [debug] Recursive field result for tail: [6, 8, 10]
07:20:13.519 [debug] do_fold called with non-variant data: [6, 8, 10]
07:20:13.519 [debug] Recursive field result for tail: [4, 6, 8, 10]
07:20:13.519 [debug] do_fold called with non-variant data: [4, 6, 8, 10]
.07:20:13.519 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.519 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.519 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.519 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.519 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.519 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.519 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.519 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.519 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.520 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.520 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.520 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.520 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.520 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.520 [debug] Executing fun with value: [3, 4, 5]
07:20:13.520 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.520 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.520 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.520 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.520 [debug] Executing bend with initial: [4, 5]
07:20:13.520 [debug] Executing fun with value: [4, 5]
07:20:13.520 [debug] Evaluating bend block with value: [4, 5]
07:20:13.520 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.520 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.520 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.520 [debug] Executing bend with initial: [5]
07:20:13.520 [debug] Executing fun with value: [5]
07:20:13.520 [debug] Evaluating bend block with value: [5]
07:20:13.520 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.520 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.520 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.520 [debug] Executing bend with initial: []
07:20:13.520 [debug] Executing fun with value: []
07:20:13.520 [debug] Evaluating bend block with value: []
07:20:13.520 [debug] Block returned: %{variant: :null}
07:20:13.520 [debug] Fun returned result: %{variant: :null}
07:20:13.520 [debug] Processing constructed value: %{variant: :null}
07:20:13.520 [debug] do_bend final result: %{variant: :null}
07:20:13.520 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.520 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.520 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.520 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.520 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.520 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.520 [debug] Bend initial value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
07:20:13.520 [debug] Executing bend with initial: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
07:20:13.520 [debug] Executing fun with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
07:20:13.520 [debug] Evaluating bend block with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
07:20:13.520 [debug] Block returned: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}}, variant: :cons}
07:20:13.520 [debug] Fun returned result: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}}, variant: :cons}
07:20:13.520 [debug] Processing constructed value: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}}, variant: :cons}
07:20:13.520 [debug] Executing bend with initial: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}
07:20:13.520 [debug] Executing fun with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}
07:20:13.520 [debug] Evaluating bend block with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}
07:20:13.520 [debug] Block returned: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}}, variant: :cons}
07:20:13.520 [debug] Fun returned result: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}}, variant: :cons}
07:20:13.521 [debug] Processing constructed value: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}}, variant: :cons}
07:20:13.521 [debug] Executing bend with initial: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}
07:20:13.521 [debug] Executing fun with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}
07:20:13.521 [debug] Evaluating bend block with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}
07:20:13.521 [debug] Block returned: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}}, variant: :cons}
07:20:13.521 [debug] Fun returned result: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}}, variant: :cons}
07:20:13.521 [debug] Processing constructed value: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}}, variant: :cons}
07:20:13.521 [debug] Executing bend with initial: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}
07:20:13.521 [debug] Executing fun with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}
07:20:13.521 [debug] Evaluating bend block with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}
07:20:13.521 [debug] Block returned: %{variant: :null}
07:20:13.521 [debug] Fun returned result: %{variant: :null}
07:20:13.521 [debug] Processing constructed value: %{variant: :null}
07:20:13.521 [debug] do_bend final result: %{variant: :null}
07:20:13.521 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.521 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.521 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.521 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.521 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.521 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.521 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.521 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.521 [debug] do_fold called with data: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.521 [debug] Processing recursive fields of: %{head: 3, tail: %{variant: :null}, variant: :cons}
07:20:13.521 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.521 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.521 [debug] Recursive field result for tail: []
07:20:13.521 [debug] do_fold called with non-variant data: []
07:20:13.521 [debug] Recursive field result for tail: [3]
07:20:13.521 [debug] do_fold called with non-variant data: [3]
07:20:13.521 [debug] Recursive field result for tail: [2, 3]
07:20:13.521 [debug] do_fold called with non-variant data: [2, 3]
.07:20:13.521 [debug] Bend initial value: [1, 2, 3, 4, 5]
07:20:13.521 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
07:20:13.521 [debug] Executing fun with value: [1, 2, 3, 4, 5]
07:20:13.521 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
07:20:13.521 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.521 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.521 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
07:20:13.521 [debug] Executing bend with initial: [2, 3, 4, 5]
07:20:13.521 [debug] Executing fun with value: [2, 3, 4, 5]
07:20:13.521 [debug] Evaluating bend block with value: [2, 3, 4, 5]
07:20:13.521 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.521 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.521 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
07:20:13.521 [debug] Executing bend with initial: [3, 4, 5]
07:20:13.521 [debug] Executing fun with value: [3, 4, 5]
07:20:13.521 [debug] Evaluating bend block with value: [3, 4, 5]
07:20:13.521 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.521 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.521 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
07:20:13.521 [debug] Executing bend with initial: [4, 5]
07:20:13.521 [debug] Executing fun with value: [4, 5]
07:20:13.521 [debug] Evaluating bend block with value: [4, 5]
07:20:13.521 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.521 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.521 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
07:20:13.521 [debug] Executing bend with initial: [5]
07:20:13.521 [debug] Executing fun with value: [5]
07:20:13.521 [debug] Evaluating bend block with value: [5]
07:20:13.522 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.522 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.522 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
07:20:13.522 [debug] Executing bend with initial: []
07:20:13.522 [debug] Executing fun with value: []
07:20:13.522 [debug] Evaluating bend block with value: []
07:20:13.522 [debug] Block returned: %{variant: :null}
07:20:13.522 [debug] Fun returned result: %{variant: :null}
07:20:13.522 [debug] Processing constructed value: %{variant: :null}
07:20:13.522 [debug] do_bend final result: %{variant: :null}
07:20:13.522 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.522 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.522 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.522 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.522 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.522 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.522 [debug] Bend initial value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
07:20:13.522 [debug] Executing bend with initial: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
07:20:13.522 [debug] Executing fun with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
07:20:13.522 [debug] Evaluating bend block with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
07:20:13.522 [debug] Block returned: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}}, variant: :cons}
07:20:13.522 [debug] Fun returned result: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}}, variant: :cons}
07:20:13.522 [debug] Processing constructed value: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}}, variant: :cons}
07:20:13.522 [debug] Executing bend with initial: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}
07:20:13.522 [debug] Executing fun with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}
07:20:13.522 [debug] Evaluating bend block with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}
07:20:13.522 [debug] Block returned: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}}, variant: :cons}
07:20:13.522 [debug] Fun returned result: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}}, variant: :cons}
07:20:13.522 [debug] Processing constructed value: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}}, variant: :cons}
07:20:13.522 [debug] Executing bend with initial: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}
07:20:13.522 [debug] Executing fun with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}
07:20:13.522 [debug] Evaluating bend block with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}
07:20:13.522 [debug] Block returned: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}}, variant: :cons}
07:20:13.522 [debug] Fun returned result: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}}, variant: :cons}
07:20:13.523 [debug] Processing constructed value: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}}, variant: :cons}
07:20:13.523 [debug] Executing bend with initial: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}
07:20:13.523 [debug] Executing fun with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}
07:20:13.523 [debug] Evaluating bend block with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}
07:20:13.523 [debug] Block returned: %{head: 4, tail: {:fork, {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}}, variant: :cons}
07:20:13.523 [debug] Fun returned result: %{head: 4, tail: {:fork, {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}}, variant: :cons}
07:20:13.523 [debug] Processing constructed value: %{head: 4, tail: {:fork, {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}}, variant: :cons}
07:20:13.523 [debug] Executing bend with initial: {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}
07:20:13.523 [debug] Executing fun with value: {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}
07:20:13.523 [debug] Evaluating bend block with value: {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}
07:20:13.523 [debug] Block returned: %{head: 5, tail: {:fork, {%{variant: :null}, 5}}, variant: :cons}
07:20:13.523 [debug] Fun returned result: %{head: 5, tail: {:fork, {%{variant: :null}, 5}}, variant: :cons}
07:20:13.523 [debug] Processing constructed value: %{head: 5, tail: {:fork, {%{variant: :null}, 5}}, variant: :cons}
07:20:13.523 [debug] Executing bend with initial: {%{variant: :null}, 5}
07:20:13.523 [debug] Executing fun with value: {%{variant: :null}, 5}
07:20:13.523 [debug] Evaluating bend block with value: {%{variant: :null}, 5}
07:20:13.523 [debug] Block returned: %{variant: :null}
07:20:13.523 [debug] Fun returned result: %{variant: :null}
07:20:13.523 [debug] Processing constructed value: %{variant: :null}
07:20:13.523 [debug] do_bend final result: %{variant: :null}
07:20:13.523 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.523 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.523 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.523 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.523 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.523 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
07:20:13.523 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
07:20:13.523 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
07:20:13.523 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.523 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.523 [debug] Recursive field result for tail: []
07:20:13.523 [debug] do_fold called with non-variant data: []
07:20:13.524 [debug] Recursive field result for tail: [5]
07:20:13.524 [debug] do_fold called with non-variant data: [5]
07:20:13.524 [debug] Recursive field result for tail: [4, 5]
07:20:13.524 [debug] do_fold called with non-variant data: [4, 5]
07:20:13.524 [debug] Recursive field result for tail: [3, 4, 5]
07:20:13.524 [debug] do_fold called with non-variant data: [3, 4, 5]
07:20:13.524 [debug] Recursive field result for tail: [2, 3, 4, 5]
07:20:13.524 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
.07:20:13.524 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.524 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.524 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.524 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.524 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.524 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.524 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.524 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.524 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.524 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.524 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant_type: :graph, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.524 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.524 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.524 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.524 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.524 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.524 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant_type: :graph, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.525 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant_type: :graph, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.525 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.525 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] Recursive field result for edges: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] do_fold called with data: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] do_fold called with data: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] do_fold called with data: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.525 [debug] Processing recursive fields of: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.525 [debug] do_fold called with data: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}], variant: :graph, vertices: MapSet.new([:a, :b, :c])}
.07:20:13.526 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.526 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.526 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.526 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.526 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant_type: :graph, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.526 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.526 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}
07:20:13.526 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}
07:20:13.527 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}
07:20:13.527 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}
07:20:13.527 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.527 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}
07:20:13.527 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}
07:20:13.527 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}
07:20:13.527 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}
07:20:13.527 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}
07:20:13.527 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant_type: :graph, state: nil
07:20:13.527 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}
07:20:13.527 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.528 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.528 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] Recursive field result for edges: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] do_fold called with data: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.528 [debug] Processing recursive fields of: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] do_fold called with data: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.528 [debug] Processing recursive fields of: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] do_fold called with data: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.528 [debug] Processing recursive fields of: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.528 [debug] do_fold called with data: %{edges: [%{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.529 [debug] Processing recursive fields of: %{edges: [%{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.529 [debug] do_fold called with data: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.529 [debug] Processing recursive fields of: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.529 [debug] do_fold called with data: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.529 [debug] Processing recursive fields of: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.529 [debug] do_fold called with data: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.529 [debug] Processing recursive fields of: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.529 [debug] do_fold called with data: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.529 [debug] Processing recursive fields of: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
07:20:13.529 [debug] do_fold called with data: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: [%{from: :e, to: :d, variant: :edge}, %{from: :b, to: :e, variant: :edge}, %{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:e])}, variant: :graph, vertices: MapSet.new([:d, :e])}, variant: :graph, vertices: MapSet.new([:c, :d, :e])}, variant: :graph, vertices: MapSet.new([:b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d, :e])}
.07:20:13.530 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.530 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.530 [debug] Recursive field result for edges: false
.07:20:13.530 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.530 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.530 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.530 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.530 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.530 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.530 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.530 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.530 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.530 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.530 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant_type: :graph, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.530 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.530 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.530 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.530 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.530 [debug] Recursive field result for edges: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.531 [debug] do_fold called with data: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.531 [debug] do_fold called with data: %{edges: [%{from: :a, to: :b, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: [%{from: :a, to: :b, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}], variant: :graph, vertices: MapSet.new([:a, :b])}
.07:20:13.531 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.531 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.531 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.531 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.531 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
.07:20:13.531 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.531 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.531 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.531 [debug] Recursive field result for edges: []
07:20:13.531 [debug] Recursive field result for edges: []
07:20:13.532 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.532 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.532 [debug] Recursive field result for edges: []
.07:20:13.532 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.532 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.532 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.532 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.532 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.532 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.532 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.532 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.532 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.532 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.532 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.532 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant_type: :graph, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.533 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant_type: :graph, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.533 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.533 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.533 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.533 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}
07:20:13.533 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant_type: :graph, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}
07:20:13.533 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant_type: :graph, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}
07:20:13.533 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.533 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.533 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.533 [debug] Recursive field result for edges: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.534 [debug] do_fold called with data: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.534 [debug] Processing recursive fields of: %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.534 [debug] do_fold called with data: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.534 [debug] Processing recursive fields of: %{edges: [%{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.534 [debug] do_fold called with data: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.534 [debug] Processing recursive fields of: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.534 [debug] do_fold called with data: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.534 [debug] Processing recursive fields of: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.534 [debug] do_fold called with data: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.534 [debug] Processing recursive fields of: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
07:20:13.534 [debug] do_fold called with data: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant_type: :graph, state: nil
07:20:13.534 [debug] Processing recursive fields of: %{edges: [%{from: :c, to: :d, variant: :edge}, %{from: :b, to: :c, variant: :edge}, %{from: :a, to: :b, variant: :edge}, %{edges: [%{from: :a, to: :b, variant: :edge}, %{edges: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:d])}, variant: :graph, vertices: MapSet.new([:c, :d])}, variant: :graph, vertices: MapSet.new([:b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}, variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}], variant: :graph, vertices: MapSet.new([:a, :b, :c, :d])}
.07:20:13.535 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.535 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.535 [debug] Recursive field result for edges: []
.07:20:13.535 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([])}
07:20:13.535 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.535 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.535 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.535 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:a])}
07:20:13.535 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.535 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.535 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.535 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.535 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant: :graph, vertices: MapSet.new([:a, :b])}
07:20:13.535 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:b])}
07:20:13.535 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.535 [debug] Recursive field result for edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.535 [debug] Recursive field result for edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.535 [debug] Recursive field result for edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.535 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.535 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.536 [debug] do_fold called with data: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}, variant_type: :graph, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{edges: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant: :graph, vertices: MapSet.new([:a, :b, :c])}
07:20:13.536 [debug] do_fold called with data: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}, variant_type: :graph, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{edges: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant: :graph, vertices: MapSet.new([:b, :c])}
07:20:13.536 [debug] do_fold called with data: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}, variant_type: :graph, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{edges: %{variant: :empty}, variant: :graph, vertices: MapSet.new([:c])}
07:20:13.536 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.536 [debug] Recursive field result for edges: []
07:20:13.536 [debug] Recursive field result for edges: [:c]
07:20:13.536 [debug] Recursive field result for edges: [:b, :c]
07:20:13.536 [debug] Recursive field result for edges: [:a, :b, :c]
.07:20:13.536 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.536 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.536 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
07:20:13.536 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.536 [debug] Recursive field result for proto: nil
07:20:13.536 [debug] Recursive field result for proto: 1
07:20:13.536 [debug] do_fold called with non-variant data: 1
07:20:13.536 [debug] Recursive field result for proto: 1
07:20:13.536 [debug] do_fold called with non-variant data: 1
07:20:13.536 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.536 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.536 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.536 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with non-variant data: nil
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] Recursive field result for proto: 2
07:20:13.537 [debug] do_fold called with non-variant data: 2
07:20:13.537 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with non-variant data: nil
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with non-variant data: nil
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with data: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{c: 3}, proto: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{b: 2}, proto: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{a: 1}, proto: %{variant: :null}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with non-variant data: nil
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with non-variant data: nil
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with non-variant data: nil
.07:20:13.537 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.537 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.537 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.537 [debug] do_fold called with non-variant data: nil
07:20:13.537 [debug] Recursive field result for proto: nil
07:20:13.538 [debug] do_fold called with non-variant data: nil
07:20:13.538 [debug] Recursive field result for proto: nil
07:20:13.538 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.538 [debug] Recursive field result for proto: nil
07:20:13.538 [debug] Recursive field result for proto: "human"
07:20:13.538 [debug] do_fold called with non-variant data: "human"
07:20:13.538 [debug] Recursive field result for proto: "human"
07:20:13.538 [debug] do_fold called with non-variant data: "human"
07:20:13.538 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.538 [debug] Recursive field result for proto: nil
07:20:13.538 [debug] do_fold called with non-variant data: nil
07:20:13.538 [debug] Recursive field result for proto: nil
07:20:13.538 [debug] Recursive field result for proto: "employee"
07:20:13.538 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.538 [debug] Recursive field result for proto: nil
07:20:13.538 [debug] Recursive field result for proto: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>
07:20:13.538 [debug] do_fold called with non-variant data: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>
07:20:13.538 [debug] Recursive field result for proto: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>
07:20:13.538 [debug] do_fold called with non-variant data: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>
07:20:13.538 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.538 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.538 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] Recursive field result for proto: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>
07:20:13.539 [debug] do_fold called with non-variant data: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>
07:20:13.539 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer", skill: "Elixir"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer", skill: "Elixir"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
07:20:13.539 [debug] do_fold called with data: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{name: "John", role: "Developer"}, proto: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{role: "employee", work: #Function<0.35472650/0 in Prototypal.create_employee_prototype/1>}, proto: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}, variant_type: :object, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{props: %{greet: #Function<1.35472650/1 in Prototypal.create_person_prototype/0>, species: "human"}, proto: %{variant: :null}, variant: :object}
07:20:13.539 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
07:20:13.539 [debug] Processing recursive fields of: %{variant: :null}
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
07:20:13.539 [debug] Recursive field result for proto: nil
07:20:13.539 [debug] do_fold called with non-variant data: nil
.07:20:13.540 [debug] Building create_spaceship query for name: "Millennium Falcon"
07:20:13.540 [info] Returning query with: :return
07:20:13.540 [debug] Building create_spaceship query for name: "Millennium Falcon"
07:20:13.540 [info] Returning query with: :return
07:20:13.540 [debug] EXECUT QUERY
07:20:13.540 [debug] EXECUTING the query %BridgeImo.MechaCyph.QueryBuilder{node: nil, where: nil, statement: nil}
07:20:13.540 [debug] Executing query with pattern: %BridgeImo.MechaCyph.QueryBuilder{node: nil, where: nil, statement: nil}
07:20:13.540 [debug] Current state: %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{Spaceship: %{properties: [name: [type: :string, required: true], class: [type: :string, required: false], crew_capacity: [type: :integer, required: false]], required: [:name]}}, transaction_counter: 0}
07:20:13.540 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.540 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.540 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.540 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.540 [debug] Empty graph, returning empty results
07:20:13.540 [debug] Recursive field result for edge_list: []
07:20:13.540 [debug] Processing graph with:
07:20:13.540 [debug]   vertex_map: %{}
07:20:13.540 [debug]   edge_list: []
07:20:13.540 [debug] Extracting edges from: []
07:20:13.540 [debug] Processing list of edges
07:20:13.540 [debug] Extracted edges result: []
07:20:13.540 [debug] Extracted edges: []
07:20:13.540 [debug] Executing query with pattern: %BridgeImo.MechaCyph.QueryBuilder{node: nil, where: nil, statement: nil}
07:20:13.540 [warning] Unsupported query pattern: %BridgeImo.MechaCyph.QueryBuilder{node: nil, where: nil, statement: nil}
07:20:13.540 [debug] Query results: []
07:20:13.540 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.540 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.540 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.540 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.540 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.540 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.541 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.541 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.541 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.541 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.541 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.541 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.541 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.541 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.541 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.541 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.541 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.541 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.541 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.541 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.541 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.541 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.541 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.541 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.541 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.542 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.542 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.542 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.542 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.542 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.542 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.542 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.542 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.542 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.542 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.542 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.542 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.542 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.543 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.543 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.543 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.543 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 3}}}
07:20:13.543 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.543 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.543 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.544 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.544 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
07:20:13.544 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.544 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
07:20:13.544 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.544 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}}}
07:20:13.544 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.544 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.544 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
07:20:13.544 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
07:20:13.544 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.544 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
07:20:13.544 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.545 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
07:20:13.545 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.545 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}}}
07:20:13.545 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.545 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.545 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.545 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.545 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}


  3) test SpaceshipQueries creates and retrieves spaceships (SpaceshipQueriesTest)
     test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:30
     ** (MatchError) no match of right hand side value: {[], %Graffiti.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{Spaceship: %{properties: [name: [type: :string, required: true], class: [type: :string, required: false], crew_capacity: [type: :integer, required: false]], required: [:name]}}, transaction_counter: 0}}
     code: Enum.reduce(ships, state, fn name, acc_state ->
     stacktrace:
       (bendscript 0.1.0) lib/abc_law/mecha_cyph.ex:158: MechaCyph.execute_query/2
       test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:45: anonymous fn/3 in SpaceshipQueriesTest."test SpaceshipQueries creates and retrieves spaceships"/1
       (elixir 1.14.0) lib/enum.ex:2468: Enum."-reduce/3-lists^foldl/2-0-"/3
       test/bridge_imo/mecha_cyph/spaceship_queries_test.exs:35: (test)

.07:20:13.545 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.545 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.545 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.545 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.546 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.546 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.546 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.546 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.546 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.546 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.546 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.546 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.546 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.546 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.547 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.547 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.547 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.547 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
07:20:13.548 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}, variant_type: :graph, state: nil
07:20:13.548 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 3, source_id: 2, target_id: 3, variant: :edge}, %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{type: "road"}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{name: "A"}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{name: "B"}, variant: :vertex, vertex_id: 2}, 3 => %{adjacency: %{variant: :empty}, properties: %{name: "C"}, variant: :vertex, vertex_id: 3}}}
.07:20:13.548 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.548 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.548 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.548 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.548 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.548 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.548 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.548 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.548 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.548 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.548 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.548 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.548 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.549 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.549 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.549 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.549 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.549 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.549 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.549 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.549 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 1, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.549 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.549 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.549 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.549 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.549 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.549 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.549 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.549 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.550 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.550 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.550 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.550 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.550 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.550 [debug] Recursive field result for edge_list: true
07:20:13.550 [debug] Recursive field result for edge_list: true
07:20:13.550 [debug] Recursive field result for edge_list: false
.07:20:13.550 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, variant_type: :graph, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.550 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.550 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.550 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.550 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}, variant_type: :graph, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}}}
07:20:13.550 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.550 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.550 [debug] Recursive field result for edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.550 [debug] Recursive field result for edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.550 [debug] do_fold called with data: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.551 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.551 [debug] do_fold called with data: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.551 [debug] Processing recursive fields of: %{edge_list: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.551 [debug] do_fold called with data: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.551 [debug] Processing recursive fields of: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.551 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil
07:20:13.551 [debug] Processing recursive fields of: %{variant: :empty}
07:20:13.551 [debug] Recursive field result for edge_list: %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}
07:20:13.551 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.551 [debug] Recursive field result for edge_list: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
07:20:13.551 [debug] do_fold called with data: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}, variant_type: :graph, state: nil
07:20:13.551 [debug] Processing recursive fields of: %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: [%{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, %{edge_list: %{edge_props: %{}, edge_weight: 5, source_id: 1, target_id: 2, variant: :edge}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}], metadata: %{type: :directed}, variant: :graph, vertex_map: %{1 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 1}, 2 => %{adjacency: %{variant: :empty}, properties: %{}, variant: :vertex, vertex_id: 2}}}
.
Finished in 5.2 seconds (5.0s async, 0.1s sync)
96 tests, 3 failures, 3 excluded

Randomized with seed 277202

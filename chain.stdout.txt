Excluding tags: [:skip]

09:40:17.871 [debug] Bend initial value: ["a", "b", "aa", "bb", "aaa"]
09:40:17.875 [debug] Executing bend with initial: ["a", "b", "aa", "bb", "aaa"]
09:40:17.875 [debug] Executing fun with value: ["a", "b", "aa", "bb", "aaa"]
09:40:17.875 [debug] Evaluating bend block with value: ["a", "b", "aa", "bb", "aaa"]
09:40:17.877 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "aa", "bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "aa", "bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "aa", "bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Executing bend with initial: ["b", "aa", "bb", "aaa"]
09:40:17.878 [debug] Executing fun with value: ["b", "aa", "bb", "aaa"]
09:40:17.878 [debug] Evaluating bend block with value: ["b", "aa", "bb", "aaa"]
09:40:17.878 [debug] Block returned: %{head: "b", tail: {:fork, ["aa", "bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Fun returned result: %{head: "b", tail: {:fork, ["aa", "bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["aa", "bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Executing bend with initial: ["aa", "bb", "aaa"]
09:40:17.878 [debug] Executing fun with value: ["aa", "bb", "aaa"]
09:40:17.878 [debug] Evaluating bend block with value: ["aa", "bb", "aaa"]
09:40:17.878 [debug] Block returned: %{head: "aa", tail: {:fork, ["bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Fun returned result: %{head: "aa", tail: {:fork, ["bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Processing constructed value: %{head: "aa", tail: {:fork, ["bb", "aaa"]}, variant: :cons}
09:40:17.878 [debug] Executing bend with initial: ["bb", "aaa"]
09:40:17.878 [debug] Executing fun with value: ["bb", "aaa"]
09:40:17.878 [debug] Evaluating bend block with value: ["bb", "aaa"]
09:40:17.878 [debug] Block returned: %{head: "bb", tail: {:fork, ["aaa"]}, variant: :cons}
09:40:17.878 [debug] Fun returned result: %{head: "bb", tail: {:fork, ["aaa"]}, variant: :cons}
09:40:17.878 [debug] Processing constructed value: %{head: "bb", tail: {:fork, ["aaa"]}, variant: :cons}
09:40:17.878 [debug] Executing bend with initial: ["aaa"]
09:40:17.878 [debug] Executing fun with value: ["aaa"]
09:40:17.878 [debug] Evaluating bend block with value: ["aaa"]
09:40:17.878 [debug] Block returned: %{head: "aaa", tail: {:fork, []}, variant: :cons}
09:40:17.878 [debug] Fun returned result: %{head: "aaa", tail: {:fork, []}, variant: :cons}
09:40:17.878 [debug] Processing constructed value: %{head: "aaa", tail: {:fork, []}, variant: :cons}
09:40:17.878 [debug] Executing bend with initial: []
09:40:17.878 [debug] Executing fun with value: []
09:40:17.878 [debug] Evaluating bend block with value: []
09:40:17.878 [debug] Block returned: %{variant: :null}
09:40:17.878 [debug] Fun returned result: %{variant: :null}
09:40:17.878 [debug] Processing constructed value: %{variant: :null}
09:40:17.878 [debug] do_bend final result: %{variant: :null}
09:40:17.878 [debug] do_bend final result: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
09:40:17.878 [debug] do_bend final result: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.878 [debug] do_bend final result: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.878 [debug] do_bend final result: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.878 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.878 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.878 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.878 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.878 [debug] do_fold called with data: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.878 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.878 [debug] do_fold called with data: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with data: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with data: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
09:40:17.879 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.879 [debug] Recursive field result for tail: %{variant: :null}
09:40:17.879 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
09:40:17.879 [debug] Recursive field result for tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
09:40:17.879 [debug] do_fold called with non-function: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] Recursive field result for tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with non-function: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] Recursive field result for tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with non-function: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "b", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] Recursive field result for tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with non-function: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "a", tail: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with data: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{head: "aa", tail: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with data: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{head: "bb", tail: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.879 [debug] do_fold called with data: %{head: "aaa", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{head: "aaa", tail: %{variant: :null}, variant: :cons}
09:40:17.879 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.879 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.879 [debug] Recursive field result for tail: []
09:40:17.879 [debug] do_fold called with non-variant data: []
09:40:17.879 [debug] Recursive field result for tail: ["aaa"]
09:40:17.879 [debug] do_fold called with non-variant data: ["aaa"]
09:40:17.879 [debug] Recursive field result for tail: ["bb", "aaa"]
09:40:17.879 [debug] do_fold called with non-variant data: ["bb", "aaa"]
.09:40:17.880 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.880 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.880 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.880 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.880 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.880 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.880 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.880 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.880 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.880 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.880 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.880 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.880 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.880 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.880 [debug] Executing fun with value: [3, 4, 5]
09:40:17.880 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.880 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.880 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.880 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.880 [debug] Executing bend with initial: [4, 5]
09:40:17.880 [debug] Executing fun with value: [4, 5]
09:40:17.880 [debug] Evaluating bend block with value: [4, 5]
09:40:17.880 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.880 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.880 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.880 [debug] Executing bend with initial: [5]
09:40:17.880 [debug] Executing fun with value: [5]
09:40:17.880 [debug] Evaluating bend block with value: [5]
09:40:17.881 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.881 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.881 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.881 [debug] Executing bend with initial: []
09:40:17.881 [debug] Executing fun with value: []
09:40:17.881 [debug] Evaluating bend block with value: []
09:40:17.881 [debug] Block returned: %{variant: :null}
09:40:17.881 [debug] Fun returned result: %{variant: :null}
09:40:17.881 [debug] Processing constructed value: %{variant: :null}
09:40:17.881 [debug] do_bend final result: %{variant: :null}
09:40:17.881 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.881 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.881 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.881 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.881 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.881 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.881 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.881 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.881 [debug] Bend initial value: []
09:40:17.881 [debug] Executing bend with initial: []
09:40:17.881 [debug] Executing fun with value: []
09:40:17.881 [debug] Evaluating bend block with value: []
09:40:17.881 [debug] Block returned: %{variant: :null}
09:40:17.881 [debug] Fun returned result: %{variant: :null}
09:40:17.881 [debug] Processing constructed value: %{variant: :null}
09:40:17.881 [debug] do_bend final result: %{variant: :null}
09:40:17.881 [debug] Final bend result: %{variant: :null}
09:40:17.881 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.881 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.881 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.881 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.881 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.881 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.881 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.881 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.881 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.881 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.881 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.881 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.881 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.881 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.881 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.881 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.881 [debug] Executing fun with value: [3, 4, 5]
09:40:17.881 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.881 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.881 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.881 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.881 [debug] Executing bend with initial: [4, 5]
09:40:17.881 [debug] Executing fun with value: [4, 5]
09:40:17.881 [debug] Evaluating bend block with value: [4, 5]
09:40:17.881 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.882 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.882 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.882 [debug] Executing bend with initial: [5]
09:40:17.882 [debug] Executing fun with value: [5]
09:40:17.882 [debug] Evaluating bend block with value: [5]
09:40:17.882 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.882 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.882 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.882 [debug] Executing bend with initial: []
09:40:17.882 [debug] Executing fun with value: []
09:40:17.882 [debug] Evaluating bend block with value: []
09:40:17.882 [debug] Block returned: %{variant: :null}
09:40:17.882 [debug] Fun returned result: %{variant: :null}
09:40:17.882 [debug] Processing constructed value: %{variant: :null}
09:40:17.882 [debug] do_bend final result: %{variant: :null}
09:40:17.882 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.882 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.882 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.882 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.882 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.882 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.882 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.882 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.882 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.882 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.882 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.882 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.882 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.882 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.882 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.882 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.882 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.882 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.882 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.882 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.882 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.882 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.882 [debug] Executing fun with value: [3, 4, 5]
09:40:17.882 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.882 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.882 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.882 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.882 [debug] Executing bend with initial: [4, 5]
09:40:17.882 [debug] Executing fun with value: [4, 5]
09:40:17.882 [debug] Evaluating bend block with value: [4, 5]
09:40:17.882 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.882 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.882 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.882 [debug] Executing bend with initial: [5]
09:40:17.882 [debug] Executing fun with value: [5]
09:40:17.882 [debug] Evaluating bend block with value: [5]
09:40:17.882 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.882 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.882 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.882 [debug] Executing bend with initial: []
09:40:17.883 [debug] Executing fun with value: []
09:40:17.883 [debug] Evaluating bend block with value: []
09:40:17.883 [debug] Block returned: %{variant: :null}
09:40:17.883 [debug] Fun returned result: %{variant: :null}
09:40:17.883 [debug] Processing constructed value: %{variant: :null}
09:40:17.883 [debug] do_bend final result: %{variant: :null}
09:40:17.883 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.883 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.883 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.883 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.883 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.883 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.883 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.883 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.883 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.883 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.883 [debug] Recursive field result for tail: 0
09:40:17.883 [debug] do_fold called with non-variant data: 0
09:40:17.883 [debug] Recursive field result for tail: 1
09:40:17.883 [debug] do_fold called with non-variant data: 1
09:40:17.883 [debug] Recursive field result for tail: 2
.09:40:17.883 [debug] do_fold called with non-variant data: 2
09:40:17.883 [debug] Recursive field result for tail: 3
09:40:17.883 [debug] do_fold called with non-variant data: 3
09:40:17.883 [debug] Recursive field result for tail: 4
09:40:17.883 [debug] do_fold called with non-variant data: 4
09:40:17.883 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.883 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.883 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.883 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.883 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.883 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.883 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.883 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.883 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.883 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.883 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.883 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.883 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.883 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.883 [debug] Executing fun with value: [3, 4, 5]
09:40:17.883 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.883 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.883 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.883 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.883 [debug] Executing bend with initial: [4, 5]
09:40:17.883 [debug] Executing fun with value: [4, 5]
09:40:17.883 [debug] Evaluating bend block with value: [4, 5]
09:40:17.883 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.883 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.883 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.883 [debug] Executing bend with initial: [5]
09:40:17.883 [debug] Executing fun with value: [5]
09:40:17.883 [debug] Evaluating bend block with value: [5]
09:40:17.884 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.884 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.884 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.884 [debug] Executing bend with initial: []
09:40:17.884 [debug] Executing fun with value: []
09:40:17.884 [debug] Evaluating bend block with value: []
09:40:17.884 [debug] Block returned: %{variant: :null}
09:40:17.884 [debug] Fun returned result: %{variant: :null}
09:40:17.884 [debug] Processing constructed value: %{variant: :null}
09:40:17.884 [debug] do_bend final result: %{variant: :null}
09:40:17.884 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.884 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] Bend initial value: []
09:40:17.884 [debug] Executing bend with initial: []
09:40:17.884 [debug] Executing fun with value: []
09:40:17.884 [debug] Evaluating bend block with value: []
09:40:17.884 [debug] Block returned: %{variant: :null}
09:40:17.884 [debug] Fun returned result: %{variant: :null}
09:40:17.884 [debug] Processing constructed value: %{variant: :null}
09:40:17.884 [debug] do_bend final result: %{variant: :null}
09:40:17.884 [debug] Final bend result: %{variant: :null}
09:40:17.884 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.884 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.884 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.884 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.884 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.884 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.884 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.884 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.884 [debug] Recursive field result for tail: %{variant: :null}
09:40:17.884 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.884 [debug] Recursive field result for tail: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.884 [debug] do_fold called with non-function: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] Recursive field result for tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with non-function: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] Recursive field result for tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with non-function: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.884 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.885 [debug] Recursive field result for tail: []
09:40:17.885 [debug] do_fold called with non-variant data: []
09:40:17.885 [debug] Recursive field result for tail: [5]
09:40:17.885 [debug] do_fold called with non-variant data: [5]
09:40:17.885 [debug] Recursive field result for tail: [4, 5]
09:40:17.885 [debug] do_fold called with non-variant data: [4, 5]
09:40:17.885 [debug] Recursive field result for tail: [3, 4, 5]
09:40:17.885 [debug] do_fold called with non-variant data: [3, 4, 5]
09:40:17.885 [debug] Recursive field result for tail: [2, 3, 4, 5]
09:40:17.885 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
09:40:17.885 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.885 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.885 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.885 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.885 [debug] Recursive field result for tail: []
09:40:17.885 [debug] do_fold called with non-variant data: []
09:40:17.885 [debug] Recursive field result for tail: [5]
09:40:17.885 [debug] do_fold called with non-variant data: [5]
09:40:17.885 [debug] Recursive field result for tail: [4, 5]
09:40:17.885 [debug] do_fold called with non-variant data: [4, 5]
09:40:17.885 [debug] Recursive field result for tail: [3, 4, 5]
09:40:17.885 [debug] do_fold called with non-variant data: [3, 4, 5]
09:40:17.885 [debug] Recursive field result for tail: [2, 3, 4, 5]
09:40:17.885 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
.09:40:17.885 [debug] Bend initial value: ["a", "b", "c"]
09:40:17.885 [debug] Executing bend with initial: ["a", "b", "c"]
09:40:17.885 [debug] Executing fun with value: ["a", "b", "c"]
09:40:17.885 [debug] Evaluating bend block with value: ["a", "b", "c"]
09:40:17.885 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.885 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.885 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.885 [debug] Executing bend with initial: ["b", "c"]
09:40:17.885 [debug] Executing fun with value: ["b", "c"]
09:40:17.885 [debug] Evaluating bend block with value: ["b", "c"]
09:40:17.885 [debug] Block returned: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.885 [debug] Fun returned result: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.885 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.885 [debug] Executing bend with initial: ["c"]
09:40:17.885 [debug] Executing fun with value: ["c"]
09:40:17.885 [debug] Evaluating bend block with value: ["c"]
09:40:17.885 [debug] Block returned: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.885 [debug] Fun returned result: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.885 [debug] Processing constructed value: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.885 [debug] Executing bend with initial: []
09:40:17.885 [debug] Executing fun with value: []
09:40:17.885 [debug] Evaluating bend block with value: []
09:40:17.885 [debug] Block returned: %{variant: :null}
09:40:17.886 [debug] Fun returned result: %{variant: :null}
09:40:17.886 [debug] Processing constructed value: %{variant: :null}
09:40:17.886 [debug] do_bend final result: %{variant: :null}
09:40:17.886 [debug] do_bend final result: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.886 [debug] do_bend final result: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.886 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.886 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.886 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.886 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.886 [debug] do_fold called with data: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.886 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.886 [debug] do_fold called with data: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.886 [debug] Processing recursive fields of: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.886 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.886 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.886 [debug] Recursive field result for tail: %{variant: :null}
09:40:17.893 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.893 [debug] Recursive field result for tail: %{head: "C", tail: %{variant: :null}, variant: :cons}
09:40:17.893 [debug] do_fold called with non-function: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "b", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.893 [debug] Recursive field result for tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.893 [debug] do_fold called with non-function: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: "a", tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.893 [debug] do_fold called with data: %{head: "A", tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.893 [debug] Processing recursive fields of: %{head: "A", tail: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.893 [debug] do_fold called with data: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.893 [debug] Processing recursive fields of: %{head: "B", tail: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.893 [debug] do_fold called with data: %{head: "C", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.893 [debug] Processing recursive fields of: %{head: "C", tail: %{variant: :null}, variant: :cons}
09:40:17.893 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
.09:40:17.893 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.893 [debug] Recursive field result for tail: []
09:40:17.893 [debug] do_fold called with non-variant data: []
09:40:17.893 [debug] Recursive field result for tail: ["C"]
09:40:17.893 [debug] do_fold called with non-variant data: ["C"]
09:40:17.893 [debug] Recursive field result for tail: ["B", "C"]
09:40:17.893 [debug] do_fold called with non-variant data: ["B", "C"]
09:40:17.893 [debug] Bend initial value: []
09:40:17.893 [debug] Executing bend with initial: []
09:40:17.893 [debug] Executing fun with value: []
09:40:17.893 [debug] Evaluating bend block with value: []
09:40:17.893 [debug] Block returned: %{variant: :null}
09:40:17.893 [debug] Fun returned result: %{variant: :null}
09:40:17.893 [debug] Processing constructed value: %{variant: :null}
09:40:17.893 [debug] do_bend final result: %{variant: :null}
09:40:17.893 [debug] Final bend result: %{variant: :null}
09:40:17.893 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.893 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.893 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.893 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.894 [debug] Bend initial value: []
09:40:17.894 [debug] Executing bend with initial: []
09:40:17.894 [debug] Executing fun with value: []
09:40:17.894 [debug] Evaluating bend block with value: []
09:40:17.894 [debug] Block returned: %{variant: :null}
09:40:17.894 [debug] Fun returned result: %{variant: :null}
09:40:17.894 [debug] Processing constructed value: %{variant: :null}
09:40:17.894 [debug] do_bend final result: %{variant: :null}
09:40:17.894 [debug] Final bend result: %{variant: :null}
09:40:17.894 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.894 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.894 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.894 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.894 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.894 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.894 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.894 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.894 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.894 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.894 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.894 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.894 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.894 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.894 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.894 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.894 [debug] Executing fun with value: [3, 4, 5]
09:40:17.894 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.894 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.894 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.894 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.894 [debug] Executing bend with initial: [4, 5]
09:40:17.894 [debug] Executing fun with value: [4, 5]
09:40:17.894 [debug] Evaluating bend block with value: [4, 5]
09:40:17.894 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.894 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.894 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.894 [debug] Executing bend with initial: [5]
09:40:17.894 [debug] Executing fun with value: [5]
09:40:17.894 [debug] Evaluating bend block with value: [5]
09:40:17.894 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.894 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.894 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.894 [debug] Executing bend with initial: []
09:40:17.894 [debug] Executing fun with value: []
09:40:17.894 [debug] Evaluating bend block with value: []
09:40:17.894 [debug] Block returned: %{variant: :null}
09:40:17.894 [debug] Fun returned result: %{variant: :null}
09:40:17.894 [debug] Processing constructed value: %{variant: :null}
09:40:17.894 [debug] do_bend final result: %{variant: :null}
09:40:17.894 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.894 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.894 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.894 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.894 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.894 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.894 [debug] do_fold called with data: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.894 [debug] Processing recursive fields of: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.894 [debug] do_fold called with data: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.894 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.894 [debug] do_fold called with data: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.895 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_fold called with data: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.895 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_fold called with data: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.895 [debug] Processing recursive fields of: %{head: 1, tail: %{variant: :null}, variant: :cons}
09:40:17.895 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.895 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.895 [debug] Recursive field result for tail: []
09:40:17.895 [debug] do_fold called with non-variant data: []
09:40:17.895 [debug] Recursive field result for tail: [1]
.09:40:17.895 [debug] do_fold called with non-variant data: [1]
09:40:17.895 [debug] Recursive field result for tail: [2, 1]
09:40:17.895 [debug] do_fold called with non-variant data: [2, 1]
09:40:17.895 [debug] Recursive field result for tail: [3, 2, 1]
09:40:17.895 [debug] do_fold called with non-variant data: [3, 2, 1]
09:40:17.895 [debug] Recursive field result for tail: [4, 3, 2, 1]
09:40:17.895 [debug] do_fold called with non-variant data: [4, 3, 2, 1]
09:40:17.895 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.895 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.895 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.895 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.895 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.895 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.895 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.895 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.895 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.895 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.895 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.895 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.895 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.895 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.895 [debug] Executing fun with value: [3, 4, 5]
09:40:17.895 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.895 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.895 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.895 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.895 [debug] Executing bend with initial: [4, 5]
09:40:17.895 [debug] Executing fun with value: [4, 5]
09:40:17.895 [debug] Evaluating bend block with value: [4, 5]
09:40:17.895 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.895 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.895 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.895 [debug] Executing bend with initial: [5]
09:40:17.895 [debug] Executing fun with value: [5]
09:40:17.895 [debug] Evaluating bend block with value: [5]
09:40:17.895 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.895 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.895 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.895 [debug] Executing bend with initial: []
09:40:17.895 [debug] Executing fun with value: []
09:40:17.895 [debug] Evaluating bend block with value: []
09:40:17.895 [debug] Block returned: %{variant: :null}
09:40:17.895 [debug] Fun returned result: %{variant: :null}
09:40:17.895 [debug] Processing constructed value: %{variant: :null}
09:40:17.895 [debug] do_bend final result: %{variant: :null}
09:40:17.895 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.895 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.895 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.895 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.895 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.896 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.896 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.896 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.896 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.896 [debug] Recursive field result for tail: %{variant: :null}
09:40:17.896 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] Recursive field result for tail: %{variant: :null}
09:40:17.896 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 4, tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] Recursive field result for tail: %{head: 4, tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] do_fold called with non-function: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] Recursive field result for tail: %{head: 4, tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] do_fold called with non-function: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] Recursive field result for tail: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with non-function: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.896 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{head: 4, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.896 [debug] Processing recursive fields of: %{head: 4, tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.896 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.896 [debug] Recursive field result for tail: []
09:40:17.896 [debug] do_fold called with non-variant data: []
09:40:17.896 [debug] Recursive field result for tail: [4]
09:40:17.896 [debug] do_fold called with non-variant data: [4]
.09:40:17.896 [debug] Bend initial value: ["a", "b", "c"]
09:40:17.896 [debug] Executing bend with initial: ["a", "b", "c"]
09:40:17.896 [debug] Executing fun with value: ["a", "b", "c"]
09:40:17.896 [debug] Evaluating bend block with value: ["a", "b", "c"]
09:40:17.896 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.896 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.896 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.896 [debug] Executing bend with initial: ["b", "c"]
09:40:17.896 [debug] Executing fun with value: ["b", "c"]
09:40:17.896 [debug] Evaluating bend block with value: ["b", "c"]
09:40:17.896 [debug] Block returned: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.896 [debug] Fun returned result: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.896 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.896 [debug] Executing bend with initial: ["c"]
09:40:17.896 [debug] Executing fun with value: ["c"]
09:40:17.896 [debug] Evaluating bend block with value: ["c"]
09:40:17.896 [debug] Block returned: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.896 [debug] Fun returned result: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.896 [debug] Processing constructed value: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.896 [debug] Executing bend with initial: []
09:40:17.896 [debug] Executing fun with value: []
09:40:17.896 [debug] Evaluating bend block with value: []
09:40:17.896 [debug] Block returned: %{variant: :null}
09:40:17.896 [debug] Fun returned result: %{variant: :null}
09:40:17.896 [debug] Processing constructed value: %{variant: :null}
09:40:17.896 [debug] do_bend final result: %{variant: :null}
09:40:17.896 [debug] do_bend final result: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] do_bend final result: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: ""
09:40:17.896 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: ""
09:40:17.896 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: ""
09:40:17.896 [debug] Processing recursive fields of: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.896 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: ""
09:40:17.897 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.897 [debug] Recursive field result for tail: {%{variant: :null}, ""}
09:40:17.897 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: "", non_fun: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.897 [debug] Recursive field result for tail: {%{variant: :null}, "c"}
09:40:17.897 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: "c", non_fun: %{head: "b", tail: %{variant: :null}, variant: :cons}
09:40:17.897 [debug] Recursive field result for tail: {%{variant: :null}, "bc"}
09:40:17.897 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: "bc", non_fun: %{head: "a", tail: %{variant: :null}, variant: :cons}
.09:40:17.897 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.897 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.897 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.897 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.897 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.897 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.897 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.897 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.897 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.897 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.897 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.897 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.897 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.897 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.897 [debug] Executing fun with value: [3, 4, 5]
09:40:17.897 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.897 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.897 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.897 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.897 [debug] Executing bend with initial: [4, 5]
09:40:17.897 [debug] Executing fun with value: [4, 5]
09:40:17.897 [debug] Evaluating bend block with value: [4, 5]
09:40:17.897 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.897 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.897 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.897 [debug] Executing bend with initial: [5]
09:40:17.897 [debug] Executing fun with value: [5]
09:40:17.897 [debug] Evaluating bend block with value: [5]
09:40:17.897 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.897 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.897 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.897 [debug] Executing bend with initial: []
09:40:17.897 [debug] Executing fun with value: []
09:40:17.897 [debug] Evaluating bend block with value: []
09:40:17.897 [debug] Block returned: %{variant: :null}
09:40:17.897 [debug] Fun returned result: %{variant: :null}
09:40:17.897 [debug] Processing constructed value: %{variant: :null}
09:40:17.897 [debug] do_bend final result: %{variant: :null}
09:40:17.897 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.897 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.897 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.897 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.897 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.897 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.897 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.897 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.897 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.897 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.897 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.898 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.898 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.898 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.898 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.898 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.898 [debug] Recursive field result for tail: []
09:40:17.898 [debug] do_fold called with non-variant data: []
09:40:17.898 [debug] Recursive field result for tail: [5]
09:40:17.898 [debug] do_fold called with non-variant data: [5]
09:40:17.898 [debug] Recursive field result for tail: [4, 5]
09:40:17.898 [debug] do_fold called with non-variant data: [4, 5]
09:40:17.898 [debug] Recursive field result for tail: [3, 4, 5]
09:40:17.898 [debug] do_fold called with non-variant data: [3, 4, 5]
09:40:17.898 [debug] Recursive field result for tail: [2, 3, 4, 5]
09:40:17.898 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
.09:40:17.898 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.898 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.898 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.898 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.898 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.898 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.898 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.898 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.898 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.898 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.898 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.898 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.898 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.898 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.898 [debug] Executing fun with value: [3, 4, 5]
09:40:17.898 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.898 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.898 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.898 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.898 [debug] Executing bend with initial: [4, 5]
09:40:17.898 [debug] Executing fun with value: [4, 5]
09:40:17.898 [debug] Evaluating bend block with value: [4, 5]
09:40:17.898 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.898 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.898 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.898 [debug] Executing bend with initial: [5]
09:40:17.898 [debug] Executing fun with value: [5]
09:40:17.898 [debug] Evaluating bend block with value: [5]
09:40:17.898 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.898 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.898 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.898 [debug] Executing bend with initial: []
09:40:17.898 [debug] Executing fun with value: []
09:40:17.898 [debug] Evaluating bend block with value: []
09:40:17.898 [debug] Block returned: %{variant: :null}
09:40:17.898 [debug] Fun returned result: %{variant: :null}
09:40:17.898 [debug] Processing constructed value: %{variant: :null}
09:40:17.898 [debug] do_bend final result: %{variant: :null}
09:40:17.898 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.898 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] do_fold called with data: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.898 [debug] Processing recursive fields of: %{head: 5, tail: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.898 [debug] do_fold called with data: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 1, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 1, tail: %{variant: :null}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.899 [debug] Recursive field result for tail: %{variant: :null}
09:40:17.899 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 1, tail: %{variant: :null}, variant: :cons}
09:40:17.899 [debug] Recursive field result for tail: %{head: 2, tail: %{variant: :null}, variant: :cons}
09:40:17.899 [debug] do_fold called with non-function: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] Recursive field result for tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with non-function: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 4, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] Recursive field result for tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with non-function: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 5, tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 10, tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 10, tail: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 8, tail: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 6, tail: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.899 [debug] do_fold called with data: %{head: 2, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{head: 2, tail: %{variant: :null}, variant: :cons}
.09:40:17.899 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.899 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.899 [debug] Recursive field result for tail: []
09:40:17.899 [debug] do_fold called with non-variant data: []
09:40:17.899 [debug] Recursive field result for tail: [2]
09:40:17.899 [debug] do_fold called with non-variant data: [2]
09:40:17.899 [debug] Recursive field result for tail: [4, 2]
09:40:17.899 [debug] do_fold called with non-variant data: [4, 2]
09:40:17.899 [debug] Recursive field result for tail: [6, 4, 2]
09:40:17.899 [debug] do_fold called with non-variant data: [6, 4, 2]
09:40:17.899 [debug] Recursive field result for tail: [8, 6, 4, 2]
09:40:17.899 [debug] do_fold called with non-variant data: [8, 6, 4, 2]
09:40:17.899 [debug] Bend initial value: [1, 2, 3]
09:40:17.899 [debug] Executing bend with initial: [1, 2, 3]
09:40:17.900 [debug] Executing fun with value: [1, 2, 3]
09:40:17.900 [debug] Evaluating bend block with value: [1, 2, 3]
09:40:17.900 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
09:40:17.900 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
09:40:17.900 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
09:40:17.900 [debug] Executing bend with initial: [2, 3]
09:40:17.900 [debug] Executing fun with value: [2, 3]
09:40:17.900 [debug] Evaluating bend block with value: [2, 3]
09:40:17.900 [debug] Block returned: %{head: 2, tail: {:fork, [3]}, variant: :cons}
09:40:17.900 [debug] Fun returned result: %{head: 2, tail: {:fork, [3]}, variant: :cons}
09:40:17.900 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3]}, variant: :cons}
09:40:17.900 [debug] Executing bend with initial: [3]
09:40:17.900 [debug] Executing fun with value: [3]
09:40:17.900 [debug] Evaluating bend block with value: [3]
09:40:17.900 [debug] Block returned: %{head: 3, tail: {:fork, []}, variant: :cons}
09:40:17.900 [debug] Fun returned result: %{head: 3, tail: {:fork, []}, variant: :cons}
09:40:17.900 [debug] Processing constructed value: %{head: 3, tail: {:fork, []}, variant: :cons}
09:40:17.900 [debug] Executing bend with initial: []
09:40:17.900 [debug] Executing fun with value: []
09:40:17.900 [debug] Evaluating bend block with value: []
09:40:17.900 [debug] Block returned: %{variant: :null}
09:40:17.900 [debug] Fun returned result: %{variant: :null}
09:40:17.900 [debug] Processing constructed value: %{variant: :null}
09:40:17.900 [debug] do_bend final result: %{variant: :null}
09:40:17.900 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
09:40:17.900 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.900 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.900 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.900 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.900 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.900 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.900 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.900 [debug] do_fold called with data: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.900 [debug] Processing recursive fields of: %{head: 3, tail: %{variant: :null}, variant: :cons}
09:40:17.900 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.900 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.900 [debug] Recursive field result for tail: []
09:40:17.900 [debug] do_fold called with non-variant data: []
09:40:17.900 [debug] Recursive field result for tail: [3]
09:40:17.900 [debug] do_fold called with non-variant data: [3]
09:40:17.900 [debug] Recursive field result for tail: [2, 3]
09:40:17.900 [debug] do_fold called with non-variant data: [2, 3]
.09:40:17.900 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.900 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.900 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.900 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.900 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.900 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.900 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.900 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.900 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.900 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.900 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.900 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.900 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.900 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.900 [debug] Executing fun with value: [3, 4, 5]
09:40:17.900 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.900 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.900 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.900 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.900 [debug] Executing bend with initial: [4, 5]
09:40:17.900 [debug] Executing fun with value: [4, 5]
09:40:17.900 [debug] Evaluating bend block with value: [4, 5]
09:40:17.900 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.900 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.900 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.900 [debug] Executing bend with initial: [5]
09:40:17.900 [debug] Executing fun with value: [5]
09:40:17.900 [debug] Evaluating bend block with value: [5]
09:40:17.901 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.901 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.901 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.901 [debug] Executing bend with initial: []
09:40:17.901 [debug] Executing fun with value: []
09:40:17.901 [debug] Evaluating bend block with value: []
09:40:17.901 [debug] Block returned: %{variant: :null}
09:40:17.901 [debug] Fun returned result: %{variant: :null}
09:40:17.901 [debug] Processing constructed value: %{variant: :null}
09:40:17.901 [debug] do_bend final result: %{variant: :null}
09:40:17.901 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.901 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.901 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.901 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.901 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.901 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.901 [debug] Bend initial value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
09:40:17.901 [debug] Executing bend with initial: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
09:40:17.901 [debug] Executing fun with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
09:40:17.901 [debug] Evaluating bend block with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 10}
09:40:17.901 [debug] Block returned: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}}, variant: :cons}
09:40:17.901 [debug] Fun returned result: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}}, variant: :cons}
09:40:17.901 [debug] Processing constructed value: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}}, variant: :cons}
09:40:17.901 [debug] Executing bend with initial: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}
09:40:17.901 [debug] Executing fun with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}
09:40:17.901 [debug] Evaluating bend block with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 9}
09:40:17.901 [debug] Block returned: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}}, variant: :cons}
09:40:17.901 [debug] Fun returned result: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}}, variant: :cons}
09:40:17.901 [debug] Processing constructed value: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}}, variant: :cons}
09:40:17.901 [debug] Executing bend with initial: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}
09:40:17.901 [debug] Executing fun with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}
09:40:17.901 [debug] Evaluating bend block with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 8}
09:40:17.901 [debug] Block returned: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}}, variant: :cons}
09:40:17.901 [debug] Fun returned result: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}}, variant: :cons}
09:40:17.901 [debug] Processing constructed value: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}}, variant: :cons}
09:40:17.901 [debug] Executing bend with initial: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}
09:40:17.901 [debug] Executing fun with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}
09:40:17.901 [debug] Evaluating bend block with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 7}
09:40:17.901 [debug] Block returned: %{head: 4, tail: {:fork, {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}}, variant: :cons}
09:40:17.901 [debug] Fun returned result: %{head: 4, tail: {:fork, {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}}, variant: :cons}
09:40:17.901 [debug] Processing constructed value: %{head: 4, tail: {:fork, {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}}, variant: :cons}
09:40:17.902 [debug] Executing bend with initial: {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}
09:40:17.902 [debug] Executing fun with value: {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}
09:40:17.902 [debug] Evaluating bend block with value: {%{head: 5, tail: %{variant: :null}, variant: :cons}, 6}
09:40:17.902 [debug] Block returned: %{head: 5, tail: {:fork, {%{variant: :null}, 5}}, variant: :cons}
09:40:17.902 [debug] Fun returned result: %{head: 5, tail: {:fork, {%{variant: :null}, 5}}, variant: :cons}
09:40:17.902 [debug] Processing constructed value: %{head: 5, tail: {:fork, {%{variant: :null}, 5}}, variant: :cons}
09:40:17.902 [debug] Executing bend with initial: {%{variant: :null}, 5}
09:40:17.902 [debug] Executing fun with value: {%{variant: :null}, 5}
09:40:17.902 [debug] Evaluating bend block with value: {%{variant: :null}, 5}
09:40:17.902 [debug] Block returned: %{variant: :null}
09:40:17.902 [debug] Fun returned result: %{variant: :null}
09:40:17.902 [debug] Processing constructed value: %{variant: :null}
09:40:17.902 [debug] do_bend final result: %{variant: :null}
09:40:17.902 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.902 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.902 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.902 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.902 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.902 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.902 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.902 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.902 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.902 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.902 [debug] Recursive field result for tail: []
09:40:17.902 [debug] do_fold called with non-variant data: []
09:40:17.902 [debug] Recursive field result for tail: [5]
09:40:17.902 [debug] do_fold called with non-variant data: [5]
09:40:17.902 [debug] Recursive field result for tail: [4, 5]
09:40:17.902 [debug] do_fold called with non-variant data: [4, 5]
09:40:17.902 [debug] Recursive field result for tail: [3, 4, 5]
09:40:17.902 [debug] do_fold called with non-variant data: [3, 4, 5]
09:40:17.902 [debug] Recursive field result for tail: [2, 3, 4, 5]
09:40:17.902 [debug] do_fold called with non-variant data: [2, 3, 4, 5]
.09:40:17.902 [debug] Bend initial value: []
09:40:17.902 [debug] Executing bend with initial: []
09:40:17.902 [debug] Executing fun with value: []
09:40:17.902 [debug] Evaluating bend block with value: []
09:40:17.902 [debug] Block returned: %{variant: :null}
09:40:17.902 [debug] Fun returned result: %{variant: :null}
09:40:17.903 [debug] Processing constructed value: %{variant: :null}
09:40:17.903 [debug] do_bend final result: %{variant: :null}
09:40:17.903 [debug] Final bend result: %{variant: :null}
09:40:17.903 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.903 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.903 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.903 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.903 [debug] Bend initial value: [1, 2, 3]
09:40:17.903 [debug] Executing bend with initial: [1, 2, 3]
09:40:17.903 [debug] Executing fun with value: [1, 2, 3]
09:40:17.903 [debug] Evaluating bend block with value: [1, 2, 3]
09:40:17.903 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
09:40:17.903 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
09:40:17.903 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3]}, variant: :cons}
09:40:17.903 [debug] Executing bend with initial: [2, 3]
09:40:17.903 [debug] Executing fun with value: [2, 3]
09:40:17.903 [debug] Evaluating bend block with value: [2, 3]
09:40:17.903 [debug] Block returned: %{head: 2, tail: {:fork, [3]}, variant: :cons}
09:40:17.903 [debug] Fun returned result: %{head: 2, tail: {:fork, [3]}, variant: :cons}
09:40:17.903 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3]}, variant: :cons}
09:40:17.903 [debug] Executing bend with initial: [3]
09:40:17.903 [debug] Executing fun with value: [3]
09:40:17.903 [debug] Evaluating bend block with value: [3]
09:40:17.903 [debug] Block returned: %{head: 3, tail: {:fork, []}, variant: :cons}
09:40:17.903 [debug] Fun returned result: %{head: 3, tail: {:fork, []}, variant: :cons}
09:40:17.903 [debug] Processing constructed value: %{head: 3, tail: {:fork, []}, variant: :cons}
09:40:17.903 [debug] Executing bend with initial: []
09:40:17.903 [debug] Executing fun with value: []
09:40:17.903 [debug] Evaluating bend block with value: []
09:40:17.903 [debug] Block returned: %{variant: :null}
09:40:17.903 [debug] Fun returned result: %{variant: :null}
09:40:17.903 [debug] Processing constructed value: %{variant: :null}
09:40:17.903 [debug] do_bend final result: %{variant: :null}
09:40:17.903 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
09:40:17.903 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.903 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.903 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.903 [debug] Bend initial value: [4, 5, 6]
09:40:17.903 [debug] Executing bend with initial: [4, 5, 6]
09:40:17.903 [debug] Executing fun with value: [4, 5, 6]
09:40:17.903 [debug] Evaluating bend block with value: [4, 5, 6]
09:40:17.903 [debug] Block returned: %{head: 4, tail: {:fork, [5, 6]}, variant: :cons}
09:40:17.903 [debug] Fun returned result: %{head: 4, tail: {:fork, [5, 6]}, variant: :cons}
09:40:17.903 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5, 6]}, variant: :cons}
09:40:17.903 [debug] Executing bend with initial: [5, 6]
09:40:17.903 [debug] Executing fun with value: [5, 6]
09:40:17.903 [debug] Evaluating bend block with value: [5, 6]
09:40:17.903 [debug] Block returned: %{head: 5, tail: {:fork, [6]}, variant: :cons}
09:40:17.903 [debug] Fun returned result: %{head: 5, tail: {:fork, [6]}, variant: :cons}
09:40:17.903 [debug] Processing constructed value: %{head: 5, tail: {:fork, [6]}, variant: :cons}
09:40:17.903 [debug] Executing bend with initial: [6]
09:40:17.903 [debug] Executing fun with value: [6]
09:40:17.903 [debug] Evaluating bend block with value: [6]
09:40:17.903 [debug] Block returned: %{head: 6, tail: {:fork, []}, variant: :cons}
09:40:17.903 [debug] Fun returned result: %{head: 6, tail: {:fork, []}, variant: :cons}
09:40:17.903 [debug] Processing constructed value: %{head: 6, tail: {:fork, []}, variant: :cons}
09:40:17.903 [debug] Executing bend with initial: []
09:40:17.903 [debug] Executing fun with value: []
09:40:17.903 [debug] Evaluating bend block with value: []
09:40:17.904 [debug] Block returned: %{variant: :null}
09:40:17.904 [debug] Fun returned result: %{variant: :null}
09:40:17.904 [debug] Processing constructed value: %{variant: :null}
09:40:17.904 [debug] do_bend final result: %{variant: :null}
09:40:17.904 [debug] do_bend final result: %{head: 6, tail: %{variant: :null}, variant: :cons}
09:40:17.904 [debug] do_bend final result: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] Final bend result: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 3, tail: %{variant: :null}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.904 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] Recursive field result for tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with non-function: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] Recursive field result for tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with non-function: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 5, tail: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{head: 6, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{head: 6, tail: %{variant: :null}, variant: :cons}
09:40:17.904 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.904 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.904 [debug] Recursive field result for tail: []
09:40:17.904 [debug] do_fold called with non-variant data: []
09:40:17.904 [debug] Recursive field result for tail: [6]
09:40:17.904 [debug] do_fold called with non-variant data: [6]
09:40:17.904 [debug] Recursive field result for tail: [5, 6]
09:40:17.904 [debug] do_fold called with non-variant data: [5, 6]
09:40:17.904 [debug] Recursive field result for tail: [4, 5, 6]
09:40:17.904 [debug] do_fold called with non-variant data: [4, 5, 6]
09:40:17.904 [debug] Recursive field result for tail: [3, 4, 5, 6]
09:40:17.905 [debug] do_fold called with non-variant data: [3, 4, 5, 6]
09:40:17.905 [debug] Recursive field result for tail: [2, 3, 4, 5, 6]
09:40:17.905 [debug] do_fold called with non-variant data: [2, 3, 4, 5, 6]
.09:40:17.905 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.905 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.905 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.905 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.905 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.905 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.905 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.905 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.905 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.905 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.905 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.905 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.905 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.905 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.905 [debug] Executing fun with value: [3, 4, 5]
09:40:17.905 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.905 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.905 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.905 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.905 [debug] Executing bend with initial: [4, 5]
09:40:17.905 [debug] Executing fun with value: [4, 5]
09:40:17.905 [debug] Evaluating bend block with value: [4, 5]
09:40:17.905 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.905 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.905 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.905 [debug] Executing bend with initial: [5]
09:40:17.905 [debug] Executing fun with value: [5]
09:40:17.905 [debug] Evaluating bend block with value: [5]
09:40:17.905 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.905 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.905 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.905 [debug] Executing bend with initial: []
09:40:17.905 [debug] Executing fun with value: []
09:40:17.905 [debug] Evaluating bend block with value: []
09:40:17.905 [debug] Block returned: %{variant: :null}
09:40:17.905 [debug] Fun returned result: %{variant: :null}
09:40:17.905 [debug] Processing constructed value: %{variant: :null}
09:40:17.905 [debug] do_bend final result: %{variant: :null}
09:40:17.905 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.905 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
09:40:17.905 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
09:40:17.905 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
09:40:17.905 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: 0
09:40:17.905 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.905 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: 0
09:40:17.905 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.905 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: 0
09:40:17.905 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.906 [debug] Recursive field result for tail: {%{variant: :null}, 0}
09:40:17.906 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 0, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.906 [debug] Recursive field result for tail: {%{variant: :null}, 5}
09:40:17.906 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 5, non_fun: %{head: 4, tail: %{variant: :null}, variant: :cons}
09:40:17.906 [debug] Recursive field result for tail: {%{variant: :null}, 9}
09:40:17.906 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 9, non_fun: %{head: 3, tail: %{variant: :null}, variant: :cons}
09:40:17.906 [debug] Recursive field result for tail: {%{variant: :null}, 12}
09:40:17.906 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 12, non_fun: %{head: 2, tail: %{variant: :null}, variant: :cons}
09:40:17.906 [debug] Recursive field result for tail: {%{variant: :null}, 14}
09:40:17.906 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: 14, non_fun: %{head: 1, tail: %{variant: :null}, variant: :cons}
.09:40:17.906 [debug] Bend initial value: ["a", "b", "c"]
09:40:17.906 [debug] Executing bend with initial: ["a", "b", "c"]
09:40:17.906 [debug] Executing fun with value: ["a", "b", "c"]
09:40:17.906 [debug] Evaluating bend block with value: ["a", "b", "c"]
09:40:17.906 [debug] Block returned: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.906 [debug] Fun returned result: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.906 [debug] Processing constructed value: %{head: "a", tail: {:fork, ["b", "c"]}, variant: :cons}
09:40:17.906 [debug] Executing bend with initial: ["b", "c"]
09:40:17.906 [debug] Executing fun with value: ["b", "c"]
09:40:17.906 [debug] Evaluating bend block with value: ["b", "c"]
09:40:17.906 [debug] Block returned: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.906 [debug] Fun returned result: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.906 [debug] Processing constructed value: %{head: "b", tail: {:fork, ["c"]}, variant: :cons}
09:40:17.906 [debug] Executing bend with initial: ["c"]
09:40:17.906 [debug] Executing fun with value: ["c"]
09:40:17.906 [debug] Evaluating bend block with value: ["c"]
09:40:17.906 [debug] Block returned: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.906 [debug] Fun returned result: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.906 [debug] Processing constructed value: %{head: "c", tail: {:fork, []}, variant: :cons}
09:40:17.906 [debug] Executing bend with initial: []
09:40:17.906 [debug] Executing fun with value: []
09:40:17.906 [debug] Evaluating bend block with value: []
09:40:17.906 [debug] Block returned: %{variant: :null}
09:40:17.906 [debug] Fun returned result: %{variant: :null}
09:40:17.906 [debug] Processing constructed value: %{variant: :null}
09:40:17.906 [debug] do_bend final result: %{variant: :null}
09:40:17.906 [debug] do_bend final result: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.906 [debug] do_bend final result: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.906 [debug] do_bend final result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.906 [debug] Final bend result: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.906 [debug] do_fold called with data: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.906 [debug] Processing recursive fields of: %{head: "a", tail: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.906 [debug] do_fold called with data: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.906 [debug] Processing recursive fields of: %{head: "b", tail: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.906 [debug] do_fold called with data: %{head: "c", tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.906 [debug] Processing recursive fields of: %{head: "c", tail: %{variant: :null}, variant: :cons}
09:40:17.906 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.906 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.906 [debug] Recursive field result for tail: []
09:40:17.906 [debug] do_fold called with non-variant data: []
09:40:17.906 [debug] Recursive field result for tail: ["c"]
09:40:17.906 [debug] do_fold called with non-variant data: ["c"]
09:40:17.906 [debug] Recursive field result for tail: ["b", "c"]
09:40:17.906 [debug] do_fold called with non-variant data: ["b", "c"]
.09:40:17.906 [debug] Bend initial value: []
09:40:17.906 [debug] Executing bend with initial: []
09:40:17.907 [debug] Executing fun with value: []
09:40:17.907 [debug] Evaluating bend block with value: []
09:40:17.907 [debug] Block returned: %{variant: :null}
09:40:17.907 [debug] Fun returned result: %{variant: :null}
09:40:17.907 [debug] Processing constructed value: %{variant: :null}
09:40:17.907 [debug] do_bend final result: %{variant: :null}
09:40:17.907 [debug] Final bend result: %{variant: :null}
09:40:17.907 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.907 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.907 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.907 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.907 [debug] Bend initial value: []
09:40:17.907 [debug] Executing bend with initial: []
09:40:17.907 [debug] Executing fun with value: []
09:40:17.907 [debug] Evaluating bend block with value: []
09:40:17.907 [debug] Block returned: %{variant: :null}
09:40:17.907 [debug] Fun returned result: %{variant: :null}
09:40:17.907 [debug] Processing constructed value: %{variant: :null}
09:40:17.907 [debug] do_bend final result: %{variant: :null}
09:40:17.907 [debug] Final bend result: %{variant: :null}
09:40:17.907 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.907 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.907 [debug] Bend initial value: []
09:40:17.907 [debug] Executing bend with initial: []
09:40:17.907 [debug] Executing fun with value: []
09:40:17.907 [debug] Evaluating bend block with value: []
09:40:17.907 [debug] Block returned: %{variant: :null}
09:40:17.907 [debug] Fun returned result: %{variant: :null}
09:40:17.907 [debug] Processing constructed value: %{variant: :null}
09:40:17.907 [debug] do_bend final result: %{variant: :null}
09:40:17.907 [debug] Final bend result: %{variant: :null}
09:40:17.907 [debug] Bend initial value: {%{variant: :null}, 3}
09:40:17.907 [debug] Executing bend with initial: {%{variant: :null}, 3}
09:40:17.907 [debug] Executing fun with value: {%{variant: :null}, 3}
09:40:17.907 [debug] Evaluating bend block with value: {%{variant: :null}, 3}
09:40:17.907 [debug] Block returned: %{variant: :null}
09:40:17.907 [debug] Fun returned result: %{variant: :null}
09:40:17.907 [debug] Processing constructed value: %{variant: :null}
09:40:17.907 [debug] do_bend final result: %{variant: :null}
09:40:17.907 [debug] Final bend result: %{variant: :null}
09:40:17.907 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.907 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.907 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.907 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.907 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.907 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.907 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.907 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.907 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.907 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.907 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.907 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.907 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.907 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.907 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.907 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.907 [debug] Executing fun with value: [3, 4, 5]
09:40:17.907 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.907 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.907 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.907 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.907 [debug] Executing bend with initial: [4, 5]
09:40:17.907 [debug] Executing fun with value: [4, 5]
09:40:17.907 [debug] Evaluating bend block with value: [4, 5]
09:40:17.907 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.908 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.908 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.908 [debug] Executing bend with initial: [5]
09:40:17.908 [debug] Executing fun with value: [5]
09:40:17.908 [debug] Evaluating bend block with value: [5]
09:40:17.908 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.908 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.908 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.908 [debug] Executing bend with initial: []
09:40:17.908 [debug] Executing fun with value: []
09:40:17.908 [debug] Evaluating bend block with value: []
09:40:17.908 [debug] Block returned: %{variant: :null}
09:40:17.908 [debug] Fun returned result: %{variant: :null}
09:40:17.908 [debug] Processing constructed value: %{variant: :null}
09:40:17.908 [debug] do_bend final result: %{variant: :null}
09:40:17.908 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.908 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.908 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.908 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.908 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.908 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.908 [debug] Bend initial value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
09:40:17.908 [debug] Executing bend with initial: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
09:40:17.908 [debug] Executing fun with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
09:40:17.908 [debug] Evaluating bend block with value: {%{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 3}
09:40:17.908 [debug] Block returned: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}}, variant: :cons}
09:40:17.908 [debug] Fun returned result: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}}, variant: :cons}
09:40:17.908 [debug] Processing constructed value: %{head: 1, tail: {:fork, {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}}, variant: :cons}
09:40:17.908 [debug] Executing bend with initial: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}
09:40:17.908 [debug] Executing fun with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}
09:40:17.908 [debug] Evaluating bend block with value: {%{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, 2}
09:40:17.908 [debug] Block returned: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}}, variant: :cons}
09:40:17.908 [debug] Fun returned result: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}}, variant: :cons}
09:40:17.908 [debug] Processing constructed value: %{head: 2, tail: {:fork, {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}}, variant: :cons}
09:40:17.908 [debug] Executing bend with initial: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}
09:40:17.908 [debug] Executing fun with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}
09:40:17.908 [debug] Evaluating bend block with value: {%{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, 1}
09:40:17.908 [debug] Block returned: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}}, variant: :cons}
09:40:17.908 [debug] Fun returned result: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}}, variant: :cons}
09:40:17.908 [debug] Processing constructed value: %{head: 3, tail: {:fork, {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}}, variant: :cons}
09:40:17.908 [debug] Executing bend with initial: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}
09:40:17.909 [debug] Executing fun with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}
09:40:17.909 [debug] Evaluating bend block with value: {%{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, 0}
09:40:17.909 [debug] Block returned: %{variant: :null}
09:40:17.909 [debug] Fun returned result: %{variant: :null}
09:40:17.909 [debug] Processing constructed value: %{variant: :null}
09:40:17.909 [debug] do_bend final result: %{variant: :null}
09:40:17.909 [debug] do_bend final result: %{head: 3, tail: %{variant: :null}, variant: :cons}
09:40:17.909 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.909 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.909 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.909 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.909 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.909 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.909 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.909 [debug] do_fold called with data: %{head: 3, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.909 [debug] Processing recursive fields of: %{head: 3, tail: %{variant: :null}, variant: :cons}
09:40:17.909 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.909 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.909 [debug] Recursive field result for tail: []
09:40:17.909 [debug] do_fold called with non-variant data: []
09:40:17.909 [debug] Recursive field result for tail: [3]
09:40:17.909 [debug] do_fold called with non-variant data: [3]
09:40:17.909 [debug] Recursive field result for tail: [2, 3]
09:40:17.909 [debug] do_fold called with non-variant data: [2, 3]
.09:40:17.909 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.909 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.909 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.909 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.909 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.909 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.909 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.909 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.909 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.909 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.909 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.909 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.909 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.909 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.909 [debug] Executing fun with value: [3, 4, 5]
09:40:17.909 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.909 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.909 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.909 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.909 [debug] Executing bend with initial: [4, 5]
09:40:17.909 [debug] Executing fun with value: [4, 5]
09:40:17.909 [debug] Evaluating bend block with value: [4, 5]
09:40:17.909 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.909 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.909 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.909 [debug] Executing bend with initial: [5]
09:40:17.910 [debug] Executing fun with value: [5]
09:40:17.910 [debug] Evaluating bend block with value: [5]
09:40:17.910 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.910 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.910 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.910 [debug] Executing bend with initial: []
09:40:17.910 [debug] Executing fun with value: []
09:40:17.910 [debug] Evaluating bend block with value: []
09:40:17.910 [debug] Block returned: %{variant: :null}
09:40:17.910 [debug] Fun returned result: %{variant: :null}
09:40:17.910 [debug] Processing constructed value: %{variant: :null}
09:40:17.910 [debug] do_bend final result: %{variant: :null}
09:40:17.910 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.910 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.910 [debug] Processing recursive fields of: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.910 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.910 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.910 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.910 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.910 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.910 [debug] Recursive field result for tail: %{variant: :null}
09:40:17.910 [debug] do_fold called with non-function: %{variant: :null}, variant_type: :null, state: nil, non_fun: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.910 [debug] Recursive field result for tail: %{head: 10, tail: %{variant: :null}, variant: :cons}
09:40:17.910 [debug] do_fold called with non-function: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 4, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] Recursive field result for tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with non-function: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 3, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] Recursive field result for tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with non-function: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 2, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] Recursive field result for tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with non-function: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil, non_fun: %{head: 1, tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{head: 2, tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.910 [debug] Processing recursive fields of: %{head: 2, tail: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.910 [debug] do_fold called with data: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.911 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.911 [debug] do_fold called with data: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.911 [debug] Processing recursive fields of: %{head: 6, tail: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.911 [debug] do_fold called with data: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.911 [debug] Processing recursive fields of: %{head: 8, tail: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.911 [debug] do_fold called with data: %{head: 10, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.911 [debug] Processing recursive fields of: %{head: 10, tail: %{variant: :null}, variant: :cons}
09:40:17.911 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.911 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.911 [debug] Recursive field result for tail: []
09:40:17.911 [debug] do_fold called with non-variant data: []
09:40:17.911 [debug] Recursive field result for tail: '\n'
09:40:17.911 [debug] do_fold called with non-variant data: '\n'
09:40:17.911 [debug] Recursive field result for tail: '\b\n'
09:40:17.911 [debug] do_fold called with non-variant data: '\b\n'
09:40:17.911 [debug] Recursive field result for tail: [6, 8, 10]
09:40:17.911 [debug] do_fold called with non-variant data: [6, 8, 10]
09:40:17.911 [debug] Recursive field result for tail: [4, 6, 8, 10]
09:40:17.911 [debug] do_fold called with non-variant data: [4, 6, 8, 10]
.09:40:17.911 [debug] Bend initial value: []
09:40:17.911 [debug] Executing bend with initial: []
09:40:17.911 [debug] Executing fun with value: []
09:40:17.911 [debug] Evaluating bend block with value: []
09:40:17.911 [debug] Block returned: %{variant: :null}
09:40:17.911 [debug] Fun returned result: %{variant: :null}
09:40:17.911 [debug] Processing constructed value: %{variant: :null}
09:40:17.911 [debug] do_bend final result: %{variant: :null}
09:40:17.911 [debug] Final bend result: %{variant: :null}
09:40:17.911 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: 0
09:40:17.911 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.911 [debug] Bend initial value: []
09:40:17.911 [debug] Executing bend with initial: []
09:40:17.911 [debug] Executing fun with value: []
09:40:17.911 [debug] Evaluating bend block with value: []
09:40:17.911 [debug] Block returned: %{variant: :null}
09:40:17.911 [debug] Fun returned result: %{variant: :null}
09:40:17.911 [debug] Processing constructed value: %{variant: :null}
09:40:17.911 [debug] do_bend final result: %{variant: :null}
09:40:17.911 [debug] Final bend result: %{variant: :null}
09:40:17.911 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.911 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.911 [debug] Bend initial value: []
09:40:17.911 [debug] Executing bend with initial: []
09:40:17.911 [debug] Executing fun with value: []
09:40:17.911 [debug] Evaluating bend block with value: []
09:40:17.911 [debug] Block returned: %{variant: :null}
09:40:17.912 [debug] Fun returned result: %{variant: :null}
09:40:17.912 [debug] Processing constructed value: %{variant: :null}
09:40:17.912 [debug] do_bend final result: %{variant: :null}
09:40:17.912 [debug] Final bend result: %{variant: :null}
09:40:17.912 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.912 [debug] Processing recursive fields of: %{variant: :null}
.09:40:17.912 [debug] Bend initial value: [1, 2, 3, 4, 5]
09:40:17.912 [debug] Executing bend with initial: [1, 2, 3, 4, 5]
09:40:17.912 [debug] Executing fun with value: [1, 2, 3, 4, 5]
09:40:17.912 [debug] Evaluating bend block with value: [1, 2, 3, 4, 5]
09:40:17.912 [debug] Block returned: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.912 [debug] Fun returned result: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.912 [debug] Processing constructed value: %{head: 1, tail: {:fork, [2, 3, 4, 5]}, variant: :cons}
09:40:17.912 [debug] Executing bend with initial: [2, 3, 4, 5]
09:40:17.912 [debug] Executing fun with value: [2, 3, 4, 5]
09:40:17.912 [debug] Evaluating bend block with value: [2, 3, 4, 5]
09:40:17.912 [debug] Block returned: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.912 [debug] Fun returned result: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.912 [debug] Processing constructed value: %{head: 2, tail: {:fork, [3, 4, 5]}, variant: :cons}
09:40:17.912 [debug] Executing bend with initial: [3, 4, 5]
09:40:17.912 [debug] Executing fun with value: [3, 4, 5]
09:40:17.912 [debug] Evaluating bend block with value: [3, 4, 5]
09:40:17.912 [debug] Block returned: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.912 [debug] Fun returned result: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.912 [debug] Processing constructed value: %{head: 3, tail: {:fork, [4, 5]}, variant: :cons}
09:40:17.912 [debug] Executing bend with initial: [4, 5]
09:40:17.912 [debug] Executing fun with value: [4, 5]
09:40:17.912 [debug] Evaluating bend block with value: [4, 5]
09:40:17.912 [debug] Block returned: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.912 [debug] Fun returned result: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.912 [debug] Processing constructed value: %{head: 4, tail: {:fork, [5]}, variant: :cons}
09:40:17.912 [debug] Executing bend with initial: [5]
09:40:17.912 [debug] Executing fun with value: [5]
09:40:17.912 [debug] Evaluating bend block with value: [5]
09:40:17.912 [debug] Block returned: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.912 [debug] Fun returned result: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.912 [debug] Processing constructed value: %{head: 5, tail: {:fork, []}, variant: :cons}
09:40:17.912 [debug] Executing bend with initial: []
09:40:17.912 [debug] Executing fun with value: []
09:40:17.912 [debug] Evaluating bend block with value: []
09:40:17.912 [debug] Block returned: %{variant: :null}
09:40:17.912 [debug] Fun returned result: %{variant: :null}
09:40:17.912 [debug] Processing constructed value: %{variant: :null}
09:40:17.912 [debug] do_bend final result: %{variant: :null}
09:40:17.912 [debug] do_bend final result: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.912 [debug] do_bend final result: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
09:40:17.912 [debug] do_bend final result: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.912 [debug] do_bend final result: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.912 [debug] do_bend final result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.912 [debug] Final bend result: %{head: 1, tail: %{head: 2, tail: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.912 [debug] do_fold called with data: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.912 [debug] Processing recursive fields of: %{head: 3, tail: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant: :cons}
09:40:17.912 [debug] do_fold called with data: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.912 [debug] Processing recursive fields of: %{head: 4, tail: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant: :cons}
.09:40:17.912 [debug] do_fold called with data: %{head: 5, tail: %{variant: :null}, variant: :cons}, variant_type: :cons, state: nil
09:40:17.912 [debug] Processing recursive fields of: %{head: 5, tail: %{variant: :null}, variant: :cons}
09:40:17.912 [debug] do_fold called with data: %{variant: :null}, variant_type: :null, state: nil
09:40:17.912 [debug] Processing recursive fields of: %{variant: :null}
09:40:17.912 [debug] Recursive field result for tail: []
09:40:17.912 [debug] do_fold called with non-variant data: []
09:40:17.912 [debug] Recursive field result for tail: [5]
09:40:17.913 [debug] do_fold called with non-variant data: [5]
09:40:17.913 [debug] Recursive field result for tail: [4, 5]
09:40:17.913 [debug] do_fold called with non-variant data: [4, 5]

Finished in 0.1 seconds (0.00s async, 0.1s sync)
29 tests, 0 failures

Randomized with seed 770568

Excluding tags: [:skip]

19:19:03.812 [debug] Committing transaction 999
19:19:03.820 [error] Commit failed: Invalid transaction state
19:19:03.821 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true], age: [type: :integer]]
19:19:03.821 [debug] Beginning new transaction


  1) test error handling handles invalid transaction id (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:151
     ** (EXIT from #PID<0.211.0>) an exception was raised:
         ** (GraphTrx.Error) Invalid transaction state
             (elixir_macros 0.1.0) lib/examples/graph_trx_server.ex:47: GraphTrxServer.handle_call/3
             (elixir_macros 0.1.0) lib/reg_server.ex:133: RegServer.Server.loop/2

19:19:03.820 [error] Process #PID<0.212.0> raised an exception
** (GraphTrx.Error) Invalid transaction state
    (elixir_macros 0.1.0) lib/examples/graph_trx_server.ex:47: GraphTrxServer.handle_call/3
    (elixir_macros 0.1.0) lib/reg_server.ex:133: RegServer.Server.loop/2
19:19:03.829 [debug] Beginning new transaction
19:19:03.829 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true]]
19:19:03.829 [debug] Beginning new transaction
19:19:03.829 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true]]
19:19:03.829 [debug] Beginning new transaction
19:19:03.830 [debug] Beginning new transaction
19:19:03.830 [debug] Beginning new transaction


  2) test graph operations can add vertex (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:65
     ** (MatchError) no match of right hand side value: 1
     stacktrace:
       test/examples/graph_trx_server_test.exs:61: GraphTrxServerTest.__ex_unit_setup_2_0/1
       GraphTrxServerTest.__ex_unit_describe_2/1

19:19:03.830 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true]]
19:19:03.830 [debug] Beginning new transaction
19:19:03.830 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true], age: [type: :integer]]
19:19:03.831 [debug] Beginning new transaction
19:19:03.831 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true]]
19:19:03.831 [debug] Beginning new transaction
19:19:03.831 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true]]
19:19:03.831 [debug] Beginning new transaction
19:19:03.831 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true], age: [type: :integer]]
19:19:03.831 [debug] Defining vertex type: :person with properties: [name: [type: :string, required: true], age: [type: :integer]]
19:19:03.831 [debug] Beginning new transaction


  3) test transaction management can rollback transaction (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:43
     ** (MatchError) no match of right hand side value: 1
     code: {tx_id, _} = GraphTrxServer.begin_transaction(server)
     stacktrace:
       test/examples/graph_trx_server_test.exs:44: (test)



  4) test transaction management can commit transaction (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:29
     ** (MatchError) no match of right hand side value: 1
     code: {tx_id, _} = GraphTrxServer.begin_transaction(server)
     stacktrace:
       test/examples/graph_trx_server_test.exs:34: (test)



  5) test graph metrics tracks vertex count (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:120
     ** (MatchError) no match of right hand side value: 1
     code: {tx_id, _} = GraphTrxServer.begin_transaction(server)
     stacktrace:
       test/examples/graph_trx_server_test.exs:123: (test)



  6) test error handling handles invalid vertex type (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:157
     ** (MatchError) no match of right hand side value: 1
     code: {tx_id, _} = GraphTrxServer.begin_transaction(server)
     stacktrace:
       test/examples/graph_trx_server_test.exs:158: (test)



  7) test transaction management can begin transaction (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:24
     ** (MatchError) no match of right hand side value: 1
     code: {tx_id, _} = GraphTrxServer.begin_transaction(server)
     stacktrace:
       test/examples/graph_trx_server_test.exs:25: (test)



  8) test query operations can query graph (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:113
     ** (MatchError) no match of right hand side value: 1
     stacktrace:
       test/examples/graph_trx_server_test.exs:102: GraphTrxServerTest.__ex_unit_setup_3_0/1
       GraphTrxServerTest.__ex_unit_describe_3/1



  9) test graph operations validates required properties (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:75
     ** (MatchError) no match of right hand side value: 1
     stacktrace:
       test/examples/graph_trx_server_test.exs:61: GraphTrxServerTest.__ex_unit_setup_2_0/1
       GraphTrxServerTest.__ex_unit_describe_2/1



 10) test graph metrics tracks edge count (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:134
     ** (MatchError) no match of right hand side value: 1
     code: {tx_id, _} = GraphTrxServer.begin_transaction(server)
     stacktrace:
       test/examples/graph_trx_server_test.exs:137: (test)



 11) test error handling prevents duplicate vertex ids in same transaction (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:163
     ** (MatchError) no match of right hand side value: 1
     code: {tx_id, _} = GraphTrxServer.begin_transaction(server)
     stacktrace:
       test/examples/graph_trx_server_test.exs:166: (test)



 12) test schema management can define vertex type (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:11
     ** (MatchError) no match of right hand side value: %GraphTrx.State{graph: %{edge_list: %{variant: :empty}, metadata: %{type: :directed}, variant: :graph, vertex_map: %{}}, transactions: %{}, locks: %{}, schema: %{person: %{properties: [name: [type: :string, required: true], age: [type: :integer]], required: [:name]}}, transaction_counter: 0}
     code: {result, _} = GraphTrxServer.define_vertex_type(server, :person, schema)
     stacktrace:
       test/examples/graph_trx_server_test.exs:17: (test)



 13) test graph operations can add edge (GraphTrxServerTest)
     test/examples/graph_trx_server_test.exs:85
     ** (MatchError) no match of right hand side value: 1
     stacktrace:
       test/examples/graph_trx_server_test.exs:61: GraphTrxServerTest.__ex_unit_setup_2_0/1
       GraphTrxServerTest.__ex_unit_describe_2/1


Finished in 0.09 seconds (0.00s async, 0.09s sync)
13 tests, 13 failures

Randomized with seed 706164

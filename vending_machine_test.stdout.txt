Compiling 2 files (.ex)
warning: variable "name" is unused (if the variable is not meant to be used, prefix it with an underscore)
  lib/kernel_shtf/gov.ex:17: KernelShtf.Gov.fabric/2

Excluding tags: [:skip]

15:35:34.460 [info] Starting test setup
15:35:34.464 [info] Test setup complete with pid: #PID<0.273.0>
15:35:34.465 [debug] Handling event: {:insert_coin, 50}. Current state: idle, Expected state: idle
15:35:34.466 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
15:35:34.466 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 50, inventory: 5}}
15:35:34.466 [info] Pattern result: {:weft, %{coins: 50, inventory: 5}, :ready}
15:35:34.466 [debug] Transitioning to ready
15:35:34.466 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
15:35:34.466 [info] Insufficient funds; stay in :ready
15:35:34.466 [info] WARP - Returning state: %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
15:35:34.467 [info] Pattern result: {:warp, %{memory: :ready, rotate: %{coins: 50, inventory: 5}}}
15:35:34.467 [debug] Staying in ready
15:35:34.467 [info] new_state!!! -> %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
15:35:34.467 [info] Got state: {:ok, %{memory: :ready, rotate: %{coins: 50, inventory: 5}}}
.15:35:34.467 [info] Starting test setup
15:35:34.467 [info] Test setup complete with pid: #PID<0.275.0>
15:35:34.467 [info] Running initial state test
15:35:34.467 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 5}}}
.15:35:34.467 [info] Starting test setup
15:35:34.467 [info] Test setup complete with pid: #PID<0.277.0>
15:35:34.467 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 5}}}
15:35:34.467 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
15:35:34.467 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
15:35:34.467 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
15:35:34.467 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
15:35:34.467 [debug] Transitioning to ready
15:35:34.467 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
15:35:34.467 [info] DISPENSING
15:35:34.467 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :dispensing}
15:35:34.467 [debug] Transitioning to dispensing
15:35:34.467 [debug] Handling event: :dispense_complete. Current state: dispensing, Expected state: dispensing
15:35:34.467 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :idle}
15:35:34.467 [debug] Transitioning to idle
15:35:34.467 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 4}}}
.15:35:34.467 [info] Starting test setup
15:35:34.467 [info] Test setup complete with pid: #PID<0.279.0>
15:35:34.467 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
15:35:34.467 [info] Inventory is empty; stay in :ready
15:35:34.467 [info] WARP - Returning state: %{memory: :ready, rotate: %{coins: 500, inventory: 0}}
15:35:34.467 [info] Pattern result: {:warp, %{memory: :ready, rotate: %{coins: 500, inventory: 0}}}
15:35:34.467 [debug] Staying in ready
15:35:34.467 [info] new_state!!! -> %{memory: :ready, rotate: %{coins: 500, inventory: 0}}
.15:35:34.467 [info] Starting test setup
15:35:34.467 [info] Test setup complete with pid: #PID<0.281.0>
15:35:34.467 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
15:35:34.467 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
15:35:34.467 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
15:35:34.468 [debug] Transitioning to ready
15:35:34.468 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
15:35:34.468 [info] DISPENSING
15:35:34.468 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :dispensing}
15:35:34.468 [debug] Transitioning to dispensing
15:35:34.468 [debug] Handling event: :dispense_complete. Current state: dispensing, Expected state: dispensing
15:35:34.468 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :idle}
15:35:34.468 [debug] Transitioning to idle
15:35:34.468 [info] Got state: {:ok, %{memory: :idle, rotate: %{coins: 0, inventory: 4}}}
.15:35:34.468 [info] Starting test setup
15:35:34.468 [info] Test setup complete with pid: #PID<0.283.0>
15:35:34.468 [info] Running coin insertion test
15:35:34.468 [info] Running coin insertion test
15:35:34.468 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
15:35:34.468 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
15:35:34.468 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
15:35:34.468 [debug] Transitioning to ready
15:35:34.468 [info] Transition result: {:ok, :ready}
15:35:34.468 [info] Got state: {:ok, %{memory: :ready, rotate: %{coins: 100, inventory: 5}}}
.15:35:34.468 [info] Starting test setup
15:35:34.468 [info] Test setup complete with pid: #PID<0.285.0>
15:35:34.468 [info] TEST - Starting coin accumulation test
15:35:34.468 [debug] Handling event: {:insert_coin, 50}. Current state: idle, Expected state: idle
15:35:34.468 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
15:35:34.468 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 50, inventory: 5}}
15:35:34.468 [info] Pattern result: {:weft, %{coins: 50, inventory: 5}, :ready}
15:35:34.468 [debug] Transitioning to ready
15:35:34.468 [info] TEST - After first insertion: {:ok, :ready}
15:35:34.468 [info] TEST - State after first insertion: %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
15:35:34.468 [debug] Handling event: {:insert_coin, 50}. Current state: ready, Expected state: ready
15:35:34.468 [info] READY - Current coins before add: 50
15:35:34.468 [info] ADD_COINS - Before: %{memory: :ready, rotate: %{coins: 50, inventory: 5}}
15:35:34.468 [info] ADD_COINS - After: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] READY - State after add_coins: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] READY - Final state to be returned: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] WARP - Returning state: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] Pattern result: {:warp, %{memory: :ready, rotate: %{coins: 100, inventory: 5}}}
15:35:34.468 [debug] Staying in ready
15:35:34.468 [info] new_state!!! -> %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] TEST - After second insertion: {:ok, :ready}
15:35:34.468 [info] TEST - State after second insertion: %{memory: :ready, rotate: %{coins: 100, inventory: 5}}
.15:35:34.468 [info] Starting test setup
15:35:34.468 [info] Test setup complete with pid: #PID<0.287.0>
15:35:34.468 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
15:35:34.468 [info] ADD_COINS - Before: %{memory: :idle, rotate: %{coins: 0, inventory: 5}}
15:35:34.468 [info] ADD_COINS - After: %{memory: :idle, rotate: %{coins: 100, inventory: 5}}
15:35:34.468 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
15:35:34.468 [debug] Transitioning to ready
15:35:34.468 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
15:35:34.468 [info] DISPENSING
15:35:34.468 [info] Pattern result: {:weft, %{coins: 0, inventory: 4}, :dispensing}
15:35:34.468 [debug] Transitioning to dispensing
15:35:34.468 [info] Got state: {:ok, %{memory: :dispensing, rotate: %{coins: 0, inventory: 4}}}
.
Finished in 0.1 seconds (0.00s async, 0.1s sync)
8 tests, 0 failures

Randomized with seed 317124

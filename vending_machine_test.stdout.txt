Excluding tags: [:test, :skip]
Including tags: [run: "true"]

10:51:50.919 [info] Starting test setup
10:51:50.925 [info] Test setup complete with pid: #PID<0.257.0>
10:51:50.928 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
10:51:50.930 [info] ADD_COINS - Before: %{current_state: :idle, data: %{coins: 0, inventory: 5}}
10:51:50.930 [info] ADD_COINS - After: %{current_state: :idle, data: %{coins: 100, inventory: 5}}
10:51:50.930 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
10:51:50.930 [debug] Transitioning to ready
10:51:50.930 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
10:51:50.930 [info] Pattern result: {:warp, %{current_state: :ready, data: %{coins: 100, inventory: 5}}}
10:51:50.930 [debug] Staying in ready
10:51:50.930 [info] new_state!!! -> %{current_state: :ready, data: %{coins: 100, inventory: 5}}
10:51:50.934 [info] Starting test setup
10:51:50.935 [info] Test setup complete with pid: #PID<0.259.0>
10:51:50.935 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
10:51:50.935 [info] ADD_COINS - Before: %{current_state: :idle, data: %{coins: 0, inventory: 5}}
10:51:50.935 [info] ADD_COINS - After: %{current_state: :idle, data: %{coins: 100, inventory: 5}}
10:51:50.935 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
10:51:50.935 [debug] Transitioning to ready
10:51:50.935 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
10:51:50.935 [info] Pattern result: {:warp, %{current_state: :ready, data: %{coins: 100, inventory: 5}}}
10:51:50.935 [debug] Staying in ready
10:51:50.935 [info] new_state!!! -> %{current_state: :ready, data: %{coins: 100, inventory: 5}}
10:51:50.935 [debug] Handling event: :dispense_complete. Current state: ready, Expected state: dispensing
10:51:50.935 [error] Invalid state transition. Expected dispensing, got ready
10:51:50.935 [info] Starting test setup
10:51:50.935 [info] Test setup complete with pid: #PID<0.261.0>
10:51:50.935 [info] Got state: {:ok, %{current_state: :idle, data: %{coins: 0, inventory: 5}}}
10:51:50.935 [debug] Handling event: {:insert_coin, 100}. Current state: idle, Expected state: idle
10:51:50.935 [info] ADD_COINS - Before: %{current_state: :idle, data: %{coins: 0, inventory: 5}}
10:51:50.935 [info] ADD_COINS - After: %{current_state: :idle, data: %{coins: 100, inventory: 5}}
10:51:50.935 [info] Pattern result: {:weft, %{coins: 100, inventory: 5}, :ready}
10:51:50.935 [debug] Transitioning to ready
10:51:50.935 [debug] Handling event: :purchase. Current state: ready, Expected state: ready
10:51:50.936 [info] Pattern result: {:warp, %{current_state: :ready, data: %{coins: 100, inventory: 5}}}
10:51:50.936 [debug] Staying in ready
10:51:50.936 [info] new_state!!! -> %{current_state: :ready, data: %{coins: 100, inventory: 5}}


  1) test purchase handling allows purchase with sufficient funds (VendingMachineTest)
     test/abc_law/vending_machine_test.exs:61
     match (=) failed
     code:  assert {:ok, :dispensing} = GenServer.call(machine, {:state, :ready, :purchase})
     left:  {:ok, :dispensing}
     right: {:ok, :ready}
     stacktrace:
       test/abc_law/vending_machine_test.exs:66: (test)



  2) test dispensing process completes dispensing cycle (VendingMachineTest)
     test/abc_law/vending_machine_test.exs:107
     match (=) failed
     code:  assert {:ok, :idle} = GenServer.call(machine, {:state, :dispensing, :dispense_complete})
     left:  {:ok, :idle}
     right: {:error, :invalid_state}
     stacktrace:
       test/abc_law/vending_machine_test.exs:113: (test)



  3) test full purchase cycle handles complete purchase flow (VendingMachineTest)
     test/abc_law/vending_machine_test.exs:126
     match (=) failed
     code:  assert {:ok, :dispensing} = GenServer.call(machine, {:state, :ready, :purchase})
     left:  {:ok, :dispensing}
     right: {:ok, :ready}
     stacktrace:
       test/abc_law/vending_machine_test.exs:138: (test)


Finished in 0.1 seconds (0.00s async, 0.1s sync)
8 tests, 3 failures, 5 excluded

Randomized with seed 777736

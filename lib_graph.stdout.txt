     warning: clauses with the same name and arity (number of arguments) should be grouped together, "defp generate_fold_cases/2" was previously defined (lib/ben_ben.ex:134)
     │
 171 │   defp generate_fold_cases({:__block__, _meta, cases}, state) do
     │        ~
     │
     └─ lib/ben_ben.ex:171:8

     warning: variable "other" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 374 │           other ->
     │           ~
     │
     └─ lib/ben_ben.ex:374:11: BenBen.process_constructed/2

     warning: function generate_pattern_match/1 is unused
     │
 225 │   defp generate_pattern_match({name, _, args}) when is_list(args) do
     │        ~
     │
     └─ lib/ben_ben.ex:225:8: BenBen (module)

     warning: function extract_bindings/1 is unused
     │
 250 │   defp extract_bindings(args) do
     │        ~
     │
     └─ lib/ben_ben.ex:250:8: BenBen (module)

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 25 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/lib_graph.ex:25: LibGraph.add_vertex/3

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 49 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/lib_graph.ex:49: LibGraph.add_edge/5

    warning: variable "edge_list" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 78 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/lib_graph.ex:78: LibGraph.vertex_count/1

    warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 78 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/lib_graph.ex:78: LibGraph.vertex_count/1

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 78 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/lib_graph.ex:78: LibGraph.vertex_count/1

    warning: variable "vertex_map" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 88 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/lib_graph.ex:88: LibGraph.edge_count/1

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 88 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/lib_graph.ex:88: LibGraph.edge_count/1

     warning: variable "vertex" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 109 │           vertex -> extract_neighbors(edge_list, vertex_id)
     │           ~
     │
     └─ lib/examples/lib_graph.ex:109:11: LibGraph.get_neighbors/2

     warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 105 │     fold graph do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:105: LibGraph.get_neighbors/2

     warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 105 │     fold graph do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:105: LibGraph.get_neighbors/2

     warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 157 │     fold graph, with: {%{}, %{start_id => 0}, [start_id]} do
     │     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:157: LibGraph.shortest_path/3

     warning: variable "metadata" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 168 │     fold graph do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:168: LibGraph.is_connected?/1

     warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 168 │     fold graph do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:168: LibGraph.is_connected?/1

     warning: variable "edge_props" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 197 │           fold edges do
     │           ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:197: LibGraph.count_edges/1

     warning: variable "edge_weight" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 197 │           fold edges do
     │           ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:197: LibGraph.count_edges/1

     warning: variable "source_id" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 197 │           fold edges do
     │           ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:197: LibGraph.count_edges/1

     warning: variable "target_id" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 197 │           fold edges do
     │           ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:197: LibGraph.count_edges/1

     warning: variable "state" is unused (there is a variable with the same name in the context, use the pin operator (^) to match on it or prefix this variable with underscore if it is not meant to be used)
     │
 197 │           fold edges do
     │           ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:197: LibGraph.count_edges/1

     warning: variable "edge_props" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 194 │     fold edges do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:194: LibGraph.count_edges/1

     warning: variable "edge_weight" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 194 │     fold edges do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:194: LibGraph.count_edges/1

     warning: variable "source_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 194 │     fold edges do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:194: LibGraph.count_edges/1

     warning: variable "target_id" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 194 │     fold edges do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:194: LibGraph.count_edges/1

     warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 194 │     fold edges do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:194: LibGraph.count_edges/1

     warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 208 │     fold edges do
     │     ~~~~~~~~~~~~~
     │
     └─ lib/examples/lib_graph.ex:208: LibGraph.get_adjacent_vertices/2

     warning: function get_adjacent_vertices/2 is unused
     │
 207 │   defp get_adjacent_vertices(vertex, edges) do
     │        ~
     │
     └─ lib/examples/lib_graph.ex:207:8: LibGraph (module)

     warning: function add_edge_to_list/2 is unused
     │
 185 │   defp add_edge_to_list(edge, edges) do
     │        ~
     │
     └─ lib/examples/lib_graph.ex:185:8: LibGraph (module)

    warning: variable "id" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 13 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/my_graph.ex:13: MyGraph.sum/1

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 13 │     fold graph do
    │     ~~~~~~~~~~~~~
    │
    └─ lib/examples/my_graph.ex:13: MyGraph.sum/1

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 10 │     fold tree do
    │     ~~~~~~~~~~~~
    │
    └─ lib/examples/my_tree.ex:10: MyTree.sum/1

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 19 │     fold obj do
    │     ~~~~~~~~~~~
    │
    └─ lib/examples/prototypal.ex:19: Prototypal.get_property/2

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 73 │     fold obj do
    │     ~~~~~~~~~~~
    │
    └─ lib/examples/prototypal.ex:73: Prototypal.inspect_object/2

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 87 │     fold obj do
    │     ~~~~~~~~~~~
    │
    └─ lib/examples/prototypal.ex:87: Prototypal.debug_chain/2

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 26 │     fold tree do
    │     ~~~~~~~~~~~~
    │
    └─ lib/examples/tree_operations.ex:26: TreeOperations.map_tree/2

    warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
    │
 38 │     fold tree do
    │     ~~~~~~~~~~~~
    │
    └─ lib/examples/tree_operations.ex:38: TreeOperations.filter_tree/2

     warning: variable "state" is unused (if the variable is not meant to be used, prefix it with an underscore)
     │
 128 │     fold tree do
     │     ~~~~~~~~~~~~
     │
     └─ lib/examples/tree_operations.ex:128: TreeOperations.collect_values/1

    warning: function merge_with_level_increment/2 is unused
    │
 80 │   defp merge_with_level_increment(left_counts, right_counts) do
    │        ~
    │
    └─ lib/examples/tree_operations.ex:80:8: TreeOperations (module)

    warning: function merge_counts/2 is unused
    │
 75 │   defp merge_counts(left_counts, right_counts) do
    │        ~
    │
    └─ lib/examples/tree_operations.ex:75:8: TreeOperations (module)

Running ExUnit with seed: 555200, max_cases: 48


16:34:40.595 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}, variant_type: :graph, state: nil

16:34:40.596 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}

16:34:40.596 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.596 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.597 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.597 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.597 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.597 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.597 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.597 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.597 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.597 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.597 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.597 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.597 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.597 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.597 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.597 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.597 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.597 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.597 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.597 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, vertex_map: %{}}

16:34:40.597 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.597 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}
.
16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}

16:34:40.598 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.598 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.598 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.598 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.598 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.598 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.598 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.598 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.598 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.598 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.598 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.599 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.599 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.599 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.599 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.599 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}

16:34:40.599 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.599 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.599 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 1, edge_props: %{}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}, variant_type: :graph, state: {%{}, %{1 => 0}, [1]}

16:34:40.599 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 1, edge_props: %{}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

16:34:40.600 [debug] do_fold called with non-variant data: %{vertices: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}, edges: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 1, edge_props: %{}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}]}

16:34:40.600 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}, variant_type: :graph, state: nil

16:34:40.600 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}

16:34:40.600 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.600 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.600 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.601 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.601 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}}}

16:34:40.601 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.601 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.601 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.601 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.601 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.601 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.601 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.601 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}

16:34:40.601 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.601 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.601 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.601 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

16:34:40.602 [debug] do_fold called with non-variant data: %{vertices: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}, edges: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 1, edge_props: %{}}, vertex_map: %{}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}]}

16:34:40.602 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}, variant_type: :graph, state: nil

16:34:40.602 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{}}

16:34:40.602 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.602 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.603 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}}}

16:34:40.603 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.603 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}}}

16:34:40.603 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}}}, variant_type: :graph, state: nil

16:34:40.603 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}}}

16:34:40.603 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.603 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.603 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}

16:34:40.603 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}

16:34:40.603 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.603 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}

16:34:40.603 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.603 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}

16:34:40.603 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}, variant_type: :graph, state: nil

16:34:40.603 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}}}

16:34:40.603 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.603 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.603 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.603 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.603 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.603 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.604 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.604 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.604 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.604 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.604 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.604 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.604 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :empty}, vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.604 [debug] do_fold called with data: %{variant: :empty}, variant_type: :empty, state: nil

16:34:40.604 [debug] Processing recursive fields of: %{variant: :empty}

16:34:40.604 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}

16:34:40.604 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.604 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.604 [debug] Recursive field result for edge_list: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.604 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.605 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.605 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 3, edge_props: %{type: "road"}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, variant_type: :graph, state: nil

16:34:40.605 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 3, edge_props: %{type: "road"}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}

16:34:40.605 [debug] do_fold called with data: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 3, edge_props: %{type: "road"}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}, variant_type: :graph, state: nil



16:34:40.605 [debug] Processing recursive fields of: %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 3, edge_props: %{type: "road"}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}
  1) test LibGraph finds shortest path (LibGraphTest)
     test/lib_graph_test.exs:50
     ** (FunctionClauseError) no function clause matching in anonymous fn/2 in LibGraph.find_path/5

     The following arguments were given to anonymous fn/2 in LibGraph.find_path/5:

         # 1
         {:vertices, %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 3}}}

         # 2
         {%{}, %{1 => 0}, []}

     code: path = LibGraph.shortest_path(graph, 1, 3)
     stacktrace:
       (ben_ben 0.1.0) lib/examples/lib_graph.ex:245: anonymous fn/2 in LibGraph.find_path/5
       (stdlib 6.1.2) maps.erl:860: :maps.fold_1/4
       test/lib_graph_test.exs:59: (test)


16:34:40.605 [debug] do_fold called with non-variant data: [%{variant: :edge, target_id: 3, source_id: 2, edge_weight: 3, edge_props: %{type: "road"}}, %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: [%{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, %{metadata: %{type: :directed}, variant: :graph, edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}}, vertex_map: %{}}], vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}], vertex_map: %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2}, 3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}}]


  2) test LibGraph checks connectivity (LibGraphTest)
     test/lib_graph_test.exs:33
     ** (FunctionClauseError) no function clause matching in anonymous fn/2 in LibGraph.depth_first_search/4

     The following arguments were given to anonymous fn/2 in LibGraph.depth_first_search/4:

         # 1
         {:vertices, %{1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 1}, 2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{}, vertex_id: 2}}}

         # 2
         MapSet.new([1])

     code: assert LibGraph.is_connected?(connected_graph)
     stacktrace:
       (ben_ben 0.1.0) lib/examples/lib_graph.ex:232: anonymous fn/2 in LibGraph.depth_first_search/4
       (stdlib 6.1.2) maps.erl:860: :maps.fold_1/4
       (ben_ben 0.1.0) lib/examples/lib_graph.ex:175: anonymous fn/2 in LibGraph.is_connected?/1
       test/lib_graph_test.exs:40: (test)



  3) test LibGraph creates and modifies graphs (LibGraphTest)
     test/lib_graph_test.exs:5
     Assertion with == failed
     code:  assert LibGraph.edge_count(graph) == 2
     left:  [
              %{variant: :edge, target_id: 3, source_id: 2, edge_weight: 3, edge_props: %{type: "road"}},
              %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}},
              %{
                metadata: %{type: :directed},
                variant: :graph,
                edge_list: [
                  %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}},
                  %{
                    metadata: %{type: :directed},
                    variant: :graph,
                    edge_list: [
                      %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}},
                      %{
                        metadata: %{type: :directed},
                        variant: :graph,
                        edge_list: [
                          %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}},
                          %{
                            metadata: %{type: :directed},
                            variant: :graph,
                            edge_list: %{variant: :edge, target_id: 2, source_id: 1, edge_weight: 5, edge_props: %{type: "road"}},
                            vertex_map: %{}
                          }
                        ],
                        vertex_map: %{3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}}
                      }
                    ],
                    vertex_map: %{
                      2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2},
                      3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}
                    }
                  }
                ],
                vertex_map: %{
                  1 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "A"}, vertex_id: 1},
                  2 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "B"}, vertex_id: 2},
                  3 => %{variant: :vertex, adjacency: %{variant: :empty}, properties: %{name: "C"}, vertex_id: 3}
                }
              }
            ]
     right: 2
     stacktrace:
       test/lib_graph_test.exs:15: (test)


Finished in 0.04 seconds (0.00s async, 0.04s sync)
4 tests, 3 failures
